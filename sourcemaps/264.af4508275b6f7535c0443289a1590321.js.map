{"version":3,"file":"js/264.604f0dd14c5fbea00fec.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/delete-modal/delete-execution-environment-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/owners-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/constants.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import axios from 'axios';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: string,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { RemoteType } from '.';\nimport { HubAPI } from './hub';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n}\n\nexport const Repositories = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top: '80px',\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key]) ? params[key] : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Constants } from 'src/constants';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionListType } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  name,\n  latest_version,\n  namespace,\n  className,\n  displaySignatures,\n  footer,\n  repo,\n  sign_state,\n  menu,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace.company || namespace.name;\n  const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <TextContent>{getCertification(repo)}</TextContent>\n        {displaySignatures ? (\n          <SignatureBadge isCompact signState={sign_state} />\n        ) : null}\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n          >\n            {name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>Provided by {company}</Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              latest_version.metadata.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getCertification(repo) {\n  if (repo === Constants.CERTIFIED_REPO) {\n    return (\n      <Text component={TextVariants.small}>\n        <Badge isRead>{t`Certified`}</Badge>\n      </Text>\n    );\n  }\n\n  return null;\n}\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  namespace,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n  const context = useContext();\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection,\n                      namespace: namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: context.selectedRepo,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        context.selectedRepo === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport { Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\n\nexport const CollectionCount = ({ distributionPath }: IProps) => {\n  const [collectionCount, setCollectionCount] = useState(null);\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const getCollectionCount = (repo) => {\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        setCollectionCount(count);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        const { status, statusText } = err.response;\n        addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n          setAlerts,\n          alerts,\n        );\n      });\n  };\n\n  useEffect(() => {\n    getCollectionCount(distributionPath);\n  }, []);\n\n  return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n};\n\nfunction addAlert(title, variant, description, setAlerts, alerts) {\n  setAlerts([\n    ...alerts,\n    {\n      description,\n      title,\n      variant,\n    },\n  ]);\n}\n","import * as moment from 'moment';\nimport * as React from 'react';\nimport { Tooltip } from 'src/components';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionListType,\n  CollectionVersion,\n  MyNamespaceAPI,\n  Repositories,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  DeleteCollectionModal,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { DeleteCollectionUtils, errorMessage } from 'src/utilities';\nimport {\n  canSignNamespace,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\nimport './header.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context.featureFlags;\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, namespace);\n\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${namespace.name}-${collectionName}-${collection.latest_version.version}`,\n      );\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={collectionVersion}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceByRepo, {\n                      repo: this.context.selectedRepo,\n                      namespace: deleteCollection.namespace.name,\n                    }),\n                    selectedRepo: this.context.selectedRepo,\n                    addAlert: (alert) =>\n                      this.context.setAlerts([...this.state.alerts, alert]),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              path={Paths.searchByRepo}\n              selectedRepo={this.context.selectedRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              {display_signatures ? (\n                <SignatureBadge\n                  isCompact\n                  signState={collection.latest_version.sign_state}\n                />\n              ) : null}\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem = ({ version }: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { ClipboardCopy, LoginLink, Tag } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport const CollectionInfo = ({\n  name,\n  latest_version,\n  namespace,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{latest_version.metadata.description}</GridItem>\n        <GridItem>\n          {latest_version.metadata.tags.map((tag, i) => (\n            <Tag key={i}>{tag}</Tag>\n          ))}\n        </GridItem>\n\n        {latest_version?.metadata?.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {latest_version.metadata.license\n                  ? latest_version.metadata.license.join(', ')\n                  : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n              {context.user.is_anonymous &&\n              !context.settings\n                .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                <Alert\n                  className={'hub-collection-download-alert'}\n                  isInline\n                  variant='warning'\n                  title={\n                    <React.Fragment>\n                      {t`You have to be logged in to be able to download the tarball.`}{' '}\n                      <LoginLink />\n                    </React.Fragment>\n                  }\n                />\n              ) : (\n                <div>\n                  <a ref={downloadLinkRef} style={{ display: 'none' }}></a>\n                  <Button\n                    className='download-button'\n                    variant='link'\n                    data-cy='download-collection-tarball-button'\n                    icon={<DownloadIcon />}\n                    onClick={() =>\n                      download(\n                        context.selectedRepo,\n                        namespace,\n                        name,\n                        latest_version,\n                        downloadLinkRef,\n                        addAlert,\n                      )\n                    }\n                  >\n                    {t`Download tarball`}\n                  </Button>\n                </div>\n              )}\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem version={latest_version} />\n        {latest_version.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {latest_version.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {latest_version.docs_blob.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: latest_version.docs_blob.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out'></div>\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: name,\n                  namespace: namespace.name,\n                  repo: context.selectedRepo,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  reponame,\n  namespace,\n  name,\n  latest_version,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(\n    reponame,\n    namespace.name,\n    name,\n    latest_version.version,\n  )\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\ninterface IState {\n  inputText: string;\n}\n\nexport class CollectionFilter extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: props.params.keywords || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.keywords !== this.props.params['keywords']) {\n      this.setState({ inputText: this.props.params['keywords'] || '' });\n    }\n  }\n\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n    const { display_signatures } = this.context.featureFlags;\n    const display_tags = ignoredParams.includes('tags') === false;\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      display_tags && {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as const,\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n      display_signatures && {\n        id: 'sign_state',\n        title: t`Sign state`,\n        inputType: 'select' as const,\n        options: [\n          { id: 'signed', title: t`Signed` },\n          { id: 'unsigned', title: t`Unsigned` },\n        ],\n      },\n    ].filter(Boolean);\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup style={{ marginLeft: 0 }}>\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={this.state.inputText}\n                onChange={(text) => this.setState({ inputText: text })}\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  niceNames={{\n                    sign_state: t`sign state`,\n                    tags: t`tags`,\n                    keywords: t`keywords`,\n                  }}\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionListType[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  repo?: string;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      displaySignatures,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.props.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n                displaySignatures={displaySignatures}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n        <Pagination\n          params={params}\n          updateParams={(p) => updateParams(p)}\n          count={itemCount}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  displaySignatures: boolean;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps> {\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      displaySignatures,\n      repo,\n      sign_state,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n            data-cy='CollectionList-name'\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='hub-entry'>{latest_version.metadata.description}</div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          {Object.keys(contentSummary.contents).map((type) => (\n            <div key={type}>\n              <CollectionNumericLabel\n                count={contentSummary.contents[type]}\n                type={type}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          <LabelGroup {...chipGroupProps()}>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='hub-entry'>{controls}</div> : null}\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>v{latest_version.version}</div>\n        {displaySignatures ? (\n          <SignatureBadge className='hub-entry' signState={sign_state} />\n        ) : null}\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='CollectionListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionDetailType, CollectionVersion } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  dependencies_repos: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.latest_version.metadata;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, strgin | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length != 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    const {\n      cancelAction,\n      children,\n      deleteAction,\n      isDisabled,\n      title,\n      spinner,\n      variant,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <div data-cy='delete-button' key='delete'>\n            <Button\n              key='delete'\n              onClick={deleteAction}\n              variant='danger'\n              isDisabled={isDisabled}\n            >\n              {t`Delete`}\n              {spinner && <Spinner size='sm'></Spinner>}\n            </Button>\n          </div>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant={variant}\n        data-cy='modal_checkbox'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ExecutionEnvironmentAPI } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { waitForTask } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\ninterface IProps {\n  closeAction: () => void;\n  selectedItem: string;\n  addAlert: (message, variant, description?) => void;\n  afterDelete: () => void;\n}\n\nexport class DeleteExecutionEnvironmentModal extends React.Component<\n  IProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  render() {\n    const { selectedItem, closeAction } = this.props;\n    const { isDeletionPending, confirmDelete } = this.state;\n\n    return (\n      <DeleteModal\n        spinner={isDeletionPending}\n        title={t`Delete container?`}\n        cancelAction={() => closeAction()}\n        deleteAction={() => this.deleteContainer(selectedItem)}\n        isDisabled={!confirmDelete || isDeletionPending}\n      >\n        <Text className='delete-container-modal-message'>\n          <Trans>\n            Deleting <b>{selectedItem}</b> and its data will be lost.\n          </Trans>\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={(value) => this.setState({ confirmDelete: value })}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    );\n  }\n\n  deleteContainer(selectedItem: string) {\n    const { addAlert, closeAction, afterDelete } = this.props;\n    this.setState({ isDeletionPending: true }, () =>\n      ExecutionEnvironmentAPI.deleteExecutionEnvironment(selectedItem)\n        .then((result) => {\n          const taskId = result.data.task.split('tasks/')[1].replace('/', '');\n          waitForTask(taskId).then(() => {\n            this.setState({\n              confirmDelete: false,\n              isDeletionPending: false,\n            });\n            closeAction();\n            addAlert(\n              <Trans>\n                Execution environment &quot;{selectedItem}&quot; has been\n                successfully deleted.\n              </Trans>,\n              'success',\n            );\n            afterDelete();\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            confirmDelete: false,\n            isDeletionPending: false,\n          });\n          addAlert(\n            t`Execution environment \"${selectedItem}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n          closeAction();\n        }),\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { AppContext } from 'src/loaders/app-context';\nimport { mapErrorMessages } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    return (\n      <EmptyState\n        variant={EmptyStateVariant[this.props.variant]}\n        data-cy='EmptyState'\n      >\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport class EmptyStateUnauthorized extends React.Component {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={\n          <>\n            {t`Contact your organization administrator for more information.`}\n            <br />\n            <br />\n            <LoginLink button />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'owners', name: t`Owners` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'owners'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'owners'\n                ? {\n                    name: t`Owners`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailOwners, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'owners' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersion,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { errorMessage, filterIsSet } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent, EmptyStateFilter, EmptyStateNoData } from '..';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { CollectionCount } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { ClipboardCopy, DateComponent, EmptyStateNoData, SortTable } from '..';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Form,\n  FormGroup,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  ExternalLinkAltIcon,\n  PlusCircleIcon,\n  TrashIcon,\n} from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup fieldId='none' label={t`Namespace owners`}>\n          <Alert\n            isInline\n            variant='info'\n            title={\n              <Trans>\n                Moved to the{' '}\n                <Link\n                  target='_blank'\n                  to={formatPath(\n                    Paths.namespaceByRepo,\n                    {\n                      repo: this.context.selectedRepo,\n                      namespace: namespace.name,\n                    },\n                    { tab: 'owners' },\n                  )}\n                >\n                  Namespace owners\n                </Link>{' '}\n                <ExternalLinkAltIcon /> tab\n              </Trans>\n            }\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  }[type] || type);\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class OwnersTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`OwnersTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'owners',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport './header.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n  inputText: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n  inputText: '',\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Controllers list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Tags could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, digest, tag } = this.state;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    const docsLink =\n      'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank' rel='noreferrer'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that\n              Controller&apos;s console. Log in (if necessary) and follow the\n              steps to complete the configuration.\n            </Trans>\n            <br />\n            {!unsafeLinksSupported && (\n              <Trans>\n                <b>Note:</b> The following links may be blocked by your browser.\n                Copy and paste the external link manually.\n              </Trans>\n            )}\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  inputText={this.state.inputText}\n                  onChange={(text) => this.setState({ inputText: text })}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import * as React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderModuleLink: (moduleName: string) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  // checks if I(), B(), M(), U(), L(), or C() exists. Returns type (ex: B)\n  // and value in parenthesis. Based off of formatters in ansible:\n  // https://github.com/ansible/ansible/blob/devel/hacking/build_library/build_ansible/jinja2/filters.py#L26\n  CUSTOM_FORMATTERS = /([IBMULC])\\(([^)]+)\\)/gm;\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  // This functions similar to how string.replace() works, except it returns\n  // a react object instead of a string\n  private reactReplace(\n    text: string,\n    reg: RegExp,\n    replacement: (matches: string[]) => React.ReactNode,\n  ): React.ReactNode {\n    const fragments = [];\n\n    let match: string[];\n    let prevIndex = 0;\n    while ((match = reg.exec(text)) !== null) {\n      fragments.push(\n        text.substr(prevIndex, reg.lastIndex - prevIndex - match[0].length),\n      );\n      fragments.push(replacement(match));\n      prevIndex = reg.lastIndex;\n    }\n\n    if (fragments.length === 0) {\n      return <span>{text}</span>;\n    }\n\n    // append any text after the last match\n    if (prevIndex != text.length - 1) {\n      fragments.push(text.substring(prevIndex));\n    }\n\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    const { renderModuleLink, renderDocLink } = this.props;\n\n    const nstring = this.reactReplace(text, this.CUSTOM_FORMATTERS, (match) => {\n      const fullMatch = match[0];\n      const type = match[1];\n      const textMatch = match[2];\n\n      switch (type) {\n        case 'L': {\n          const url = textMatch.split(',');\n          return renderDocLink(url[0], url[1]);\n        }\n        case 'U':\n          return (\n            <a href={textMatch} target='_blank' rel='noreferrer'>\n              {textMatch}\n            </a>\n          );\n        case 'I':\n          return <i>{textMatch}</i>;\n        case 'C':\n          return <span className='inline-code'>{textMatch}</span>;\n        case 'M':\n          return renderModuleLink(textMatch);\n\n        case 'B':\n          return <b>{textMatch}</b>;\n\n        default:\n          return fullMatch;\n      }\n    });\n\n    return nstring;\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, pluginName: string) {\n    const isDeprecated = doc.deprecated || pluginName.startsWith('_');\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport * as FileSaver from 'file-saver';\nimport * as React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, isFieldSet, isWriteOnly } from 'src/utilities';\nimport { validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const { remote } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n        'signed_only',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='link'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      filenames.requirements_file.name,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.client_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.ca_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { PulpStatus, RemoteType, UserType } from 'src/api';\nimport { DateComponent, ListItemActions, SortTable } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { hasPermission } = this.context;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length &&\n        hasPermission('ansible.change_collectionremote') && (\n          <DropdownItem\n            key='edit'\n            onClick={() => this.props.editRemote(remote)}\n          >\n            {t`Edit`}\n          </DropdownItem>\n        ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { hasPermission } = this.context;\n    if (!hasPermission('ansible.change_collectionremote')) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\nexport const RepoSelector = ({\n  selectedRepo,\n  path,\n  pathParams,\n  isDisabled,\n}: IProps) => {\n  const [selectExpanded, setSelectExpanded] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const getRepoName = (repoName) => {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return repo ? i18n._(repo) : repoName;\n  };\n\n  const repoNames = Constants.REPOSITORYNAMES;\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <InputGroupText\n            style={{ paddingLeft: 0 }}\n            variant='plain'\n            className='hub-input-group-text-no-wrap'\n          >\n            {t`Filter by repository`}\n          </InputGroupText>\n          <Select\n            className='nav-select'\n            isDisabled={isDisabled}\n            isOpen={selectExpanded}\n            isPlain={false}\n            onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const originalRepo = selectedRepo;\n              const newRepo = getRepoName(event.target.name);\n\n              setSelectExpanded(false);\n\n              if (newRepo !== originalRepo) {\n                const newPath = formatPath(path, {\n                  ...pathParams,\n                  repo: event.target.name,\n                });\n                navigate(newPath);\n              }\n            }}\n            onToggle={(isExpanded) => setSelectExpanded(isExpanded)}\n            selections={getRepoName(selectedRepo)}\n            variant='single'\n          >\n            {Object.keys(repoNames).map((option) => (\n              <SelectOption\n                name={option}\n                key={option}\n                value={i18n._(repoNames[option])}\n              />\n            ))}\n          </Select>\n        </InputGroup>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport { Paths, formatEEPath } from 'src/paths';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n\n          <FormGroup fieldId='none' label={t`Groups with access`}>\n            <Alert\n              isInline\n              variant='info'\n              title={\n                isNew ? (\n                  <Trans>\n                    Moved to the <b>Owners</b> tab\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Moved to the{' '}\n                    <Link\n                      target='_blank'\n                      to={formatEEPath(Paths.executionEnvironmentDetailOwners, {\n                        container: name,\n                      })}\n                    >\n                      Owners\n                    </Link>{' '}\n                    <ExternalLinkAltIcon /> tab\n                  </Trans>\n                )\n              }\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import { Label, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport const ShaLabel = ({ digest, grey, long }: IProps) => (\n  <Tooltip content={digest}>\n    <Label color={grey ? 'grey' : 'blue'}>\n      {long ? digest : truncateSha(digest)}\n    </Label>\n  </Tooltip>\n);\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n  const context = useContext();\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props, context));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props, context): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: context.selectedRepo,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  TextInputTypes,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport { APISearchTypeAhead, AlertType, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n\n    return (\n      <td\n        style={{\n          paddingRight: '0px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {buttons?.length ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {kebabItems?.length ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionDetailType, CollectionListType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionDetailType | CollectionListType;\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport class DeleteCollectionModal extends React.Component<IProps> {\n  render() {\n    const {\n      deleteCollection,\n      isDeletionPending,\n      confirmDelete,\n      collectionVersion,\n      cancelAction,\n      deleteAction,\n      setConfirmDelete,\n    } = this.props;\n\n    return (\n      deleteCollection && (\n        <DeleteModal\n          spinner={isDeletionPending}\n          cancelAction={() => cancelAction()}\n          deleteAction={() => deleteAction()}\n          isDisabled={!confirmDelete || isDeletionPending}\n          title={\n            collectionVersion\n              ? t`Delete collection version?`\n              : t`Delete collection?`\n          }\n        >\n          <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n            {collectionVersion ? (\n              <>\n                {(deleteCollection as CollectionDetailType).all_versions\n                  .length === 1 ? (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost and this will cause the entire\n                    collection to be deleted.\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost.\n                  </Trans>\n                )}\n              </>\n            ) : (\n              <Trans>\n                Deleting <b>{deleteCollection.name}</b> and its data will be\n                lost.\n              </Trans>\n            )}\n          </Text>\n          <Checkbox\n            isChecked={confirmDelete}\n            onChange={setConfirmDelete}\n            label={t`I understand that this action cannot be undone.`}\n            id='delete_confirm'\n          />\n        </DeleteModal>\n      )\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\nimport { DateComponent, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`role.github_user logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          ></Logo>\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        ></Logo>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { defineMessage, t } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n\n  static DOWNSTREAM_HOSTS = [\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n    validated: defineMessage({ message: `Validated` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified', 'validated'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nconst language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst RepositoryList = lazy(\n  () => import('src/containers/repositories/repository-list'),\n);\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenPage = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.repositories, component: RepositoryList },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenPage },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceByRepo, component: NamespaceDetail },\n  { path: Paths.searchByRepo, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.collection, component: CollectionDetail },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.search, component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport { t } from '@lingui/macro';\nimport { Alert } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst DEFAULT_REPO = 'published';\n\nconst isRepoURL = (pathname) =>\n  matchPath({ path: formatPath(Paths.searchByRepo) + '*' }, pathname);\n\nconst App = (_props) => {\n  const location = useLocation();\n  const match = isRepoURL(location.pathname);\n\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [selectedRepo, setSelectedRepo] = useState<string>(DEFAULT_REPO);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    // This is sort of a dirty hack to make it so that collection details can view repositories other than \"published\", but all other views are locked to \"published\"\n    // We do this because there is not currently a way to toggle repositories in automation hub on console.redhat.com, so it's important to ensure the user always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in the url\n      if (match.params.repo !== selectedRepo) {\n        setSelectedRepo(match.params.repo);\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo if the repo is set to anything else.\n      if (selectedRepo !== DEFAULT_REPO) {\n        setSelectedRepo(DEFAULT_REPO);\n      }\n    }\n  });\n\n  // block the page from rendering if we're on a repo route and the repo in the url doesn't match the current state\n  // This gives componentDidUpdate a chance to recognize that route has changed and update the internal state to match the route before any pages can redirect the URL to a 404 state.\n  if (match && match.params.repo !== selectedRepo) {\n    return null;\n  }\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        selectedRepo,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <Alert\n        isInline\n        variant='info'\n        title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n      />\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import * as React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport function formatPath(\n  path: Paths,\n  data = {},\n  params?: Record<string, string | boolean>,\n) {\n  // insights router has basename=\"/\" or \"/beta/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/beta/', '/').replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailOwners]:\n      Paths.executionEnvironmentDetailOwnersWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailOwners = '/containers/:container/_content/owners',\n  executionEnvironmentDetailOwnersWithNamespace = '/containers/:namespace/:container/_content/owners',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: formatPath(Paths[NAMESPACE_TERM]),\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  const splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\n\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionAPI } from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection) {\n    const { name, namespace } = collection;\n    return CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    selectedRepo,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(selectedRepo, collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","reject","err","undefined","PulpStatus","NamespaceAPI","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","for_object_type","newParams","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","RemoteAPI","distribution","_id","_obj","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","ControllerAPI","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","SigningServiceAPI","CertificateUploadAPI","repository","signed_collection","Repositories","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","APISearchTypeAhead","props","loadResults","onClear","evt","textInput","target","value","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","chipGroupProps","options","results","option","push","SelectOption","key","length","React","AlertList","alerts","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","setAlerts","newList","splice","AppliedFilters","className","ignoredParams","niceNames","niceValues","updateParams","filters","chips","Array","isArray","marginRight","ChipGroup","categoryName","v","Chip","onClick","unsetFilter","renderGroup","Button","BaseHeader","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","showRepoSelector","cx","Title","headingLevel","size","Breadcrumbs","links","Breadcrumb","link","index","BreadcrumbItem","isActive","Link","to","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","d","displaySignatures","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","Text","component","TextVariants","Badge","isRead","getCertification","SignatureBadge","isCompact","signState","formatPath","Paths","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","CollectionContentList","context","useContext","toShow","summary","all","showing","keywords","c","keywordMatch","match","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","_e","val","placeholder","clickable","selectedRepo","EmptyStateCustom","icon","ExclamationTriangleIcon","CollectionCount","useState","collectionCount","setCollectionCount","loading","setLoading","useEffect","promises","collections","statusText","addAlert","errorMessage","Spinner","DateComponent","date","moment","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","Label","color","text","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","page_size","modalPagination","errorAlert","isOpenSignAllModal","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","redirect","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","activeTab","find","created","created_at","urlKeys","latestVersion","featureFlags","display_signatures","can_upload_signatures","isLatestVersion","signedString","collectionName","Navigate","canSign","canSignNamespace","hasPermission","dropdownItems","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","issueUrl","encodeURIComponent","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","isInline","toString","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","loadingVariant","renderSelectVersions","Flex","FlexItem","href","rel","StatefulDropdown","items","renderTabs","include_related","related_fields","my_permissions","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","concat","pulp_href","reload","warning","AppContext","DownloadSignatureGridItem","show","setShow","signatures","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","downloadLinkRef","installCommand","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","reponame","downloadURL","current","click","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","CollectionFilter","inputText","prevProps","display_tags","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","clearAllFilters","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","listDep","EmptyStateNoData","fqn","version_range","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","selectedFilter","selectedID","currentTarget","replace","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","trim","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteModal","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","messages","renderMessage","level","message","hideCollectionName","empty","collectionHead","approvalStatus","rlist","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","split","artifact","sha256","loaded","total","msg","cancel","tab","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","cliConfig","getRepoUrl","pulp_last_updated","isCode","next","external_authentication","UI_EXTERNAL_LOGIN_URI","Logo","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","NamespaceForm","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","preventDefault","labelIcon","newNamespaceNameIsValid","NumericLabel","n","number","numberElem","Math","floor","labelElem","plugin","OwnersTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","noData","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","renderGroupRow","urlPrefix","ListItemActions","kebabItems","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","pulpObjectType","selectRolesMessage","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addGroup","addRole","ToggleTemplate","firstIndex","lastIndex","perPageOptions","extraProps","PaginationVariant","String","titles","ofWord","perPageSuffix","toggleTemplate","PartnerHeader","Tabs","setSelected","model_permissions","showUserManagement","userManagementFilter","permission","allPermissions","categories","entries","forEach","ui_category","values","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","default","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","typeAheadAriaLabel","RenderPluginDoc","renderError","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","suboptions","parseReturnRecursive","returnV","ret","contains","reg","replacement","fragments","prevIndex","exec","substr","substring","renderModuleLink","renderDocLink","reactReplace","CUSTOM_FORMATTERS","fullMatch","textMatch","pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","getRemoteType","requiredFields","disabledFields","allowEditName","showModal","isValid","saveRemote","renderForm","collection_signing","docsAnsibleLink","fileOnChange","helperTextIcon","helperTextInvalidIcon","Switch","isChecked","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","isNumericSet","rate_limit","Number","isInteger","host","fieldName","newFields","is_set","isNaN","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","editRemote","updated_at","lastSynced","lastSyncStatus","configButton","syncButton","syncRemote","distributions","selectExpanded","setSelectExpanded","navigate","useNavigate","getRepoName","repoName","i18n","repoNames","InputGroupText","newRepo","newPath","ResourcesForm","resources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","onSelectProp","ariaLabel","Dropdown","toggle","renderToggle","open","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","typeToVariantMap","primary","secondary","labelProps","statusToProps","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","s","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","toUpperCase","getContentEntry","a","b","parseLinks","searchBarRef","Nav","theme","NavList","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","select","disable","RadioRow","hoverTip","clickTip","clearButtonText","textAlign","showClose","hasNoBodyWrapper","hasNoBodyPadding","navAriaLabel","mainAriaLabel","cancelButtonText","closeButtonAriaLabel","titleId","descriptionId","direction","perm","category","catTitle","charAt","splitByDot","Divider","setInputText","setRoles","rolesItemCount","setRolesItemCount","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","INSIGHTS_DEPLOYMENT_MODE","published","community","completed","running","availableLanguages","momentLocales","zh","locale","pseudolocalization","plurals","userLanguage","navigator","languages","lang","searchParams","fromEntries","URLSearchParams","location","search","localStorage","test_l10n","override_l10n","overrideLanguage","language","debug","origin","pathname","activate","CertificationDashboard","lazy","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","NotFound","Partners","RepositoryList","Search","SignatureKeysList","TaskDetail","TaskListView","TokenPage","routes","InsightsRoutes","Suspense","fallback","Routes","Component","Route","DEFAULT_REPO","_props","useLocation","matchPath","setFeatureFlags","setSelectedRepo","setSettings","setUser","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","UI_BASE_PATH","formatEEPath","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailOwners","executionEnvironmentDetailOwnersWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","namespaceBreadcrumb","collapsedText","expandedText","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","getContainersURL","writeOnlyFields","el","newObj","sha","splitSha","has_model_permission","entity","waitMs","bailAfter","statusCode","outsideError","protocol","URL","can_create_signatures","getUsedbyDependencies","withRouter","ClassComponent","WithRouter","useParams","routeParams","routePath","displayName","paramString","numericTypes","appendParam","param","callback","getQueryString","getReduced","deleteParam","sortParams","defaultSort","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}