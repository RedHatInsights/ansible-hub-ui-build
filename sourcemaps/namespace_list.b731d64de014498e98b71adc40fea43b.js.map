{"version":3,"file":"js/namespace_list.1645021548769.36d9104c00c65268d780.js","mappings":"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","sources":["webpack:///./src/containers/namespace-list/my-namespaces.tsx","webpack:///./src/containers/namespace-list/namespace-list.tsx","webpack:///./src/containers/namespace-list/partners.tsx"],"sourcesContent":["import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport { EmptyStateUnauthorized } from 'src/components';\n\nclass MyNamespaces extends React.Component<RouteComponentProps> {\n  render() {\n    if (!this.context.user || this.context.user.is_anonymous) {\n      return <EmptyStateUnauthorized />;\n    }\n    return (\n      <NamespaceList\n        {...this.props}\n        namespacePath={Paths.myCollectionsByRepo}\n        filterOwner={true}\n      />\n    );\n  }\n}\n\nexport default withRouter(MyNamespaces);\nMyNamespaces.contextType = AppContext;\n","import * as React from 'react';\nimport {\n  Button,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\nimport { t } from '@lingui/macro';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport {\n  AlertList,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LinkTabs,\n  LoadingPageSpinner,\n  LoadingPageWithHeader,\n  NamespaceCard,\n  NamespaceModal,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport { NamespaceAPI, NamespaceListType, MyNamespaceAPI } from 'src/api';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { Constants } from 'src/constants';\nimport { filterIsSet } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\nimport { i18n } from '@lingui/core';\n\nimport './namespace-list.scss';\n\ninterface IState {\n  namespaces: NamespaceListType[];\n  itemCount: number;\n  params: {\n    name?: string;\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tenant?: string;\n    keywords?: string;\n  };\n  hasPermission: boolean;\n  isModalOpen: boolean;\n  loading: boolean;\n  redirect?: string;\n  inputText: string;\n}\n\ninterface IProps extends RouteComponentProps {\n  namespacePath: Paths;\n  filterOwner?: boolean;\n}\n\nexport class NamespaceList extends React.Component<IProps, IState> {\n  nonURLParams = ['tenant'];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = 20;\n    }\n\n    if (!params['sort']) {\n      params['sort'] = 'name';\n    }\n\n    this.state = {\n      namespaces: undefined,\n      itemCount: 0,\n      params: params,\n      hasPermission: true,\n      isModalOpen: false,\n      loading: true,\n      inputText: params['keywords'] || '',\n    };\n  }\n\n  private handleModalToggle = () => {\n    this.setState(({ isModalOpen }) => ({\n      isModalOpen: !isModalOpen,\n    }));\n  };\n\n  componentDidMount() {\n    if (this.props.filterOwner) {\n      // Make a query with no params and see if it returns results to tell\n      // if the user can edit namespaces\n      MyNamespaceAPI.list({})\n        .then((results) => {\n          if (results.data.meta.count !== 0) {\n            this.loadNamespaces();\n          } else {\n            this.setState({\n              hasPermission: false,\n              namespaces: [],\n              loading: false,\n            });\n          }\n        })\n        .catch((e) =>\n          this.setState(\n            {\n              namespaces: [],\n              itemCount: 0,\n              loading: false,\n            },\n            () =>\n              this.context.setAlerts([\n                ...this.context.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Error loading my namespaces.`,\n                  description: e?.message,\n                },\n              ]),\n          ),\n        );\n    } else {\n      this.loadNamespaces();\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.setAlerts([]);\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to={this.state.redirect} />;\n    }\n\n    const { namespaces, params, itemCount, loading, inputText } = this.state;\n    const { filterOwner } = this.props;\n    const { user, alerts } = this.context;\n    const noData =\n      !filterIsSet(this.state.params, ['keywords']) &&\n      namespaces !== undefined &&\n      namespaces.length === 0;\n\n    if (loading) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    // Namespaces or Partners\n    const title = i18n._(namespaceBreadcrumb.name);\n\n    const updateParams = (p) => {\n      p['page'] = 1;\n      this.updateParams(p, () => this.loadNamespaces());\n    };\n\n    return (\n      <div className='hub-namespace-page'>\n        <NamespaceModal\n          isOpen={this.state.isModalOpen}\n          toggleModal={this.handleModalToggle}\n          onCreateSuccess={(result) =>\n            this.setState({\n              redirect: formatPath(Paths.myCollections, {\n                namespace: result['name'],\n              }),\n            })\n          }\n        ></NamespaceModal>\n        <AlertList alerts={alerts} closeAlert={() => this.closeAlert()} />\n        <BaseHeader title={title}>\n          {!this.context.user.is_anonymous && (\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <LinkTabs\n                  tabs={[\n                    {\n                      title: t`All`,\n                      link: Paths[NAMESPACE_TERM],\n                      active: !filterOwner,\n                    },\n                    {\n                      title: t`My namespaces`,\n                      link: Paths.myNamespaces,\n                      active: filterOwner,\n                    },\n                  ]}\n                />\n              </div>\n            </div>\n          )}\n          {noData ? null : (\n            <div className='toolbar'>\n              <Toolbar>\n                <ToolbarContent>\n                  <ToolbarGroup style={{ marginLeft: 0 }}>\n                    <ToolbarItem>\n                      <CompoundFilter\n                        inputText={inputText}\n                        onChange={(text) => this.setState({ inputText: text })}\n                        updateParams={updateParams}\n                        params={params}\n                        filterConfig={[{ id: 'keywords', title: t`keywords` }]}\n                      />\n                      <AppliedFilters\n                        style={{ marginTop: '16px' }}\n                        updateParams={updateParams}\n                        params={params}\n                        ignoredParams={['page_size', 'page', 'sort']}\n                      />\n                    </ToolbarItem>\n                  </ToolbarGroup>\n                  <ToolbarGroup style={{ alignSelf: 'start' }}>\n                    <ToolbarItem>\n                      <Sort\n                        options={[\n                          { title: t`Name`, id: 'name', type: 'alpha' },\n                        ]}\n                        params={params}\n                        updateParams={updateParams}\n                      />\n                    </ToolbarItem>\n                    {user?.model_permissions?.add_namespace && (\n                      <ToolbarItem key='create-button'>\n                        <Button\n                          variant='primary'\n                          onClick={this.handleModalToggle}\n                        >\n                          {t`Create`}\n                        </Button>\n                      </ToolbarItem>\n                    )}\n                  </ToolbarGroup>\n                </ToolbarContent>\n              </Toolbar>\n              <div>\n                <Pagination\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(p, () => this.loadNamespaces())\n                  }\n                  count={itemCount}\n                  isCompact\n                  perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                />\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        <section className='card-area'>{this.renderBody()}</section>\n        {noData || loading ? null : (\n          <section className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) =>\n                this.updateParams(p, () => this.loadNamespaces())\n              }\n              perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n              count={itemCount}\n            />\n          </section>\n        )}\n      </div>\n    );\n  }\n\n  private renderBody() {\n    const { namespaces, loading } = this.state;\n    const { namespacePath, filterOwner } = this.props;\n    const { user } = this.context;\n\n    const noDataTitle = t`No namespaces yet`;\n    const noDataDescription = !filterOwner\n      ? t`Namespaces will appear once created`\n      : t`This account is not set up to manage any namespaces`;\n\n    const noDataButton = user?.model_permissions?.add_namespace ? (\n      <Button variant='primary' onClick={() => this.handleModalToggle()}>\n        {t`Create`}\n      </Button>\n    ) : null;\n\n    if (loading) {\n      return (\n        <section>\n          <LoadingPageSpinner></LoadingPageSpinner>;\n        </section>\n      );\n    }\n\n    if (namespaces.length === 0) {\n      return (\n        <section>\n          {filterIsSet(this.state.params, ['keywords']) ? (\n            <EmptyStateFilter />\n          ) : (\n            <EmptyStateNoData\n              title={noDataTitle}\n              description={noDataDescription}\n              button={noDataButton}\n            />\n          )}\n        </section>\n      );\n    }\n\n    return (\n      <section className='card-layout'>\n        {namespaces.map((ns, i) => (\n          <div key={i} className='card-wrapper'>\n            <NamespaceCard\n              namespaceURL={formatPath(namespacePath, {\n                namespace: ns.name,\n                repo: this.context.selectedRepo,\n              })}\n              key={i}\n              {...ns}\n            ></NamespaceCard>\n          </div>\n        ))}\n      </section>\n    );\n  }\n\n  private loadNamespaces() {\n    const { filterOwner } = this.props;\n    const api = filterOwner ? MyNamespaceAPI : NamespaceAPI;\n\n    this.setState({ loading: true }, () => {\n      api\n        .list(this.state.params)\n        .then((results) => {\n          this.setState({\n            namespaces: results.data.data,\n            itemCount: results.data.meta.count,\n            loading: false,\n          });\n        })\n        .catch((e) =>\n          this.setState(\n            {\n              namespaces: [],\n              itemCount: 0,\n              loading: false,\n            },\n            () =>\n              this.context.setAlerts([\n                ...this.context.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Error loading namespaces.`,\n                  description: e?.message,\n                },\n              ]),\n          ),\n        );\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonURLParams);\n  }\n\n  private closeAlert() {\n    this.context.setAlerts([]);\n  }\n}\n\nNamespaceList.contextType = AppContext;\n","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from 'src/paths';\n\nclass Partners extends React.Component<RouteComponentProps> {\n  render() {\n    return (\n      <NamespaceList\n        {...this.props}\n        namespacePath={Paths.namespaceByRepo}\n        filterOwner={false}\n      />\n    );\n  }\n}\n\nexport default withRouter(Partners);\n"],"names":["MyNamespaces","this","context","user","is_anonymous","props","namespacePath","Paths","filterOwner","React","withRouter","contextType","AppContext","NamespaceList","setState","isModalOpen","params","ParamHelper","location","search","state","namespaces","undefined","itemCount","hasPermission","loading","inputText","MyNamespaceAPI","then","results","data","meta","count","loadNamespaces","e","setAlerts","alerts","variant","title","description","message","redirect","Redirect","push","to","noData","filterIsSet","length","i18n","namespaceBreadcrumb","updateParams","p","className","isOpen","toggleModal","handleModalToggle","onCreateSuccess","result","formatPath","namespace","closeAlert","tabs","link","active","Toolbar","ToolbarContent","ToolbarGroup","style","marginLeft","ToolbarItem","onChange","text","filterConfig","id","marginTop","ignoredParams","alignSelf","options","type","model_permissions","add_namespace","key","Button","onClick","isCompact","perPageOptions","Constants","renderBody","noDataTitle","noDataDescription","noDataButton","button","map","ns","i","namespaceURL","name","repo","selectedRepo","api","NamespaceAPI","list","nonURLParams","Partners"],"sourceRoot":""}