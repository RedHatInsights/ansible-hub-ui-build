{"version":3,"file":"js/7429.a374d241cf5ded76d2d1.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Checkbox,\n  DropdownItem,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionFilter,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  Pagination,\n  PartnerHeader,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoURL,\n  waitForTask,\n} from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\nimport './namespace-detail.scss';\n\ninterface IState {\n  canSign: boolean;\n  collections: CollectionVersionSearch[];\n  allCollections: CollectionVersionSearch[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n    group?: number;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionVersionSearch;\n  showControls: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  confirmDelete: boolean;\n  isNamespacePending: boolean;\n  alerts: AlertType[];\n  deleteCollection: CollectionVersionSearch;\n  isDeletionPending: boolean;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  group: GroupType;\n  deleteAll: boolean;\n}\n\nexport class NamespaceDetail extends React.Component<RouteProps, IState> {\n  nonAPIParams = ['tab', 'group'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.routeParams.namespace;\n    if (props.routeParams.repo && !params['repository_name']) {\n      params['repository_name'] = props.routeParams.repo;\n    }\n\n    this.state = {\n      canSign: false,\n      collections: [],\n      allCollections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      confirmDelete: false,\n      isNamespacePending: false,\n      alerts: [],\n      deleteCollection: null,\n      isDeletionPending: false,\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      group: null,\n      deleteAll: true,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.loadAllCollections();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = ParamHelper.parseParamString(this.props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (prevProps.location.search !== this.props.location.search) {\n      params['namespace'] = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params['group'], this.state.namespace.groups),\n      });\n    }\n\n    if (\n      prevProps.routeParams.repo !== this.props.routeParams.repo &&\n      this.props.routeParams.repo &&\n      (!params['repository_name'] ||\n        params['repository_name'] === prevProps.routeParams.repo)\n    ) {\n      params['repository_name'] = this.props.routeParams.repo;\n      this.setState({ params });\n    }\n  }\n\n  filterGroup(groupId, groups) {\n    return groupId ? groups.find(({ id }) => Number(groupId) === id) : null;\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateUpdate }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  render() {\n    const {\n      canSign,\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showControls,\n      showImportModal,\n      warning,\n      updateCollection,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      confirmDelete,\n      isNamespacePending,\n      alerts,\n      deleteCollection,\n      isDeletionPending,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'access', name: t`Access` },\n    ].filter(Boolean);\n\n    const tab = params['tab'] || 'collections';\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access'\n        ? {\n            name: t`Access`,\n            url: params.group\n              ? formatPath(\n                  Paths.namespaceDetail,\n                  {\n                    namespace: namespace.name,\n                  },\n                  { tab: 'access' },\n                )\n              : null,\n          }\n        : null,\n      tab === 'access' && params.group\n        ? { name: t`Group ${params.group}` }\n        : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoURL('published');\n\n    const noData =\n      itemCount === 0 &&\n      !filterIsSet(params, [\n        'is_signed',\n        'keywords',\n        'repository_name',\n        'tags',\n      ]);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'view_type',\n    ];\n\n    const { hasPermission } = this.context;\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || hasPermission('galaxy.change_namespace');\n\n    // remove ?group (access tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n\n    const repository = params['repository_name'] || null;\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection?.collection_version}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          />\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          filters={\n            tab === 'collections' ? (\n              <div className='hub-toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        />\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      {t`Upload collection`}\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  displaySignatures={\n                    this.context.featureFlags.display_signatures\n                  }\n                  collectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <AccessTab\n              showGroupRemoveModal={this.state.showGroupRemoveModal}\n              showGroupSelectWizard={this.state.showGroupSelectWizard}\n              showRoleRemoveModal={this.state.showRoleRemoveModal}\n              showRoleSelectWizard={this.state.showRoleSelectWizard}\n              canEditOwners={canEditOwners}\n              group={this.state.group}\n              groups={namespace.groups}\n              name={namespace.name}\n              pulpObjectType='pulp_ansible/namespaces'\n              selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n              updateProps={(prop) => {\n                this.setState(prop);\n              }}\n              addGroup={(group, roles) => {\n                const { groups, name } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: roles.map(({ name }) => name),\n                };\n                const newGroups = [...groups, newGroup];\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                  stateUpdate: { showGroupSelectWizard: null },\n                });\n              }}\n              removeGroup={(group) => {\n                const { name, groups } = namespace;\n                const newGroups = groups.filter((g) => g !== group);\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                  stateUpdate: { showGroupRemoveModal: null },\n                });\n              }}\n              addRole={(group, roles) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: [\n                    ...group.object_roles,\n                    ...roles.map(({ name }) => name),\n                  ],\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleSelectWizard: null },\n                });\n              }}\n              removeRole={(role, group) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: group.object_roles.filter(\n                    (name) => name !== role,\n                  ),\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleRemoveModal: null },\n                });\n              }}\n              urlPrefix={formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => this.signAllCertificates(namespace, repository)}\n            onCancel={() => this.setState({ isOpenSignModal: false })}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(pulp_href, action) {\n    const collection = this.state.collections.find(\n      (c) => c.collection_version.pulp_href === pulp_href,\n    );\n    const { name } = collection.collection_version;\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(collection)\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.is_deprecated\n                ? t`Collection \"${name}\" has been successfully undeprecated.`\n                : t`Collection \"${name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType, repository: string) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository_name: repository,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        // FIXME: use taskAlert\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              id: 'loading-signing',\n              variant: 'success',\n              title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n            },\n          ],\n          isOpenSignModal: false,\n        });\n\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.load();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n          isOpenSignModal: false,\n        });\n      });\n  }\n\n  private loadCollections() {\n    CollectionVersionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      repository_label: '!hide_from_search',\n      namespace: this.props.routeParams.namespace,\n    }).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        repository_label: '!hide_from_search',\n        namespace: this.props.routeParams.namespace,\n        is_highest: true,\n      }),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // TODO this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then((val) => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n          canSign: canSignNamespace(this.context, val[2]?.data),\n          group: this.filterGroup(\n            this.state.params['group'],\n            val[1].data['groups'],\n          ),\n        });\n      })\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private loadAllCollections() {\n    CollectionVersionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      namespace: this.props.routeParams.namespace,\n    }).then((result) => {\n      this.setState({\n        allCollections: result.data.data,\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections } = this.state;\n    const { can_upload_signatures } = this.context.featureFlags;\n    const { ai_deny_index } = this.context.featureFlags;\n    const { hasPermission } = this.context;\n    const repository = this.state.params['repository_name'] || null;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='1'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      hasPermission('galaxy.delete_namespace') && (\n        <React.Fragment key={'2'}>\n          {this.state.allCollections.length === 0 ? (\n            <DropdownItem\n              onClick={() => this.setState({ isOpenNamespaceModal: true })}\n            >\n              {t`Delete namespace`}\n            </DropdownItem>\n          ) : (\n            <Tooltip\n              isVisible={false}\n              content={\n                <Trans>\n                  Cannot delete namespace until <br />\n                  collections&apos; dependencies have <br />\n                  been deleted\n                </Trans>\n              }\n              position='left'\n            >\n              <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n            </Tooltip>\n          )}\n        </React.Fragment>\n      ),\n      <DropdownItem\n        key='3'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign &&\n        !can_upload_signatures &&\n        (repository ? (\n          <DropdownItem\n            key='sign-collections'\n            data-cy='sign-all-collections-button'\n            onClick={() => this.setState({ isOpenSignModal: true })}\n          >\n            {t`Sign all collections in ${repository}`}\n          </DropdownItem>\n        ) : (\n          <DropdownItem\n            key='sign-collections'\n            isDisabled\n            description={t`Please select a repository filter`}\n          >\n            {t`Sign all collections`}\n          </DropdownItem>\n        )),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Ansible Lightspeed settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls' />;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            {t`Upload collection`}\n          </Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb().url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionVersionSearch) {\n    const { hasPermission } = this.context;\n    const { showControls } = this.state;\n    const { display_repositories } = this.context.featureFlags;\n\n    if (!showControls) {\n      return;\n    }\n\n    return {\n      uploadButton: (\n        <Button\n          onClick={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'upload',\n            )\n          }\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n      ),\n      dropdownMenu: (\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection: hasPermission('ansible.delete_collection'),\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                  deleteAll: true,\n                }),\n              deleteAll: true,\n              display_repositories: display_repositories,\n            }),\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection: hasPermission('ansible.delete_collection'),\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                  deleteAll: false,\n                }),\n              deleteAll: false,\n              display_repositories: display_repositories,\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(\n                  collection.collection_version.pulp_href,\n                  'deprecate',\n                )\n              }\n              key='deprecate'\n            >\n              {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      ),\n    };\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","url","confirmDelete","context","queueAlert","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","alerts","concat","_toConsumableArray","i18n","_","description","errorMessage","params","ParamHelper","parseParamString","location","search","routeParams","repo","canSign","collections","allCollections","itemCount","showImportModal","warning","updateCollection","showControls","isOpenSignModal","isOpenWisdomModal","deleteCollection","isDeletionPending","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","group","deleteAll","_createClass","key","value","this","load","loadAllCollections","setAlerts","prevProps","filterGroup","groups","groupId","find","_ref","Number","_ref2","_this2","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","update","_objectSpread","addAlert","_ref3","_ref3$response","_this$state$namespace","_deleteCollection$rep","_this3","_this$state","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","formatPath","Paths","namespaceDetail","repositoryUrl","getRepoURL","noData","filterIsSet","updateParams","loadCollections","ignoredParams","hasPermission","canEditOwners","related_fields","my_permissions","includes","tabParams","repository","deleteFromRepo","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","collection","collection_version","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","className","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","Alert","actionClose","AlertActionCloseButton","onClose","PartnerHeader","p","pageControls","renderPageControls","filters","CollectionFilter","Pagination","count","isTop","Main","EmptyStateNoData","button","Button","onClick","CollectionList","displaySignatures","featureFlags","display_signatures","collectionControls","renderCollectionControls","href","target","rel","ExternalLinkAltIcon","ClipboardCopy","isReadOnly","renderResources","AccessTab","pulpObjectType","selectRolesMessage","updateProps","prop","addGroup","roles","newGroup","object_roles","map","_ref4","newGroups","updateGroups","removeGroup","g","addRole","_ref5","removeRole","role","urlPrefix","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","pulp_href","action","_this4","c","CollectionAPI","setDeprecation","result","taskId","parsePulpIDFromURL","data","task","waitForTask","is_deprecated","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","sign","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","repository_name","task_id","error","x","_this6","CollectionVersionAPI","list","getReduced","nonAPIParams","repository_label","meta","_this7","Promise","all","is_highest","get","include_related","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_val$","canSignNamespace","notFound","_this8","updateParamsMixin","nonQueryStringParams","_this9","_this$state2","can_upload_signatures","ai_deny_index","dropdownItems","DropdownItem","component","Link","editNamespace","Tooltip","isVisible","content","position","StatefulDropdown","items","newState","closeAlertMixin","_this10","display_repositories","uploadButton","handleCollectionAction","dropdownMenu","deleteMenuOption","canDeleteCollection","noDependencies","tryOpenDeleteModalWithConfirm","ariaLabel","contextType","AppContext","withRouter"],"sourceRoot":""}