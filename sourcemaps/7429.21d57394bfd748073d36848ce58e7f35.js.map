{"version":3,"file":"js/7429.1193a952b7c3fe8249f0.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport { Button, Checkbox, DropdownItem, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionDropdown,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ExternalLink,\n  HubListToolbar,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  PartnerHeader,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n  collectionFilter,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RouteProps,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoURL,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface IState {\n  alerts: AlertType[];\n  canSign: boolean;\n  collections: CollectionVersionSearch[];\n  confirmDelete: boolean;\n  deleteAll: boolean;\n  deleteCollection: CollectionVersionSearch;\n  filteredCount: number;\n  group: GroupType;\n  user: UserType;\n  isDeletionPending: boolean;\n  isNamespacePending: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  namespace: NamespaceType;\n  params: {\n    group?: string;\n    keywords?: string;\n    namespace?: string;\n    page?: number;\n    page_size?: number;\n    repository_name?: string;\n    sort?: string;\n    tab?: string;\n    user?: string;\n  };\n  redirect: string;\n  showControls: boolean;\n  showUserRemoveModal?: UserType;\n  showUserSelectWizard?: { user?: UserType; roles?: RoleType[] };\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showImportModal: boolean;\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  unfilteredCount: number;\n  updateCollection: CollectionVersionSearch;\n}\n\nexport class NamespaceDetail extends React.Component<RouteProps, IState> {\n  nonAPIParams = ['tab', 'group', 'user'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    params.namespace = props.routeParams.namespace;\n    if (props.routeParams.repo && !params.repository_name) {\n      params.repository_name = props.routeParams.repo;\n    }\n\n    this.state = {\n      alerts: [],\n      canSign: false,\n      collections: [],\n      confirmDelete: false,\n      deleteAll: true,\n      deleteCollection: null,\n      filteredCount: 0,\n      group: null,\n      user: null,\n      isDeletionPending: false,\n      isNamespacePending: false,\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      namespace: null,\n      params,\n      redirect: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showImportModal: false,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      unfilteredCount: 0,\n      updateCollection: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = ParamHelper.parseParamString(this.props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    if (prevProps.location.search !== this.props.location.search) {\n      params.namespace = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params.group, this.state.namespace.groups),\n        user: this.filterUser(params.user, this.state.namespace.users),\n      });\n    }\n\n    if (\n      prevProps.routeParams.repo !== this.props.routeParams.repo &&\n      this.props.routeParams.repo &&\n      (!params.repository_name ||\n        params.repository_name === prevProps.routeParams.repo)\n    ) {\n      params.repository_name = this.props.routeParams.repo;\n      this.setState({ params });\n    }\n  }\n\n  filterUser(username, users) {\n    return username\n      ? users.find((u) => u.name === username || u.username === username)\n      : null;\n  }\n\n  filterGroup(name, groups) {\n    return name ? groups.find((g) => g.name === name) : null;\n  }\n\n  private updateRoles({\n    users = null,\n    groups = null,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      users: users || this.state.namespace.users,\n      groups: groups || this.state.namespace.groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets users/groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  hasPerm(permission) {\n    const { namespace } = this.state;\n    const {\n      hasPermission,\n      user: { is_superuser },\n    } = this.context;\n\n    const hasObjectPermission = (permission) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n\n    return (\n      hasPermission(permission) ||\n      hasObjectPermission(permission) ||\n      is_superuser\n    );\n  }\n\n  render() {\n    const {\n      alerts,\n      canSign,\n      collections,\n      confirmDelete,\n      deleteCollection,\n      filteredCount,\n      isDeletionPending,\n      isNamespacePending,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      namespace,\n      params,\n      redirect,\n      showControls,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'access', name: t`Access` },\n    ].filter(Boolean);\n\n    const tab = params.tab || 'collections';\n    const { user, group } = params;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access' && (group || user)\n        ? {\n            url: formatPath(\n              Paths.namespaceDetail,\n              { namespace: namespace.name },\n              { tab },\n            ),\n            name: t`Access`,\n          }\n        : null,\n      tab === 'access' && group ? { name: t`Group ${group}` } : null,\n      tab === 'access' && user ? { name: t`User ${user}` } : null,\n      tab === 'access' && !user && !group ? { name: t`Access` } : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoURL('published');\n\n    const noData =\n      filteredCount === 0 &&\n      !filterIsSet(params, [\n        'is_signed',\n        'keywords',\n        'repository_name',\n        'tags',\n      ]);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'user',\n      'view_type',\n    ];\n\n    const canEditOwners = this.hasPerm('galaxy.change_namespace');\n\n    // remove ?user/group (access tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n    delete tabParams.user;\n\n    const repository = params.repository_name || null;\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    return (\n      <>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection?.collection_version}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n              <Trans>\n                Deleting <b>{namespace.name}</b> and its data will be lost.\n              </Trans>\n            </Text>\n            <Checkbox\n              isChecked={confirmDelete}\n              onChange={(val) => this.setState({ confirmDelete: val })}\n              label={t`I understand that this action cannot be undone.`}\n              id='delete_confirm'\n            />\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n        />\n        {tab === 'collections' ? (\n          <HubListToolbar\n            count={filteredCount}\n            ignoredParams={ignoredParams}\n            params={params}\n            updateParams={updateParams}\n            {...collectionFilter({\n              featureFlags: this.context.featureFlags,\n              ignoredParams,\n            })}\n          />\n        ) : null}\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >{t`Upload collection`}</Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={filteredCount}\n                  displaySignatures={\n                    this.context.featureFlags.display_signatures\n                  }\n                  collectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <ExternalLink href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'>\n                      here\n                    </ExternalLink>\n                    .\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <section className='body'>\n              <AccessTab\n                showUserRemoveModal={this.state.showUserRemoveModal}\n                showUserSelectWizard={this.state.showUserSelectWizard}\n                showGroupRemoveModal={this.state.showGroupRemoveModal}\n                showGroupSelectWizard={this.state.showGroupSelectWizard}\n                showRoleRemoveModal={this.state.showRoleRemoveModal}\n                showRoleSelectWizard={this.state.showRoleSelectWizard}\n                canEditOwners={canEditOwners}\n                group={this.state.group}\n                groups={namespace.groups}\n                user={this.state.user}\n                users={namespace.users}\n                name={namespace.name}\n                pulpObjectType='pulp_ansible/namespaces'\n                selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n                updateProps={(prop) => {\n                  this.setState(prop);\n                }}\n                addUser={(user, roles) => {\n                  const { users, name } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newUsers = [...users, newUser];\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showUserSelectWizard: null },\n                  });\n                }}\n                removeUser={(user) => {\n                  const { name, users } = namespace;\n                  const newUsers = users.filter((u) => u !== user);\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showUserRemoveModal: null },\n                  });\n                }}\n                addGroup={(group, roles) => {\n                  const { groups, name } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newGroups = [...groups, newGroup];\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showGroupSelectWizard: null },\n                  });\n                }}\n                removeGroup={(group) => {\n                  const { name, groups } = namespace;\n                  const newGroups = groups.filter((g) => g !== group);\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showGroupRemoveModal: null },\n                  });\n                }}\n                addUserRole={(user, roles) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: [\n                      ...user.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeUserRole={(role, user) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: user.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                addRole={(group, roles) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: [\n                      ...group.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeRole={(role, group) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: group.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                urlPrefix={formatPath(Paths.namespaceDetail, {\n                  namespace: namespace.name,\n                })}\n              />\n            </section>\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => this.signAllCertificates(namespace, repository)}\n            onCancel={() => this.setState({ isOpenSignModal: false })}\n          />\n        )}\n      </>\n    );\n  }\n\n  private handleCollectionAction(pulp_href, action) {\n    const collection = this.state.collections.find(\n      (c) => c.collection_version.pulp_href === pulp_href,\n    );\n    const { name } = collection.collection_version;\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.addAlert({\n          variant: 'info',\n          title: t`Deprecation status update starting for collection \"${name}\".`,\n        });\n        CollectionAPI.setDeprecation(collection)\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.is_deprecated\n                ? t`Collection \"${name}\" has been successfully undeprecated.`\n                : t`Collection \"${name}\" has been successfully deprecated.`;\n              this.addAlert({\n                title,\n                variant: 'success',\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.addAlert({\n              title: t`API Error: Failed to set deprecation.`,\n              variant: 'warning',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType, repository: string) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository_name: repository,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        // FIXME: use taskAlert\n        this.addAlert({\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        });\n        this.setState({\n          isOpenSignModal: false,\n        });\n\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.loadCollections();\n          })\n          .catch((error) => {\n            this.addAlert(errorAlert(error));\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.addAlert(errorAlert(error.response.status));\n        this.setState({\n          isOpenSignModal: false,\n        });\n      });\n  }\n\n  private loadAllCollections(params) {\n    return CollectionVersionAPI.list({\n      ...params,\n      is_highest: true,\n      namespace: this.props.routeParams.namespace,\n      repository_label: '!hide_from_search',\n    });\n  }\n\n  private loadCollections() {\n    return this.loadAllCollections(\n      ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        filteredCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      this.loadCollections(),\n      this.loadAllCollections({\n        page: 1,\n        page_size: 1,\n      }),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then(\n        ([\n          _collections,\n          {\n            data: {\n              meta: { count: unfilteredCount },\n            },\n          },\n          { data: namespace },\n          myNamespace,\n        ]) => {\n          this.setState({\n            canSign: canSignNamespace(this.context, myNamespace?.data),\n            group: this.filterGroup(this.state.params.group, namespace.groups),\n            user: this.filterUser(this.state.params.user, namespace.users),\n            namespace: {\n              ...namespace,\n              // transform to use username, don't break when missing\n              users: namespace.users\n                ? namespace.users.map(({ name, object_roles }) => ({\n                    username: name,\n                    object_roles,\n                  }))\n                : [],\n            },\n            showControls: !!myNamespace,\n            unfilteredCount,\n          });\n        },\n      )\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    if (!this.state.showControls) {\n      return null;\n    }\n\n    const { canSign, collections, unfilteredCount } = this.state;\n    const { can_upload_signatures } = this.context.featureFlags;\n    const { ai_deny_index } = this.context.featureFlags;\n    const repository = this.state.params.repository_name || null;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='edit'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      this.hasPerm('galaxy.delete_namespace') &&\n        (unfilteredCount === 0 ? (\n          <DropdownItem\n            key='delete'\n            onClick={() => this.setState({ isOpenNamespaceModal: true })}\n          >{t`Delete namespace`}</DropdownItem>\n        ) : (\n          <DropdownItem\n            isDisabled\n            description={t`Cannot delete non-empty namespace`}\n          >{t`Delete namespace`}</DropdownItem>\n        )),\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign &&\n        !can_upload_signatures &&\n        (repository ? (\n          <DropdownItem\n            key='sign-collections'\n            data-cy='sign-all-collections-button'\n            onClick={() => this.setState({ isOpenSignModal: true })}\n          >\n            {t`Sign all collections in ${repository}`}\n          </DropdownItem>\n        ) : (\n          <DropdownItem\n            key='sign-collections'\n            isDisabled\n            description={t`Please select a repository filter`}\n          >\n            {t`Sign all collections`}\n          </DropdownItem>\n        )),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Ansible Lightspeed settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    return (\n      <div\n        style={{ display: 'flex', alignItems: 'center' }}\n        data-cy='kebab-toggle'\n      >\n        {' '}\n        {collections.length !== 0 && (\n          <Button\n            onClick={() => this.setState({ showImportModal: true })}\n          >{t`Upload collection`}</Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.addAlert({\n        title: warning,\n        variant: 'warning',\n      });\n    }\n\n    const newState = { showImportModal: isOpen };\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb().url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.addAlert({\n                variant: 'danger',\n                title: t`Namespace \"${name}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionVersionSearch) {\n    const { namespace, showControls } = this.state;\n\n    const canUpload = this.hasPerm('galaxy.upload_to_namespace');\n\n    if (!showControls) {\n      return;\n    }\n\n    const deleteFn = (deleteAll) => ({\n      addAlert: (alert) => this.addAlert(alert),\n      collection,\n      openModal: () =>\n        this.setState({\n          deleteCollection: collection,\n          confirmDelete: false,\n          deleteAll,\n        }),\n    });\n\n    return {\n      uploadButton: canUpload && (\n        <Button\n          onClick={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'upload',\n            )\n          }\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n      ),\n      dropdownMenu: (\n        <CollectionDropdown\n          collection={collection}\n          data-cy='collection-kebab'\n          namespace={namespace}\n          onDelete={deleteFn(true)}\n          onDeprecate={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'deprecate',\n            )\n          }\n          onRemove={deleteFn(false)}\n        />\n      ),\n    };\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","url","confirmDelete","context","queueAlert","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","addAlert","i18n","_","description","errorMessage","params","ParamHelper","parseParamString","location","search","routeParams","repo","repository_name","alerts","canSign","collections","deleteAll","deleteCollection","filteredCount","group","user","isDeletionPending","isOpenSignModal","isOpenWisdomModal","showControls","showGroupRemoveModal","showGroupSelectWizard","showImportModal","showRoleRemoveModal","showRoleSelectWizard","unfilteredCount","updateCollection","_createClass","key","value","this","load","setAlerts","prevProps","filterGroup","groups","filterUser","users","username","find","u","g","_ref","_this2","_ref$users","_ref$groups","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","update","_objectSpread","_ref2","_ref2$response","permission","_this$context","hasPermission","is_superuser","_namespace$related_fi","_namespace$related_fi2","related_fields","my_permissions","includes","hasObjectPermission","_deleteCollection$rep","_this3","_this$state","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","formatPath","Paths","namespaceDetail","repositoryUrl","getRepoURL","noData","filterIsSet","updateParams","loadCollections","ignoredParams","canEditOwners","hasPerm","tabParams","repository","deleteFromRepo","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","collection","collection_version","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","style","paddingBottom","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","PartnerHeader","p","pageControls","renderPageControls","HubListToolbar","_extends","count","collectionFilter","featureFlags","Main","EmptyStateNoData","button","Button","onClick","className","CollectionList","itemCount","displaySignatures","display_signatures","collectionControls","renderCollectionControls","ExternalLink","href","ClipboardCopy","isReadOnly","renderResources","AccessTab","showUserRemoveModal","showUserSelectWizard","pulpObjectType","selectRolesMessage","updateProps","prop","addUser","roles","newUser","object_roles","map","_ref3","newUsers","concat","_toConsumableArray","updateRoles","removeUser","addGroup","newGroup","_ref4","newGroups","removeGroup","addUserRole","_ref5","removeUserRole","role","addRole","_ref6","removeRole","urlPrefix","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","pulp_href","action","_this4","c","CollectionAPI","setDeprecation","result","taskId","parsePulpIDFromURL","data","task","waitForTask","is_deprecated","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","sign","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","task_id","error","x","CollectionVersionAPI","list","is_highest","repository_label","_this6","loadAllCollections","getReduced","nonAPIParams","meta","_this7","Promise","all","page","page_size","get","include_related","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_ref7","_ref8","_slicedToArray","myNamespace","canSignNamespace","_ref9","notFound","updateParamsMixin","nonQueryStringParams","_this8","_this$state2","can_upload_signatures","ai_deny_index","dropdownItems","DropdownItem","component","Link","editNamespace","display","alignItems","StatefulDropdown","items","warning","newState","closeAlertMixin","_this9","_this$state3","canUpload","deleteFn","openModal","uploadButton","handleCollectionAction","dropdownMenu","CollectionDropdown","onDelete","onDeprecate","onRemove","contextType","AppContext","withRouter"],"sourceRoot":""}