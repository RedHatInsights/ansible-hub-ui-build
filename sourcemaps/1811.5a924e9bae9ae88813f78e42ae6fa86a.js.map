{"version":3,"file":"js/1811.1afb3ac8c81ec8d13e69.js","mappings":"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","sources":["webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/actions/ansible-repository-collection-version-add.tsx","webpack:///./src/actions/ansible-repository-collection-version-remove.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { getRepoURL } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: msg`Copy CLI configuration`,\n  onClick: async (item, { addAlert }) => {\n    let distribution = null;\n    if (!item.distributions) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`Loading distribution...`,\n        variant: 'info',\n      });\n\n      distribution = (\n        await AnsibleDistributionAPI.list({\n          repository: item.pulp_href,\n        })\n      )?.data?.results?.[0];\n    } else {\n      distribution = item.distributions?.[0];\n    }\n\n    if (!distribution) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`There are no distributions associated with this repository.`,\n        variant: 'danger',\n      });\n      return;\n    }\n\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.base_path}`,\n      '',\n      `[galaxy_server.${distribution.base_path}]`,\n      `url=${getRepoURL(distribution.base_path)}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      description: <pre>{cliConfig}</pre>,\n      id: 'copy-cli-config',\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n    });\n  },\n  disabled: ({ distributions }) => {\n    if (distributions && !distributions.length) {\n      return t`There are no distributions associated with this repository.`;\n    }\n\n    return null;\n  },\n});\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport { Button, DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: MessageDescriptor;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => React.ReactNode | null;\n  disabled: (item, actionContext) => string | null;\n  dropdownItem: (item, actionContext) => React.ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title: i18n._(title),\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={i18n._(title)}>\n          <Button variant={buttonVariant} isDisabled>\n            {i18n._(title)}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={i18n._(title)}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      ) : (\n        <DropdownItem\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: msg`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: msg`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: msg`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: msg`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: msg`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: msg`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: msg`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: {\n        pulpId: id || parsePulpIDFromURL(pulp_href),\n        name,\n        pulp_href,\n      },\n    }),\n  disabled: ({ name }) => {\n    if (Constants.PROTECTED_REPOSITORIES.includes(name)) {\n      return t`Protected repositories cannot be deleted.`;\n    }\n\n    return null;\n  },\n});\n\nasync function deleteRepository(\n  { name, pulp_href, pulpId },\n  { addAlert, setState, query },\n) {\n  const distributionsToDelete = await AnsibleDistributionAPI.list({\n    repository: pulp_href,\n  })\n    .then(({ data: { results } }) => results || [])\n    .catch((e) => {\n      handleHttpError(\n        t`Failed to list distributions, removing only the repository.`,\n        () => null,\n        addAlert,\n      )(e);\n      return [];\n    });\n\n  const deleteRepo = AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => setState({ deleteModalOpen: null }),\n        addAlert,\n      ),\n    );\n\n  const deleteDistribution = ({ name, pulp_href }) => {\n    const distribution_id = parsePulpIDFromURL(pulp_href);\n    return AnsibleDistributionAPI.delete(distribution_id)\n      .then(({ data }) =>\n        addAlert(\n          taskAlert(data.task, t`Removal started for distribution ${name}`),\n        ),\n      )\n      .catch(\n        handleHttpError(\n          t`Failed to remove distribution ${name}`,\n          () => null,\n          addAlert,\n        ),\n      );\n  };\n\n  return Promise.all([\n    deleteRepo,\n    ...distributionsToDelete.map(deleteDistribution),\n  ]).then(() => {\n    setState({ deleteModalOpen: null });\n    query();\n  });\n}\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { msg, t } from '@lingui/macro';\nimport {\n  Button,\n  FormGroup,\n  Modal,\n  Spinner,\n  Switch,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst SyncModal = ({\n  closeAction,\n  syncAction,\n  name,\n}: {\n  closeAction: () => null;\n  syncAction: (syncParams) => Promise<void>;\n  name: string;\n}) => {\n  const [pending, setPending] = useState(false);\n  const [syncParams, setSyncParams] = useState({\n    mirror: true,\n    optimize: true,\n  });\n\n  useEffect(() => {\n    setPending(false);\n    setSyncParams({ mirror: true, optimize: true });\n  }, [name]);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='sync-button' key='sync'>\n          <Button\n            key='sync'\n            onClick={() => {\n              setPending(true);\n              syncAction(syncParams)\n                .then(closeAction)\n                .finally(() => setPending(false));\n            }}\n            variant='primary'\n            isDisabled={pending}\n          >\n            {t`Sync`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='close' onClick={closeAction} variant='link'>\n          {t`Close`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Sync repository \"${name}\"`}\n      variant='medium'\n    >\n      <FormGroup\n        label={t`Mirror`}\n        labelIcon={\n          <HelperText\n            content={t`If selected, all content that is not present in the remote repository will be removed from the local repository; otherwise, sync will add missing content.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.mirror}\n          onChange={(mirror) => setSyncParams({ ...syncParams, mirror })}\n          label={t`Content not present in remote repository will be removed from the local repository`}\n          labelOff={t`Sync will only add missing content`}\n        />\n      </FormGroup>\n      <br />\n      <FormGroup\n        label={t`Optimize`}\n        labelIcon={\n          <HelperText\n            content={t`Only perform the sync if no changes are reported by the remote server. To force a sync to happen, deselect this option.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.optimize}\n          onChange={(optimize) => setSyncParams({ ...syncParams, optimize })}\n          label={t`Only perform the sync if no changes are reported by the remote server.`}\n          labelOff={t`Force a sync to happen.`}\n        />\n      </FormGroup>\n      <br />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: msg`Sync`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.syncModalOpen ? (\n      <SyncModal\n        closeAction={() => setState({ syncModalOpen: null })}\n        syncAction={(syncParams) =>\n          syncRepository(state.syncModalOpen, { addAlert, query }, syncParams)\n        }\n        name={state.syncModalOpen.name}\n      />\n    ) : null,\n  onClick: ({ name, pulp_href }, { setState }) =>\n    setState({\n      syncModalOpen: { name, pulp_href },\n    }),\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    return null;\n  },\n});\n\nfunction syncRepository({ name, pulp_href }, { addAlert, query }, syncParams) {\n  const pulpId = parsePulpIDFromURL(pulp_href);\n  return AnsibleRepositoryAPI.sync(pulpId, syncParams || { mirror: true })\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Sync started for repository \"${name}\".`));\n\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to sync repository \"${name}\"`,\n        () => null,\n        addAlert,\n      ),\n    );\n}\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: msg`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import { msg, plural, t } from '@lingui/macro';\nimport { Button, Checkbox, Modal } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertList, AlertType, DetailList, closeAlert } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport {\n  RepositoriesUtils,\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n} from 'src/utilities';\nimport { Action } from './action';\n\nconst add = (\n  { repositoryHref, repositoryName },\n  collections,\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  const collectionVersionHrefs = collections.map(\n    (c) => c.collection_version.pulp_href,\n  );\n  return AnsibleRepositoryAPI.addContent(pulpId, collectionVersionHrefs)\n    .then(({ data }) => {\n      collections.map(\n        ({ collection_version: { name, namespace, version }, repository }) => {\n          addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repositoryName}\".`,\n            ),\n          );\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }));\n          query({});\n        },\n      );\n    })\n    .catch(\n      handleHttpError(\n        plural(collections.length, {\n          one: `Failed to add collection to repository \"${repositoryName}\".`,\n          other: `Failed to add collections to repository \"${repositoryName}\".`,\n        }),\n        () => setState((ms) => ({ ...ms, addCollectionVersionModal: null })),\n        addAlert,\n      ),\n    );\n};\n\nconst AddCollectionVersionModal = ({\n  addAction,\n  closeAction,\n  sourceRepository,\n}: {\n  addAction: (selected) => void;\n  closeAction: () => void;\n  sourceRepository: AnsibleRepositoryType;\n}) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selected, setSelected] = useState<CollectionVersionSearch[]>([]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    return CollectionVersionAPI.list({\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({});\n\n  const renderTableRow = (item: CollectionVersionSearch, index: number) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const isCollectionInRepo =\n      sourceRepository.pulp_href === repository.pulp_href;\n\n    return (\n      <tr\n        onClick={() =>\n          setSelected(\n            RepositoriesUtils.pushToOrFilterOutCollections(item, selected),\n          )\n        }\n        key={index}\n      >\n        <td>\n          <Checkbox\n            aria-label={`${namespace}.${name} v${version}`}\n            id={`collection-${index}`}\n            isChecked={isCollectionInRepo || selected.includes(item)}\n            name={`collection-${index}`}\n            isDisabled={isCollectionInRepo}\n          />\n        </td>\n        <td>\n          {namespace}.{name} v{version}\n        </td>\n        <td>{description}</td>\n        <td>{repository.name}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() => addAction(selected)}\n          variant='primary'\n          isDisabled={!selected}\n        >\n          {t`Select`}\n        </Button>,\n        <Button key='cancel' onClick={closeAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select a collection`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <DetailList<CollectionVersionSearch>\n          actionContext={{\n            addAlert,\n            state: modalState,\n            setState: setModalState,\n            query,\n            hasPermission: () => {\n              throw 'unused';\n            },\n          }}\n          defaultPageSize={10}\n          defaultSort={'name'}\n          errorTitle={t`Collection versions could not be displayed.`}\n          filterConfig={[\n            {\n              id: 'keywords',\n              title: t`Keywords`,\n            },\n            {\n              id: 'namespace',\n              title: t`Namespace`,\n            },\n            {\n              id: 'repository_name',\n              title: t`Repository`,\n            },\n          ]}\n          noDataDescription={t`Collection versions will appear once a collection is uploaded.`}\n          noDataTitle={t`No collection versions yet`}\n          query={query}\n          renderTableRow={renderTableRow}\n          sortHeaders={[\n            {\n              title: '',\n              type: 'none',\n              id: 'radio',\n            },\n            {\n              title: t`Collection`,\n              type: 'none',\n              id: 'col1',\n            },\n            {\n              title: t`Description`,\n              type: 'none',\n              id: 'col2',\n            },\n            {\n              title: t`Repository`,\n              type: 'none',\n              id: 'col3',\n            },\n          ]}\n          title={t`Collection versions`}\n        />\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionAddAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Add collection`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.addCollectionVersionModal ? (\n      <AddCollectionVersionModal\n        addAction={(collections: CollectionVersionSearch[]) => {\n          add(state.addCollectionVersionModal, collections, {\n            addAlert,\n            setState,\n            query,\n          });\n        }}\n        closeAction={() =>\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }))\n        }\n        sourceRepository={state.repository}\n      />\n    ) : null,\n  onClick: (\n    _item,\n    {\n      state: {\n        repository: { name: repositoryName, pulp_href: repositoryHref },\n      },\n      setState,\n    },\n  ) =>\n    setState((ms) => ({\n      ...ms,\n      addCollectionVersionModal: {\n        repositoryHref,\n        repositoryName,\n      },\n    })),\n});\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst remove = (\n  {\n    collection: { namespace, name, version },\n    collectionVersionHref,\n    repositoryHref,\n    repositoryName,\n  },\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  return AnsibleRepositoryAPI.removeContent(pulpId, collectionVersionHref)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Removal of ${namespace}.${name} v${version} from repository \"${repositoryName}\" started.`,\n        ),\n      );\n      setState({ removeCollectionVersionModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove ${namespace}.${name} v${version} from repository \"${repositoryName}\".`,\n        () => setState({ removeCollectionVersionModal: null }),\n        addAlert,\n      ),\n    );\n};\n\nconst RemoveCollectionVersionModal = ({\n  name,\n  namespace,\n  repositoryName,\n  version,\n  closeAction,\n  deleteAction,\n}: {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  namespace: string;\n  repositoryName: string;\n  version: string;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      isRemove\n      title={t`Remove collection version?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to remove the collection version{' '}\n          <b>\n            {namespace}.{name} v{version}\n          </b>{' '}\n          from the <b>{repositoryName}</b> repository?\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionRemoveAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Remove`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.removeCollectionVersionModal ? (\n      <RemoveCollectionVersionModal\n        closeAction={() => setState({ removeCollectionVersionModal: null })}\n        deleteAction={() =>\n          remove(state.removeCollectionVersionModal, {\n            addAlert,\n            setState,\n            query,\n          })\n        }\n        name={state.removeCollectionVersionModal.collection.name}\n        namespace={state.removeCollectionVersionModal.collection.namespace}\n        repositoryName={state.removeCollectionVersionModal.repositoryName}\n        version={state.removeCollectionVersionModal.collection.version}\n      />\n    ) : null,\n  onClick: (\n    {\n      collection_version: {\n        namespace,\n        name,\n        version,\n        pulp_href: collectionVersionHref,\n      },\n      repository: { name: repositoryName, pulp_href: repositoryHref },\n    },\n    { setState },\n  ) =>\n    setState({\n      removeCollectionVersionModal: {\n        collection: { namespace, name, version },\n        repositoryName,\n        repositoryHref,\n        collectionVersionHref,\n      },\n    }),\n});\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository'); under feature flag\nexport const canViewAnsibleRepositories = ({ user, featureFlags }) =>\n  user && featureFlags?.display_repositories;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["_onClick","Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","i18n","_","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","id","navigate","formatPath","Paths","ansibleRemoteEdit","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","query","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","values","handleHttpError","deleteRemote","_ref2","_ref3","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","ansibleRepositoryCopyAction","_asyncToGenerator","_regeneratorRuntime","_callee","distribution","_yield$AnsibleDistrib","_yield$AnsibleDistrib2","_yield$AnsibleDistrib3","_item$distributions","cliConfig","_context","prev","next","distributions","AnsibleDistributionAPI","list","repository","t1","sent","t0","t2","results","abrupt","concat","base_path","getRepoURL","join","navigator","clipboard","writeText","stop","_x","_x2","apply","arguments","length","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryEdit","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","_deleteRepository","deleteRepository","Constants","PROTECTED_REPOSITORIES","includes","distributionsToDelete","deleteRepo","deleteDistribution","_ref7","e","AnsibleRepositoryAPI","_ref8","_ref9","distribution_id","_ref10","Promise","all","_toConsumableArray","map","ansibleRepositoryEditAction","canEditAnsibleRepository","SyncModal","syncAction","_useState","useState","_useState2","_slicedToArray","pending","setPending","_useState3","mirror","optimize","_useState4","syncParams","setSyncParams","useEffect","Modal","actions","Spinner","size","isOpen","onClose","FormGroup","label","labelIcon","HelperText","Switch","isChecked","onChange","_objectSpread","labelOff","ansibleRepositorySyncAction","canSyncAnsibleRepository","syncModalOpen","sync","syncRepository","_item","hasPermission","remote","last_sync_task","RevertModal","version","cancelAction","revertAction","titleIconVariant","Trans","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","repositoryName","number","revert","isLatest","AddCollectionVersionModal","addAction","sourceRepository","alerts","setAlerts","selected","setSelected","newParams","params","ordering","sort","CollectionVersionAPI","_ref7$data","count","meta","_useState5","_useState6","modalState","setModalState","className","DetailList","alert","defaultPageSize","defaultSort","errorTitle","filterConfig","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","isCollectionInRepo","RepositoriesUtils","pushToOrFilterOutCollections","Checkbox","sortHeaders","type","AlertList","closeAlert","i","ansibleRepositoryCollectionVersionAddAction","addCollectionVersionModal","collections","repositoryHref","collectionVersionHrefs","c","addContent","_ref4$collection_vers","ms","add","_ref9$state$repositor","RemoveCollectionVersionModal","DeleteModal","spinner","isRemove","Text","components","ansibleRepositoryCollectionVersionRemoveAction","removeCollectionVersionModal","_ref$collection","collection","collectionVersionHref","removeContent","remove","_ref6$collection_vers","_ref6$repository","has_model_perms","permission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canViewAnsibleRemotes","canEditAnsibleRemoteAccess","canViewAnsibleRepositories","featureFlags","display_repositories","canEditAnsibleRepositoryAccess"],"sourceRoot":""}