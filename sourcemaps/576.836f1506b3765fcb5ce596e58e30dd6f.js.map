{"version":3,"file":"js/576.2a91038a3caec5c9c87e.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-content.tsx"],"sourcesContent":["import { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collection: CollectionDetailType;\n  alerts?: AlertType[];\n}\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  selectedRepo,\n  setCollection,\n  stateParams,\n}) {\n  CollectionAPI.getCached(\n    matchParams['namespace'],\n    matchParams['collection'],\n    selectedRepo,\n    { ...stateParams, include_related: 'my_permissions' },\n    forceReload,\n  )\n    .then((result) => {\n      return CollectionAPI.list(\n        {\n          name: matchParams['collection'],\n        },\n        selectedRepo,\n      ).then((collections) => {\n        result.deprecated = collections.data.data[0].deprecated;\n        setCollection(result);\n      });\n    })\n    .catch(() => {\n      navigate(formatPath(Paths.notFound));\n    });\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  CollectionContentList,\n  CollectionHeader,\n  LoadingPageWithHeader,\n  Main,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { IBaseCollectionState, loadCollection } from './base';\n\n// renders list of contents in a collection\nclass CollectionContent extends React.Component<\n  RouteProps,\n  IBaseCollectionState\n> {\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      collection: undefined,\n      params: params,\n    };\n  }\n\n  componentDidMount() {\n    this.loadCollection(false);\n  }\n\n  render() {\n    const { collection, params } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Content` },\n    ];\n\n    return (\n      <React.Fragment>\n        <CollectionHeader\n          reload={() => this.loadCollection(true)}\n          collection={collection}\n          params={params}\n          updateParams={(params) =>\n            this.updateParams(params, () => this.loadCollection(true))\n          }\n          breadcrumbs={breadcrumbs}\n          activeTab='contents'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <CollectionContentList\n              contents={collection.latest_version.metadata.contents}\n              collection={collection.name}\n              namespace={collection.namespace.name}\n              params={params}\n              updateParams={(p) => this.updateParams(p)}\n            ></CollectionContentList>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadCollection(forceReload) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      selectedRepo: this.context.selectedRepo,\n      setCollection: (collection) => this.setState({ collection }),\n      stateParams: this.state.params,\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(CollectionContent);\n\nCollectionContent.contextType = AppContext;\n"],"names":["loadCollection","_ref","forceReload","matchParams","navigate","selectedRepo","setCollection","stateParams","CollectionAPI","_objectSpread","include_related","then","result","name","collections","deprecated","data","formatPath","Paths","CollectionContent","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","params","ParamHelper","location","search","state","collection","undefined","_createClass","key","value","this","_this2","_this$state","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","namespace","repo","context","i18n","CollectionHeader","reload","updateParams","activeTab","Main","className","CollectionContentList","contents","latest_version","metadata","p","_this3","routeParams","setState","get","withRouter","contextType","AppContext"],"sourceRoot":""}