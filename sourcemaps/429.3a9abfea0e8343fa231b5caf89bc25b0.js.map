{"version":3,"file":"js/429.56245f6d2b1acd753f51.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Checkbox,\n  DropdownItem,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionFilter,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  Pagination,\n  PartnerHeader,\n  RepoSelector,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoUrl,\n  waitForTask,\n} from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\nimport './namespace-detail.scss';\n\ninterface IState {\n  canSign: boolean;\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n    group?: number;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n  showControls: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  isNamespaceEmpty: boolean;\n  confirmDelete: boolean;\n  isNamespacePending: boolean;\n  alerts: AlertType[];\n  deleteCollection: CollectionListType;\n  isDeletionPending: boolean;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  group: GroupType;\n}\n\ninterface IProps extends RouteProps {\n  selectedRepo: string;\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab', 'group'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.routeParams.namespace;\n\n    this.state = {\n      canSign: false,\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      isNamespaceEmpty: false,\n      confirmDelete: false,\n      isNamespacePending: false,\n      alerts: [],\n      deleteCollection: null,\n      isDeletionPending: false,\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      group: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = ParamHelper.parseParamString(this.props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      params['namespace'] = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params['group'], this.state.namespace.groups),\n      });\n    }\n  }\n\n  filterGroup(groupId, groups) {\n    return groupId ? groups.find(({ id }) => Number(groupId) === id) : null;\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateUpdate }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  render() {\n    const {\n      canSign,\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showControls,\n      showImportModal,\n      warning,\n      updateCollection,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      confirmDelete,\n      isNamespacePending,\n      alerts,\n      deleteCollection,\n      isDeletionPending,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'access', name: t`Access` },\n    ].filter(Boolean);\n\n    const tab = params['tab'] || 'collections';\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access'\n        ? {\n            name: t`Access`,\n            url: params.group\n              ? formatPath(\n                  Paths.namespaceByRepo,\n                  {\n                    repo: this.context.selectedRepo,\n                    namespace: namespace.name,\n                  },\n                  { tab: 'access' },\n                )\n              : null,\n          }\n        : null,\n      tab === 'access' && params.group\n        ? { name: t`Group ${params.group}` }\n        : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoUrl();\n\n    const noData = itemCount === 0 && !filterIsSet(params, ['keywords']);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'view_type',\n    ];\n\n    const { hasPermission } = this.context;\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || hasPermission('galaxy.change_namespace');\n\n    // remove ?group (access tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                selectedRepo: this.context.selectedRepo,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          contextSelector={\n            <RepoSelector\n              path={this.props.routePath}\n              pathParams={{ namespace: namespace.name }}\n              selectedRepo={this.context.selectedRepo}\n            />\n          }\n          filters={\n            tab === 'collections' ? (\n              <div className='hub-toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        ></PartnerHeader>\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      {t`Upload collection`}\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  showControls={this.state.showControls}\n                  repo={this.context.selectedRepo}\n                  renderCollectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                  displaySignatures={\n                    this.context.featureFlags.display_signatures\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <AccessTab\n              showGroupRemoveModal={this.state.showGroupRemoveModal}\n              showGroupSelectWizard={this.state.showGroupSelectWizard}\n              showRoleRemoveModal={this.state.showRoleRemoveModal}\n              showRoleSelectWizard={this.state.showRoleSelectWizard}\n              canEditOwners={canEditOwners}\n              group={this.state.group}\n              groups={namespace.groups}\n              name={namespace.name}\n              pulpObjectType='pulp_ansible/namespaces'\n              selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n              updateProps={(prop) => {\n                this.setState(prop);\n              }}\n              addGroup={(group, roles) => {\n                const { groups, name } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: roles.map(({ name }) => name),\n                };\n                const newGroups = [...groups, newGroup];\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                  stateUpdate: { showGroupSelectWizard: null },\n                });\n              }}\n              removeGroup={(group) => {\n                const { name, groups } = namespace;\n                const newGroups = groups.filter((g) => g !== group);\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                  stateUpdate: { showGroupRemoveModal: null },\n                });\n              }}\n              addRole={(group, roles) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: [\n                    ...group.object_roles,\n                    ...roles.map(({ name }) => name),\n                  ],\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleSelectWizard: null },\n                });\n              }}\n              removeRole={(role, group) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: group.object_roles.filter(\n                    (name) => name !== role,\n                  ),\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleRemoveModal: null },\n                });\n              }}\n              urlPrefix={formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => {\n              this.signAllCertificates(namespace);\n            }}\n            onCancel={() => {\n              this.setState({ isOpenSignModal: false });\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find((x) => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${collection.name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(\n          collection,\n          !collection.deprecated,\n          this.context.selectedRepo,\n        )\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.deprecated\n                ? t`Collection \"${collection.name}\" has been successfully undeprecated.`\n                : t`Collection \"${collection.name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.load();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  }\n\n  private loadCollections() {\n    CollectionAPI.list(\n      {\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      },\n      this.context.selectedRepo,\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        },\n        this.context.selectedRepo,\n      ),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // TODO this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then((val) => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n          canSign: canSignNamespace(this.context, val[2]?.data),\n          group: this.filterGroup(\n            this.state.params['group'],\n            val[1].data['groups'],\n          ),\n        });\n\n        this.loadAllRepos(val[0].data.meta.count);\n      })\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private loadAllRepos(currentRepoCount) {\n    // get collections in namespace from each repo\n    // except the one we already have\n    const repoPromises = Object.keys(Constants.REPOSITORYNAMES)\n      .filter((repo) => repo !== this.context.selectedRepo)\n      .map((repo) =>\n        CollectionAPI.list(\n          { namespace: this.props.routeParams.namespace },\n          repo,\n        ),\n      );\n\n    Promise.all(repoPromises)\n      .then((results) =>\n        this.setState({\n          isNamespaceEmpty:\n            results.every((val) => val.data.meta.count === 0) &&\n            currentRepoCount === 0,\n        }),\n      )\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Collection repositories could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections } = this.state;\n    const { can_upload_signatures } = this.context.featureFlags;\n    const { ai_deny_index } = this.context.featureFlags;\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='1'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      hasPermission('galaxy.delete_namespace') && (\n        <React.Fragment key={'2'}>\n          {this.state.isNamespaceEmpty ? (\n            <DropdownItem\n              onClick={() => this.setState({ isOpenNamespaceModal: true })}\n            >\n              {t`Delete namespace`}\n            </DropdownItem>\n          ) : (\n            <Tooltip\n              isVisible={false}\n              content={\n                <Trans>\n                  Cannot delete namespace until <br />\n                  collections&apos; dependencies have <br />\n                  been deleted\n                </Trans>\n              }\n              position='left'\n            >\n              <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n            </Tooltip>\n          )}\n        </React.Fragment>\n      ),\n      <DropdownItem\n        key='3'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-collections'\n          data-cy='sign-all-collections-button'\n          onClick={() => this.setState({ isOpenSignModal: true })}\n        >\n          {t`Sign all collections`}\n        </DropdownItem>\n      ),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Wisdom settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls'></div>;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            {t`Upload collection`}\n          </Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb.url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    const { hasPermission } = this.context;\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.handleCollectionAction(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection: hasPermission('ansible.delete_collection'),\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                }),\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(collection.id, 'deprecate')\n              }\n              key='deprecate'\n            >\n              {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      </div>\n    );\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","confirmDelete","context","queueAlert","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","alerts","concat","_toConsumableArray","i18n","description","errorMessage","params","ParamHelper","location","search","routeParams","canSign","collections","itemCount","showImportModal","warning","updateCollection","showControls","isOpenSignModal","isOpenWisdomModal","isNamespaceEmpty","deleteCollection","isDeletionPending","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","group","_createClass","key","value","this","load","setAlerts","prevProps","filterGroup","groups","groupId","find","_ref","Number","_ref2","_this2","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","_objectSpread","addAlert","_ref3","_ref3$response","_this$state$namespace","_this3","_this$state","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","url","formatPath","Paths","repo","selectedRepo","repositoryUrl","getRepoUrl","noData","filterIsSet","updateParams","loadCollections","ignoredParams","hasPermission","canEditOwners","related_fields","my_permissions","includes","tabParams","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","setOpen","warn","toggleImportModal","collection","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","className","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","Alert","actionClose","AlertActionCloseButton","onClose","PartnerHeader","p","pageControls","renderPageControls","contextSelector","RepoSelector","path","routePath","pathParams","filters","CollectionFilter","Pagination","count","isTop","Main","EmptyStateNoData","button","Button","onClick","CollectionList","renderCollectionControls","displaySignatures","featureFlags","display_signatures","href","target","rel","ExternalLinkAltIcon","ClipboardCopy","isReadOnly","renderResources","AccessTab","pulpObjectType","selectRolesMessage","updateProps","prop","addGroup","roles","newGroup","object_roles","map","_ref4","newGroups","updateGroups","removeGroup","g","addRole","_ref5","removeRole","role","urlPrefix","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","action","_this4","x","CollectionAPI","deprecated","result","taskId","parsePulpIDFromURL","data","task","waitForTask","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","distro_base_path","task_id","error","_this6","nonAPIParams","meta","_this7","Promise","all","include_related","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_val$","canSignNamespace","loadAllRepos","currentRepoCount","_this8","repoPromises","Object","keys","Constants","results","every","err","_err$response","get","nonQueryStringParams","_this9","_this$state2","can_upload_signatures","ai_deny_index","dropdownItems","DropdownItem","component","Link","Tooltip","isVisible","content","position","StatefulDropdown","items","newState","closeAlertMixin","_this10","style","display","alignItems","handleCollectionAction","canDeleteCollection","noDependencies","ariaLabel","contextType","AppContext","withRouter"],"sourceRoot":""}