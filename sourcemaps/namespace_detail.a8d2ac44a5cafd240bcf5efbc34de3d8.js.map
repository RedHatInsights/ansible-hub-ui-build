{"version":3,"file":"js/namespace_detail.1664877480585.b800044e797a2275e9df.js","mappings":"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","sources":["webpack:///./src/containers/edit-namespace/edit-namespace.tsx","webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\nimport { Form, ActionGroup, Button, Spinner } from '@patternfly/react-core';\n\nimport { MyNamespaceAPI, NamespaceLinkType, NamespaceType } from 'src/api';\nimport {\n  PartnerHeader,\n  NamespaceForm,\n  ResourcesForm,\n  AlertList,\n  closeAlertMixin,\n  AlertType,\n  Main,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport {\n  ErrorMessagesType,\n  ParamHelper,\n  mapErrorMessages,\n  errorMessage,\n} from 'src/utilities';\n\ninterface IState {\n  namespace: NamespaceType;\n  newLinkName: string;\n  newLinkURL: string;\n  errorMessages: ErrorMessagesType;\n  saving: boolean;\n  loading: boolean;\n  redirect: string;\n  unsavedData: boolean;\n  alerts: AlertType[];\n  params: {\n    tab?: string;\n  };\n  unauthorized: boolean;\n}\n\nclass EditNamespace extends React.Component<RouteComponentProps, IState> {\n  queryParams: URLSearchParams;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    if (!params['tab']) {\n      params['tab'] = 'edit-details';\n    }\n\n    this.state = {\n      loading: false,\n      alerts: [],\n      namespace: null,\n      newLinkURL: '',\n      newLinkName: '',\n      errorMessages: {},\n      saving: false,\n      redirect: null,\n      unsavedData: false,\n      params: params,\n      unauthorized: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, () => this.loadNamespace());\n  }\n\n  render() {\n    const {\n      namespace,\n      errorMessages,\n      saving,\n      redirect,\n      params,\n      unauthorized,\n      loading,\n    } = this.state;\n\n    const tabs = [\n      { id: 'edit-details', name: t`Edit details` },\n      { id: 'edit-resources', name: t`Edit resources` },\n    ];\n\n    if (redirect) {\n      return <Redirect push to={redirect} />;\n    }\n\n    if (loading) {\n      return <LoadingPageSpinner />;\n    }\n\n    if (!namespace) {\n      return null;\n    }\n\n    const updateNamespace = (namespace) =>\n      this.setState({\n        namespace,\n        unsavedData: true,\n      });\n\n    return (\n      <React.Fragment>\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[\n            namespaceBreadcrumb,\n            {\n              name: namespace.name,\n              url: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              }),\n            },\n            { name: t`Edit` },\n          ]}\n          tabs={tabs}\n          params={params}\n          updateParams={(p) => this.updateParams(p)}\n        ></PartnerHeader>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        {unauthorized ? (\n          <EmptyStateUnauthorized />\n        ) : (\n          <Main>\n            <section className='body'>\n              {params.tab === 'edit-details' ? (\n                <NamespaceForm\n                  errorMessages={errorMessages}\n                  namespace={namespace}\n                  updateNamespace={updateNamespace}\n                />\n              ) : null}\n              {params.tab === 'edit-resources' ? (\n                <ResourcesForm\n                  namespace={namespace}\n                  updateNamespace={updateNamespace}\n                />\n              ) : null}\n              <Form>\n                <ActionGroup>\n                  <Button\n                    isDisabled={this.isSaveDisabled()}\n                    variant='primary'\n                    onClick={() => this.saveNamespace()}\n                  >\n                    {t`Save`}\n                  </Button>\n                  <Button variant='secondary' onClick={() => this.cancel()}>\n                    {t`Cancel`}\n                  </Button>\n\n                  {saving ? <Spinner></Spinner> : null}\n                </ActionGroup>\n                {this.state.unsavedData ? (\n                  <div\n                    style={{ color: 'red' }}\n                  >{t`You have unsaved changes`}</div>\n                ) : null}\n              </Form>\n            </section>\n          </Main>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private isSaveDisabled() {\n    const namespace = this.state.namespace;\n    return namespace.links.some(\n      (link) =>\n        NamespaceForm.validateName(link).validated == 'error' ||\n        NamespaceForm.validateUrl(link).validated == 'error',\n    );\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private loadNamespace() {\n    MyNamespaceAPI.get(this.props.match.params['namespace'])\n      .then((response) => {\n        // Add an empty link to the end of the links array to create an empty field\n        // on the link edit form for adding new links\n        const emptyLink: NamespaceLinkType = { name: '', url: '' };\n        response.data.links.push(emptyLink);\n        this.setState({ loading: false, namespace: response.data });\n      })\n      .catch(() => {\n        this.setState({ unauthorized: true, loading: false });\n      });\n  }\n\n  private saveNamespace() {\n    this.setState({ saving: true }, () => {\n      const namespace = { ...this.state.namespace };\n      const setLinks: NamespaceLinkType[] = [];\n\n      // remove any empty links from the list before saving\n      for (const link of namespace.links) {\n        if (link.url !== '' || link.name !== '') {\n          setLinks.push(link);\n        }\n      }\n\n      namespace.links = setLinks;\n\n      MyNamespaceAPI.update(this.state.namespace.name, namespace)\n        .then((result) => {\n          this.setState(\n            {\n              namespace: result.data,\n              errorMessages: {},\n              saving: false,\n              unsavedData: false,\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: this.state.namespace.name,\n              }),\n            },\n            () =>\n              this.context.setAlerts([\n                ...this.context.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Saved changes to namespace &quot;\n                      {this.state.namespace.name}&quot;.\n                    </Trans>\n                  ),\n                },\n              ]),\n          );\n        })\n        .catch((error) => {\n          const result = error.response;\n          if (result.status === 400) {\n            this.setState({\n              errorMessages: mapErrorMessages(error),\n              saving: false,\n            });\n          } else if (result.status === 404) {\n            this.setState({\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: t`Changes to namespace \"${this.state.namespace.name}\" could not be saved.`,\n                description: errorMessage(result.status, result.statusText),\n              }),\n              saving: false,\n            });\n          }\n        });\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private cancel() {\n    this.setState({\n      redirect: formatPath(Paths.namespaceByRepo, {\n        repo: this.context.selectedRepo,\n        namespace: this.state.namespace.name,\n      }),\n    });\n  }\n}\n\nEditNamespace.contextType = AppContext;\n\nexport default withRouter(EditNamespace);\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-detail.scss';\n\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\n\nimport {\n  withRouter,\n  RouteComponentProps,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  DropdownItem,\n  Tooltip,\n  Text,\n  Checkbox,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport ReactMarkdown from 'react-markdown';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  NamespaceAPI,\n  MyNamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\n\nimport {\n  CollectionFilter,\n  CollectionList,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  OwnersTab,\n  Pagination,\n  PartnerHeader,\n  EmptyStateNoData,\n  RepoSelector,\n  StatefulDropdown,\n  ClipboardCopy,\n  AlertList,\n  closeAlertMixin,\n  DeleteModal,\n  AlertType,\n  SignAllCertificatesModal,\n  DeleteCollectionModal,\n} from 'src/components';\n\nimport {\n  ParamHelper,\n  getRepoUrl,\n  filterIsSet,\n  errorMessage,\n  waitForTask,\n  canSign as canSignNS,\n  DeleteCollectionUtils,\n} from 'src/utilities';\n\nimport { Constants } from 'src/constants';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IState {\n  canSign: boolean;\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n    group?: number;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n  showControls: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isNamespaceEmpty: boolean;\n  confirmDelete: boolean;\n  isNamespacePending: boolean;\n  alerts: AlertType[];\n  deleteCollection: CollectionListType;\n  isDeletionPending: boolean;\n}\n\ninterface IProps extends RouteComponentProps {\n  selectedRepo: string;\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab', 'group'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.match.params['namespace'];\n\n    this.state = {\n      canSign: false,\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isNamespaceEmpty: false,\n      confirmDelete: false,\n      isNamespacePending: false,\n      alerts: [],\n      deleteCollection: null,\n      isDeletionPending: false,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: this.context.alerts || [] });\n  }\n\n  componentWillUnmount() {\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = ParamHelper.parseParamString(this.props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      params['namespace'] = this.props.match.params['namespace'];\n      this.setState({ params });\n    }\n  }\n\n  render() {\n    const {\n      canSign,\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showControls,\n      showImportModal,\n      warning,\n      updateCollection,\n      isOpenNamespaceModal,\n      confirmDelete,\n      isNamespacePending,\n      alerts,\n      deleteCollection,\n      isDeletionPending,\n    } = this.state;\n\n    if (redirect) {\n      return <Redirect push to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'owners', name: t`Namespace owners` },\n    ].filter(Boolean);\n\n    const tab = params['tab'] || 'collections';\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        name: namespace.name,\n        url:\n          tab === 'owners'\n            ? formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'owners'\n        ? {\n            name: t`Namespace owners`,\n            url: params.group\n              ? formatPath(\n                  Paths.namespaceByRepo,\n                  {\n                    repo: this.context.selectedRepo,\n                    namespace: namespace.name,\n                  },\n                  { tab: 'owners' },\n                )\n              : null,\n          }\n        : null,\n      tab === 'owners' && params.group\n        ? { name: t`Group ${params.group}` }\n        : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoUrl('inbound-' + namespace.name);\n\n    const noData = itemCount === 0 && !filterIsSet(params, ['keywords']);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'view_type',\n    ];\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || this.context.user.model_permissions.change_namespace;\n\n    // remove ?group (owners tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                selectedRepo: this.context.selectedRepo,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={this.props.match.path as Paths} // Paths.namespaceByRepo or Paths.myCollectionsByRepo\n              pathParams={{ namespace: namespace.name }}\n            />\n          }\n          filters={\n            tab === 'collections' ? (\n              <div className='hub-toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        ></PartnerHeader>\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      {t`Upload collection`}\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  showControls={this.state.showControls}\n                  repo={this.context.selectedRepo}\n                  renderCollectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'owners' ? (\n            <OwnersTab\n              addAlert={(alert: AlertType) =>\n                this.setState({\n                  alerts: [...this.state.alerts, alert],\n                })\n              }\n              canEditOwners={canEditOwners}\n              groupId={params.group}\n              groups={namespace.groups}\n              name={namespace.name}\n              pulpObjectType='pulp_ansible/namespaces'\n              reload={() => this.load()}\n              selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n              updateGroups={(groups) =>\n                MyNamespaceAPI.update(namespace.name, {\n                  ...namespace,\n                  groups,\n                })\n              }\n              urlPrefix={formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => {\n              this.signAllCertificates(namespace);\n            }}\n            onCancel={() => {\n              this.setState({ isOpenSignModal: false });\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find((x) => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${collection.name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(\n          collection,\n          !collection.deprecated,\n          this.context.selectedRepo,\n        )\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.deprecated\n                ? t`Collection \"${collection.name}\" has been successfully undeprecated.`\n                : t`Collection \"${collection.name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.load();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  }\n\n  private loadCollections() {\n    CollectionAPI.list(\n      {\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      },\n      this.context.selectedRepo,\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        },\n        this.context.selectedRepo,\n      ),\n      NamespaceAPI.get(this.props.match.params['namespace'], {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.match.params['namespace'], {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // TODO this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then((val) => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n          canSign: canSignNS(this.context, val[2]?.data),\n        });\n\n        this.loadAllRepos(val[0].data.meta.count);\n      })\n      .catch(() => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private loadAllRepos(currentRepoCount) {\n    // get collections in namespace from each repo\n    // except the one we already have\n    const repoPromises = Object.keys(Constants.REPOSITORYNAMES)\n      .filter((repo) => repo !== this.context.selectedRepo)\n      .map((repo) =>\n        CollectionAPI.list(\n          { namespace: this.props.match.params['namespace'] },\n          repo,\n        ),\n      );\n\n    Promise.all(repoPromises)\n      .then((results) =>\n        this.setState({\n          isNamespaceEmpty:\n            results.every((val) => val.data.meta.count === 0) &&\n            currentRepoCount === 0,\n        }),\n      )\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Collection repositories could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections } = this.state;\n    const { can_upload_signatures } = this.context?.featureFlags || {};\n\n    const dropdownItems = [\n      <DropdownItem\n        key='1'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      this.context.user.model_permissions.delete_namespace && (\n        <React.Fragment key={'2'}>\n          {this.state.isNamespaceEmpty ? (\n            <DropdownItem\n              onClick={() => this.setState({ isOpenNamespaceModal: true })}\n            >\n              {t`Delete namespace`}\n            </DropdownItem>\n          ) : (\n            <Tooltip\n              isVisible={false}\n              content={\n                <Trans>\n                  Cannot delete namespace until <br />\n                  collections&apos; dependencies have <br />\n                  been deleted\n                </Trans>\n              }\n              position='left'\n            >\n              <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n            </Tooltip>\n          )}\n        </React.Fragment>\n      ),\n      <DropdownItem\n        key='3'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-collections'\n          data-cy='sign-all-collections-button'\n          onClick={() => this.setState({ isOpenSignModal: true })}\n        >\n          {t`Sign all collections`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls'></div>;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            {t`Upload collection`}\n          </Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: formatPath(namespaceBreadcrumb.url, {}),\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.setAlerts([\n            ...this.context.alerts,\n            {\n              variant: 'success',\n              title: (\n                <Trans>\n                  Namespace &quot;{name}&quot; has been successfully deleted.\n                </Trans>\n              ),\n            },\n          ]);\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.handleCollectionAction(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection:\n                this.context.user.model_permissions.delete_collection,\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                }),\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(collection.id, 'deprecate')\n              }\n              key='deprecate'\n            >\n              {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      </div>\n    );\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["EditNamespace","props","params","ParamHelper","location","search","state","loading","alerts","namespace","newLinkURL","newLinkName","errorMessages","saving","redirect","unsavedData","unauthorized","this","setState","loadNamespace","tabs","id","name","Redirect","push","to","updateNamespace","breadcrumbs","namespaceBreadcrumb","url","formatPath","Paths","repo","context","selectedRepo","updateParams","p","closeAlert","i","className","tab","Form","ActionGroup","Button","isDisabled","isSaveDisabled","variant","onClick","saveNamespace","cancel","Spinner","style","color","links","some","link","NamespaceForm","validated","MyNamespaceAPI","match","then","response","data","setLinks","result","setAlerts","title","error","status","mapErrorMessages","concat","description","errorMessage","statusText","closeAlertMixin","React","contextType","AppContext","withRouter","NamespaceDetail","isNamespacePending","NamespaceAPI","confirmDelete","e","isOpenNamespaceModal","canSign","collections","itemCount","showImportModal","warning","updateCollection","showControls","isOpenSignModal","isNamespaceEmpty","deleteCollection","isDeletionPending","load","prevProps","resources","filter","Boolean","group","repositoryUrl","getRepoUrl","noData","filterIsSet","loadCollections","ignoredParams","canEditOwners","related_fields","my_permissions","includes","user","model_permissions","change_namespace","tabParams","isOpen","onUploadSuccess","setOpen","warn","toggleImportModal","collection","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","addAlert","alert","spinner","closeModal","deleteNamespace","Text","Checkbox","isChecked","onChange","val","label","Alert","actionClose","AlertActionCloseButton","onClose","pageControls","renderPageControls","contextSelector","path","pathParams","filters","count","isTop","button","renderCollectionControls","href","target","rel","isReadOnly","renderResources","groupId","groups","pulpObjectType","reload","selectRolesMessage","updateGroups","urlPrefix","onSubmit","signAllCertificates","onCancel","action","find","x","CollectionAPI","deprecated","taskId","parsePulpIDFromURL","task","waitForTask","errorAlert","SignCollectionAPI","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","distro_base_path","task_id","nonAPIParams","meta","Promise","all","include_related","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","canSignNS","loadAllRepos","currentRepoCount","repoPromises","Object","keys","Constants","map","results","every","err","nonQueryStringParams","can_upload_signatures","featureFlags","dropdownItems","DropdownItem","key","component","Link","delete_namespace","Tooltip","isVisible","content","position","length","items","newState","display","alignItems","handleCollectionAction","canDeleteCollection","delete_collection","noDependencies","ariaLabel"],"sourceRoot":""}