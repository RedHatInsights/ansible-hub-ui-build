{"version":3,"file":"js/140.396954700d2b08436605.js","mappings":"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","sources":["webpack:///./src/containers/search/search.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { Button, DataList, DropdownItem, Switch } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  MyNamespaceAPI,\n  MySyncListAPI,\n  SyncListType,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  CardListSwitcher,\n  CollectionCard,\n  CollectionFilter,\n  CollectionListItem,\n  DeleteCollectionModal,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageSpinner,\n  Pagination,\n  RepoSelector,\n  StatefulDropdown,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './search.scss';\n\ninterface IState {\n  collections: CollectionListType[];\n  numberOfResults: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string[];\n    view_type?: string;\n  };\n  loading: boolean;\n  synclist: SyncListType;\n  alerts: AlertType[];\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  redirect: string;\n  noDependencies: boolean;\n  deleteCollection: CollectionListType;\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\nclass Search extends React.Component<RouteProps, IState> {\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = Constants.CARD_DEFAULT_PAGE_SIZE;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem(\n        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n      );\n    }\n\n    this.state = {\n      collections: [],\n      params: params,\n      numberOfResults: 0,\n      loading: true,\n      synclist: undefined,\n      alerts: [],\n      updateCollection: null,\n      showImportModal: false,\n      redirect: null,\n      noDependencies: false,\n      deleteCollection: null,\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  private load() {\n    this.queryCollections();\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      this.getSynclist();\n    }\n  }\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />;\n    }\n\n    const {\n      loading,\n      collections,\n      params,\n      numberOfResults,\n      showImportModal,\n      updateCollection,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n    } = this.state;\n    const noData =\n      collections.length === 0 &&\n      !filterIsSet(params, ['keywords', 'tags', 'sign_state']);\n\n    const updateParams = (p) =>\n      this.updateParams(p, () => this.queryCollections());\n\n    return (\n      <div className='search-page'>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                selectedRepo: this.context.selectedRepo,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        <BaseHeader\n          className='header'\n          title={t`Collections`}\n          contextSelector={\n            <RepoSelector\n              path={Paths.searchByRepo}\n              selectedRepo={this.context.selectedRepo}\n            />\n          }\n        >\n          {!noData && (\n            <div className='hub-toolbar-wrapper'>\n              <div className='toolbar'>\n                <CollectionFilter\n                  ignoredParams={['page', 'page_size', 'sort', 'view_type']}\n                  params={params}\n                  updateParams={updateParams}\n                />\n\n                <div className='hub-pagination-container'>\n                  <div className='card-list-switcher'>\n                    <CardListSwitcher\n                      size='sm'\n                      params={params}\n                      updateParams={(p) =>\n                        this.updateParams(p, () =>\n                          // Note, we have to use this.state.params instead\n                          // of params in the callback because the callback\n                          // executes before the page can re-run render\n                          // which means params doesn't contain the most\n                          // up to date state\n                          localStorage.setItem(\n                            Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n                            this.state.params.view_type,\n                          ),\n                        )\n                      }\n                    />\n                  </div>\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={numberOfResults}\n                    perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                    isTop\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        {loading ? (\n          <LoadingPageSpinner />\n        ) : noData ? (\n          <EmptyStateNoData\n            title={t`No collections yet`}\n            description={t`Collections will appear once uploaded`}\n          />\n        ) : (\n          <React.Fragment>\n            <section className='collection-container'>\n              {this.renderCollections(collections, params, updateParams)}\n            </section>\n            <section className='footer'>\n              <Pagination\n                params={params}\n                updateParams={(p) =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                count={numberOfResults}\n              />\n            </section>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private renderCollections(collections, params, updateParams) {\n    if (collections.length === 0) {\n      return (\n        <EmptyStateFilter\n          clearAllFilters={() => {\n            ParamHelper.clearAllFilters({\n              params,\n              ignoredParams: ['page', 'page_size', 'sort', 'view_type'],\n              updateParams,\n            });\n          }}\n        />\n      );\n    }\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections);\n    }\n  }\n\n  private renderCards(collections) {\n    return (\n      <div className='hub-cards'>\n        {collections.map((c) => {\n          return (\n            <CollectionCard\n              className='card'\n              key={c.id}\n              {...c}\n              footer={this.renderSyncToogle(c.name, c.namespace.name)}\n              repo={this.context.selectedRepo}\n              menu={this.renderMenu(false, c)}\n              displaySignatures={this.context.featureFlags.display_signatures}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  private handleControlClick(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          this.load();\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private renderMenu(list, collection) {\n    const { hasPermission } = this.context;\n    const menuItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies: null,\n        onClick: () =>\n          DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n            addAlert: (alert) => this.addAlert(alert),\n            setState: (state) => this.setState(state),\n            collection,\n          }),\n      }),\n      <DropdownItem\n        onClick={() => this.handleControlClick(collection)}\n        key='deprecate'\n      >\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n    ];\n\n    if (!list) {\n      menuItems.push(\n        <DropdownItem\n          onClick={() => this.checkUploadPrivilleges(collection)}\n          key='upload new version'\n        >\n          {t`Upload new version`}\n        </DropdownItem>,\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {list && (\n          <Button\n            onClick={() => this.checkUploadPrivilleges(collection)}\n            variant='secondary'\n          >\n            {t`Upload new version`}\n          </Button>\n        )}\n        <StatefulDropdown\n          items={menuItems.filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      </React.Fragment>\n    );\n  }\n\n  private renderSyncToogle(name: string, namespace: string): React.ReactNode {\n    const { synclist } = this.state;\n\n    if (!synclist) {\n      return null;\n    }\n\n    return (\n      <Switch\n        id={namespace + '.' + name}\n        className='sync-toggle'\n        label={t`Sync`}\n        isChecked={this.isCollectionSynced(name, namespace)}\n        onChange={() => this.toggleCollectionSync(name, namespace)}\n      />\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private toggleCollectionSync(name: string, namespace: string) {\n    const synclist = { ...this.state.synclist };\n\n    const colIndex = synclist.collections.findIndex(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    if (colIndex < 0) {\n      synclist.collections.push({ name: name, namespace: namespace });\n    } else {\n      synclist.collections.splice(colIndex, 1);\n    }\n\n    MySyncListAPI.update(synclist.id, synclist).then((response) => {\n      this.setState({ synclist: response.data });\n      MySyncListAPI.curate(synclist.id).then(() => null);\n    });\n  }\n\n  private isCollectionSynced(name: string, namespace: string): boolean {\n    const { synclist } = this.state;\n    const found = synclist.collections.find(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    if (synclist.policy === 'include') {\n      return !(found === undefined);\n    } else {\n      return found === undefined;\n    }\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='hub-list'>\n          <DataList className='data-list' aria-label={t`List of Collections`}>\n            {collections.map((c) => (\n              <CollectionListItem\n                showNamespace={true}\n                key={c.id}\n                {...c}\n                controls={\n                  <>\n                    {this.renderSyncToogle(c.name, c.namespace.name)}\n                    {this.renderMenu(true, c)}\n                  </>\n                }\n                repo={this.context.selectedRepo}\n                displaySignatures={this.context.featureFlags.display_signatures}\n              />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private getSynclist() {\n    MySyncListAPI.list().then((result) => {\n      // ignore results if more than 1 is returned\n      // TODO: should we throw an error for this or just ignore it?\n      if (result.data.meta.count === 1) {\n        this.setState({ synclist: result.data.data[0] });\n      } else {\n        console.error(\n          `my-synclist returned ${result.data.meta.count} synclists`,\n        );\n      }\n    });\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, ['view_type']),\n          deprecated: false,\n        },\n        this.context.selectedRepo,\n      ).then((result) => {\n        this.setState({\n          collections: result.data.data,\n          numberOfResults: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(Search);\n\nSearch.contextType = AppContext;\n"],"names":["Search","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","params","ParamHelper","location","search","Constants","localStorage","getItem","state","collections","numberOfResults","loading","synclist","undefined","alerts","updateCollection","showImportModal","redirect","noDependencies","deleteCollection","confirmDelete","isDeletionPending","_createClass","key","value","this","load","queryCollections","DEPLOYMENT_MODE","getSynclist","alert","setState","concat","_toConsumableArray","get","closeAlertMixin","_this2","React","Navigate","to","_this$state","noData","length","filterIsSet","updateParams","p","className","AlertList","closeAlert","i","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","collection","selectedRepo","context","addAlert","ImportModal","isOpen","onUploadSuccess","formatPath","Paths","namespace","name","setOpen","warn","toggleImportModal","BaseHeader","title","i18n","contextSelector","RepoSelector","path","CollectionFilter","ignoredParams","CardListSwitcher","size","setItem","view_type","Pagination","count","perPageOptions","isTop","LoadingPageSpinner","EmptyStateNoData","description","renderCollections","warning","variant","EmptyStateFilter","clearAllFilters","renderList","renderCards","_this3","map","c","CollectionCard","_extends","id","footer","renderSyncToogle","repo","menu","renderMenu","displaySignatures","featureFlags","display_signatures","_this4","CollectionAPI","deprecated","then","res","taskId","parsePulpIDFromURL","data","task","waitForTask","err","_err$response","response","status","statusText","errorMessage","list","_this5","hasPermission","menuItems","canDeleteCollection","onClick","DropdownItem","handleControlClick","push","checkUploadPrivilleges","Button","StatefulDropdown","items","filter","Boolean","ariaLabel","_this6","Switch","label","isChecked","isCollectionSynced","onChange","toggleCollectionSync","_this7","MyNamespaceAPI","include_related","related_fields","my_permissions","includes","_this8","_objectSpread","colIndex","findIndex","el","splice","MySyncListAPI","found","find","policy","_this9","DataList","CollectionListItem","showNamespace","controls","_this10","result","meta","console","error","_this11","withRouter","contextType","AppContext"],"sourceRoot":""}