{"version":3,"file":"js/8118.84a58c893810963865ed.js","mappings":"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","sources":["webpack:///./src/containers/ansible-repository/tab-access.tsx","webpack:///./src/containers/ansible-repository/tab-collection-versions.tsx","webpack:///./src/containers/ansible-repository/tab-details.tsx","webpack:///./src/containers/ansible-repository/tab-repository-versions.tsx","webpack:///./src/containers/ansible-repository/detail.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  GroupAPI,\n  GroupType,\n  RoleType,\n  UserAPI,\n} from 'src/api';\nimport { AccessTab } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepositoryAccess } from 'src/permissions';\nimport { assignRoles, errorMessage, parsePulpIDFromURL } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    featureFlags;\n    hasPermission;\n    state: { params };\n    user;\n  };\n}\n\nexport const RepositoryAccessTab = ({\n  item,\n  actionContext: {\n    addAlert,\n    featureFlags,\n    hasPermission,\n    state: { params },\n    user,\n  },\n}: TabProps) => {\n  const id = item?.pulp_href && parsePulpIDFromURL(item.pulp_href);\n  const [name, setName] = useState<string>(item?.name);\n  const [groups, setGroups] = useState<GroupType[]>(null); // loading\n  const [users, setUsers] = useState<UserType[]>(null); // loading\n  const [canEditOwners, setCanEditOwners] = useState<boolean>(false);\n  const [selectedGroup, setSelectedGroup] = useState<GroupType>(null);\n  const [selectedUser, setSelectedUser] = useState<UserType>(null);\n  const [showUserRemoveModal, setShowUserRemoveModal] =\n    useState<UserType>(null);\n  const [showUserSelectWizard, setShowUserSelectWizard] = useState<{\n    user?: UserType;\n    roles?: RoleType[];\n  }>(null);\n  const [showGroupRemoveModal, setShowGroupRemoveModal] =\n    useState<GroupType>(null);\n  const [showGroupSelectWizard, setShowGroupSelectWizard] = useState<{\n    group?: GroupType;\n    roles?: RoleType[];\n  }>(null);\n  const [showRoleRemoveModal, setShowRoleRemoveModal] = useState<string>(null);\n  const [showRoleSelectWizard, setShowRoleSelectWizard] = useState<{\n    roles?: RoleType[];\n  }>(null);\n\n  const query = () => {\n    setUsers(null);\n    setGroups(null);\n\n    AnsibleRepositoryAPI.myPermissions(id)\n      .then(({ data: { permissions } }) => {\n        setCanEditOwners(\n          canEditAnsibleRepositoryAccess({\n            hasPermission,\n            hasObjectPermission: (p: string): boolean =>\n              permissions.includes(p),\n            user,\n            featureFlags,\n          }),\n        );\n        // TODO handle pagination\n        AnsibleRepositoryAPI.listRoles(id, { page_size: 100 })\n          .then(({ data: { roles } }) => {\n            const { users, groups } = assignRoles(roles);\n\n            setName(name);\n            setUsers(users as UserType[]);\n            setGroups(groups as GroupType[]);\n          })\n          .catch(() => {\n            setUsers([]);\n            setGroups([]);\n          });\n      })\n      .catch(() => {\n        setUsers([]);\n        setGroups([]);\n        setCanEditOwners(false);\n      });\n  };\n\n  const updateRoles = ({ roles, alertSuccess, alertFailure, stateUpdate }) => {\n    Promise.all(roles)\n      .then(() => {\n        addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        query();\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        updateProps(stateUpdate);\n      });\n  };\n\n  const addUser = (user, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        users: [user.username],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`User \"${user.username}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" could not be added to \"${name}\".`,\n      stateUpdate: { showUserSelectWizard: null },\n    });\n  };\n\n  const removeUser = (user) => {\n    const roles = user.object_roles.map((role) =>\n      AnsibleRepositoryAPI.removeRole(id, {\n        role,\n        users: [user.username],\n      }),\n    );\n    updateRoles({\n      roles,\n      alertSuccess: t`User \"${user.username}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showUserRemoveModal: null },\n    });\n  };\n\n  const addGroup = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n      stateUpdate: { showGroupSelectWizard: null },\n    });\n  };\n\n  const removeGroup = (group) => {\n    const roles = group.object_roles.map((role) =>\n      AnsibleRepositoryAPI.removeRole(id, {\n        role,\n        groups: [group.name],\n      }),\n    );\n    updateRoles({\n      roles,\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showGroupRemoveModal: null },\n    });\n  };\n\n  const addUserRole = (user, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        users: [user.username],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n\n  const removeUserRole = (role, user) => {\n    const removedRole = AnsibleRepositoryAPI.removeRole(id, {\n      role,\n      users: [user.username],\n    });\n    updateRoles({\n      roles: [removedRole],\n      alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const addRole = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n\n  const removeRole = (role, group) => {\n    const removedRole = AnsibleRepositoryAPI.removeRole(id, {\n      role,\n      groups: [group.name],\n    });\n    updateRoles({\n      roles: [removedRole],\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const updateProps = (props) => {\n    Object.entries(props).forEach(([k, v]) => {\n      switch (k) {\n        case 'showUserRemoveModal':\n          setShowUserRemoveModal(v as UserType);\n          break;\n        case 'showUserSelectWizard':\n          setShowUserSelectWizard(v as { user?: UserType; roles?: RoleType[] });\n          break;\n        case 'showGroupRemoveModal':\n          setShowGroupRemoveModal(v as GroupType);\n          break;\n        case 'showGroupSelectWizard':\n          setShowGroupSelectWizard(\n            v as { group?: GroupType; roles?: RoleType[] },\n          );\n          break;\n        case 'showRoleRemoveModal':\n          setShowRoleRemoveModal(v as string);\n          break;\n        case 'showRoleSelectWizard':\n          setShowRoleSelectWizard(v as { roles?: RoleType[] });\n          break;\n        default:\n          console.error('updateProps', k, v);\n      }\n    });\n  };\n\n  useEffect(query, [item.pulp_href]);\n\n  useEffect(() => {\n    if (!users) {\n      return;\n    }\n\n    if (!params?.user) {\n      setSelectedUser(null);\n      return;\n    }\n\n    UserAPI.list({ username: params.user }).then(({ data: { data } }) => {\n      setSelectedUser(users.find((u) => u.username === data[0].username));\n    });\n  }, [params?.user, users]);\n\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n\n    if (!params?.group) {\n      setSelectedGroup(null);\n      return;\n    }\n\n    GroupAPI.list({ name: params.group }).then(({ data: { data } }) => {\n      setSelectedGroup(groups.find((g) => g.name === data[0].name));\n    });\n  }, [params?.group, groups]);\n\n  return (\n    <AccessTab\n      addGroup={addGroup}\n      addRole={addRole}\n      addUser={addUser}\n      addUserRole={addUserRole}\n      canEditOwners={canEditOwners}\n      group={selectedGroup}\n      groups={groups}\n      name={name}\n      pulpObjectType='repositories/ansible/ansible'\n      removeGroup={removeGroup}\n      removeRole={removeRole}\n      removeUser={removeUser}\n      removeUserRole={removeUserRole}\n      selectRolesMessage={t`The selected roles will be added to this specific Ansible repository.`}\n      showGroupRemoveModal={showGroupRemoveModal}\n      showGroupSelectWizard={showGroupSelectWizard}\n      showRoleRemoveModal={showRoleRemoveModal}\n      showRoleSelectWizard={showRoleSelectWizard}\n      showUserRemoveModal={showUserRemoveModal}\n      showUserSelectWizard={showUserSelectWizard}\n      updateProps={updateProps}\n      user={selectedUser}\n      users={users}\n      urlPrefix={formatPath(Paths.ansibleRepositoryDetail, {\n        name,\n      })}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ansibleRepositoryCollectionVersionAddAction,\n  ansibleRepositoryCollectionVersionRemoveAction,\n} from 'src/actions';\nimport {\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { DetailList, ListItemActions } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission;\n  };\n}\n\nexport const CollectionVersionsTab = ({\n  item,\n  actionContext: { addAlert, hasPermission },\n}: TabProps) => {\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    const repository = parsePulpIDFromURL(item.pulp_href);\n    return CollectionVersionAPI.list({\n      repository,\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({ repository: item });\n  useEffect(() => setModalState((ms) => ({ ...ms, repository: item })), [item]);\n\n  const renderTableRow = (\n    item: CollectionVersionSearch,\n    index: number,\n    actionContext,\n    listItemActions,\n  ) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem(item, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link\n            to={formatPath(\n              Paths.collectionByRepo,\n              {\n                repo: repository.name,\n                namespace,\n                collection: name,\n              },\n              {\n                version,\n              },\n            )}\n          >\n            {namespace}.{name} v{version}\n          </Link>\n        </td>\n        <td>{description}</td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  };\n\n  return (\n    <DetailList<CollectionVersionSearch>\n      actionContext={{\n        addAlert,\n        state: modalState,\n        setState: setModalState,\n        query,\n        hasPermission,\n        hasObjectPermission: (p: string): boolean =>\n          item?.my_permissions?.includes?.(p),\n      }}\n      defaultPageSize={10}\n      defaultSort={'name'}\n      errorTitle={t`Collection versions could not be displayed.`}\n      filterConfig={[\n        {\n          id: 'keywords',\n          title: t`Keywords`,\n        },\n        {\n          id: 'namespace',\n          title: t`Namespace`,\n        },\n      ]}\n      headerActions={[ansibleRepositoryCollectionVersionAddAction]}\n      listItemActions={[ansibleRepositoryCollectionVersionRemoveAction]}\n      noDataButton={ansibleRepositoryCollectionVersionAddAction.button}\n      noDataDescription={t`Collection versions will appear once the collection is modified.`}\n      noDataTitle={t`No collection versions yet`}\n      query={query}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Collection`,\n          type: 'none',\n          id: 'col1',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'col2',\n        },\n      ]}\n      title={t`Collection versions`}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRemoteType, AnsibleRepositoryType } from 'src/api';\nimport {\n  CopyURL,\n  Details,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { getRepoURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType & {\n    distroBasePath?: string;\n    remote?: AnsibleRemoteType;\n  };\n  actionContext: { addAlert: (alert) => void; state: { params } };\n}\n\nexport const DetailsTab = ({ item }: TabProps) => {\n  return (\n    <Details\n      fields={[\n        { label: t`Repository name`, value: item?.name },\n        { label: t`Description`, value: item?.description || t`None` },\n        {\n          label: t`Retained version count`,\n          value: item?.retain_repo_versions ?? t`All`,\n        },\n        {\n          label: t`Distribution`,\n          value: <LazyDistributions repositoryHref={item?.pulp_href} />,\n        },\n        {\n          label: t`Repository URL`,\n          value: item?.distroBasePath ? (\n            <CopyURL url={getRepoURL(item.distroBasePath)} />\n          ) : (\n            '---'\n          ),\n        },\n        {\n          label: t`Labels`,\n          value: <PulpLabels labels={item?.pulp_labels} />,\n        },\n        {\n          label: t`Private`,\n          value: item?.private ? t`Yes` : t`No`,\n        },\n        {\n          label: t`Remote`,\n          value: item?.remote ? (\n            <Link\n              to={formatPath(Paths.ansibleRemoteDetail, {\n                name: item?.remote.name,\n              })}\n            >\n              {item?.remote.name}\n            </Link>\n          ) : (\n            t`None`\n          ),\n        },\n      ]}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ansibleRepositoryVersionRevertAction } from 'src/actions';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  AnsibleRepositoryVersionType,\n  PulpAPI,\n} from 'src/api';\nimport {\n  DateComponent,\n  DetailList,\n  Details,\n  ListItemActions,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission: (string) => boolean;\n    hasObjectPermission: (string) => boolean;\n  };\n}\n\nconst AnyAPI = (href) =>\n  new (class extends PulpAPI {\n    useOrdering = true;\n    apiPath = href.replace(PULP_API_BASE_PATH, '');\n  })();\n\nconst VersionContent = ({\n  href,\n  addAlert,\n  hasPermission,\n  repositoryName,\n}: {\n  href: string;\n  addAlert: (alert) => void;\n  hasPermission: (string) => boolean;\n  repositoryName: string;\n}) => {\n  const [state, setState] = useState({});\n  if (!href) {\n    return null;\n  }\n\n  const API = AnyAPI(href);\n  const query = ({ params }) => API.list(params);\n  const renderTableRow = ({\n    manifest: {\n      collection_info: { namespace, name, version },\n    },\n    description,\n  }) => (\n    <tr>\n      <td>\n        <Link\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              repo: repositoryName,\n              namespace,\n              collection: name,\n            },\n            {\n              version,\n            },\n          )}\n        >\n          {namespace}.{name} v{version}\n        </Link>\n      </td>\n      <td>{description}</td>\n    </tr>\n  );\n\n  return (\n    <DetailList<{ manifest; description; pulp_href }>\n      actionContext={{\n        addAlert,\n        state,\n        setState,\n        query,\n        hasPermission,\n      }}\n      defaultPageSize={10}\n      defaultSort={'name'}\n      errorTitle={t`Collection versions could not be displayed.`}\n      noDataDescription={t`No collection versions in this repository version.`}\n      noDataTitle={t`No collection versions yet`}\n      query={query}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Collection`,\n          type: 'none',\n          id: 'col1',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'col2',\n        },\n      ]}\n      title={t`Collection versions`}\n    />\n  );\n};\n\nconst ContentSummary = ({ data }: { data: object }) => {\n  if (!Object.keys(data).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <table className='pf-c-table'>\n      <tr>\n        <th>{t`Count`}</th>\n        <th>{t`Pulp type`}</th>\n      </tr>\n      {Object.entries(data).map(([k, v]) => (\n        <tr key={k}>\n          <td>{v['count']}</td>\n          <th>{k}</th>\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nconst BaseVersion = ({\n  repositoryName,\n  data,\n}: {\n  repositoryName: string;\n  data?: string;\n}) => {\n  if (!data) {\n    return <>{t`None`}</>;\n  }\n\n  const number = data.split('/').at(-2);\n  return (\n    <Link\n      to={formatPath(\n        Paths.ansibleRepositoryDetail,\n        {\n          name: repositoryName,\n        },\n        {\n          repositoryVersion: number,\n          tab: 'repository-versions',\n        },\n      )}\n    >\n      {number}\n    </Link>\n  );\n};\n\nexport const RepositoryVersionsTab = ({\n  item,\n  actionContext: { addAlert, state, hasPermission, hasObjectPermission },\n}: TabProps) => {\n  const pulpId = parsePulpIDFromURL(item.pulp_href);\n  const latest_href = item.latest_version_href;\n  const repositoryName = item.name;\n  const queryList = ({ params }) =>\n    AnsibleRepositoryAPI.listVersions(pulpId, params);\n  const queryDetail = ({ number }) =>\n    AnsibleRepositoryAPI.listVersions(pulpId, { number });\n  const [modalState, setModalState] = useState({});\n  const [version, setVersion] = useState(null);\n\n  useEffect(() => {\n    if (state.params.repositoryVersion) {\n      queryDetail({ number: state.params.repositoryVersion }).then(\n        ({ data }) => {\n          if (!data?.results?.[0]) {\n            addAlert({\n              variant: 'danger',\n              title: t`Failed to find repository version`,\n            });\n          }\n          setVersion(data.results[0]);\n        },\n      );\n    } else {\n      setVersion(null);\n    }\n  }, [state.params.repositoryVersion]);\n\n  const renderTableRow = (\n    item: AnsibleRepositoryVersionType,\n    index: number,\n    actionContext,\n    listItemActions,\n  ) => {\n    const { number, pulp_created, pulp_href } = item;\n\n    const isLatest = latest_href === pulp_href;\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem({ ...item, isLatest, repositoryName }, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link\n            to={formatPath(\n              Paths.ansibleRepositoryDetail,\n              {\n                name: repositoryName,\n              },\n              {\n                repositoryVersion: number,\n                tab: 'repository-versions',\n              },\n            )}\n          >\n            {number}\n          </Link>\n          {isLatest ? ' ' + t`(latest)` : null}\n        </td>\n        <td>\n          <DateComponent date={pulp_created} />\n        </td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  };\n\n  return state.params.repositoryVersion ? (\n    version ? (\n      <>\n        <Details\n          fields={[\n            { label: t`Version number`, value: version.number },\n            {\n              label: t`Created date`,\n              value: <DateComponent date={version.pulp_created} />,\n            },\n            {\n              label: t`Content added`,\n              value: <ContentSummary data={version.content_summary?.added} />,\n            },\n            {\n              label: t`Content removed`,\n              value: <ContentSummary data={version.content_summary?.removed} />,\n            },\n            {\n              label: t`Current content`,\n              value: <ContentSummary data={version.content_summary?.present} />,\n            },\n            {\n              label: t`Base version`,\n              value: (\n                <BaseVersion\n                  repositoryName={repositoryName}\n                  data={version.base_version}\n                />\n              ),\n            },\n          ]}\n        />\n        <div\n          className='pf-c-page__main-section'\n          style={{ padding: '8px 0', margin: '24px -16px 0' }}\n        />\n        <VersionContent\n          {...version.content_summary.present['ansible.collection_version']}\n          repositoryName={repositoryName}\n        />\n      </>\n    ) : (\n      <Spinner size='md' />\n    )\n  ) : (\n    <DetailList<AnsibleRepositoryVersionType>\n      actionContext={{\n        addAlert,\n        state: modalState,\n        setState: setModalState,\n        query: queryList,\n        hasPermission,\n        hasObjectPermission, // needs item=repository, not repository version\n      }}\n      defaultPageSize={10}\n      defaultSort={'-pulp_created'}\n      errorTitle={t`Repository versions could not be displayed.`}\n      filterConfig={null}\n      listItemActions={[ansibleRepositoryVersionRevertAction]}\n      noDataButton={null}\n      noDataDescription={t`Repository versions will appear once the repository is modified.`}\n      noDataTitle={t`No repository versions yet`}\n      query={queryList}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Version number`,\n          type: 'numeric',\n          id: 'number',\n        },\n        {\n          title: t`Created date`,\n          type: 'numeric',\n          id: 'pulp_created',\n        },\n      ]}\n      title={t`Repository versions`}\n    />\n  );\n};\n","import { Trans, msg, t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  ansibleRepositoryCopyAction,\n  ansibleRepositoryDeleteAction,\n  ansibleRepositoryEditAction,\n  ansibleRepositorySyncAction,\n} from 'src/actions';\nimport {\n  AnsibleRemoteAPI,\n  AnsibleRemoteType,\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n} from 'src/api';\nimport { PageWithTabs } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRepositories } from 'src/permissions';\nimport { parsePulpIDFromURL, repositoryBasePath } from 'src/utilities';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\nimport { RepositoryAccessTab } from './tab-access';\nimport { CollectionVersionsTab } from './tab-collection-versions';\nimport { DetailsTab } from './tab-details';\nimport { RepositoryVersionsTab } from './tab-repository-versions';\n\nconst tabs = [\n  { id: 'details', name: msg`Details` },\n  { id: 'access', name: msg`Access` },\n  { id: 'collection-versions', name: msg`Collection versions` },\n  { id: 'repository-versions', name: msg`Versions` },\n];\n\nconst AnsibleRepositoryDetail = PageWithTabs<\n  AnsibleRepositoryType & { remote?: AnsibleRemoteType }\n>({\n  breadcrumbs: ({ name, tab, params: { repositoryVersion, user, group } }) =>\n    [\n      { url: formatPath(Paths.ansibleRepositories), name: t`Repositories` },\n      { url: formatPath(Paths.ansibleRepositoryDetail, { name }), name },\n      (tab.id === 'access' && (group || user)) ||\n      (tab.id === 'repository-versions' && repositoryVersion)\n        ? {\n            url: formatPath(\n              Paths.ansibleRepositoryDetail,\n              { name },\n              { tab: tab.id },\n            ),\n            name: tab.name,\n          }\n        : null,\n      tab.id === 'access' && group ? { name: t`Group ${group}` } : null,\n      tab.id === 'access' && user ? { name: t`User ${user}` } : null,\n      tab.id === 'repository-versions' && repositoryVersion\n        ? { name: t`Version ${repositoryVersion}` }\n        : null,\n      (tab.id === 'access' && !user && !group) ||\n      (tab.id === 'repository-versions' && !repositoryVersion)\n        ? { name: tab.name }\n        : null,\n    ].filter(Boolean),\n  condition: canViewAnsibleRepositories,\n  displayName: 'AnsibleRepositoryDetail',\n  errorTitle: msg`Repository could not be displayed.`,\n  headerActions: [\n    ansibleRepositoryEditAction,\n    ansibleRepositorySyncAction,\n    ansibleRepositoryCopyAction,\n    ansibleRepositoryDeleteAction,\n  ],\n  headerDetails: (item) => (\n    <>\n      {item?.last_sync_task && (\n        <p className='hub-m-truncated'>\n          <Trans>Last updated from registry {lastSynced(item)}</Trans>{' '}\n          {lastSyncStatus(item)}\n        </p>\n      )}\n    </>\n  ),\n  listUrl: formatPath(Paths.ansibleRepositories),\n  query: ({ name }) => {\n    return AnsibleRepositoryAPI.list({ name, page_size: 1 })\n      .then(({ data: { results } }) => results[0])\n      .then((repository) => {\n        // using the list api, so an empty array is really a 404\n        if (!repository) {\n          return Promise.reject({ response: { status: 404 } });\n        }\n\n        const err = (val) => (e) => {\n          console.error(e);\n          return val;\n        };\n\n        return Promise.all([\n          repositoryBasePath(repository.name, repository.pulp_href).catch(\n            err(null),\n          ),\n          AnsibleRepositoryAPI.myPermissions(\n            parsePulpIDFromURL(repository.pulp_href),\n          )\n            .then(({ data: { permissions } }) => permissions)\n            .catch(err([])),\n          repository.remote\n            ? AnsibleRemoteAPI.get(parsePulpIDFromURL(repository.remote))\n                .then(({ data }) => data)\n                .catch(() => null)\n            : null,\n        ]).then(([distroBasePath, my_permissions, remote]) => ({\n          ...repository,\n          distroBasePath,\n          my_permissions,\n          remote,\n        }));\n      });\n  },\n  renderTab: (tab, item, actionContext) =>\n    ({\n      details: <DetailsTab item={item} actionContext={actionContext} />,\n      access: <RepositoryAccessTab item={item} actionContext={actionContext} />,\n      'collection-versions': (\n        <CollectionVersionsTab item={item} actionContext={actionContext} />\n      ),\n      'repository-versions': (\n        <RepositoryVersionsTab item={item} actionContext={actionContext} />\n      ),\n    })[tab],\n  tabs,\n  tabUpdateParams: (p) => {\n    delete p.repositoryVersion;\n    delete p.group;\n    delete p.user;\n    return p;\n  },\n});\n\nexport default AnsibleRepositoryDetail;\n"],"names":["RepositoryAccessTab","_ref","item","_ref$actionContext","actionContext","addAlert","featureFlags","hasPermission","params","state","user","id","pulp_href","parsePulpIDFromURL","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","_useState4","groups","setGroups","_useState5","_useState6","users","setUsers","_useState7","_useState8","canEditOwners","setCanEditOwners","_useState9","_useState10","selectedGroup","setSelectedGroup","_useState11","_useState12","selectedUser","setSelectedUser","_useState13","_useState14","showUserRemoveModal","setShowUserRemoveModal","_useState15","_useState16","showUserSelectWizard","setShowUserSelectWizard","_useState17","_useState18","showGroupRemoveModal","setShowGroupRemoveModal","_useState19","_useState20","showGroupSelectWizard","setShowGroupSelectWizard","_useState21","_useState22","showRoleRemoveModal","setShowRoleRemoveModal","_useState23","_useState24","showRoleSelectWizard","setShowRoleSelectWizard","query","AnsibleRepositoryAPI","myPermissions","then","_ref2","permissions","data","canEditAnsibleRepositoryAccess","hasObjectPermission","p","includes","listRoles","page_size","_ref3","roles","_assignRoles","assignRoles","updateRoles","_ref4","alertSuccess","alertFailure","stateUpdate","Promise","all","title","variant","_ref5","_ref5$response","response","status","statusText","description","errorMessage","updateProps","props","Object","entries","forEach","_ref6","_ref7","k","v","console","error","useEffect","UserAPI","list","username","_ref8","find","u","group","GroupAPI","_ref9","g","React","AccessTab","addGroup","rolePromises","map","role","addRole","i18n","_","values","addUser","addUserRole","pulpObjectType","removeGroup","object_roles","removeRole","removedRole","removeUser","removeUserRole","selectRolesMessage","urlPrefix","formatPath","Paths","ansibleRepositoryDetail","CollectionVersionsTab","newParams","_objectSpread","ordering","sort","repository","CollectionVersionAPI","_ref3$data","count","meta","results","modalState","setModalState","ms","DetailList","setState","_item$my_permissions","_item$my_permissions$","my_permissions","call","defaultPageSize","defaultSort","errorTitle","filterConfig","headerActions","ansibleRepositoryCollectionVersionAddAction","listItemActions","ansibleRepositoryCollectionVersionRemoveAction","noDataButton","button","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","version","kebabItems","action","dropdownItem","key","Link","to","collectionByRepo","repo","collection","ListItemActions","sortHeaders","type","DetailsTab","_item$retain_repo_ver","Details","fields","label","value","retain_repo_versions","LazyDistributions","repositoryHref","distroBasePath","CopyURL","url","getRepoURL","PulpLabels","labels","pulp_labels","remote","ansibleRemoteDetail","VersionContent","href","repositoryName","API","_PulpAPI","_inherits","_class2","_super","_this","_classCallCheck","_len","arguments","length","args","Array","_key","apply","concat","_defineProperty","_assertThisInitialized","replace","PULP_API_BASE_PATH","_createClass","PulpAPI","AnyAPI","_ref3$manifest$collec","manifest","collection_info","ContentSummary","keys","className","BaseVersion","number","split","at","repositoryVersion","tab","RepositoryVersionsTab","_version$content_summ","_version$content_summ2","_version$content_summ3","_ref8$actionContext","pulpId","latest_href","latest_version_href","queryList","listVersions","setVersion","_ref10","_ref11","_data$results","DateComponent","date","pulp_created","content_summary","added","removed","present","base_version","style","padding","margin","_extends","Spinner","size","ansibleRepositoryVersionRevertAction","isLatest","PageWithTabs","breadcrumbs","_ref$params","ansibleRepositories","filter","Boolean","condition","canViewAnsibleRepositories","displayName","ansibleRepositoryEditAction","ansibleRepositorySyncAction","ansibleRepositoryCopyAction","ansibleRepositoryDeleteAction","headerDetails","last_sync_task","Trans","lastSynced","lastSyncStatus","listUrl","reject","err","val","e","repositoryBasePath","AnsibleRemoteAPI","get","renderTab","details","access","tabs","tabUpdateParams"],"sourceRoot":""}