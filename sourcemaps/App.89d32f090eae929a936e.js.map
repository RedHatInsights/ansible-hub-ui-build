{"version":3,"file":"js/App.f7378c1494ebeda37d7c.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/create fake namespace object","webpack:///webpack/runtime/load script","webpack:///webpack/runtime/css loading","webpack:///./locale|lazy|/^\\.\\/.*\\.js$/|groupOptions: {}|namespace object","webpack:////home/runner/work/ansible-hub-ui/ansible-hub-ui/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/group-management/group-modal.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/permissions/obect-permission-field.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/permissions/permission-chip-selector.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/toolbar.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/user-form/user-form.tsx","webpack:///./src/components/user-form/user-form-page.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/constants.tsx","webpack:///./src/store/index.js","webpack:///./src/utilities/asyncComponent.js","webpack:///./src/loaders/insights/Routes.js","webpack:///./src/loaders/insights/insights-loader.js","webpack:///./src/utilities/getBaseName.js","webpack:///./src/entry.js","webpack:///./src/l10n.ts","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"ansible-hub-ui:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var createStylesheet = (chunkId, fullhref, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"33\":1,\"152\":1,\"464\":1,\"571\":1,\"684\":1,\"776\":1,\"837\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: (params) => ParamHelper.getQueryString(params),\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data: any, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data: any, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data: any, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await (window as any).insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  constructor() {\n    super();\n  }\n\n  list(params?: any, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `content/${repo}/v3/collections/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: String,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?: any,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    return source;\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `content/${distro_base_path}/v3/collections/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `content/${repo}/v3/collections/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `content/${repo}/v3/collections/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const NamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  constructor() {\n    super();\n  }\n\n  getUser(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        (window as any).insights.chrome.auth\n          .getUser()\n          // we don't care about entitlements stuff in the UI, so just\n          // return the user's identity\n          .then((result) => resolve(result.identity))\n          .catch((result) => reject(result));\n      });\n    } else if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        this.http\n          .get(this.apiPath)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((result) => reject(result));\n      });\n    }\n  }\n\n  getActiveUser() {\n    return this.http.get(this.apiPath);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        reject(\n          'Use window.chrome.insights.auth to get tokens for insights deployments',\n        );\n      });\n    }\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    return new Promise((resolve, reject) => {\n      // Make a get request to the login endpoint to set CSRF tokens before making\n      // the authentication reqest\n      this.http\n        .get(loginURL)\n        .then(() => {\n          this.http\n            .post(loginURL, {\n              username: username,\n              password: password,\n            })\n            .then((response) => resolve(response))\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  constructor() {\n    super();\n  }\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  constructor() {\n    super();\n  }\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n\n  constructor() {\n    super();\n  }\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n\n  constructor() {\n    super();\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId,\n    );\n  }\n}\n\nexport const GroupAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(id, obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = API_HOST;\n  constructor() {\n    super();\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(id, obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = this.getUIPath('execution-environments/repositories/');\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super('/pulp/api/v3/');\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  constructor() {\n    super();\n  }\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/namespaces/');\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n\n  list(params) {\n    let changedParams = { ...params };\n    if (changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams);\n  }\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  constructor() {\n    super();\n  }\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  variant: AlertProps['variant'];\n  title: string;\n  description?: string | JSX.Element;\n}\n\nexport class AlertList extends React.Component<IProps, {}> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps, {}> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={(niceNames[key] || key) as any}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams(ParamHelper.deleteParam(params, key, v))\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\nimport { Logo } from 'src/components';\n\ninterface IProps {\n  title: string;\n  imageURL?: string;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      title,\n      imageURL,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {imageURL ? (\n              <Logo\n                className='image'\n                alt={t`Page logo`}\n                image={imageURL}\n                size='40px'\n                unlockWidth={true}\n              />\n            ) : null}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: {\n    name: string;\n    url?: string;\n  }[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </div>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { NumericLabel, Logo } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const { name, latest_version, namespace, className, footer, repo } =\n      this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    return (\n      <Card className={cx('collection-card-container', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            image={namespace.avatar_url}\n            alt={company + ' logo'}\n            size='40px'\n            unlockWidth={true}\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{t`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <div>\n          <NumericLabel number={count} />\n        </div>\n        <div className='type-label'>\n          <NumericLabel\n            number={count}\n            hideNumber={true}\n            label={type}\n            pluralLabels={Constants.COLLECTION_PLURAL_LABELS[type]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  TextInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    let toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (let c of contents) {\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n      if (!summary[c.content_type]) {\n        summary[c.content_type] = 0;\n      }\n\n      if (typeMatch && c.name.match(keywords)) {\n        toShow.push(c);\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label={t`find-content`}\n                  placeholder={t`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{t`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'selected-item': key === showing,\n                    'type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='content-table pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{t`Name`}</th>\n              <th>{t`Type`}</th>\n              <th>{t`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\nimport { userLanguage } from 'src/l10n';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    moment.locale(userLanguage);\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './header.scss';\n\nimport { Redirect, Link } from 'react-router-dom';\n\nimport * as moment from 'moment';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  List,\n  ListItem,\n  Modal,\n  Alert,\n  Text,\n  Button,\n  DropdownItem,\n  Tooltip,\n  Checkbox,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  LinkTabs,\n  RepoSelector,\n  Pagination,\n  AlertList,\n  AlertType,\n  closeAlertMixin,\n  ConfirmModal,\n  StatefulDropdown,\n} from 'src/components';\n\nimport { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { waitForTask } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUsedbyDependencies();\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${\n        v.version === all_versions[0].version ? t`(latest)` : ''\n      }`;\n\n    const { name: collectionName } = collection;\n\n    if (redirect) return <Redirect push to={redirect} />;\n\n    return (\n      <React.Fragment>\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`released ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        {deleteCollection && (\n          <ConfirmModal\n            cancelAction={this.closeModal}\n            confirmAction={() =>\n              !!collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : this.deleteCollection()\n            }\n            isDisabled={!confirmDelete}\n            title={\n              collectionVersion\n                ? t`Permanently delete collection version`\n                : t`Permanently delete collection`\n            }\n            confirmButtonTitle={t`Delete`}\n          >\n            <>\n              <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n                {collectionVersion ? (\n                  <>\n                    {deleteCollection.all_versions.length === 1 ? (\n                      <Trans>\n                        Deleting{' '}\n                        <b>\n                          {deleteCollection.name} v{collectionVersion}\n                        </b>{' '}\n                        and its data will be lost and this will cause the entire\n                        collection to be deleted.\n                      </Trans>\n                    ) : (\n                      <Trans>\n                        Deleting{' '}\n                        <b>\n                          {deleteCollection.name} v{collectionVersion}\n                        </b>{' '}\n                        and its data will be lost.\n                      </Trans>\n                    )}\n                  </>\n                ) : (\n                  <Trans>\n                    Deleting <b>{deleteCollection.name}</b> and its data will be\n                    lost.\n                  </Trans>\n                )}\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </ConfirmModal>\n        )}\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          imageURL={collection.namespace.avatar_url}\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={Paths.searchByRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} released {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n            </div>\n          }\n          pageControls={\n            <StatefulDropdown\n              items={[\n                <React.Fragment key='1'>\n                  {noDependencies ? (\n                    <DropdownItem\n                      key={1}\n                      onClick={() => this.openDeleteModalWithConfirm()}\n                    >\n                      {t`Delete entire collection`}\n                    </DropdownItem>\n                  ) : (\n                    <Tooltip\n                      position='left'\n                      content={\n                        <Trans>\n                          Cannot delete until collections <br />\n                          that depend on this collection <br />\n                          have been deleted.\n                        </Trans>\n                      }\n                    >\n                      <DropdownItem isDisabled>\n                        {t`Delete entire collection`}\n                      </DropdownItem>\n                    </Tooltip>\n                  )}\n                </React.Fragment>,\n                <DropdownItem\n                  key='2'\n                  onClick={() =>\n                    this.openDeleteModalWithConfirm(\n                      collection.latest_version.version,\n                    )\n                  }\n                >\n                  {t`Delete version ${collection.latest_version.version}`}\n                </DropdownItem>,\n              ]}\n            />\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = this.getIdFromTask(res.data.task);\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: t`Successfully deleted collection version.`,\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: t`Successfully deleted collection.`,\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n        } = err?.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => {\n                  const { namespace, version, collection } =\n                    this.separateStringDependencies(d);\n                  return (\n                    <ListItem key={d}>\n                      <Link\n                        to={formatPath(\n                          Paths.collectionByRepo,\n                          {\n                            repo: this.context.selectedRepo,\n                            namespace,\n                            collection,\n                          },\n                          { version: version },\n                        )}\n                        onClick={() => this.setState({ alerts: [] })}\n                      >\n                        {d}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Error deleting collection version.`,\n                description: err?.message,\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private deleteCollection = () => {\n    const { deleteCollection } = this.state;\n    CollectionAPI.deleteCollection(this.context.selectedRepo, deleteCollection)\n      .then((res) => {\n        const taskId = this.getIdFromTask(res.data.task);\n\n        waitForTask(taskId).then(() => {\n          this.context.setAlerts([\n            ...this.context.alerts,\n            {\n              variant: 'success',\n              title: t`Successfully deleted collection.`,\n            },\n          ]);\n          this.setState({\n            collectionVersion: null,\n            deleteCollection: null,\n            redirect: formatPath(Paths.namespaceByRepo, {\n              repo: this.context.selectedRepo,\n              namespace: deleteCollection.namespace.name,\n            }),\n          });\n        });\n      })\n      .catch((err) =>\n        this.setState({\n          collectionVersion: null,\n          deleteCollection: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Error deleting collection.`,\n              description: err?.message,\n            },\n          ],\n        }),\n      );\n  };\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private getUsedbyDependencies() {\n    const { name, namespace } = this.props.collection;\n    CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => {\n        this.setState({ noDependencies: !data.data.length });\n      })\n      .catch((err) =>\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Error getting collection's dependencies.`,\n              description: err?.message,\n            },\n          ],\n        }),\n      );\n  }\n\n  private getIdFromTask(task) {\n    return task.match(/tasks\\/([a-zA-Z0-9-]+)/i)[1];\n  }\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateStringDependencies(dependency) {\n    const [nsCollection, version] = dependency.split(' ');\n    const [namespace, collection] = nsCollection.split('.');\n\n    return { namespace, collection, version };\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport './collection-info.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  Button,\n  Alert,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag, ClipboardCopy } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport { userLanguage } from 'src/l10n';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: any;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const { name, latest_version, namespace, params } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    moment.locale(userLanguage);\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{t`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>{latest_version.metadata.license}</SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Installing collections with ansible-galaxy is\n                    only supported in ansible 2.9+\n                  </Trans>\n                </div>\n                {!this.context.settings\n                  .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD &&\n                this.context.user.is_anonymous ? (\n                  <Alert\n                    className={'collection-download-alert'}\n                    isInline\n                    variant='warning'\n                    title={\n                      <React.Fragment>\n                        {t`You have to be logged in to be able to download the tarball.`}{' '}\n                        <Link to={Paths.login}>{t`Login`}</Link>\n                      </React.Fragment>\n                    }\n                  />\n                ) : (\n                  <div>\n                    <a\n                      ref={this.downloadLinkRef}\n                      style={{ display: 'none' }}\n                    ></a>\n                    <Button\n                      className='download-button'\n                      variant='link'\n                      icon={<DownloadIcon />}\n                      onClick={() =>\n                        this.download(\n                          this.context.selectedRepo,\n                          namespace,\n                          name,\n                          latest_version,\n                        )\n                      }\n                    >\n                      {t`Download tarball`}\n                    </Button>\n                  </div>\n                )}\n              </SplitItem>\n            </Split>\n          </GridItem>\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {t`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {t`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    ).then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      this.downloadLinkRef.current.href = downloadURL;\n      this.downloadLinkRef.current.click();\n    });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {};\n  updateParams: (p) => void;\n}\n\nexport class CollectionFilter extends React.Component<IProps> {\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as 'multiple',\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n    ];\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <CompoundFilter\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './list.scss';\n\nimport { Button, DropdownItem, DataList } from '@patternfly/react-core';\n\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  Pagination,\n  StatefulDropdown,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n\n  showNamespace?: boolean;\n  showControls?: boolean;\n  handleControlClick?: (id, event) => void;\n  repo?: string;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n\n        <div className='controls bottom'>\n          <div></div>\n          <div>\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.props.handleControlClick(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              onClick={(e) =>\n                this.props.handleControlClick(collection.id, 'deprecate')\n              }\n              key='1'\n            >\n              {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  NumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps, {}> {\n  render() {\n    const {\n      name,\n      // download_count,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={company + ' logo'}\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth={true}\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    let contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='entry'>{latest_version.metadata.description}</div>\n        <div className='entry pf-l-flex pf-m-wrap content'>\n          {Object.keys(contentSummary.contents).map((k) => (\n            <div key={k}>\n              <NumericLabel\n                className='numeric-label-capitalize-text'\n                label={k}\n                number={contentSummary.contents[k]}\n                pluralLabels={Constants.COLLECTION_PLURAL_LABELS[k]}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='entry'>{controls}</div> : null}\n        <div className='right-col entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='entry'>v{latest_version.version}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem aria-labelledby='simple-item1'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: any;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\n\nimport { EmptyStateNoData } from 'src/components';\n\nimport { CollectionDetailType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  repo: string;\n}\n\nexport class CollectionDependenciesList extends React.Component<IProps> {\n  render() {\n    const { collection, repo } = this.props;\n\n    const { dependencies } = collection.latest_version.metadata;\n\n    if (!Object.keys(dependencies).length)\n      return (\n        <EmptyStateNoData\n          title={t`No dependencies`}\n          description={t`Collection does not have dependencies.`}\n        />\n      );\n\n    return (\n      <List variant={ListVariant.inline} className='dependencies-list'>\n        {Object.keys(dependencies).map((dependency, i) => (\n          <ListItem key={i} style={{ marginRight: '70px' }}>\n            <Link\n              to={formatPath(\n                Paths.collectionByRepo,\n                {\n                  collection: this.splitDependencyName(dependency).collection,\n                  namespace: this.splitDependencyName(dependency).namespace,\n                  repo,\n                },\n                this.separateVersion(dependencies[dependency]),\n              )}\n            >\n              {this.splitDependencyName(dependency).collection}\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n\n  private splitDependencyName(dependency) {\n    const [namespace, collection] = dependency.split('.');\n    return { namespace, collection };\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CollectionUsedByDependencies } from 'src/api';\n\nimport {\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup,\n  SearchInput,\n} from '@patternfly/react-core';\n\nimport {\n  Pagination,\n  EmptyStateNoData,\n  EmptyStateFilter,\n  Sort,\n  LoadingPageSpinner,\n} from 'src/components';\n\nimport { ParamHelper, filterIsSet } from 'src/utilities';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionUsedbyDependenciesList extends React.Component<IProps> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  render() {\n    const {\n      params,\n      usedByDependencies,\n      itemCount,\n      updateParams,\n      repo,\n      usedByDependenciesLoading,\n    } = this.props;\n\n    if (!itemCount && !filterIsSet(params, ['name__icontains']))\n      return (\n        <EmptyStateNoData\n          title={t`Not required for use by other collections`}\n          description={t`Collection is not being used by any collection.`}\n        />\n      );\n\n    return (\n      <>\n        <div className='usedby-dependencies-header'>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.name__icontains || ''}\n                  onChange={(val) =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', val),\n                    )\n                  }\n                  onClear={() =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', ''),\n                    )\n                  }\n                  aria-label='filter-collection-name'\n                  placeholder={t`Filter by name`}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Sort\n                  options={[\n                    { title: t`Collection`, id: 'collection', type: 'alpha' },\n                  ]}\n                  params={params}\n                  updateParams={({ sort }) =>\n                    updateParams(ParamHelper.setParam(params, 'sort', sort))\n                  }\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n          {!!itemCount && (\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n              isTop\n            />\n          )}\n        </div>\n\n        {usedByDependenciesLoading ? (\n          <LoadingPageSpinner />\n        ) : (\n          <>\n            {!itemCount ? (\n              <EmptyStateFilter />\n            ) : (\n              <>\n                <table className='content-table pf-c-table pf-m-compact'>\n                  <tbody>\n                    {usedByDependencies.map(\n                      ({ name, namespace, version }, i) => (\n                        <tr key={i}>\n                          <td>\n                            <Link\n                              to={formatPath(\n                                Paths.collectionByRepo,\n                                {\n                                  collection: name,\n                                  namespace,\n                                  repo,\n                                },\n                                ParamHelper.getReduced(\n                                  { version },\n                                  this.ignoredParams,\n                                ),\n                              )}\n                            >\n                              {name} v{version}\n                            </Link>\n                          </td>\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n                <Pagination\n                  params={params}\n                  updateParams={(params) => updateParams(params)}\n                  count={itemCount}\n                />\n              </>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  inputText: string;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      inputText: '',\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => this.setState({ selectedFilter: v, inputText: '' })}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup>\n        <StatefulDropdown\n          toggleType='dropdown'\n          defaultText={\n            <span>\n              <FilterIcon />\n              {'   '}\n              {selectedFilter.title}\n            </span>\n          }\n          position='left'\n          isPlain={false}\n          items={filterOptions}\n        />\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.state.inputText}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        const options = selectedFilter.options.map((option) => (\n          // patternfly does not allow for us to set a display name aside from the ID\n          // which unfortunately means that multiple select will ignore the human readable\n          // option.title\n          <SelectOption key={option.id} value={option.id} />\n        ));\n\n        const toggle = [\n          <SelectGroup\n            label={t`Filter by ${selectedFilter.id}`}\n            key={selectedFilter.id}\n          >\n            {options}\n          </SelectGroup>,\n        ];\n\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {toggle}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.state.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v, i) => (\n              <DropdownItem\n                onClick={() =>\n                  this.setState({ inputText: v.id }, () => this.submitFilter())\n                }\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.state.inputText}\n            onChange={(k) => this.setState({ inputText: k })}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter') {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n    );\n  }\n\n  private submitFilter() {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        this.state.inputText,\n      ),\n    );\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) return inputText;\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nexport class DeprecatedTag extends React.Component<{}, {}> {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {t`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, CubesIcon } from '@patternfly/react-icons';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\n\ninterface IProps {}\n\nexport class EmptyStateUnauthorized extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={t`Contact your organization administrator for more information.`}\n      />\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport { Paths } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n    ];\n\n    const last_sync_task =\n      this.props.container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={this.props.container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: t`Container Registry`,\n              },\n              { name: this.props.container.name },\n            ]}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        <Tooltip content={this.props.container.description}>\n          <p className={'truncated'}>{this.props.container.description}</p>\n        </Tooltip>\n        {last_sync_task && (\n          <p className='truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <span />\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab: this.props.tab }}\n              updateParams={(p) => this.props.updateState({ redirect: p.tab })}\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: any;\n  errorMessage?: any;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant='small'\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={''}\n        header={<h2>{t`Create a group`}</h2>}\n        actions={[\n          <Button\n            isDisabled={\n              this.state.name.length === 0 ||\n              (this.props.group && this.state.name === this.props.group.name)\n            }\n            key='create'\n            variant='primary'\n            onClick={() => onSave(this.state.name)}\n          >\n            {!this.props.group ? t`Create` : t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: any;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, children, deleteAction, isDisabled, title, spinner } =\n      this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {t`Delete`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps, {}> {\n  lastImport: any;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div className='import-console pf-c-content'>\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion } = this.props;\n\n    let collectionHead: any = `${selectedImport.namespace}.${selectedImport.name}`;\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport {\n  Pagination,\n  FormSelect,\n  FormSelectOption,\n  Spinner,\n  Toolbar,\n} from '@patternfly/react-core';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { PulpStatus, NamespaceType, ImportListType } from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  namespaces: NamespaceType[];\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n}\n\ninterface IState {\n  kwField: string;\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n    };\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      namespaces,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderNamespacePicker(namespaces)}\n        <Toolbar>\n          <CompoundFilter\n            updateParams={(p) => {\n              p['page'] = 1;\n              this.props.updateParams(p);\n            }}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n        <AppliedFilters\n          updateParams={(p) => {\n            p['page'] = 1;\n            this.props.updateParams(p);\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        <Pagination\n          itemCount={numberOfResults}\n          perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n          page={params.page || 1}\n          onSetPage={(_, p) =>\n            updateParams(ParamHelper.setParam(params, 'page', p))\n          }\n          onPerPageSelect={(_, p) => {\n            updateParams({ ...params, page: 1, page_size: p });\n          }}\n          isCompact={true}\n        />\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (loading) {\n      return (\n        <div className='loading'>\n          <Spinner />\n        </div>\n      );\n    }\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          {item.name} {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private renderNamespacePicker(namespaces) {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <FormSelect\n            onChange={(val) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                val,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            value={this.props.params.namespace}\n            aria-label={t`Select namespace`}\n          >\n            {namespaces.map((ns) => (\n              <FormSelectOption key={ns.name} label={ns.name} value={ns.name} />\n            ))}\n          </FormSelect>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component<{}> {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component<{}> {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { DropdownItem } from '@patternfly/react-core';\nimport {\n  DateComponent,\n  EmptyStateNoData,\n  SortTable,\n  StatefulDropdown,\n  ClipboardCopy,\n} from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  repositories: {}[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Content count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Repo URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'kebab',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>{distribution.repository.content_count}</td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : !!distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n        <td>\n          <span>\n            <StatefulDropdown\n              items={[\n                <DropdownItem\n                  key='2'\n                  component={\n                    <Link to={formatPath(Paths.token, {})} target='_blank'>\n                      {t`Get token`}\n                    </Link>\n                  }\n                />,\n              ]}\n            />\n          </span>\n        </td>\n      </tr>\n    );\n  }\n}\n","import { cellWidth } from '@patternfly/react-table';\nimport * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n}\n\nexport class Logo extends React.Component<IProps> {\n  render() {\n    const { size, image, alt, className, unlockWidth, width } = this.props;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={image || DefaultLogo}\n          alt={alt}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nexport class Main extends React.Component<any> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps, {}> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              {text ? (\n                <ReactMarkdown children={text} />\n              ) : (\n                <ReactMarkdown children={placeholder} />\n              )}\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps, {}> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='ns-card-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              unlockWidth\n              image={avatar_url}\n              alt={company + ' logo'}\n              size='40px'\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{t`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\n\nimport { Form, FormGroup, TextInput, TextArea } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\n\nimport { NamespaceCard, ObjectPermissionField } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: any;\n  userId: string;\n\n  updateNamespace: (namespace) => void;\n}\n\ninterface IState {\n  newNamespaceGroup: string;\n}\n\nexport class NamespaceForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newNamespaceGroup: '',\n    };\n  }\n\n  render() {\n    const { namespace, errorMessages, userId } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <Form>\n        <div className='card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                isRequired\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='groups'\n          label={t`Namespace owners`}\n          className='namespace-owners'\n          helperTextInvalid={errorMessages['groups']}\n          validated={this.toError(\n            !isNaN(Number(this.state.newNamespaceGroup)) &&\n              !('groups' in errorMessages),\n          )}\n        >\n          <br />\n\n          <ObjectPermissionField\n            groups={namespace.groups}\n            availablePermissions={['change_namespace', 'upload_to_namespace']}\n            setGroups={(g) => {\n              const newNS = { ...namespace };\n              newNS.groups = g;\n              this.props.updateNamespace(newNS);\n            }}\n          ></ObjectPermissionField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <TextInput\n            id='name'\n            type='text'\n            placeholder={t`Link text`}\n            value={link.name}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-url'>\n          <TextInput\n            id='url'\n            type='text'\n            placeholder={t`Link URL`}\n            value={link.url}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { NamespaceAPI, GroupObjectPermissionType } from 'src/api';\n\nimport { HelperText, ObjectPermissionField } from 'src/components';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  newGroups: GroupObjectPermissionType[];\n  errorMessages: any;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      newGroups: [],\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error: any = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain [A-Za-z0-9_]`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = (event) => {\n    const data: any = {\n      name: this.state.newNamespaceName,\n      groups: this.state.newGroups,\n    };\n    NamespaceAPI.create(data)\n      .then((results) => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          newGroups: [],\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages: any = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newGroups, newNamespaceNameValid } = this.state;\n    return (\n      <Modal\n        variant='large'\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperText={t`Please, provide the namespace name`}\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n          <FormGroup\n            label={t`Namespace owners`}\n            fieldId='groups'\n            helperTextInvalid={this.state.errorMessages['groups']}\n          >\n            <ObjectPermissionField\n              availablePermissions={['change_namespace', 'upload_to_namespace']}\n              groups={newGroups}\n              setGroups={(g) => this.setState({ newGroups: g })}\n              menuAppendTo='parent'\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\n\ninterface IProps {\n  className?: string;\n  number: number | string;\n  label?: string;\n  hideNumber?: boolean;\n  pluralLabels?: {\n    [key: string]: {\n      '0': string;\n      '1': string;\n      other: string;\n    }[];\n  };\n}\n\nexport class NumericLabel extends React.Component<IProps, {}> {\n  render() {\n    const { className, number, label, hideNumber, pluralLabels } = this.props;\n    let convertedNum: number;\n\n    if (typeof number === 'string') {\n      convertedNum = Number(number);\n    } else {\n      convertedNum = number;\n    }\n\n    const plural = number === 1 ? '' : 's';\n\n    return (\n      <div>\n        <span>\n          {hideNumber ? null : NumericLabel.roundNumber(convertedNum)}{' '}\n        </span>\n        <span className={className}>\n          {pluralLabels ? (\n            <>{this.setPluralLabel(pluralLabels, number)}</>\n          ) : (\n            <> {label ? label + plural : null} </>\n          )}\n        </span>\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n\n  private setPluralLabel(plurals, number) {\n    return number === 0 || number === 1 ? plurals[number] : plurals['other'];\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\n\nimport { TrashIcon } from '@patternfly/react-icons';\n\nimport { GroupObjectPermissionType, GroupAPI } from 'src/api';\nimport { APISearchTypeAhead, PermissionChipSelector } from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  groups: GroupObjectPermissionType[];\n  availablePermissions: string[];\n  setGroups: (groups: GroupObjectPermissionType[]) => void;\n  isDisabled?: boolean;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  searchGroups: { name: string; id: number | string }[];\n}\n\nexport class ObjectPermissionField extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const { groups, availablePermissions } = this.props;\n\n    return (\n      <div>\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelect}\n          placeholderText={t`Find a group`}\n          menuAppendTo={this.props.menuAppendTo}\n          isDisabled={!!this.props.isDisabled}\n        />\n        <br />\n        <div>\n          {groups.map((group, i) => (\n            <Flex\n              style={{ marginTop: '16px' }}\n              alignItems={{ default: 'alignItemsCenter' }}\n              key={group.name}\n            >\n              <FlexItem style={{ minWidth: '200px' }}>{group.name}</FlexItem>\n              <FlexItem grow={{ default: 'grow' }} style={{ width: '90%' }}>\n                <PermissionChipSelector\n                  availablePermissions={availablePermissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  selectedPermissions={group.object_permissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  setSelected={(perms) => this.setPermissions(perms, group)}\n                  menuAppendTo={this.props.menuAppendTo}\n                />\n              </FlexItem>\n              <FlexItem>\n                <TrashIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => this.removeGroup(group)}\n                />\n              </FlexItem>\n            </Flex>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  private removeGroup(group) {\n    const newGroups = [];\n    for (const g of this.props.groups) {\n      if (g.id !== group.id) {\n        newGroups.push(g);\n      }\n    }\n\n    this.props.setGroups(newGroups);\n  }\n\n  private setPermissions(perms, group) {\n    const newGroups = [...this.props.groups];\n    const selectedGroup = newGroups.find((g) => g.id === group.id);\n    selectedGroup.object_permissions = perms.map((perm) =>\n      twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n    );\n\n    this.props.setGroups(newGroups);\n  }\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name }).then((result) => {\n      const added = this.props.groups.map((group) => group.name);\n      const groups = result.data.data.filter(\n        (group) => !added.includes(group.name),\n      );\n      this.setState({ searchGroups: groups });\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    const newGroups = [...this.props.groups];\n\n    const addedGroup = this.state.searchGroups.find(\n      (g) => g.name === selection,\n    );\n\n    newGroups.push({\n      id: addedGroup.id as number,\n      name: addedGroup.name,\n      object_permissions: this.props.availablePermissions,\n    });\n\n    this.props.setGroups(newGroups);\n  };\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n  ToggleTemplate,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n        titles={{\n          ofWord: t`of`,\n          perPageSuffix: t`per page`,\n          items: null,\n        }}\n        toggleTemplate={(props) => <ToggleTemplate ofWord={t`of`} {...props} />}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { BaseHeader, Tabs, TabsType, Breadcrumbs } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n    return (\n      <BaseHeader\n        title={namespace.company || namespace.name}\n        imageURL={namespace.avatar_url}\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions: string[];\n  selectedPermissions: string[];\n  setSelected: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map((text) => (\n            <Label key={text}>{text}</Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={this.onToggle}\n        onSelect={!!this.props.onSelect ? this.props.onSelect : this.onSelect}\n        onClear={\n          !!this.props.onClear ? this.props.onClear : this.clearSelection\n        }\n        selections={this.props.selectedPermissions}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option} />\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return t`Select permissions`;\n    }\n    return this.props.selectedPermissions.length === 0 ? t`No permission` : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    const newPerms = new Set(this.props.selectedPermissions);\n    if (newPerms.has(selection)) {\n      newPerms.delete(selection);\n    } else {\n      newPerms.add(selection);\n    }\n\n    this.props.setSelected(Array.from(newPerms));\n  };\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText, FileUpload } from 'src/components';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet, isWriteOnly } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: object;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ninterface IState {\n  uploadedRequirementFilename: string;\n  uploadedClientKeyFilename: string;\n  uploadedClientCertFilename: string;\n  uploadedCaCertFilename: string;\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    let [\n      requirementsFilename,\n      clientCertFilename,\n      clientKeyFilename,\n      caCertFilename,\n    ] = Array(4).fill('');\n\n    if (!!props.remote) {\n      requirementsFilename = this.props.remote.requirements_file\n        ? 'requirements.yml'\n        : '';\n      clientKeyFilename = this.props.remote.client_key ? 'client_key.yml' : '';\n      clientCertFilename = this.props.remote.client_cert\n        ? 'client_cert.yml'\n        : '';\n      caCertFilename = this.props.remote.ca_cert ? 'ca_cert.yml' : '';\n    }\n\n    this.state = {\n      uploadedRequirementFilename: requirementsFilename,\n      uploadedClientKeyFilename: clientKeyFilename,\n      uploadedClientCertFilename: clientCertFilename,\n      uploadedCaCertFilename: caCertFilename,\n    };\n  }\n\n  render() {\n    const { remote, errorMessages } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n      >\n        requirements.yml\n      </a>\n    );\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          validated={this.toError(!('url' in errorMessages))}\n          helperTextInvalid={errorMessages['url']}\n        >\n          <TextInput\n            validated={this.toError(!('url' in errorMessages))}\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren't\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedRequirementFilename}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState(\n                      { uploadedRequirementFilename: filename },\n                      () => this.updateRemote(value, 'requirements_file'),\n                    );\n                  }}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      this.state.uploadedRequirementFilename,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={t`The username to be used for authentication when syncing. This is not required when using a token.`}\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={t`The password to be used for authentication when syncing. This is not required when using a token.`}\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='text'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedClientKeyFilename}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState({ uploadedClientKeyFilename: filename }, () =>\n                      this.updateRemote(value, 'client_key'),\n                    );\n                  }}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={this.state.uploadedClientCertFilename}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={(value, filename) => {\n                      this.setState(\n                        { uploadedClientCertFilename: filename },\n                        () => this.updateRemote(value, 'client_cert'),\n                      );\n                    }}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        this.state.uploadedClientCertFilename,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={this.state.uploadedCaCertFilename}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={(value, filename) => {\n                      this.setState({ uploadedCaCertFilename: filename }, () =>\n                        this.updateRemote(value, 'ca_cert'),\n                      );\n                    }}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        this.state.uploadedCaCertFilename,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, SortTable, StatefulDropdown } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { lastSynced, lastSyncStatus } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  polling: any;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      } else {\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { user } = this.props;\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {!!remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <td>\n          {remote.repositories.length === 0 ? (\n            <Tooltip\n              content={t`There are no repos associated with this remote.`}\n            >\n              <Button variant='plain'>\n                <ExclamationCircleIcon />\n              </Button>\n            </Tooltip>\n          ) : (\n            !!user &&\n            user.model_permissions.change_remote && (\n              <>\n                {this.getConfigureOrSyncButton(remote)}\n                <span>\n                  <StatefulDropdown\n                    items={[\n                      <DropdownItem\n                        key='edit'\n                        onClick={() => this.props.editRemote(remote)}\n                      >\n                        {t`Edit`}\n                      </DropdownItem>,\n                    ]}\n                  />\n                </span>\n              </>\n            )\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { user } = this.props;\n    if (!!user && !user.model_permissions.change_remote) {\n      return null;\n    }\n    const configButton = (\n      <Button onClick={() => this.props.editRemote(remote)} variant='secondary'>\n        {t`Configure`}\n      </Button>\n    );\n\n    const syncButton = (\n      <>\n        <Button\n          isDisabled={\n            remote.repositories.length === 0 ||\n            (remote.last_sync_task &&\n              ['running', 'waiting'].includes(remote.last_sync_task.state))\n          }\n          onClick={() =>\n            this.props.syncRemote(\n              remote.repositories[0].distributions[0].base_path,\n            )\n          }\n          variant='secondary'\n        >\n          {t`Sync`}\n        </Button>\n      </>\n    );\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: any;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return null;\n    }\n\n    const repoNames = Constants.REPOSITORYNAMES;\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              variant='plain'\n              className='input-group-text-no-wrap'\n            >\n              {t`Filter by repository`}\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoBasePath(event.target.name);\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: newRepo,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={(isExpanded) => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              {Object.keys(repoNames).map((option) => (\n                <SelectOption\n                  name={option}\n                  key={option}\n                  value={repoNames[option]}\n                />\n              ))}\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoBasePath(basePath) {\n    const newRepoName = Object.keys(Constants.REPOSITORYNAMES).find(\n      (key) => Constants.REPOSITORYNAMES[key] === basePath,\n    );\n\n    // allowing the repo to go through even if isn't one that we support so\n    // that 404s bubble up naturally from the child components.\n    if (!newRepoName) {\n      return basePath;\n    }\n    return newRepoName;\n  }\n\n  private getRepoName(repoName) {\n    if (Constants.REPOSITORYNAMES[repoName]) {\n      return Constants.REPOSITORYNAMES[repoName];\n    }\n\n    return repoName;\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport { isEqual, isEmpty, xorWith, cloneDeep } from 'lodash';\nimport { APISearchTypeAhead, ObjectPermissionField } from 'src/components';\nimport {\n  ContainerDistributionAPI,\n  GroupObjectPermissionType,\n  ExecutionEnvironmentNamespaceAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remotePulpId?: string;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n  originalSelectedGroups: GroupObjectPermissionType[];\n\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      description: this.props.description,\n      selectedGroups: [],\n      originalSelectedGroups: [],\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries().then(() => {\n        // prefill registry if passed from props\n        if (this.props.registry) {\n          this.setState({\n            registrySelection: this.state.registries.filter(\n              ({ id }) => id === this.props.registry,\n            ),\n          });\n        }\n      });\n    }\n\n    if (!this.props.isNew) {\n      this.loadSelectedGroups();\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      selectedGroups,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            onClick={() => onSave(this.onSave())}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => this.setState({ name: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup key='registry' fieldId='registry' label={t`Registry`}>\n                {registries ? (\n                  <APISearchTypeAhead\n                    loadResults={(name) => this.loadRegistries(name)}\n                    onClear={() => this.setState({ registrySelection: [] })}\n                    onSelect={(event, value) =>\n                      this.setState({\n                        registrySelection: registries.filter(\n                          ({ name }) => name === value,\n                        ),\n                      })\n                    }\n                    placeholderText={t`Select a registry`}\n                    results={registries}\n                    selections={registrySelection}\n                  />\n                ) : (\n                  <Spinner />\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              {includeTags.length && excludeTags.length ? (\n                <Alert\n                  variant='warning'\n                  isInline\n                  title={t`It does not make sense to include and exclude tags at the same time.`}\n                />\n              ) : null}\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n          <FormGroup\n            key='groups'\n            fieldId='groups'\n            label={t`Groups with access`}\n          >\n            <div className='pf-c-form__helper-text'>\n              {t`Adding groups provides access to all repositories in the\n                \"${namespace}\" container namespace.`}\n            </div>\n            <ObjectPermissionField\n              groups={this.state.selectedGroups}\n              availablePermissions={Constants.CONTAINER_NAMESPACE_PERMISSIONS}\n              setGroups={(g) => this.setState({ selectedGroups: g })}\n              menuAppendTo='parent'\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.change_containernamespace',\n                )\n              }\n            ></ObjectPermissionField>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ pk, name }) => ({ id: pk, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private loadSelectedGroups() {\n    const { namespace } = this.props;\n    return ExecutionEnvironmentNamespaceAPI.get(namespace).then((result) =>\n      this.setState({\n        selectedGroups: cloneDeep(result.data.groups),\n        originalSelectedGroups: result.data.groups,\n      }),\n    );\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      namespace,\n      remotePulpId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      selectedGroups,\n      originalSelectedGroups,\n      upstreamName: upstream_name,\n    } = this.state;\n\n    if (isRemote && isNew) {\n      return ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    }\n\n    return Promise.all([\n      // remote edit - upstream, tags, registry\n      isRemote &&\n        !isNew &&\n        ExecutionEnvironmentRemoteAPI.update(remotePulpId, {\n          name: originalName, // readonly but required\n          upstream_name,\n          registry,\n          include_tags,\n          exclude_tags,\n        }),\n      // remote edit or local edit - description, if changed\n      description !== originalDescription &&\n        ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      // remote edit or local edit - groups, if changed\n      !this.compareGroupsAndPerms(\n        selectedGroups.sort(),\n        originalSelectedGroups.sort(),\n      ) &&\n        ExecutionEnvironmentNamespaceAPI.update(namespace, {\n          groups: selectedGroups,\n        }),\n    ]);\n  }\n\n  //Compare groups and compare their permissions\n  private compareGroupsAndPerms(original, newOne) {\n    let same = true;\n    if (original.length === newOne.length) {\n      original.forEach((x, index) => {\n        if (\n          !isEmpty(\n            xorWith(\n              x.object_permissions.sort(),\n              newOne[index].object_permissions.sort(),\n              isEqual,\n            ),\n          )\n        ) {\n          same = false;\n        }\n      });\n    }\n    return isEmpty(xorWith(original, newOne, isEqual)) && same;\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { sortBy } from 'lodash';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) =>\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Error loading Controllers`,\n              description: e.message,\n            },\n          ],\n        }),\n      );\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-pulp_created',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) =>\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Error loading tags`,\n              description: e.message,\n            },\n          ],\n        }),\n      );\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, controllerCount, digest, tag } = this.state;\n    const url = getContainersURL();\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const imageUrl = `${url}/${tag ? `${image}:${tag}` : digest}`;\n          const href = `${host}/#/execution_environments/add?image=${encodeURIComponent(\n            imageUrl,\n          )}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }}>\n              <a href={href} target='_blank'>\n                {host}\n              </a>{' '}\n              <small>\n                <ExternalLinkAltIcon />\n              </small>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    // FIXME: installer docs link\n    const docsLink = 'https://fixme.example.com';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that Controller's\n              console. Log in (if necessary) and follow the steps to complete\n              the configuration.\n            </Trans>\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  updateParams={(controllerParams) => {\n                    controllerParams.page = 1;\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps, {}> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    const { digest, grey, long } = this.props;\n\n    return (\n      <Tooltip content={digest}>\n        <Label color={grey ? 'grey' : 'blue'}>\n          {long ? digest : truncateSha(digest)}\n        </Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: any;\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams(\n        ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n      ),\n    );\n  }\n\n  private setDescending() {\n    let field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n    );\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Select input`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n            aria-labelledby='Sort results'\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n    );\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    let activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr aria-labelledby='headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNodeArray;\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Label } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: string;\n  icon: any;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps, {}> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: t`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: t`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: t`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: t`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type] as any}\n        color={labelProps.color as any}\n        icon={labelProps.icon}\n        className={this.props.className}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: t`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab.name}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Label className='tag' readOnly>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Toolbar as ToolbarPF,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarContent,\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { Sort } from 'src/components';\n\nimport { SortFieldType } from './sort';\n\ninterface IProps {\n  /** Current page params */\n  params: {\n    sort?: string;\n    keywords?: string;\n  };\n\n  /** List of sort options that the user can pick from */\n  sortOptions?: SortFieldType[];\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Search bar placeholder text*/\n  searchPlaceholder: string;\n\n  /** Extra set of customizeable inputs that appear to right of sort*/\n  extraInputs?: React.ReactNode[];\n}\n\ninterface IState {\n  kwField: string;\n}\n\n// FIXME: only used in collection-list & namespace-list, other Toolbar is unrelated; merge\nexport class Toolbar extends React.Component<IProps, IState> {\n  static defaultProps = {\n    extraInputs: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      kwField: props.params.keywords || '',\n    };\n  }\n\n  render() {\n    const {\n      params,\n      sortOptions,\n      updateParams,\n      searchPlaceholder,\n      extraInputs,\n    } = this.props;\n    const { kwField } = this.state;\n    return (\n      <ToolbarPF>\n        <ToolbarContent>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <InputGroup>\n                <TextInput\n                  value={kwField}\n                  onChange={(k) => this.setState({ kwField: k })}\n                  onKeyPress={(e) => this.handleEnter(e)}\n                  type='search'\n                  aria-label={t`search text input`}\n                  placeholder={searchPlaceholder}\n                />\n                <Button\n                  variant={ButtonVariant.control}\n                  aria-label={t`search button`}\n                  onClick={() => this.submitKeywords()}\n                >\n                  <SearchIcon />\n                </Button>\n              </InputGroup>\n            </ToolbarItem>\n          </ToolbarGroup>\n          {sortOptions && (\n            <ToolbarGroup>\n              <ToolbarItem>\n                <Sort\n                  options={sortOptions}\n                  params={params}\n                  updateParams={updateParams}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          )}\n          {extraInputs}\n        </ToolbarContent>\n      </ToolbarPF>\n    );\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter') {\n      this.submitKeywords();\n    }\n  }\n\n  private submitKeywords() {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        'keywords',\n        this.state.kwField,\n      ),\n      page: 1, // always reset the page when searching\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps, {}> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  errorMessages: any; // FIXME: { [key: string]: string }, but all callers use {}, object or any\n  formFields: {\n    formGroupLabelIcon?: React.ReactNode;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  model: any;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && (field.formGroupLabelIcon as any)}\n          validated={isReadonly ? 'default' : validated}\n          aria-labelledby={field.id}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as any) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\n\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: object;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: any[];\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm } = this.state;\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least 9 characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        aria-labelledby='readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelectGroup}\n          placeholderText={t`Select groups`}\n          selections={user.groups}\n          multiple={true}\n          onClear={this.clearGroups}\n          isDisabled={isReadonly}\n        />\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={(e) =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection, isPlaceholder) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 }).then((result) =>\n      this.setState({ searchGroups: result.data.data }),\n    );\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport { BaseHeader, Main, Breadcrumbs, UserForm } from 'src/components';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: any[];\n  errorMessages: object;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: object) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: any;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label={t`hidden value`}\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {t`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\n\ninterface IProps {\n  children: string;\n  [key: string]: any;\n}\n\nexport class ClipboardCopy extends React.Component<IProps, {}> {\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <PFClipboardCopy\n        hoverTip={t`Copy to clipboard`}\n        clickTip={t`Successfully copied to clipboard!`}\n        {...props}\n      >\n        {children}\n      </PFClipboardCopy>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  FileUpload as PFFileUpload,\n  FileUploadProps,\n} from '@patternfly/react-core';\n\nexport class FileUpload extends React.Component<FileUploadProps, {}> {\n  render() {\n    return (\n      <PFFileUpload\n        browseButtonText={t`Browse...`}\n        clearButtonText={t`Clear`}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        {...this.props}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      object_permissions: [\n        'galaxy.add_namespace',\n        'galaxy.change_namespace',\n        'galaxy.upload_to_namespace',\n      ],\n    },\n    {\n      name: 'collections',\n      object_permissions: ['ansible.modify_ansible_repo_content'],\n    },\n    {\n      name: 'users',\n      object_permissions: [\n        'galaxy.view_user',\n        'galaxy.delete_user',\n        'galaxy.add_user',\n        'galaxy.change_user',\n      ],\n    },\n    {\n      name: 'groups',\n      object_permissions: [\n        'galaxy.view_group',\n        'galaxy.delete_group',\n        'galaxy.add_group',\n        'galaxy.change_group',\n      ],\n    },\n    {\n      name: 'remotes',\n      object_permissions: [\n        'ansible.change_collectionremote',\n        'ansible.view_collectionremote',\n      ],\n    },\n    {\n      name: 'containers',\n      object_permissions: [\n        // Turning off private container permissions since they aren't supported yet\n        // 'container.namespace_pull_containerdistribution',\n        // 'container.namespace_view_containerdistribution',\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.change_containernamespace',\n        'container.namespace_push_containerdistribution',\n        'container.add_containernamespace',\n      ],\n    },\n\n    // These aren't currently used. Removing them to reduce confusion in the UI\n    // {\n    //   name: 'distribution',\n    //   object_permissions: [\n    //     'ansible.change_ansibledistribution',\n    //     'ansible.view_ansibledistribution',\n    //   ],\n    // },\n    // {\n    //   name: 'synclists',\n    //   object_permissions: [\n    //     'galaxy.delete_synclist',\n    //     'galaxy.change_synclist',\n    //     'galaxy.view_synclist',\n    //     'galaxy.add_synclist',\n    //   ],\n    // },\n  ];\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n  static HUMAN_PERMISSIONS = {\n    'galaxy.add_namespace': t`Add namespace`,\n    'galaxy.change_namespace': t`Change namespace`,\n    'galaxy.upload_to_namespace': t`Upload to namespace`,\n    'ansible.modify_ansible_repo_content': t`Modify Ansible repo content`,\n    'galaxy.view_user': t`View user`,\n    'galaxy.delete_user': t`Delete user`,\n    'galaxy.add_user': t`Add user`,\n    'galaxy.change_user': t`Change user`,\n    'galaxy.view_group': t`View group`,\n    'galaxy.delete_group': t`Delete group`,\n    'galaxy.add_group': t`Add group`,\n    'galaxy.change_group': t`Change group`,\n    'ansible.change_collectionremote': t`Change collection remote`,\n    'ansible.view_collectionremote': t`View collection remote`,\n    'ansible.change_ansibledistribution': t`Change Ansible distribution`,\n    'ansible.view_ansibledistribution': t`View Ansible distribution`,\n    'galaxy.delete_synclist': t`Delete synclist`,\n    'galaxy.change_synclist': t`Change synclist`,\n    'galaxy.view_synclist': t`View synclist`,\n    'galaxy.add_synclist': t`Add synclist`,\n    'container.add_containernamespace': t`Create new containers`,\n    'container.namespace_pull_containerdistribution': t`Pull private containers`,\n    'container.namespace_change_containerdistribution': t`Change containers`,\n    'container.namespace_view_containerdistribution': t`View private containers`,\n    'container.namespace_modify_content_containerpushrepository': t`Change image tags`,\n    'container.change_containernamespace': t`Change container namespace permissions`,\n    'container.namespace_push_containerdistribution': t`Push to existing containers`,\n  };\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: t`Change namespace`,\n    upload_to_namespace: t`Upload to namespace`,\n    add_containernamespace: t`Create new containers`,\n    namespace_pull_containerdistribution: t`Pull private containers`,\n    namespace_change_containerdistribution: t`Update container information`,\n    namespace_view_containerdistribution: t`View private containers`,\n    namespace_modify_content_containerpushrepository: t`Change image tags`,\n    change_containernamespace: t`Change container namespace permissions`,\n    namespace_push_containerdistribution: t`Push images to existing containers`,\n    view_containernamespace: t`View container's namespace`,\n    delete_containernamespace: t`Delete container's namespace`,\n    namespace_delete_containerdistribution: t`Delete container's distribution`,\n    namespace_view_containerpushrepository: t`View container's repository`,\n    namespace_add_containerdistribution: t`Push new containers`,\n    change_containerdistribution: t`Change distribution`,\n    delete_containerdistribution: t`Delete distribution`,\n    push_containerdistribution: t`Push distribution`,\n    pull_containerdistribution: t`Pull distribution`,\n    view_containerdistribution: t`View distribution`,\n  };\n  static HUMAN_GROUP_DETAIL_PERMISSIONS = {\n    namespaces: t`Namespaces`,\n    collections: t`Collections`,\n    users: t`Users`,\n    groups: t`Groups`,\n    remotes: t`Remotes`,\n    containers: t`Containers`,\n  };\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: t`Published`,\n    'rh-certified': t`Red Hat Certified`,\n    community: t`Community`,\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static COLLECTION_PLURAL_LABELS = {\n    dependency: {\n      '0': 'dependencies',\n      '1': 'dependency',\n      other: 'dependencies',\n    },\n  };\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': t`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': t`Import and auto approve`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': t`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': t`Import and move to staging`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': t`Import and auto approve`,\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': t`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': t`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.sync': t`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.copy.copy_content': t`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.collections.collection_sync': t`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.roles.synchronize': t`Pulp Ansible: Roles synchronize`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': t`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.collections.import_collection': t`Pulp ansible: Import collection`,\n    'pulp_container.app.tasks.tag_image': t`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': t`Pulp container: Untage image`,\n    'pulp_container.app.tasks.synchronize': t`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.recursive_add_content': t`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': t`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.build_image_from_containerfile': t`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': t`Pulp container: General multi delete`,\n    'pulpcore.tasking.tasks.import_repository_version': t`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': t`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': t`Pulpcore: Repair all artifacts`,\n    'pulpcore.tasking.tasks.base.general_create': t`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_update': t`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.base.general_delete': t`Pulpcore: General delete`,\n    'pulpcore.app.tasks.export.pulp_export': t`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': t`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.delete_version': t`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': t`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': t`Pulpcore: Upload commit`,\n    'pulpcore.app.tasks.repository.add_and_remove': t`Pulpcore: Add and remove`,\n    'pulpcore.plugin.tasking.add_and_remove': t`Pulpcore: Add or remove`,\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n}\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (registry) {\n    throw new Error('store already initialized');\n  }\n\n  registry = new ReducerRegistry({}, [promise, ...middleware]);\n\n  //If you want to register all of your reducers, this is good place.\n  /*\n   *  registry.register({\n   *    someName: (state, action) => ({...state})\n   *  });\n   */\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React, { Component } from 'react';\nimport { LoadingPageWithHeader } from 'src/components';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null,\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component,\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? (\n        <C {...this.props} />\n      ) : (\n        <LoadingPageWithHeader></LoadingPageWithHeader>\n      );\n    }\n  }\n\n  return AsyncComponent;\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport asyncComponent from 'src/utilities/asyncComponent';\nimport some from 'lodash/some';\nimport { Paths } from 'src/paths';\n\n/**\n * Aysnc imports of components\n *\n * https://webpack.js.org/guides/code-splitting/\n * https://reactjs.org/docs/code-splitting.html\n *\n * pros:\n *      1) code splitting\n *      2) can be used in server-side rendering\n * cons:\n *      1) nameing chunk names adds unnecessary docs to code,\n *         see the difference with DashboardMap and InventoryDeployments.\n *\n */\nconst EditNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/edit-namespace/edit-namespace'\n  ),\n);\n\nconst CollectionDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-detail'\n  ),\n);\n\nconst CollectionContent = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-content'\n  ),\n);\n\nconst CollectionDocs = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-docs'\n  ),\n);\n\nconst CollectionImportLog = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-import-log'\n  ),\n);\n\nconst CollectionDependencies = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-dependencies'\n  ),\n);\n\nconst NotFound = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"not_found\" */\n    '../../containers/not-found/not-found'\n  ),\n);\n\nconst MyNamespaces = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/my-namespaces'\n  ),\n);\n\nconst ManageNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst PartnerDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst Partners = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/' + NAMESPACE_TERM\n  ),\n);\n\nconst MyImports = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"my_imports\" */\n    '../../containers/my-imports/my-imports'\n  ),\n);\n\nconst Search = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"search\" */\n    '../../containers/search/search'\n  ),\n);\n\nconst TokenPage = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/token/token-insights'\n  ),\n);\n\nconst CertificationDashboard = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/certification-dashboard/certification-dashboard'\n  ),\n);\n\nconst Repository = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"repository-list\" */\n    '../../containers/repositories/repository-list'\n  ),\n);\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n\n  return <Route {...rest} component={Component} />;\n};\n\nInsightsRoute.propTypes = {\n  component: PropTypes.func,\n  rootClass: PropTypes.string,\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = (props) => {\n  const path = props.childProps.location.pathname;\n\n  return (\n    <Switch>\n      <InsightsRoute\n        path={Paths.repositories}\n        component={Repository}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.approvalDashboard}\n        component={CertificationDashboard}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.notFound}\n        component={NotFound}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.token}\n        component={TokenPage}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths[NAMESPACE_TERM]}\n        component={Partners}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.editNamespace}\n        component={EditNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollections}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollectionsByRepo}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myNamespaces}\n        component={MyNamespaces}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPageByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndexByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocsByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentListByRepo}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLogByRepo}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDependenciesByRepo}\n        component={CollectionDependencies}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionByRepo}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespaceByRepo}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.searchByRepo}\n        component={Search}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPage}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndex}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocs}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentList}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLog}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myImports}\n        component={MyImports}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collection}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespace}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute path={Paths.search} component={Search} rootClass='root' />\n      {/* Finally, catch all unmatched routes */}\n      <Route\n        render={() =>\n          some(Paths, (p) => p === path) ? null : (\n            <Redirect push to={Paths.notFound} />\n          )\n        }\n      />\n    </Switch>\n  );\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { ActiveUserAPI } from 'src/api';\nimport { Paths } from 'src/paths';\n\nconst DEFAULT_REPO = 'published';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      activeUser: null,\n      selectedRepo: DEFAULT_REPO,\n    };\n  }\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('automation-hub');\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = insights.chrome.on('APP_NAVIGATION', (event) => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, no trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename.replace(/^\\/beta\\//, '/');\n\n      if (event.domEvent.href) {\n        // prod-beta\n        // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n        // (navId: corresponds to the last url component, but not the same one, ansible-hub means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners)\n\n        // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n        this.props.history.push(\n          event.domEvent.href.replace(basename, '') || '/',\n        );\n      } else {\n        // FIXME: may no longer be needed by the time this gets to prod-stable\n        // prod-stable\n        // (domEvent is a react event, no href (there is an absolute url in domEvent.target.href))\n        // navId: corresponds to the first url component after prefix, \"\" means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners\n        this.props.history.push(`/${event.navId}`);\n      }\n    });\n\n    insights.chrome.auth\n      .getUser()\n      .then((user) => this.setState({ user: user }));\n    ActiveUserAPI.getActiveUser().then((result) =>\n      this.setState({ activeUser: result.data }),\n    );\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate(prevProps) {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user || !this.state.activeUser) {\n      return null;\n    } else {\n      return (\n        <AppContext.Provider\n          value={{\n            user: this.state.activeUser,\n            setUser: this.setActiveUser,\n            selectedRepo: this.state.selectedRepo,\n          }}\n        >\n          <Routes childProps={this.props} />\n        </AppContext.Provider>\n      );\n    }\n  }\n  setActiveUser = (user) => {\n    this.setState({ activeUser: user });\n  };\n\n  isRepoURL = (location) => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n  basename: PropTypes.string.isRequired,\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { I18nProvider } from '@lingui/react';\nimport { i18n } from '@lingui/core';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport getBaseName from './utilities/getBaseName';\nimport 'src/l10n';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst basename = getBaseName(window.location.pathname);\n\nReactDOM.render(\n  <Provider store={init().getStore()}>\n    <Router basename={basename}>\n      <I18nProvider i18n={i18n}>\n        <App basename={basename} />\n      </I18nProvider>\n    </Router>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\n\nconst availableLanguages = ['en', 'es', 'fr', 'nl', 'ja', 'zh'];\n\n// Accept-Language\nexport const userLanguage =\n  navigator.languages\n    .map((lang) => lang.replace(/[-_].*/, ''))\n    .filter((lang) => availableLanguages.includes(lang))[0] || 'en';\n\nasync function activate(locale: string) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (window.localStorage.test_l10n === 'true') {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>Foo <<\", ['param']]\n        messages[key] = messages[key].map((item) =>\n          Array.isArray(item) ? item : '»' + item + '«',\n        );\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n}\n\nactivate(userLanguage);\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType, SettingsType } from 'src/api';\nimport { AlertType } from 'src/components';\n\ninterface IAppContextType {\n  user: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\n","import { t } from '@lingui/macro';\nimport { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(path: Paths, data: any, params?: object) {\n  let url = path as string;\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    return `${url}?${ParamHelper.getQueryString(params)}`;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  executionEnvironmentsRegistries = '/registries',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (let c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport function mapErrorMessages(err) {\n  const messages: any = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = !!API_HOST ? API_HOST : window.location.origin;\n\n  return !!distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\nexport function getContainersURL() {\n  return window.location.href.split('://')[1].split('/ui')[0];\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: any) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find((key) => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data: any,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  let splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\n\nexport function waitForTask(task, bailAfter = 10) {\n  return TaskAPI.get(task).then((result) => {\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, 5000)).then(() =>\n        waitForTask(task, bailAfter - 1),\n      );\n    }\n  });\n}\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: Object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: Object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: Object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (let k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p: any, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: Object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: Object, ignoreParams?: string[]) {\n    let paramString = [];\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams(params);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + ({\"33\":\"namespace_detail\",\"152\":\"not_found\",\"378\":\"repository-list\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] || chunkId) + \".\" + {\"33\":\"cb651d0ee3e4e1f754f9\",\"152\":\"52b0ef80841ccda871ca\",\"378\":\"11efa4326564fedfff5c\",\"379\":\"52de622d5ef47d5cc2c1\",\"415\":\"bd429f1e48ea61902d3c\",\"464\":\"3eebbeedeee83f590b2c\",\"541\":\"3ab756fac52a348e124c\",\"571\":\"311c3b6ff2330555b866\",\"682\":\"a60c31e654d98d7b2f22\",\"684\":\"ba5080b8e4fb52117d00\",\"776\":\"3c360ee8ee18f2d61059\",\"837\":\"9c45db6969e410c2d175\",\"853\":\"101455b5617233a392e2\",\"870\":\"e66553f393e6fd0f11ea\"}[chunkId] + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"css/\" + {\"33\":\"namespace_detail\",\"152\":\"not_found\",\"410\":\"pfVendor\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"768\":\"App\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] + \".\" + {\"33\":\"d42ddd10ad230fdd0e7a\",\"152\":\"edf236b3c340045471cc\",\"410\":\"7c905cfd3ed52b925748\",\"464\":\"479b6edf24556d317e6f\",\"571\":\"e278031ed8e7e4c376de\",\"684\":\"9d8e8029cd5e90f139f5\",\"768\":\"03e78fbd6203f8fb81ca\",\"776\":\"5be18d32371f96ba784a\",\"837\":\"60d5edc9717bf67286eb\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/beta/apps/automation-hub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkansible_hub_ui\"] = self[\"webpackChunkansible_hub_ui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [410,293,252,736], () => (__webpack_require__(52853)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","loadStylesheet","installedCssChunks","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","source","forceReload","cachedCollection","result","docs_blob","filterDetailItem","distro_base_path","version","reject","err","undefined","ImportMessageCodes","PulpStatus","NamespaceAPI","API","ImportAPI","ActiveUserAPI","identity","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","MySyncListAPI","TaskAPI","GroupAPI","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","RemoteAPI","distribution","obj","API_HOST","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","PulpAPI","repositoryID","tag","ContainerDistributionAPI","ExecutionEnvironmentNamespaceAPI","ControllerAPI","changedParams","APISearchTypeAhead","props","loadResults","onClear","evt","textInput","target","value","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","options","results","option","push","SelectOption","key","length","React","AlertList","alerts","closeAlert","style","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","Array","isArray","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","imageURL","pageControls","children","breadcrumbs","contextSelector","versionControl","status","cx","Logo","alt","image","size","unlockWidth","Title","headingLevel","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","to","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","avatar_url","TextContent","getCertification","formatPath","Paths","Text","component","TextVariants","CardBody","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","count","NumericLabel","number","hideNumber","label","pluralLabels","CollectionContentList","toShow","summary","all","showing","keywords","c","typeMatch","match","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","selectedRepo","AppContext","DateComponent","date","moment","locale","userLanguage","Tooltip","format","fromNow","CollectionHeader","page_size","modalPagination","collectionVersion","deleteCollection","res","taskId","getIdFromTask","task","waitForTask","all_versions","topVersion","setAlerts","redirect","detail","dependent_collection_versions","dependencies","List","separateStringDependencies","ListItem","message","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","getUsedbyDependencies","activeTab","find","x","created","created_at","urlKeys","latestVersion","isLatestVersion","collectionName","Modal","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","isInline","toString","ConfirmModal","cancelAction","closeModal","confirmAction","deleteCollectionVersion","confirmButtonTitle","paddingBottom","Checkbox","isChecked","RepoSelector","loadingVariant","text","renderSelectVersions","StatefulDropdown","items","DropdownItem","openDeleteModalWithConfirm","renderTabs","href","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","dependency","split","nsCollection","CollectionInfo","downloadLinkRef","installCommand","Grid","hasGutter","GridItem","tags","Tag","Split","SplitItem","isFilled","license","ClipboardCopy","isReadOnly","settings","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","user","is_anonymous","ref","icon","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","filterConfig","inputType","ToolbarContent","CompoundFilter","marginTop","CollectionList","collections","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","alignItems","handleControlClick","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","spinner","actions","Spinner","titleIconVariant","CollectionDependenciesList","ListVariant","splitDependencyName","separateVersion","EmptyStateNoData","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","newParams","selectedFilter","selectedID","currentTarget","replace","indexOf","submitMultiple","inputText","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","ButtonVariant","toggle","SelectGroup","onSelectMultiple","toLowerCase","isGrouped","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","margin","backgroundColor","color","fontSize","paddingLeft","paddingRight","paddingTop","borderRadius","EmptyStateCustom","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","HelperText","Popover","PopoverPosition","bodyContent","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","apiError","loading","renderTitle","isLoading","followMessages","handleScrollClick","messages","renderMessage","level","hideCollectionName","collectionHead","approvalStatus","rlist","repository_list","StatusIndicator","error","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","selectImport","importList","namespaces","numberOfResults","renderNamespacePicker","renderList","perPage","onSetPage","_","onPerPageSelect","isCompact","getStatusClass","renderDescription","finished_at","statusClass","FormSelect","ns","FormSelectOption","tab","renderTab","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","cliConfig","repository","getRepoUrl","base_path","content_count","pulp_last_updated","isCode","join","justifyContent","objectFit","maxHeight","src","DefaultLogo","extra","MarkdownEditor","updateText","helperText","editing","Form","FormGroup","fieldId","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","newNamespaceGroup","errorMessages","userId","isRequired","helperTextInvalid","validated","toError","updateField","isNaN","Number","ObjectPermissionField","groups","availablePermissions","setGroups","g","newNS","updateNamespace","getLinksErrorText","renderLinkGroup","addLink","msg","update","last","updateLink","removeLink","NamespaceModal","newNamespaceName","newGroups","toggleModal","onCreateSuccess","errors","parameter","newNamespaceNameValid","test","startsWith","handleSubmit","labelIcon","newNamespaceNameIsValid","convertedNum","plural","roundNumber","setPluralLabel","plurals","n","Math","floor","name__contains","added","searchGroups","addedGroup","object_permissions","loadGroups","Flex","default","FlexItem","minWidth","grow","PermissionChipSelector","perm","twoWayMapper","selectedPermissions","setSelected","perms","setPermissions","cursor","removeGroup","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","titles","ofWord","perPageSuffix","toggleTemplate","ToggleTemplate","String","PartnerHeader","filters","Tabs","newPerms","Set","has","add","from","isViewOnly","Label","typeAheadAriaLabel","clearSelection","RemoteForm","fill","requirementsFilename","clientCertFilename","clientKeyFilename","caCertFilename","requirements_file","client_key","client_cert","ca_cert","uploadedRequirementFilename","uploadedClientKeyFilename","uploadedClientCertFilename","uploadedCaCertFilename","remoteType","getRemoteType","requiredFields","disabledFields","allowEditName","concat","showModal","isValid","saveRemote","renderForm","docsAnsibleLink","updateRemote","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","FileUpload","filename","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","download_concurrency","rate_limit","isInteger","host","fieldName","newFields","is_set","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","r","updated_at","lastSynced","lastSyncStatus","model_permissions","change_remote","getConfigureOrSyncButton","editRemote","configButton","syncButton","syncRemote","distributions","selectExpanded","repoNames","InputGroupText","newRepo","getRepoBasePath","setRepo","getRepoName","basePath","repoName","ResourcesForm","resources","updateResources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","ariaLabel","Dropdown","renderToggle","dropdownItems","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","content_name","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","T","findIndex","readOnly","Toolbar","sortOptions","searchPlaceholder","extraInputs","submitKeywords","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","onSubmit","preventDefault","onSave","UserForm","newUser","updateUser","updateUserFieldByName","passwordConfirm","saveUser","onCancel","isNewUser","isMe","superuserLabel","getSuperUserHelperText","Switch","is_superuser","labelOff","isPassSame","onSelectGroup","clearGroups","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","hoverTip","clickTip","browseButtonText","clearButtonText","filenamePlaceholder","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","change_containernamespace","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","users","containers","published","community","other","completed","failed","running","waiting","registry","asyncComponent","importComponent","C","Component","EditNamespace","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","CollectionDependencies","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","CertificationDashboard","Repository","InsightsRoute","rootClass","rest","root","document","getElementById","removeAttribute","classList","setAttribute","propTypes","PropTypes","Routes","childProps","location","pathname","render","some","DEFAULT_REPO","App","activeUser","matchPath","init","identifyApp","appNav","on","domEvent","basename","history","navId","prevProps","isRepoURL","setUser","setActiveUser","withRouter","connect","release","pathName","shift","ReactDOM","store","middleware","ReducerRegistry","promise","getStore","i18n","availableLanguages","navigator","languages","lang","localStorage","test_l10n","forEach","activate","namespaceBreadcrumb","total_count","role","plugin","mapErrorMessages","distributionPath","origin","getContainersURL","mapper","values","writeOnlyFields","el","newObj","sha","splitSha","entity","errorMessage","bailAfter","setTimeout","paramString","numericTypes","URLSearchParams","appendParam","param","encodeURIComponent","callback","search","getQueryString","getReduced","deleteParam","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","getPrototypeOf","mode","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","reduce","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","l","done","script","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","fullhref","existingLinkTags","dataHref","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","createStylesheet","miniCss","installedChunks","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}