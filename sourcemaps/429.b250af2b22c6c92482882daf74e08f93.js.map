{"version":3,"file":"js/429.881f6a9102dda4cd68aa.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/components/approve-modal/approve-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import axios from 'axios';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post('v3/artifacts/collections/', formData, config);\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n\n  copyToRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { RemoteType } from '.';\nimport { HubAPI } from './hub';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n\n  listApproved(): Promise<ReturnRepository> {\n    return this.http.get(\n      `${this.apiPath}?pulp_label_select=${encodeURIComponent(\n        'pipeline=approved',\n      )}`,\n    );\n  }\n\n  list(params?) {\n    return super.list(params, this.apiPath);\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/copy_collection_version/`,\n      params,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/move_collection_version/`,\n      params,\n    );\n  }\n\n  modify(\n    pulp_id: string,\n    add_content_units: string[],\n    remove_content_units: string[],\n    base_version: string,\n  ) {\n    const params = {\n      add_content_units,\n      remove_content_units,\n      base_version,\n    };\n\n    return this.http.post(this.apiPath + `${pulp_id}/modify/`, params);\n  }\n}\n\nexport const Repositories = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from remote.ts\nexport function smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(uuid, params?) {\n    return this.list(params, this.getPath(null) + uuid + '/versions/');\n  }\n\n  // delete(uuid)\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n\n  revert(id, version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top: '80px',\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Constants } from 'src/constants';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionListType } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  name,\n  latest_version,\n  namespace,\n  className,\n  displaySignatures,\n  footer,\n  repo,\n  sign_state,\n  menu,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace.company || namespace.name;\n  const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <TextContent>{getCertification(repo)}</TextContent>\n        {displaySignatures ? (\n          <SignatureBadge isCompact signState={sign_state} />\n        ) : null}\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n          >\n            {name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>Provided by {company}</Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              latest_version.metadata.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getCertification(repo) {\n  if (repo === Constants.CERTIFIED_REPO) {\n    return (\n      <Text component={TextVariants.small}>\n        <Badge isRead>{t`Certified`}</Badge>\n      </Text>\n    );\n  }\n\n  return null;\n}\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  namespace,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n  const context = useContext();\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection,\n                      namespace: namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: context.selectedRepo,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        context.selectedRepo === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport { Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\n\nexport const CollectionCount = ({ distributionPath }: IProps) => {\n  const [collectionCount, setCollectionCount] = useState(null);\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const getCollectionCount = (repo) => {\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        setCollectionCount(count);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        const { status, statusText } = err.response;\n        addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n          setAlerts,\n          alerts,\n        );\n      });\n  };\n\n  useEffect(() => {\n    getCollectionCount(distributionPath);\n  }, []);\n\n  return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n};\n\nfunction addAlert(title, variant, description, setAlerts, alerts) {\n  setAlerts([\n    ...alerts,\n    {\n      description,\n      title,\n      variant,\n    },\n  ]);\n}\n","import * as moment from 'moment';\nimport * as React from 'react';\nimport { Tooltip } from 'src/components';\n\ninterface IProps {\n  date: string;\n}\n\nexport const DateComponent = (props: IProps) => {\n  const { date } = props;\n\n  return (\n    date && (\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionListType,\n  CollectionVersion,\n  MyNamespaceAPI,\n  Repositories,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  DeleteCollectionModal,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { DeleteCollectionUtils, errorMessage } from 'src/utilities';\nimport {\n  canSignNamespace,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\nimport './header.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context.featureFlags;\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, namespace);\n\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${namespace.name}-${collectionName}-${collection.latest_version.version}`,\n      );\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={collectionVersion}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceByRepo, {\n                      repo: this.context.selectedRepo,\n                      namespace: deleteCollection.namespace.name,\n                    }),\n                    selectedRepo: this.context.selectedRepo,\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              path={Paths.searchByRepo}\n              selectedRepo={this.context.selectedRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              {display_signatures ? (\n                <SignatureBadge\n                  isCompact\n                  signState={collection.latest_version.sign_state}\n                />\n              ) : null}\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.queueAlert({\n              variant: 'success',\n              title: (\n                <Trans>\n                  Collection &quot;{name} v{collectionVersion}&quot; has been\n                  successfully deleted.\n                </Trans>\n              ),\n            });\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem = ({ version }: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { ClipboardCopy, LoginLink, Tag } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport const CollectionInfo = ({\n  name,\n  latest_version,\n  namespace,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{latest_version.metadata.description}</GridItem>\n        <GridItem>\n          {latest_version.metadata.tags.map((tag, i) => (\n            <Tag key={i}>{tag}</Tag>\n          ))}\n        </GridItem>\n\n        {latest_version?.metadata?.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {latest_version.metadata.license\n                  ? latest_version.metadata.license.join(', ')\n                  : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n              {context.user.is_anonymous &&\n              !context.settings\n                .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                <Alert\n                  className={'hub-collection-download-alert'}\n                  isInline\n                  variant='warning'\n                  title={\n                    <React.Fragment>\n                      {t`You have to be logged in to be able to download the tarball.`}{' '}\n                      <LoginLink />\n                    </React.Fragment>\n                  }\n                />\n              ) : (\n                <div>\n                  <a ref={downloadLinkRef} style={{ display: 'none' }}></a>\n                  <Button\n                    className='download-button'\n                    variant='link'\n                    data-cy='download-collection-tarball-button'\n                    icon={<DownloadIcon />}\n                    onClick={() =>\n                      download(\n                        context.selectedRepo,\n                        namespace,\n                        name,\n                        latest_version,\n                        downloadLinkRef,\n                        addAlert,\n                      )\n                    }\n                  >\n                    {t`Download tarball`}\n                  </Button>\n                </div>\n              )}\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem version={latest_version} />\n        {latest_version.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {latest_version.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {latest_version.docs_blob.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: latest_version.docs_blob.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out'></div>\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: name,\n                  namespace: namespace.name,\n                  repo: context.selectedRepo,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  reponame,\n  namespace,\n  name,\n  latest_version,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(\n    reponame,\n    namespace.name,\n    name,\n    latest_version.version,\n  )\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const [inputText, setInputText] = useState(props.params.keywords || '');\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures } = context.featureFlags;\n  const display_tags = ignoredParams.includes('tags') === false;\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    display_tags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'multiple' as const,\n      options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n        id: tag,\n        title: tag,\n      })),\n    },\n    display_signatures && {\n      id: 'sign_state',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'signed', title: t`Signed` },\n        { id: 'unsigned', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  sign_state: t`sign state`,\n                  tags: t`tags`,\n                  keywords: t`keywords`,\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionListType[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  repo?: string;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n    showControls,\n    repo,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c) => (\n            <CollectionListItem\n              controls={showControls ? props.renderCollectionControls(c) : null}\n              key={c.id}\n              {...c}\n              repo={repo}\n              displaySignatures={displaySignatures}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  displaySignatures: boolean;\n  repo?: string;\n}\n\nexport const CollectionListItem = (props: IProps) => {\n  const {\n    name,\n    latest_version,\n    namespace,\n    showNamespace,\n    controls,\n    deprecated,\n    displaySignatures,\n    repo,\n    sign_state,\n  } = props;\n\n  const cells = [];\n\n  const company = namespace.company || namespace.name;\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: name,\n            namespace: namespace.name,\n            repo: repo,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {name}\n        </Link>\n        {deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>Provided by {company}</Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry'>{latest_version.metadata.description}</div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup {...chipGroupProps()}>\n          {latest_version.metadata.tags.map((tag, index) => (\n            <Tag key={index}>{tag}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      {controls ? <div className='hub-entry'>{controls}</div> : null}\n      <div className='hub-right-col hub-entry'>\n        <Trans>\n          Updated <DateComponent date={latest_version.created_at} />\n        </Trans>\n      </div>\n      <div className='hub-entry'>v{latest_version.version}</div>\n      {displaySignatures ? (\n        <SignatureBadge className='hub-entry' signState={sign_state} />\n      ) : null}\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm'></Spinner>}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionDetailType, CollectionVersion } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  dependencies_repos: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.latest_version.metadata;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {t`Delete`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { AppContext } from 'src/loaders/app-context';\nimport { mapErrorMessages } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      <EmptyStateIcon icon={icon} />\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const repoStatus = collection.repository.pulp_labels?.pipeline;\n      if (repoStatus === Constants.NOTCERTIFIED) {\n        approvalStatus = t`rejected`;\n      } else if (repoStatus === Constants.NEEDSREVIEW) {\n        approvalStatus = t`waiting for approval`;\n      } else if (repoStatus === Constants.APPROVED) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { errorMessage, filterIsSet } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent, EmptyStateFilter, EmptyStateNoData } from '..';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?:\n    | CollectionVersionSearch['collection_version']\n    | CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { CollectionCount } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { ClipboardCopy, DateComponent, EmptyStateNoData, SortTable } from '..';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository?.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository?.name}_repo]`,\n      `url=${getRepoUrl()}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository?.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            ?.pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>{getRepoUrl()}</ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            {distribution.repository ? (\n              <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n                {cliConfig.join('\\n')}\n              </ClipboardCopy>\n            ) : (\n              '---'\n            )}\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  }[type] || type);\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport './header.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlert,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  inputText: '',\n};\n\nexport const PublishToControllerModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState(initialState.alerts);\n  const [controllers, setControllers] = useState(initialState.controllers);\n  const [controllerCount, setControllerCount] = useState(\n    initialState.controllerCount,\n  );\n  const [controllerParams, setControllerParams] = useState(\n    initialState.controllerParams,\n  );\n  const [digest, setDigest] = useState(initialState.digest);\n  const [digestByTag, setDigestByTag] = useState(initialState.digestByTag);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [tag, setTag] = useState(initialState.tag);\n  const [tagResults, setTagResults] = useState(initialState.tagResults);\n  const [tagSelection, setTagSelection] = useState(initialState.tagSelection);\n\n  const [inputText, setInputText] = useState(initialState.inputText);\n\n  useEffect(() => {\n    const { image, isOpen } = props;\n    if (isOpen) {\n      // load on open\n      fetchData(image);\n    } else {\n      // reset on close\n      setAlerts(initialState.alerts);\n      setControllers(initialState.controllers);\n      setControllerCount(initialState.controllerCount);\n      setControllerParams(initialState.controllerParams);\n      setDigest(initialState.digest);\n      setDigestByTag(initialState.digestByTag);\n      setLoading(initialState.loading);\n      setTag(initialState.tag);\n      setTagResults(initialState.tagResults);\n      setTagSelection(initialState.tagSelection);\n\n      setInputText(initialState.inputText);\n    }\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    fetchControllers();\n  }, [controllerParams]);\n\n  function fetchControllers() {\n    return ControllerAPI.list(controllerParams)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        setControllers(controllers);\n        setControllerCount(controllerCount);\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Controllers list could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        setDigestByTag(digestByTag);\n        setTagResults(tagResults);\n\n        return { digestByTag, tags };\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Tags could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchData(image) {\n    const controllers = fetchControllers();\n    const tagsPromises = fetchTags(image).then(({ tags, digestByTag }) => {\n      // tags and digestByTag must be passed this way from fetchTags, otherwise, closure\n      // will see old value of both variables set in fetchTags\n      // and additionaly, tags state is not needed at all because of that\n\n      // preselect tag if present\n      let { digest, tag } = props;\n      tag ||= tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= digestByTag[tag]; // set digest by tag unless in props\n\n      setDigest(digest);\n      setTag(tag);\n      setTagSelection(tag ? [{ id: tag, name: tag }] : []);\n    });\n\n    Promise.all([controllers, tagsPromises]).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function renderControllers() {\n    const { image, isOpen } = props;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  const { image, isOpen, onClose } = props;\n\n  // redirects to ./2.x (latest)\n  const docsLink =\n    'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/';\n\n  const noData =\n    controllers?.length === 0 &&\n    !filterIsSet(controllerParams, ['host__icontains']);\n\n  const notListedMessage = (\n    <>\n      {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n      {docsLink && (\n        <>\n          <a href={docsLink} target='_blank' rel='noreferrer'>\n            {t`Learn more`}\n          </a>{' '}\n          <ExternalLinkAltIcon />\n        </>\n      )}\n    </>\n  );\n\n  const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n  const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n  return (\n    <Modal\n      variant='large'\n      title={t`Use in Controller`}\n      isOpen={isOpen}\n      onClose={onClose}\n      actions={[\n        <Button key='close' variant='primary' onClick={onClose}>\n          {t`Close`}\n        </Button>,\n      ]}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      ></AlertList>\n      {loading && (\n        <div style={{ padding: '16px' }}>\n          <LoadingPageSpinner />\n        </div>\n      )}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          title={t`No Controllers available`}\n          description={notListedMessage}\n        />\n      ) : null}\n\n      {isOpen && !loading && !noData && controllers && (\n        <>\n          <DescriptionList isHorizontal>\n            <DescriptionListGroup>\n              <DescriptionListTerm>\n                {t`Execution Environment`}\n              </DescriptionListTerm>\n              <DescriptionListDescription>{image}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <Flex>\n                  <FlexItem>\n                    <APISearchTypeAhead\n                      loadResults={(name) => fetchTags(image, name)}\n                      onClear={() => {\n                        setTag(null);\n                        setTagSelection([]);\n                      }}\n                      onSelect={(event, value) => {\n                        const digest = digestByTag[value.toString()];\n                        setTag(digest && value.toString());\n                        setTagSelection([{ id: value, name: value }]);\n                        setDigest(digest);\n                      }}\n                      placeholderText={t`Select a tag`}\n                      results={tagResults}\n                      selections={tagSelection}\n                      toggleIcon={<TagIcon />}\n                    />\n                  </FlexItem>\n                  <FlexItem></FlexItem>\n                </Flex>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {digest && (\n              <>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    <ShaLabel grey long digest={digest} />\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              </>\n            )}\n          </DescriptionList>\n          <Spacer />\n          <Trans>\n            Click on the Controller URL that you want to use the above execution\n            environment in, and it will launch that Controller&apos;s console.\n            Log in (if necessary) and follow the steps to complete the\n            configuration.\n          </Trans>\n          <br />\n          {!unsafeLinksSupported && (\n            <Trans>\n              <b>Note:</b> The following links may be blocked by your browser.\n              Copy and paste the external link manually.\n            </Trans>\n          )}\n          <Spacer />\n\n          <Flex>\n            <FlexItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => setInputText(text)}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                params={controllerParams}\n                filterConfig={[\n                  {\n                    id: 'host__icontains',\n                    title: t`Controller name`,\n                  },\n                ]}\n              />\n            </FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n            <FlexItem>\n              <Pagination\n                params={controllerParams}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                count={controllerCount}\n                isTop\n              />\n            </FlexItem>\n          </Flex>\n\n          <AppliedFilters\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            params={controllerParams}\n            ignoredParams={['page_size', 'page']}\n            niceNames={{\n              host__icontains: t`Controller name`,\n            }}\n          />\n\n          <Spacer />\n          {renderControllers()}\n          <Spacer />\n\n          <Pagination\n            params={controllerParams}\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            count={controllerCount}\n            isTop\n          />\n          <Spacer />\n          <div>{notListedMessage}</div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderModuleLink: (moduleName: string) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  // checks if I(), B(), M(), U(), L(), or C() exists. Returns type (ex: B)\n  // and value in parenthesis. Based off of formatters in ansible:\n  // https://github.com/ansible/ansible/blob/devel/hacking/build_library/build_ansible/jinja2/filters.py#L26\n  CUSTOM_FORMATTERS = /([IBMULC])\\(([^)]+)\\)/gm;\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  // This functions similar to how string.replace() works, except it returns\n  // a react object instead of a string\n  private reactReplace(\n    text: string,\n    reg: RegExp,\n    replacement: (matches: string[]) => React.ReactNode,\n  ): React.ReactNode {\n    const fragments = [];\n\n    let match: string[];\n    let prevIndex = 0;\n    while ((match = reg.exec(text)) !== null) {\n      fragments.push(\n        text.substr(prevIndex, reg.lastIndex - prevIndex - match[0].length),\n      );\n      fragments.push(replacement(match));\n      prevIndex = reg.lastIndex;\n    }\n\n    if (fragments.length === 0) {\n      return <span>{text}</span>;\n    }\n\n    // append any text after the last match\n    if (prevIndex != text.length - 1) {\n      fragments.push(text.substring(prevIndex));\n    }\n\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    const { renderModuleLink, renderDocLink } = this.props;\n\n    const nstring = this.reactReplace(text, this.CUSTOM_FORMATTERS, (match) => {\n      const fullMatch = match[0];\n      const type = match[1];\n      const textMatch = match[2];\n\n      switch (type) {\n        case 'L': {\n          const url = textMatch.split(',');\n          return renderDocLink(url[0], url[1]);\n        }\n        case 'U':\n          return (\n            <a href={textMatch} target='_blank' rel='noreferrer'>\n              {textMatch}\n            </a>\n          );\n        case 'I':\n          return <i>{textMatch}</i>;\n        case 'C':\n          return <span className='inline-code'>{textMatch}</span>;\n        case 'M':\n          return renderModuleLink(textMatch);\n\n        case 'B':\n          return <b>{textMatch}</b>;\n\n        default:\n          return fullMatch;\n      }\n    });\n\n    return nstring;\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, pluginName: string) {\n    const isDeprecated = doc.deprecated || pluginName.startsWith('_');\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    switch (remoteType) {\n      case 'ansible-remote':\n      case 'none':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'certified':\n        requiredFields = requiredFields.concat(['auth_url']);\n        disabledFields = disabledFields.concat(['requirements_file']);\n        break;\n\n      case 'community':\n        requiredFields = requiredFields.concat(['requirements_file']);\n        disabledFields = disabledFields.concat(['auth_url', 'token']);\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields, remoteType)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(\n            requiredFields,\n            disabledFields,\n            <ActionGroup key='actions'>\n              {save}\n              {cancel}\n            </ActionGroup>,\n          )}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields, extra?) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (\n      ['community', 'certified', 'none', 'ansible-remote'].includes(remoteType)\n    ) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(\n    url: string,\n  ): 'community' | 'certified' | 'none' | 'ansible-remote' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { PulpStatus, RemoteType, UserType } from 'src/api';\nimport { DateComponent, ListItemActions, SortTable } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { hasPermission } = this.context;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length &&\n        hasPermission('ansible.change_collectionremote') && (\n          <DropdownItem\n            key='edit'\n            onClick={() => this.props.editRemote(remote)}\n          >\n            {t`Edit`}\n          </DropdownItem>\n        ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { hasPermission } = this.context;\n    if (!hasPermission('ansible.change_collectionremote')) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\nexport const RepoSelector = ({\n  selectedRepo,\n  path,\n  pathParams,\n  isDisabled,\n}: IProps) => {\n  const [selectExpanded, setSelectExpanded] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const getRepoName = (repoName) => {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return repo ? i18n._(repo) : repoName;\n  };\n\n  const repoNames = Constants.REPOSITORYNAMES;\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <InputGroupText\n            style={{ paddingLeft: 0 }}\n            variant='plain'\n            className='hub-input-group-text-no-wrap'\n          >\n            {t`Filter by repository`}\n          </InputGroupText>\n          <Select\n            className='nav-select'\n            isDisabled={isDisabled}\n            isOpen={selectExpanded}\n            isPlain={false}\n            onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const originalRepo = selectedRepo;\n              const newRepo = getRepoName(event.target.name);\n\n              setSelectExpanded(false);\n\n              if (newRepo !== originalRepo) {\n                const newPath = formatPath(path, {\n                  ...pathParams,\n                  repo: event.target.name,\n                });\n                navigate(newPath);\n              }\n            }}\n            onToggle={(isExpanded) => setSelectExpanded(isExpanded)}\n            selections={getRepoName(selectedRepo)}\n            variant='single'\n          >\n            {Object.keys(repoNames).map((option) => (\n              <SelectOption\n                name={option}\n                key={option}\n                value={i18n._(repoNames[option])}\n              />\n            ))}\n          </Select>\n        </InputGroup>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n  const context = useContext();\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props, context));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props, context): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: context.selectedRepo,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  TextInputTypes,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport { APISearchTypeAhead, AlertType, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionDetailType, CollectionListType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionDetailType | CollectionListType;\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n  } = props;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <>\n              {(deleteCollection as CollectionDetailType).all_versions\n                .length === 1 ? (\n                <Trans>\n                  Deleting{' '}\n                  <b>\n                    {deleteCollection.name} v{collectionVersion}\n                  </b>{' '}\n                  and its data will be lost and this will cause the entire\n                  collection to be deleted.\n                </Trans>\n              ) : (\n                <Trans>\n                  Deleting{' '}\n                  <b>\n                    {deleteCollection.name} v{collectionVersion}\n                  </b>{' '}\n                  and its data will be lost.\n                </Trans>\n              )}\n            </>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.name}</b> and its data will be lost.\n            </Trans>\n          )}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\nimport { DateComponent, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`role.github_user logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          ></Logo>\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        ></Logo>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Wisdom.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Wisdom.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        Are you sure you want to opt the following namespace in to Wisdom?\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Wisdom?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Wisdom.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Wisdom.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace in to\n        Wisdom?\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Wisdom?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Wisdom information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Wisdom.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Wisdom.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Wisdom`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Wisdom`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Learn more about Ansible Wisdom.`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Wisdom settings`\n          : isInDenyIndex\n          ? t`Opt in to Wisdom`\n          : t`Opt out of Wisdom`\n      }\n      variant='small'\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          <div>\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Red Hat is working on exciting new Ansible content\n                    development capabilities within the context of{' '}\n                    <a\n                      href='https://www.redhat.com/en/engage/project-wisdom'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      Project Wisdom\n                    </a>{' '}\n                    <ExternalLinkAltIcon /> to help other automators build\n                    Ansible content.\n                  </p>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { CollectionVersion, CollectionVersionAPI, Repositories } from 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  SortTable,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport {\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTaskUrl,\n} from 'src/utilities';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersion;\n  addAlert: (alert) => void;\n  allRepositories: Repository[];\n  finishAction: () => void;\n}\n\nexport const ApproveModal = (props: IProps) => {\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<Repository[]>([]);\n  const [itemsCount, setItemsCount] = useState(0);\n  const [alerts, setAlerts] = useState([]);\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [fixedRepos, setFixedRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  function approve() {\n    function failedToLoadRepo(status?, statusText?) {\n      setLoading(false);\n      addAlert({\n        title: t`Failed to load pulp_id of collection repository.`,\n        variant: 'danger',\n        description: errorMessage(status, statusText),\n      });\n    }\n\n    setLoading(true);\n\n    const originRepoName = props.collectionVersion.repository_list.find(\n      (repo) => repo == Constants.NEEDSREVIEW || repo == Constants.NOTCERTIFIED,\n    );\n    const reposToApprove = [];\n\n    // fill repos that are actualy needed to approve, some of them may already contain the collection, those dont need to be approved again\n    // this handles the possible inconsistent state\n    selectedRepos.forEach((repo) => {\n      if (!fixedRepos.includes(repo)) {\n        reposToApprove.push(repo);\n      }\n    });\n\n    const repositoriesRef = props.allRepositories\n      .filter((repo) => reposToApprove.includes(repo.name))\n      .map((repo) => repo.pulp_href);\n\n    Repositories.getRepository({ name: originRepoName })\n      .then((data) => {\n        if (data.data.results.length == 0) {\n          failedToLoadRepo('', t`Repository name ${originRepoName} not found.`);\n        } else {\n          const pulp_id = parsePulpIDFromURL(data.data.results[0].pulp_href);\n          CollectionVersionAPI.get(props.collectionVersion.id)\n            .then((data) => {\n              Repositories.moveCollectionVersion(\n                pulp_id,\n                [data.data.pulp_href],\n                repositoriesRef,\n              )\n                .then((task) => {\n                  return waitForTaskUrl(task['data'].task);\n                })\n                .then(() => {\n                  setLoading(false);\n                  props.finishAction();\n                  props.addAlert({\n                    title: t`Certification status for collection \"${props.collectionVersion.namespace} ${props.collectionVersion.name} v${props.collectionVersion.version}\" has been successfully updated.`,\n                    variant: 'success',\n                    description: '',\n                  });\n                })\n                .catch(({ response: { status, statusText } }) => {\n                  setLoading(false);\n                  addAlert({\n                    title: t`Failed to approve collection.`,\n                    variant: 'danger',\n                    description: errorMessage(status, statusText),\n                  });\n                });\n            })\n            .catch(({ response: { status, statusText } }) => {\n              setLoading(false);\n              addAlert({\n                title: t`Failed to load collection.`,\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n            });\n        }\n      })\n      .catch(({ response: { status, statusText } }) => {\n        failedToLoadRepo(status, statusText);\n      });\n  }\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function closeAlert() {\n    setAlerts([]);\n  }\n\n  function changeSelection(name) {\n    if (fixedRepos.includes(name)) {\n      return;\n    }\n\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      setSelectedRepos(selectedRepos.filter((element) => element != name));\n    } else {\n      // add\n      setSelectedRepos([...selectedRepos, name]);\n    }\n  }\n\n  function loadRepos() {\n    // modify params\n    const par = { ...params };\n    par['pulp_label_select'] = 'pipeline=approved';\n    par['ordering'] = par['sort'];\n    delete par['sort'];\n    setLoading(true);\n\n    Repositories.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  function renderLabels() {\n    const labels = (\n      <>\n        <LabelGroup>\n          {selectedRepos.map((name) => {\n            let label = null;\n            if (fixedRepos.includes(name)) {\n              label = <Label>{name}</Label>;\n            } else {\n              label = (\n                <Label onClose={() => changeSelection(name)}>{name}</Label>\n              );\n            }\n            return <>{label} </>;\n          })}\n        </LabelGroup>\n      </>\n    );\n\n    return (\n      <>\n        <Flex>\n          <FlexItem>\n            <b>{t`Selected`}</b>\n          </FlexItem>\n          <FlexItem>{labels}</FlexItem>\n        </Flex>\n      </>\n    );\n  }\n\n  useEffect(() => {\n    loadRepos();\n  }, [params]);\n\n  useEffect(() => {\n    const fixedReposLocal = [];\n    const selectedReposLocal = [];\n\n    // check for approval repos that are already in collection and select them in UI\n    // this is handling of situation when collection is in inconsistent state\n    props.collectionVersion.repository_list.forEach((repo) => {\n      const count = props.allRepositories.filter((r) => r.name == repo).length;\n      if (count > 0) {\n        fixedReposLocal.push(repo);\n        selectedReposLocal.push(repo);\n      }\n    });\n\n    setSelectedRepos(selectedReposLocal);\n    setFixedRepos(fixedReposLocal);\n  }, []);\n\n  function renderTable() {\n    if (!props.collectionVersion) {\n      return;\n    }\n\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <CheckboxRow\n                rowIndex={i}\n                key={repo.name}\n                isSelected={selectedRepos.includes(repo.name)}\n                onSelect={() => {\n                  changeSelection(repo.name);\n                }}\n                isDisabled={fixedRepos.includes(repo.name)}\n                data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n              >\n                <td>\n                  <div>{repo.name}</div>\n                  <div>{repo.description}</div>\n                </td>\n              </CheckboxRow>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={approve}\n            variant='primary'\n            isDisabled={\n              selectedRepos.length - fixedRepos.length <= 0 || loading\n            }\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          {renderLabels()}\n          <div className='toolbar hub-toolbar'>\n            <Toolbar>\n              <ToolbarGroup>\n                <ToolbarItem>\n                  <CompoundFilter\n                    inputText={inputText}\n                    onChange={(text) => {\n                      setInputText(text);\n                    }}\n                    updateParams={(p) => setParams(p)}\n                    params={params}\n                    filterConfig={[\n                      {\n                        id: 'name__icontains',\n                        title: t`Repository`,\n                      },\n                    ]}\n                  />\n                </ToolbarItem>\n              </ToolbarGroup>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort']}\n              niceNames={{\n                name__icontains: t`Name`,\n              }}\n            />\n          </div>\n\n          {loading ? <Spinner /> : renderTable()}\n\n          <div className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n            />\n          </div>\n        </section>\n\n        <AlertList alerts={alerts} closeAlert={() => closeAlert()} />\n      </Modal>\n    </>\n  );\n};\n","import { defineMessage, t } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static APPROVED = 'approved';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n\n  static DOWNSTREAM_HOSTS = [\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n    validated: defineMessage({ message: `Validated` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified', 'validated'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nconst language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst RepositoryList = lazy(\n  () => import('src/containers/repositories/repository-list'),\n);\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenPage = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.repositories, component: RepositoryList },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenPage },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceByRepo, component: NamespaceDetail },\n  { path: Paths.searchByRepo, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.collection, component: CollectionDetail },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.search, component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport { t } from '@lingui/macro';\nimport { Alert } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst DEFAULT_REPO = 'published';\n\nconst isRepoURL = (pathname) =>\n  matchPath({ path: formatPath(Paths.searchByRepo) + '*' }, pathname);\n\nconst App = (_props) => {\n  const location = useLocation();\n  const match = isRepoURL(location.pathname);\n\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [selectedRepo, setSelectedRepo] = useState<string>(DEFAULT_REPO);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    // This is sort of a dirty hack to make it so that collection details can view repositories other than \"published\", but all other views are locked to \"published\"\n    // We do this because there is not currently a way to toggle repositories in automation hub on console.redhat.com, so it's important to ensure the user always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in the url\n      if (match.params.repo !== selectedRepo) {\n        setSelectedRepo(match.params.repo);\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo if the repo is set to anything else.\n      if (selectedRepo !== DEFAULT_REPO) {\n        setSelectedRepo(DEFAULT_REPO);\n      }\n    }\n  });\n\n  // block the page from rendering if we're on a repo route and the repo in the url doesn't match the current state\n  // This gives componentDidUpdate a chance to recognize that route has changed and update the internal state to match the route before any pages can redirect the URL to a 404 state.\n  if (match && match.params.repo !== selectedRepo) {\n    return null;\n  }\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        selectedRepo,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <Alert\n        isInline\n        variant='info'\n        title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n      />\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import * as React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\" or \"/beta/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/beta/', '/').replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: formatPath(Paths[NAMESPACE_TERM]),\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl() {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\n\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  const { status, statusText } = e.response;\n  addAlert({\n    title,\n    variant: 'danger',\n    description: errorMessage(status, statusText),\n  });\n  callback();\n};\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionAPI } from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection) {\n    const { name, namespace } = collection;\n    return CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    selectedRepo,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(selectedRepo, collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","_HubAPI","API","_len","length","args","Array","_key","getUIPath","repo","path","_get","_getPrototypeOf","prototype","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","_this2","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","_this3","reject","err","undefined","PulpStatus","NamespaceAPI","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","_PulpAPI","for_object_type","newParams","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","_i","_Object$keys","field","RemoteAPI","distribution","_id","_obj","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","SigningServiceAPI","CertificateUploadAPI","repository","signed_collection","Repositories","encodeURIComponent","pulp_id","collection_versions","destination_repositories","signing_service","add_content_units","remove_content_units","base_version","uuid","list","version_href","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","WisdomDenyIndexAPI","scope","reference","_ref","removePath","addPath","APISearchTypeAhead","_React$Component","props","loadResults","onClear","evt","textInput","target","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","React","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","chipGroupProps","_step","options","_iterator","_createForOfIteratorHelper","results","s","n","done","option","push","SelectOption","f","i18n","AlertList","alerts","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","alertIndex","_ref2","setAlerts","newList","_toConsumableArray","splice","closeAlertMixin","alertStateVariable","AppliedFilters","className","_ref$ignoredParams","ignoredParams","_ref$niceNames","niceNames","niceValues","updateParams","filters","chips","isArray","marginRight","ChipGroup","_extends","categoryName","v","_niceValues$key","Chip","onClick","unsetFilter","renderGroup","Button","BaseHeader","_this$props","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","showRepoSelector","cx","Title","headingLevel","size","Breadcrumbs","links","Breadcrumb","link","index","BreadcrumbItem","isActive","Link","to","CardListSwitcher","_ref$size","disp","view_type","iconClasses","ThLargeIcon","ListIcon","CollectionCard","d","displaySignatures","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","Text","component","TextVariants","Badge","isRead","getCertification","SignatureBadge","isCompact","signState","formatPath","Paths","Trans","values","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","CollectionContentList","context","useContext","toShow","summary","all","showing","keywords","_c$content_type","c","keywordMatch","match","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","_e","val","placeholder","clickable","selectedRepo","EmptyStateCustom","icon","ExclamationTriangleIcon","CollectionCount","_useState","useState","_useState2","_slicedToArray","collectionCount","setCollectionCount","_useState3","_useState4","_useState5","_useState6","loading","setLoading","useEffect","promises","collections","_err$response","statusText","addAlert","errorMessage","Spinner","DateComponent","date","moment","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","components","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","_ref$signState","_ref$isCompact","_objectWithoutProperties","_excluded","Label","color","CheckCircleIcon","text","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","_submitCertificate","page_size","modalPagination","errorAlert","isOpenSignAllModal","settings","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","_this$state","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","queueAlert","redirect","_err$response$data","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","activeTab","_this$state2","find","created","created_at","urlKeys","latestVersion","_this$context$feature","featureFlags","display_signatures","can_upload_signatures","isLatestVersion","signedString","collectionName","Navigate","canSign","canSignNamespace","hasPermission","dropdownItems","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","issueUrl","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","isInline","toString","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","loadingVariant","renderSelectVersions","Flex","FlexItem","href","rel","ExternalLinkAltIcon","StatefulDropdown","items","renderTabs","_this4","include_related","related_fields","my_permissions","active","_this$props2","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","_this5","sent","pulp_href","reload","_ref3","_ref4","_this6","_err$response2","warning","AppContext","DownloadSignatureGridItem","_version$metadata$sig","show","setShow","signatures","padding","DownloadIcon","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_latest_version$metad","_latest_version$metad2","downloadLinkRef","installCommand","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","reponame","downloadURL","current","click","_e$response","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","CollectionFilter","inputText","setInputText","display_tags","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","clearAllFilters","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","listDep","EmptyStateNoData","fqn","version_range","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","selectedFilter","selectedID","currentTarget","replace","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","FilterIcon","renderInput","submitFilter","trim","SearchIcon","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteModal","_ref$variant","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","button","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","EmptyStatePrimary","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","OutlinedQuestionCircleIcon","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","messages","renderMessage","level","message","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","repoStatus","pulp_labels","pipeline","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","split","artifact","sha256","loaded","total","msg","cancel","tab","_ref$active","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","_distribution$reposit","_distribution$reposit2","_distribution$reposit3","_distribution$reposit4","cliConfig","getRepoUrl","pulp_last_updated","isCode","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","ReactMarkdown","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","NamespaceForm","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","preventDefault","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","AccessTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","noData","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","sortBy","renderGroupRow","_this$props3","urlPrefix","ListItemActions","kebabItems","_this$props4","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","_this7","_this$props5","pulpObjectType","selectRolesMessage","_this$props$showGroup","_this$props$showGroup2","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addGroup","_group$object_roles","_this8","_this$props$showRoleS","addRole","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","PartnerHeader","Tabs","setSelected","_this$context","model_permissions","showUserManagement","userManagementFilter","permission","allPermissions","categories","entries","forEach","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","default","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","typeAheadAriaLabel","_model_permissions$pe3","RenderPluginDoc","renderError","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","_step2","_iterator2","ret","contains","reg","replacement","fragments","prevIndex","exec","substr","substring","renderModuleLink","renderDocLink","reactReplace","CUSTOM_FORMATTERS","fullMatch","textMatch","pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","allowEditName","saveRemote","showMain","showModal","getRemoteType","requiredFields","disabledFields","save","isValid","renderForm","ActionGroup","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","ExclamationCircleIcon","Switch","isChecked","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","onEditorDidMount","editor","focus","isWriteOnly","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","isNumericSet","rate_limit","Number","isInteger","host","_step3","_iterator3","fieldName","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","editRemote","updated_at","lastSynced","lastSyncStatus","configButton","syncButton","syncRemote","distributions","_step4","_iterator4","selectExpanded","setSelectExpanded","navigate","useNavigate","getRepoName","repoName","repoNames","InputGroupText","newRepo","newPath","ResourcesForm","resources","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","onSelectProp","_ref$toggleType","_ref$isPlain","ariaLabel","Dropdown","toggle","renderToggle","open","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","typeToVariantMap","primary","secondary","_ref$type","labelProps","OutlinedClockIcon","ExclamationIcon","SyncAltIcon","statusToProps","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","toUpperCase","getContentEntry","a","b","parseLinks","searchBarRef","Nav","theme","NavList","filterString","filteredLinks","NavExpandable","capitalize","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","PFTooltip","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","PFClipboardCopy","hoverTip","clickTip","PFFileUpload","clearButtonText","_this$props$buttons","_this$props$kebabItem","anyButtons","anyKebab","textAlign","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","cancelButtonText","closeButtonAriaLabel","titleId","descriptionId","direction","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","setRoles","rolesItemCount","setRolesItemCount","_useState7","_useState8","_useState9","_useState10","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","_ref$response","finishAction","closeAction","_ref2$response","_ref3$response","expandableTitle","ApproveModal","labels","repositoryList","setRepositoryList","itemsCount","setItemsCount","selectedRepos","setSelectedRepos","_useState11","_useState12","fixedRepos","setFixedRepos","_useState13","_useState14","_useState15","_useState16","setParams","prevAlerts","changeSelection","checked","par","_ref4$response","fixedReposLocal","selectedReposLocal","allRepositories","failedToLoadRepo","originRepoName","reposToApprove","repositoriesRef","waitForTaskUrl","INSIGHTS_DEPLOYMENT_MODE","published","community","completed","running","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","plurals","userLanguage","navigator","languages","lang","searchParams","fromEntries","URLSearchParams","location","search","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","activate","CertificationDashboard","lazy","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","NotFound","Partners","RepositoryList","Search","SignatureKeysList","TaskDetail","TaskListView","TokenPage","routes","InsightsRoutes","Suspense","fallback","Routes","Component","Route","DEFAULT_REPO","_props","useLocation","matchPath","setFeatureFlags","setSelectedRepo","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","I18nProvider","App","UI_BASE_PATH","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","collapsedText","expandedText","total_count","saveAs","Blob","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","el","newObj","has_model_permission","entity","_options$waitMs","waitMs","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","taskUrl","statusCode","outsideError","protocol","URL","_namespace$related_fi","can_create_signatures","getUsedbyDependencies","_ref5","withRouter","ClassComponent","WithRouter","useParams","routeParams","routePath","displayName","paramString","numericTypes","appendParam","cloneDeep","param","callback","getQueryString","_i2","_deleteKeys","getReduced","deleteParam","sortParams","defaultSort","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}