{"version":3,"file":"js/6045.0e0f9b56e6be82da313e.js","mappings":"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","sources":["webpack:///./src/containers/edit-namespace/edit-namespace.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport { ActionGroup, Button, Form, Spinner } from '@patternfly/react-core';\nimport React, { Component } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { MyNamespaceAPI, NamespaceLinkType, NamespaceType } from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  NamespaceForm,\n  PartnerHeader,\n  ResourcesForm,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport {\n  ErrorMessagesType,\n  ParamHelper,\n  errorMessage,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IState {\n  alerts: AlertType[];\n  errorMessages: ErrorMessagesType;\n  loading: boolean;\n  namespace: NamespaceType;\n  newLinkName: string;\n  newLinkURL: string;\n  params: {\n    tab?: string;\n  };\n  redirect: string;\n  saving: boolean;\n  unauthorized: boolean;\n  unsavedData: boolean;\n}\n\nclass EditNamespace extends Component<RouteProps, IState> {\n  static contextType = AppContext;\n\n  queryParams: URLSearchParams;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    if (!params['tab']) {\n      params['tab'] = 'edit-details';\n    }\n\n    this.state = {\n      alerts: [],\n      errorMessages: {},\n      loading: false,\n      namespace: null,\n      newLinkName: '',\n      newLinkURL: '',\n      params,\n      redirect: null,\n      saving: false,\n      unauthorized: false,\n      unsavedData: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, () => this.loadNamespace());\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = ParamHelper.parseParamString(this.props.location.search);\n      this.setState({ params });\n    }\n  }\n\n  render() {\n    const {\n      errorMessages,\n      loading,\n      namespace,\n      params,\n      redirect,\n      saving,\n      unauthorized,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (loading) {\n      return <LoadingPageSpinner />;\n    }\n\n    if (!namespace) {\n      return null;\n    }\n\n    const tabs = [\n      {\n        active: params.tab === 'edit-details',\n        title: t`Edit details`,\n        link: formatPath(\n          Paths.editNamespace,\n          { namespace: namespace.name },\n          { tab: 'edit-details' },\n        ),\n      },\n      {\n        active: params.tab === 'edit-resources',\n        title: t`Edit resources`,\n        link: formatPath(\n          Paths.editNamespace,\n          { namespace: namespace.name },\n          { tab: 'edit-resources' },\n        ),\n      },\n    ];\n\n    const updateNamespace = (namespace) =>\n      this.setState({\n        namespace,\n        unsavedData: true,\n      });\n\n    return (\n      <>\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[\n            namespaceBreadcrumb(),\n            {\n              name: namespace.name,\n              url: formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              }),\n            },\n            { name: t`Edit` },\n          ]}\n          tabs={tabs}\n        />\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        {unauthorized ? (\n          <EmptyStateUnauthorized />\n        ) : (\n          <Main>\n            <section className='body'>\n              {params.tab === 'edit-details' ? (\n                <NamespaceForm\n                  errorMessages={errorMessages}\n                  namespace={namespace}\n                  updateNamespace={updateNamespace}\n                />\n              ) : null}\n              {params.tab === 'edit-resources' ? (\n                <ResourcesForm\n                  namespace={namespace}\n                  updateNamespace={updateNamespace}\n                />\n              ) : null}\n              <Form>\n                <ActionGroup>\n                  <Button\n                    isDisabled={this.isSaveDisabled()}\n                    variant='primary'\n                    onClick={() => this.saveNamespace()}\n                  >\n                    {t`Save`}\n                  </Button>\n                  <Button variant='secondary' onClick={() => this.cancel()}>\n                    {t`Cancel`}\n                  </Button>\n\n                  {saving ? <Spinner /> : null}\n                </ActionGroup>\n                {this.state.unsavedData ? (\n                  <div\n                    style={{ color: 'red' }}\n                  >{t`You have unsaved changes`}</div>\n                ) : null}\n              </Form>\n            </section>\n          </Main>\n        )}\n      </>\n    );\n  }\n\n  private isSaveDisabled() {\n    const namespace = this.state.namespace;\n    return namespace.links.some(\n      (link) =>\n        NamespaceForm.validateName(link).validated == 'error' ||\n        NamespaceForm.validateUrl(link).validated == 'error',\n    );\n  }\n\n  private loadNamespace() {\n    MyNamespaceAPI.get(this.props.routeParams.namespace)\n      .then((response) => {\n        // Add an empty link to the end of the links array to create an empty field\n        // on the link edit form for adding new links\n        const emptyLink: NamespaceLinkType = { name: '', url: '' };\n        response.data.links.push(emptyLink);\n        this.setState({ loading: false, namespace: response.data });\n      })\n      .catch(() => {\n        this.setState({ unauthorized: true, loading: false });\n      });\n  }\n\n  private saveNamespace() {\n    this.setState({ saving: true }, () => {\n      const namespace = { ...this.state.namespace };\n      const setLinks: NamespaceLinkType[] = [];\n\n      // remove any empty links from the list before saving\n      for (const link of namespace.links) {\n        if (link.url !== '' || link.name !== '') {\n          setLinks.push(link);\n        }\n      }\n\n      namespace.links = setLinks;\n\n      MyNamespaceAPI.update(this.state.namespace.name, namespace)\n        .then((result) => {\n          this.setState(\n            {\n              namespace: result.data,\n              errorMessages: {},\n              saving: false,\n              unsavedData: false,\n              redirect: formatPath(Paths.namespaceDetail, {\n                namespace: this.state.namespace.name,\n              }),\n            },\n            () =>\n              this.context.queueAlert({\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Saved changes to namespace &quot;\n                    {this.state.namespace.name}&quot;.\n                  </Trans>\n                ),\n              }),\n          );\n        })\n        .catch((error) => {\n          const result = error.response;\n          if (result.status === 400) {\n            this.setState({\n              errorMessages: mapErrorMessages(error),\n              saving: false,\n            });\n          } else if (result.status === 404) {\n            this.setState({\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: t`Changes to namespace \"${this.state.namespace.name}\" could not be saved.`,\n                description: errorMessage(result.status, result.statusText),\n              }),\n              saving: false,\n            });\n          }\n        });\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private cancel() {\n    this.setState({\n      redirect: formatPath(Paths.namespaceDetail, {\n        namespace: this.state.namespace.name,\n      }),\n    });\n  }\n}\n\nexport default withRouter(EditNamespace);\n"],"names":["EditNamespace","_Component","props","_this","_classCallCheck","_callSuper","params","ParamHelper","parseParamString","location","search","state","alerts","errorMessages","loading","namespace","newLinkName","newLinkURL","redirect","saving","unauthorized","unsavedData","_inherits","_createClass","key","value","_this2","this","setState","loadNamespace","prevProps","_this3","_this$state","React","Navigate","to","LoadingPageSpinner","tabs","active","tab","title","i18n","_","id","link","formatPath","Paths","editNamespace","name","updateNamespace","PartnerHeader","breadcrumbs","namespaceBreadcrumb","url","namespaceDetail","AlertList","closeAlert","i","EmptyStateUnauthorized","Main","className","NamespaceForm","ResourcesForm","Form","ActionGroup","Button","isDisabled","isSaveDisabled","variant","onClick","saveNamespace","cancel","Spinner","style","color","links","some","validateName","validated","validateUrl","_this4","MyNamespaceAPI","get","routeParams","then","response","data","push","_this5","_step","_objectSpread","setLinks","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","update","result","context","queueAlert","Trans","values","error","status","mapErrorMessages","concat","description","errorMessage","statusText","closeAlertMixin","Component","_defineProperty","AppContext","withRouter"],"sourceRoot":""}