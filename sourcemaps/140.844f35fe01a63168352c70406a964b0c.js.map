{"version":3,"file":"js/140.7fe883f03dde87a5778e.js","mappings":"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","sources":["webpack:///./src/containers/search/search.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { Button, DataList, DropdownItem, Switch } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  MySyncListAPI,\n  SyncListType,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  CardListSwitcher,\n  CollectionCard,\n  CollectionFilter,\n  CollectionListItem,\n  CollectionNextPageCard,\n  DeleteCollectionModal,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageSpinner,\n  Pagination,\n  StatefulDropdown,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\nimport './search.scss';\n\ninterface IState {\n  collections: CollectionVersionSearch[];\n  count: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n    namespace?: string;\n  };\n  loading: boolean;\n  synclist: SyncListType;\n  alerts: AlertType[];\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  redirect: string;\n  noDependencies: boolean;\n  deleteCollection: CollectionVersionSearch;\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n  deleteAll: boolean;\n}\n\nclass Search extends React.Component<RouteProps, IState> {\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = Constants.DEFAULT_PAGE_SIZE;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem(\n        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n      );\n    }\n\n    this.state = {\n      collections: [],\n      params: params,\n      count: 0,\n      loading: true,\n      synclist: undefined,\n      alerts: [],\n      updateCollection: null,\n      showImportModal: false,\n      redirect: null,\n      noDependencies: false,\n      deleteCollection: null,\n      confirmDelete: false,\n      isDeletionPending: false,\n      deleteAll: true,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  private load() {\n    this.queryCollections();\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      this.getSynclist();\n    }\n  }\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />;\n    }\n\n    const {\n      loading,\n      collections,\n      params,\n      count,\n      showImportModal,\n      updateCollection,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n    } = this.state;\n    const noData =\n      collections.length === 0 &&\n      !filterIsSet(params, [\n        'keywords',\n        'tags',\n        'is_signed',\n        'repository_name',\n        'namespace',\n      ]);\n\n    const updateParams = (p) =>\n      this.updateParams(p, () => this.queryCollections());\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    return (\n      <div className='search-page'>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        <BaseHeader className='hub-header-bordered' title={t`Collections`}>\n          {!noData && (\n            <div>\n              <div className='hub-toolbar hub-toolbar-left'>\n                <CollectionFilter\n                  ignoredParams={['page', 'page_size', 'sort', 'view_type']}\n                  params={params}\n                  updateParams={updateParams}\n                />\n\n                <div className='hub-pagination-container'>\n                  <div className='card-list-switcher'>\n                    <CardListSwitcher\n                      size='sm'\n                      params={params}\n                      updateParams={(p) =>\n                        this.updateParams(p, () =>\n                          // Note, we have to use this.state.params instead\n                          // of params in the callback because the callback\n                          // executes before the page can re-run render\n                          // which means params doesn't contain the most\n                          // up to date state\n                          localStorage.setItem(\n                            Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n                            this.state.params.view_type,\n                          ),\n                        )\n                      }\n                    />\n                  </div>\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={count}\n                    isTop\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        {loading ? (\n          <LoadingPageSpinner />\n        ) : noData ? (\n          <EmptyStateNoData\n            title={t`No collections yet`}\n            description={t`Collections will appear once uploaded`}\n          />\n        ) : (\n          <React.Fragment>\n            <section className='collection-container'>\n              {this.renderCollections(collections, {\n                count,\n                params,\n                updateParams,\n              })}\n            </section>\n            <section className='footer'>\n              <Pagination\n                params={params}\n                updateParams={updateParams}\n                count={count}\n              />\n            </section>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private renderCollections(collections, { count, params, updateParams }) {\n    if (collections.length === 0) {\n      return (\n        <EmptyStateFilter\n          clearAllFilters={() => {\n            ParamHelper.clearAllFilters({\n              params,\n              ignoredParams: ['page', 'page_size', 'sort', 'view_type'],\n              updateParams,\n            });\n          }}\n        />\n      );\n    }\n\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections, {\n        count,\n        params,\n        updateParams,\n      });\n    }\n  }\n\n  private renderCards(collections, { count, params, updateParams }) {\n    return (\n      <div className='hub-cards'>\n        {collections.map((c, i) => {\n          return (\n            <CollectionCard\n              key={i}\n              {...c}\n              footer={this.renderSyncToogle(\n                c.collection_version.name,\n                c.collection_version.namespace,\n              )}\n              menu={this.renderMenu(false, c)}\n              displaySignatures={this.context.featureFlags.display_signatures}\n            />\n          );\n        })}\n        {count > params.page_size * (params.page ?? 1) ? (\n          <CollectionNextPageCard\n            onClick={() =>\n              updateParams({ ...params, page: (params.page ?? 1) + 1 })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  private handleControlClick(collection) {\n    const { name } = collection.collection_version;\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${name}\" has been successfully deprecated.`\n            : t`The collection \"${name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          this.load();\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${name}\" could not be deprecated.`\n                : t`Collection \"${name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private renderMenu(list, collection) {\n    const { hasPermission } = this.context;\n    const hasObjectPermission = (permission, namespace) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n    const { display_repositories, ai_deny_index } = this.context.featureFlags;\n    const canDeleteCommunityCollection =\n      ai_deny_index &&\n      hasObjectPermission(\n        'galaxy.change_namespace',\n        collection.collection_version.namespace,\n      );\n\n    const menuItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies: null,\n        onClick: () =>\n          DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n            addAlert: (alert) => this.addAlert(alert),\n            setState: (state) => this.setState(state),\n            collection,\n            deleteAll: true,\n          }),\n        deleteAll: true,\n        display_repositories: display_repositories,\n      }),\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies: null,\n        onClick: () =>\n          DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n            addAlert: (alert) => this.addAlert(alert),\n            setState: (state) => this.setState(state),\n            collection,\n            deleteAll: false,\n          }),\n        deleteAll: false,\n        display_repositories: display_repositories,\n      }),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.handleControlClick(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      !list && hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.checkUploadPrivilleges(collection)}\n          key='upload new version'\n        >\n          {t`Upload new version`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const displayMenu = menuItems.length > 0;\n\n    if (list) {\n      return {\n        uploadButton: hasPermission('galaxy.upload_to_namespace') ? (\n          <Button\n            onClick={() => this.checkUploadPrivilleges(collection)}\n            variant='secondary'\n          >\n            {t`Upload new version`}\n          </Button>\n        ) : null,\n        dropdownMenu: displayMenu ? (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        ) : null,\n      };\n    }\n\n    return (\n      <span className={cx(!displayMenu && 'hidden-menu-space')}>\n        {displayMenu && (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        )}\n      </span>\n    );\n  }\n\n  private renderSyncToogle(name: string, namespace: string): React.ReactNode {\n    const { synclist } = this.state;\n\n    if (!synclist) {\n      return null;\n    }\n\n    return (\n      <Switch\n        id={namespace + '.' + name}\n        className='sync-toggle'\n        label={t`Sync`}\n        isChecked={this.isCollectionSynced(name, namespace)}\n        onChange={() => this.toggleCollectionSync(name, namespace)}\n      />\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private toggleCollectionSync(name: string, namespace: string) {\n    const synclist = { ...this.state.synclist };\n\n    const colIndex = synclist.collections.findIndex(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    if (colIndex < 0) {\n      synclist.collections.push({ name: name, namespace: namespace });\n    } else {\n      synclist.collections.splice(colIndex, 1);\n    }\n\n    MySyncListAPI.update(synclist.id, synclist).then((response) => {\n      this.setState({ synclist: response.data });\n      MySyncListAPI.curate(synclist.id).then(() => null);\n    });\n  }\n\n  private isCollectionSynced(name: string, namespace: string): boolean {\n    const { synclist } = this.state;\n    const found = synclist.collections.find(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    return synclist.policy === 'include' ? !!found : !found;\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='hub-list'>\n          <DataList className='data-list' aria-label={t`List of Collections`}>\n            {collections.map((c, i) => (\n              <CollectionListItem\n                key={i}\n                collection={c}\n                displaySignatures={this.context.featureFlags.display_signatures}\n                showNamespace\n                synclistSwitch={this.renderSyncToogle(\n                  c.collection_version.name,\n                  c.collection_version.namespace,\n                )}\n                {...this.renderMenu(true, c)}\n              />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private getSynclist() {\n    MySyncListAPI.list().then((result) => {\n      // ignore results if more than 1 is returned\n      // TODO: should we throw an error for this or just ignore it?\n      if (result.data.meta.count === 1) {\n        this.setState({ synclist: result.data.data[0] });\n      } else {\n        console.error(\n          `my-synclist returned ${result.data.meta.count} synclists`,\n        );\n      }\n    });\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, ['view_type']),\n        is_deprecated: false,\n        repository_label: '!hide_from_search',\n        is_highest: true,\n      }).then((result) => {\n        this.setState({\n          collections: result.data.data,\n          count: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(Search);\n\nSearch.contextType = AppContext;\n"],"names":["Search","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","params","ParamHelper","parseParamString","location","search","Constants","DEFAULT_PAGE_SIZE","localStorage","getItem","SEARCH_VIEW_TYPE_LOCAL_KEY","state","collections","count","loading","synclist","undefined","alerts","updateCollection","showImportModal","redirect","noDependencies","deleteCollection","confirmDelete","isDeletionPending","deleteAll","_createClass","key","value","this","load","queryCollections","DEPLOYMENT_MODE","INSIGHTS_DEPLOYMENT_MODE","getSynclist","alert","setState","concat","_toConsumableArray","get","closeAlertMixin","_deleteCollection$rep","_this2","React","Navigate","to","_this$state","noData","length","filterIsSet","updateParams","p","deleteFromRepo","repository","name","className","AlertList","closeAlert","i","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","collection","addAlert","ImportModal","isOpen","onUploadSuccess","formatPath","Paths","myImports","namespace","collection_version","setOpen","warn","toggleImportModal","BaseHeader","title","i18n","_","id","CollectionFilter","ignoredParams","CardListSwitcher","size","setItem","view_type","Pagination","isTop","LoadingPageSpinner","EmptyStateNoData","description","renderCollections","warning","variant","_ref","EmptyStateFilter","clearAllFilters","renderList","renderCards","_ref2","_params$page","_this3","map","c","CollectionCard","_extends","footer","renderSyncToogle","menu","renderMenu","displaySignatures","context","featureFlags","display_signatures","page_size","page","CollectionNextPageCard","onClick","_params$page2","_objectSpread","_this4","CollectionAPI","setDeprecation","then","res","taskId","parsePulpIDFromURL","data","task","waitForTask","deprecated","values","err","_err$response","response","status","statusText","errorMessage","list","_namespace$related_fi","_namespace$related_fi2","_this5","hasPermission","_this$context$feature","display_repositories","canDeleteCommunityCollection","ai_deny_index","related_fields","my_permissions","includes","menuItems","deleteMenuOption","canDeleteCollection","tryOpenDeleteModalWithConfirm","DropdownItem","handleControlClick","is_deprecated","checkUploadPrivilleges","filter","Boolean","displayMenu","uploadButton","Button","dropdownMenu","StatefulDropdown","items","ariaLabel","cx","_this6","Switch","label","isChecked","isCollectionSynced","onChange","toggleCollectionSync","_this7","MyNamespaceAPI","include_related","_this8","colIndex","findIndex","el","push","splice","MySyncListAPI","update","curate","found","find","policy","_this9","DataList","CollectionListItem","showNamespace","synclistSwitch","_this10","result","meta","console","error","_this11","CollectionVersionAPI","getReduced","repository_label","is_highest","updateParamsMixin","withRouter","contextType","AppContext"],"sourceRoot":""}