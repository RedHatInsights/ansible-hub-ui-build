{"version":3,"file":"js/3174.2e92342bce04c4017b8f.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-import-log.tsx"],"sourcesContent":["import {\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { repositoryBasePath } from 'src/utilities';\n\nexport interface IBaseCollectionState {\n  actuallyCollection?: CollectionDetailType;\n  alerts?: AlertType[];\n  collection?: CollectionVersionSearch;\n  collections?: CollectionVersionSearch[];\n  collectionsCount?: number;\n  content?: CollectionVersionContentType;\n  distroBasePath?: string;\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n}\n\n// Caches the collection data when matching, prevents redundant fetches between collection detail tabs\nconst cache = {\n  repository: null,\n  namespace: null,\n  name: null,\n  version: null,\n\n  actuallyCollection: null,\n  collection: null,\n  collections: [],\n  collectionsCount: 0,\n  content: null,\n};\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  setCollection,\n  stateParams,\n}) {\n  const { version } = stateParams;\n  const { collection: name, namespace, repo } = matchParams;\n\n  // try loading from cache\n  if (\n    !forceReload &&\n    cache.repository === repo &&\n    cache.namespace === namespace &&\n    cache.name === name &&\n    cache.version === version\n  ) {\n    setCollection(\n      cache.collections,\n      cache.collection,\n      cache.content,\n      cache.collectionsCount,\n      cache.actuallyCollection,\n    );\n    return;\n  }\n\n  const requestParams = {\n    ...(repo ? { repository_name: repo } : {}),\n    namespace,\n    name,\n  };\n\n  const currentVersion = (\n    version\n      ? CollectionVersionAPI.list({ ...requestParams, version })\n      : CollectionVersionAPI.list({ ...requestParams, is_highest: true })\n  ).then(({ data }) => data.data[0]);\n\n  const content = currentVersion\n    .then((collection) =>\n      CollectionAPI.getContent(\n        namespace,\n        name,\n        collection.collection_version.version,\n      ),\n    )\n    .then(({ data: { results } }) => results[0])\n    .catch(() => navigate(formatPath(Paths.notFound)));\n\n  // Note: this only provides the first page - containing the latest version, and all items for the version *selector*,\n  // but the version *modal* is using a separate call, in CollectionHeader updatePaginationParams\n  const versions = CollectionVersionAPI.list({\n    ...requestParams,\n    order_by: '-version',\n    page_size: 10,\n  })\n    .then(({ data }) => data)\n    .catch(() => ({ data: [], meta: { count: 0 } }));\n\n  const actuallyCollection = repositoryBasePath(repo)\n    .then((basePath) => CollectionAPI.getDetail(basePath, namespace, name))\n    .then(({ data }) => data);\n\n  return Promise.all([\n    versions,\n    currentVersion,\n    content,\n    actuallyCollection,\n  ]).then(\n    ([\n      {\n        data: collections,\n        meta: { count: collectionsCount },\n      },\n      collection,\n      content,\n      actuallyCollection,\n    ]) => {\n      setCollection(\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      );\n\n      cache.repository = repo;\n      cache.namespace = namespace;\n      cache.name = name;\n      cache.version = version;\n\n      cache.actuallyCollection = actuallyCollection;\n      cache.collection = collection;\n      cache.collections = collections;\n      cache.collectionsCount = collectionsCount;\n      cache.content = content;\n    },\n  );\n}\n","import { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { ImportAPI, ImportDetailType, ImportListType } from 'src/api';\nimport {\n  CollectionHeader,\n  ImportConsole,\n  LoadingPageWithHeader,\n  Main,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { ParamHelper, RouteProps, withRouter } from 'src/utilities';\nimport { IBaseCollectionState, loadCollection } from './base';\n\ninterface IState extends IBaseCollectionState {\n  loadingImports: boolean;\n  selectedImportDetail: ImportDetailType;\n  selectedImport: ImportListType;\n  apiError: string;\n}\n\nclass CollectionImportLog extends Component<RouteProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      actuallyCollection: null,\n      apiError: undefined,\n      collection: null,\n      collections: [],\n      collectionsCount: 0,\n      content: null,\n      loadingImports: true,\n      params,\n      selectedImport: undefined,\n      selectedImportDetail: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const {\n      actuallyCollection,\n      apiError,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      loadingImports,\n      params,\n      selectedImport,\n      selectedImportDetail,\n    } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const { collection_version, repository } = collection;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        url: formatPath(Paths.namespaceDetail, {\n          namespace: collection_version.namespace,\n        }),\n        name: collection_version.namespace,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection_version.namespace,\n          collection: collection_version.name,\n          repo: repository.name,\n        }),\n        name: collection_version.name,\n      },\n      { name: t`Import log` },\n    ];\n\n    return (\n      <>\n        <CollectionHeader\n          activeTab='import-log'\n          actuallyCollection={actuallyCollection}\n          breadcrumbs={breadcrumbs}\n          collection={collection}\n          collections={collections}\n          collectionsCount={collectionsCount}\n          content={content}\n          params={params}\n          reload={() => this.loadData(true)}\n          updateParams={(params) =>\n            this.updateParams(params, () => this.loadData(true))\n          }\n        />\n        <Main>\n          <section className='body'>\n            <ImportConsole\n              apiError={apiError}\n              loading={loadingImports}\n              selectedImport={selectedImport}\n              task={selectedImportDetail}\n            />\n          </section>\n        </Main>\n      </>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    const failMsg = t`Could not load import log`;\n    this.setState({ loadingImports: true }, () => {\n      this.loadCollection(forceReload, () => {\n        ImportAPI.list({\n          namespace: this.state.collection.collection_version.namespace,\n          name: this.state.collection.collection_version.name,\n          version: this.state.collection.collection_version.version,\n          sort: '-created',\n        })\n          .then((importListResult) => {\n            const importObj = importListResult.data.data[0];\n            ImportAPI.get(importObj.id)\n              .then((importDetailResult) => {\n                this.setState({\n                  apiError: undefined,\n                  loadingImports: false,\n                  selectedImport: importObj,\n                  selectedImportDetail: importDetailResult.data,\n                });\n              })\n              .catch(() => {\n                this.setState({\n                  apiError: failMsg,\n                  loadingImports: false,\n                });\n              });\n          })\n          .catch(() => {\n            this.setState({\n              apiError: failMsg,\n              loadingImports: false,\n            });\n          });\n      });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      setCollection: (\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      ) =>\n        this.setState(\n          {\n            collections,\n            collection,\n            content,\n            collectionsCount,\n            actuallyCollection,\n          },\n          callback,\n        ),\n      stateParams: this.state.params,\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(CollectionImportLog);\n"],"names":["cache","repository","namespace","name","version","actuallyCollection","collection","collections","collectionsCount","content","loadCollection","_ref","forceReload","matchParams","navigate","setCollection","stateParams","repo","requestParams","_objectSpread","repository_name","currentVersion","CollectionVersionAPI","list","is_highest","then","_ref2","data","CollectionAPI","getContent","collection_version","_ref3","results","formatPath","Paths","notFound","versions","order_by","page_size","_ref4","meta","count","repositoryBasePath","basePath","getDetail","_ref5","Promise","all","_ref6","_ref7","_slicedToArray","_ref7$","CollectionImportLog","_Component","props","_this","_classCallCheck","_callSuper","params","ParamHelper","parseParamString","location","search","state","apiError","undefined","loadingImports","selectedImport","selectedImportDetail","_inherits","_createClass","key","value","this","loadData","_this2","_this$state","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","namespaceDetail","collectionByRepo","i18n","_","id","CollectionHeader","activeTab","reload","updateParams","Main","className","ImportConsole","loading","task","_this3","arguments","length","failMsg","setState","ImportAPI","sort","importListResult","importObj","get","importDetailResult","callback","_this4","routeParams","updateParamsMixin","Component","_defineProperty","AppContext","withRouter"],"sourceRoot":""}