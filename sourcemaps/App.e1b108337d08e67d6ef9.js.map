{"version":3,"file":"js/App.fa6f3b0eae9e84e4621b.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/create fake namespace object","webpack:///webpack/runtime/load script","webpack:///webpack/runtime/css loading","webpack:///./locale|lazy|/^\\.\\/.*\\.js$/|groupOptions: {}|namespace object","webpack:////home/runner/work/ansible-hub-ui/ansible-hub-ui/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/images.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/group-management/group-modal.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/permissions/obect-permission-field.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/permissions/permission-chip-selector.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/toolbar.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/user-form/user-form.tsx","webpack:///./src/components/user-form/user-form-page.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/constants.tsx","webpack:///./src/store/index.js","webpack:///./src/utilities/asyncComponent.js","webpack:///./src/loaders/insights/Routes.js","webpack:///./src/loaders/insights/insights-loader.js","webpack:///./src/utilities/getBaseName.js","webpack:///./src/entry.js","webpack:///./src/l10n.ts","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"ansible-hub-ui:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var createStylesheet = (chunkId, fullhref, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"33\":1,\"152\":1,\"464\":1,\"571\":1,\"684\":1,\"776\":1,\"837\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: (params) => ParamHelper.getQueryString(params),\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data: any, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data: any, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data: any, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await (window as any).insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  constructor() {\n    super();\n  }\n\n  list(params?: any, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `content/${repo}/v3/collections/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: String,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?: any,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    return source;\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `content/${distro_base_path}/v3/collections/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const NamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  constructor() {\n    super();\n  }\n\n  getUser(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        (window as any).insights.chrome.auth\n          .getUser()\n          // we don't care about entitlements stuff in the UI, so just\n          // return the user's identity\n          .then((result) => resolve(result.identity))\n          .catch((result) => reject(result));\n      });\n    } else if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        this.http\n          .get(this.apiPath)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((result) => reject(result));\n      });\n    }\n  }\n\n  getActiveUser() {\n    return this.http.get(this.apiPath);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        reject(\n          'Use window.chrome.insights.auth to get tokens for insights deployments',\n        );\n      });\n    }\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    return new Promise((resolve, reject) => {\n      // Make a get request to the login endpoint to set CSRF tokens before making\n      // the authentication reqest\n      this.http\n        .get(loginURL)\n        .then(() => {\n          this.http\n            .post(loginURL, {\n              username: username,\n              password: password,\n            })\n            .then((response) => resolve(response))\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  constructor() {\n    super();\n  }\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  constructor() {\n    super();\n  }\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n\n  constructor() {\n    super();\n  }\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n\n  constructor() {\n    super();\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId,\n    );\n  }\n}\n\nexport const GroupAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  constructor() {\n    super();\n  }\n\n  // removes unchanged values and write only fields before\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unModifiedRemote: RemoteType) {\n    // Deletes any write only fields from the object that are market as is_set.\n    // This is to prevent accidentally clearing fields that weren't updated.\n\n    // TODO: clearing set fields from the response will be unnecesary if the API\n    // stops returning field: null on write only fields\n    const reducedData: RemoteType = clearSetFieldsFromRequest(\n      remote,\n      remote.write_only_fields,\n    ) as RemoteType;\n\n    // Pulp complains if auth_url gets sent with a request that doesn't include a\n    // valid token, even if the token exists in the database and isn't being changed.\n    // To solve this issue, simply delete auth_url from the request if it hasn't\n    // been updated by the user.\n    if (reducedData.auth_url === unModifiedRemote.auth_url) {\n      delete reducedData['auth_url'];\n    }\n\n    for (const field of Object.keys(reducedData)) {\n      if (reducedData[field] === '') {\n        reducedData[field] = null;\n      }\n    }\n\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(id, obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = API_HOST;\n  constructor() {\n    super();\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  list(id, params) {\n    return this.http.get(this.apiPath + id + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n}\n\nexport const ImagesAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super('/pulp/api/v3/');\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  constructor() {\n    super();\n  }\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/namespaces/');\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n\n  list(params) {\n    let changedParams = { ...params };\n    if (changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams);\n  }\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\nexport const GenericPulpAPI = new API();\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  variant: AlertProps['variant'];\n  title: string;\n  description?: string;\n}\n\nexport class AlertList extends React.Component<IProps, {}> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps, {}> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={(niceNames[key] || key) as any}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams(ParamHelper.deleteParam(params, key, v))\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\nimport { Logo } from 'src/components';\n\ninterface IProps {\n  title: string;\n  imageURL?: string;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      title,\n      imageURL,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {imageURL ? (\n              <Logo\n                className='image'\n                alt={t`Page logo`}\n                image={imageURL}\n                size='40px'\n                unlockWidth={true}\n              />\n            ) : null}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: {\n    name: string;\n    url?: string;\n  }[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </div>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { NumericLabel, Logo } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const { name, latest_version, namespace, className, footer, repo } =\n      this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(\n      latest_version.metadata.contents,\n    );\n\n    return (\n      <Card className={cx('collection-card-container', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            image={namespace.avatar_url}\n            alt={company + ' logo'}\n            size='40px'\n            unlockWidth={true}\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{t`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <div>\n          <NumericLabel number={count} />\n        </div>\n        <div className='type-label'>\n          <NumericLabel number={count} hideNumber={true} label={type} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  TextInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    let toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (let c of contents) {\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n      if (!summary[c.content_type]) {\n        summary[c.content_type] = 0;\n      }\n\n      if (typeMatch && c.name.match(keywords)) {\n        toShow.push(c);\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label={t`find-content`}\n                  placeholder={t`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{t`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'selected-item': key === showing,\n                    'type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='content-table pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{t`Name`}</th>\n              <th>{t`Type`}</th>\n              <th>{t`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\nimport { userLanguage } from 'src/l10n';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    moment.locale(userLanguage);\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './header.scss';\n\nimport * as moment from 'moment';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  List,\n  ListItem,\n  Modal,\n  Alert,\n  Text,\n  Button,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  LinkTabs,\n  RepoSelector,\n  Pagination,\n} from 'src/components';\n\nimport { CollectionDetailType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n    };\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const { modalPagination, isOpenVersionsModal, isOpenVersionsSelect } =\n      this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${\n        v.version === all_versions[0].version ? t`(latest)` : ''\n      }`;\n\n    const { name: collectionName } = collection;\n\n    return (\n      <React.Fragment>\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`released ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          imageURL={collection.namespace.avatar_url}\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={Paths.searchByRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} released {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n            </div>\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <div className='tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport './collection-info.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  Button,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag, ClipboardCopy } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport { userLanguage } from 'src/l10n';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: any;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const { name, latest_version, namespace, params } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    moment.locale(userLanguage);\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{t`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>{latest_version.metadata.license}</SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Installing collections with ansible-galaxy is\n                    only supported in ansible 2.9+\n                  </Trans>\n                </div>\n                <div>\n                  <a ref={this.downloadLinkRef} style={{ display: 'none' }}></a>\n                  <Button\n                    className='download-button'\n                    variant='link'\n                    icon={<DownloadIcon />}\n                    onClick={() =>\n                      this.download(\n                        this.context.selectedRepo,\n                        namespace,\n                        name,\n                        latest_version,\n                      )\n                    }\n                  >\n                    {t`Download tarball`}\n                  </Button>\n                </div>\n              </SplitItem>\n            </Split>\n          </GridItem>\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {t`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {t`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    ).then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      this.downloadLinkRef.current.href = downloadURL;\n      this.downloadLinkRef.current.click();\n    });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {};\n  updateParams: (p) => void;\n}\n\nexport class CollectionFilter extends React.Component<IProps> {\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as 'multiple',\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n    ];\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <CompoundFilter\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './list.scss';\n\nimport { Button, DropdownItem, DataList } from '@patternfly/react-core';\n\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  Pagination,\n  StatefulDropdown,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n\n  showNamespace?: boolean;\n  showControls?: boolean;\n  handleControlClick?: (id, event) => void;\n  repo?: string;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n\n        <div className='controls bottom'>\n          <div></div>\n          <div>\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.props.handleControlClick(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              onClick={(e) =>\n                this.props.handleControlClick(collection.id, 'deprecate')\n              }\n              key='1'\n            >\n              {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  NumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps, {}> {\n  render() {\n    const {\n      name,\n      // download_count,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={company + ' logo'}\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth={true}\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(\n      latest_version.metadata.contents,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='entry'>{latest_version.metadata.description}</div>\n        <div className='entry pf-l-flex pf-m-wrap content'>\n          {Object.keys(contentSummary.contents).map((k) => (\n            <div key={k}>\n              <NumericLabel\n                className='numeric-label-capitalize-text'\n                label={k}\n                number={contentSummary.contents[k]}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='entry'>{controls}</div> : null}\n        <div className='right-col entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='entry'>v{latest_version.version}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem aria-labelledby='simple-item1'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: any;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  inputText: string;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      inputText: '',\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => this.setState({ selectedFilter: v, inputText: '' })}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup>\n        <StatefulDropdown\n          toggleType='dropdown'\n          defaultText={\n            <span>\n              <FilterIcon />\n              {'   '}\n              {selectedFilter.title}\n            </span>\n          }\n          position='left'\n          isPlain={false}\n          items={filterOptions}\n        />\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.state.inputText}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        const options = selectedFilter.options.map((option) => (\n          // patternfly does not allow for us to set a display name aside from the ID\n          // which unfortunately means that multiple select will ignore the human readable\n          // option.title\n          <SelectOption key={option.id} value={option.id} />\n        ));\n\n        const toggle = [\n          <SelectGroup\n            label={t`Filter by ${selectedFilter.id}`}\n            key={selectedFilter.id}\n          >\n            {options}\n          </SelectGroup>,\n        ];\n\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {toggle}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.state.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v, i) => (\n              <DropdownItem\n                onClick={() =>\n                  this.setState({ inputText: v.id }, () => this.submitFilter())\n                }\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.state.inputText}\n            onChange={(k) => this.setState({ inputText: k })}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter') {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n    );\n  }\n\n  private submitFilter() {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        this.state.inputText,\n      ),\n    );\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) return inputText;\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nexport class DeprecatedTag extends React.Component<{}, {}> {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {t`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: string;\n  button?: ReactElement;\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, SearchIcon } from '@patternfly/react-icons';\nimport { ReactElement } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: string;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : SearchIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\n\ninterface IProps {}\n\nexport class EmptyStateUnauthorized extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={t`Contact your organization administrator for more information.`}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport { Paths } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n    ];\n    return (\n      <BaseHeader\n        title={this.props.container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: t`Container Registry`,\n              },\n              { name: this.props.container.name },\n            ]}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        <Tooltip content={this.props.container.description}>\n          <p className={'truncated'}>{this.props.container.description}</p>\n        </Tooltip>\n        <span />\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab: this.props.tab }}\n              updateParams={(p) => this.props.updateState({ redirect: p.tab })}\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: any;\n  errorMessage?: any;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant='small'\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={''}\n        header={<h2>{t`Create a group`}</h2>}\n        actions={[\n          <Button\n            isDisabled={\n              this.state.name.length === 0 ||\n              (this.props.group && this.state.name === this.props.group.name)\n            }\n            key='create'\n            variant='primary'\n            onClick={() => onSave(this.state.name)}\n          >\n            {!this.props.group ? t`Create` : t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps, {}> {\n  lastImport: any;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div className='import-console pf-c-content'>\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion } = this.props;\n\n    let collectionHead: any = `${selectedImport.namespace}.${selectedImport.name}`;\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport {\n  Pagination,\n  FormSelect,\n  FormSelectOption,\n  Spinner,\n  Toolbar,\n} from '@patternfly/react-core';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { PulpStatus, NamespaceType, ImportListType } from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  namespaces: NamespaceType[];\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n}\n\ninterface IState {\n  kwField: string;\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n    };\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      namespaces,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderNamespacePicker(namespaces)}\n        <Toolbar>\n          <CompoundFilter\n            updateParams={(p) => {\n              p['page'] = 1;\n              this.props.updateParams(p);\n            }}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n        <AppliedFilters\n          updateParams={(p) => {\n            p['page'] = 1;\n            this.props.updateParams(p);\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        <Pagination\n          itemCount={numberOfResults}\n          perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n          page={params.page || 1}\n          onSetPage={(_, p) =>\n            updateParams(ParamHelper.setParam(params, 'page', p))\n          }\n          onPerPageSelect={(_, p) => {\n            updateParams({ ...params, page: 1, page_size: p });\n          }}\n          isCompact={true}\n        />\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (loading) {\n      return (\n        <div className='loading'>\n          <Spinner />\n        </div>\n      );\n    }\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          {item.name} {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private renderNamespacePicker(namespaces) {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <FormSelect\n            onChange={(val) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                val,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            value={this.props.params.namespace}\n            aria-label={t`Select namespace`}\n          >\n            {namespaces.map((ns) => (\n              <FormSelectOption key={ns.name} label={ns.name} value={ns.name} />\n            ))}\n          </FormSelect>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component<{}> {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component<{}> {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { DropdownItem } from '@patternfly/react-core';\nimport {\n  DateComponent,\n  EmptyStateNoData,\n  SortTable,\n  StatefulDropdown,\n  ClipboardCopy,\n} from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  repositories: {}[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Content count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Repo URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'kebab',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>{distribution.repository.content_count}</td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : !!distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n        <td>\n          <span>\n            <StatefulDropdown\n              items={[\n                <DropdownItem\n                  key='2'\n                  component={\n                    <Link to={formatPath(Paths.token, {})} target='_blank'>\n                      {t`Get token`}\n                    </Link>\n                  }\n                />,\n              ]}\n            />\n          </span>\n        </td>\n      </tr>\n    );\n  }\n}\n","import { cellWidth } from '@patternfly/react-table';\nimport * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n}\n\nexport class Logo extends React.Component<IProps> {\n  render() {\n    const { size, image, alt, className, unlockWidth, width } = this.props;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={image || DefaultLogo}\n          alt={alt}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nexport class Main extends React.Component<any> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps, {}> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              {text ? (\n                <ReactMarkdown children={text} />\n              ) : (\n                <ReactMarkdown children={placeholder} />\n              )}\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps, {}> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='ns-card-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              unlockWidth\n              image={avatar_url}\n              alt={company + ' logo'}\n              size='40px'\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{t`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\n\nimport { Form, FormGroup, TextInput, TextArea } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\n\nimport { NamespaceCard, ObjectPermissionField } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: any;\n  userId: string;\n\n  updateNamespace: (namespace) => void;\n}\n\ninterface IState {\n  newNamespaceGroup: string;\n}\n\nexport class NamespaceForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newNamespaceGroup: '',\n    };\n  }\n\n  render() {\n    const { namespace, errorMessages, userId } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <Form>\n        <div className='card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                isRequired\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='groups'\n          label={t`Namespace owners`}\n          className='namespace-owners'\n          helperTextInvalid={errorMessages['groups']}\n          validated={this.toError(\n            !isNaN(Number(this.state.newNamespaceGroup)) &&\n              !('groups' in errorMessages),\n          )}\n        >\n          <br />\n\n          <ObjectPermissionField\n            groups={namespace.groups}\n            availablePermissions={['change_namespace', 'upload_to_namespace']}\n            setGroups={(g) => {\n              const newNS = { ...namespace };\n              newNS.groups = g;\n              this.props.updateNamespace(newNS);\n            }}\n          ></ObjectPermissionField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <TextInput\n            id='name'\n            type='text'\n            placeholder={t`Link text`}\n            value={link.name}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-url'>\n          <TextInput\n            id='url'\n            type='text'\n            placeholder={t`Link URL`}\n            value={link.url}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { NamespaceAPI, GroupObjectPermissionType } from 'src/api';\n\nimport { HelperText, ObjectPermissionField } from 'src/components';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  newGroups: GroupObjectPermissionType[];\n  errorMessages: any;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      newGroups: [],\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error: any = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain [A-Za-z0-9_]`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = (event) => {\n    const data: any = {\n      name: this.state.newNamespaceName,\n      groups: this.state.newGroups,\n    };\n    NamespaceAPI.create(data)\n      .then((results) => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          newGroups: [],\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages: any = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newGroups, newNamespaceNameValid } = this.state;\n    return (\n      <Modal\n        variant='large'\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperText={t`Please, provide the namespace name`}\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n          <FormGroup\n            label={t`Namespace owners`}\n            fieldId='groups'\n            helperTextInvalid={this.state.errorMessages['groups']}\n          >\n            <ObjectPermissionField\n              availablePermissions={['change_namespace', 'upload_to_namespace']}\n              groups={newGroups}\n              setGroups={(g) => this.setState({ newGroups: g })}\n              menuAppendTo='parent'\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\n\ninterface IProps {\n  className?: string;\n  number: number | string;\n  label?: string;\n  hideNumber?: boolean;\n}\n\nexport class NumericLabel extends React.Component<IProps, {}> {\n  render() {\n    const { className, number, label, hideNumber } = this.props;\n    let convertedNum: number;\n\n    if (typeof number === 'string') {\n      convertedNum = Number(number);\n    } else {\n      convertedNum = number;\n    }\n\n    const plural = number === 1 ? '' : 's';\n\n    return (\n      <div>\n        <span>\n          {hideNumber ? null : NumericLabel.roundNumber(convertedNum)}{' '}\n        </span>\n        <span className={className}>{label ? label + plural : null}</span>\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\n\nimport { TrashIcon } from '@patternfly/react-icons';\n\nimport { GroupObjectPermissionType, GroupAPI } from 'src/api';\nimport { APISearchTypeAhead, PermissionChipSelector } from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  groups: GroupObjectPermissionType[];\n  availablePermissions: string[];\n  setGroups: (groups: GroupObjectPermissionType[]) => void;\n  isDisabled?: boolean;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  searchGroups: { name: string; id: number | string }[];\n}\n\nexport class ObjectPermissionField extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const { groups, availablePermissions } = this.props;\n\n    return (\n      <div>\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelect}\n          placeholderText={t`Find a group`}\n          menuAppendTo={this.props.menuAppendTo}\n          isDisabled={!!this.props.isDisabled}\n        />\n        <br />\n        <div>\n          {groups.map((group, i) => (\n            <Flex\n              style={{ marginTop: '16px' }}\n              alignItems={{ default: 'alignItemsCenter' }}\n              key={group.name}\n            >\n              <FlexItem style={{ minWidth: '200px' }}>{group.name}</FlexItem>\n              <FlexItem grow={{ default: 'grow' }} style={{ width: '90%' }}>\n                <PermissionChipSelector\n                  availablePermissions={availablePermissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  selectedPermissions={group.object_permissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  setSelected={(perms) => this.setPermissions(perms, group)}\n                  menuAppendTo={this.props.menuAppendTo}\n                />\n              </FlexItem>\n              <FlexItem>\n                <TrashIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => this.removeGroup(group)}\n                />\n              </FlexItem>\n            </Flex>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  private removeGroup(group) {\n    const newGroups = [];\n    for (const g of this.props.groups) {\n      if (g.id !== group.id) {\n        newGroups.push(g);\n      }\n    }\n\n    this.props.setGroups(newGroups);\n  }\n\n  private setPermissions(perms, group) {\n    const newGroups = [...this.props.groups];\n    const selectedGroup = newGroups.find((g) => g.id === group.id);\n    selectedGroup.object_permissions = perms.map((perm) =>\n      twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n    );\n\n    this.props.setGroups(newGroups);\n  }\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name }).then((result) => {\n      const added = this.props.groups.map((group) => group.name);\n      const groups = result.data.data.filter(\n        (group) => !added.includes(group.name),\n      );\n      this.setState({ searchGroups: groups });\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    const newGroups = [...this.props.groups];\n\n    const addedGroup = this.state.searchGroups.find(\n      (g) => g.name === selection,\n    );\n\n    newGroups.push({\n      id: addedGroup.id as number,\n      name: addedGroup.name,\n      object_permissions: this.props.availablePermissions,\n    });\n\n    this.props.setGroups(newGroups);\n  };\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n  ToggleTemplate,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n        titles={{\n          ofWord: t`of`,\n          perPageSuffix: t`per page`,\n          items: null,\n        }}\n        toggleTemplate={(props) => <ToggleTemplate ofWord={t`of`} {...props} />}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { BaseHeader, Tabs, TabsType, Breadcrumbs } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n    return (\n      <BaseHeader\n        title={namespace.company || namespace.name}\n        imageURL={namespace.avatar_url}\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions: string[];\n  selectedPermissions: string[];\n  setSelected: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map((text) => (\n            <Label key={text}>{text}</Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={this.onToggle}\n        onSelect={!!this.props.onSelect ? this.props.onSelect : this.onSelect}\n        onClear={\n          !!this.props.onClear ? this.props.onClear : this.clearSelection\n        }\n        selections={this.props.selectedPermissions}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option} />\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return t`Select permissions`;\n    }\n    return this.props.selectedPermissions.length === 0 ? t`No permission` : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    const newPerms = new Set(this.props.selectedPermissions);\n    if (newPerms.has(selection)) {\n      newPerms.delete(selection);\n    } else {\n      newPerms.add(selection);\n    }\n\n    this.props.setSelected(Array.from(newPerms));\n  };\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText, FileUpload } from 'src/components';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet } from 'src/utilities';\n\ninterface IProps {\n  updateRemote: (remote) => void;\n  remote: RemoteType;\n  saveRemote: () => void;\n  showModal: boolean;\n  closeModal: () => void;\n  errorMessages: object;\n}\n\ninterface IState {\n  uploadedRequirementFilename: string;\n  uploadedClientKeyFilename: string;\n  uploadedClientCertFilename: string;\n  uploadedCaCertFilename: string;\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    let [\n      requirementsFilename,\n      clientCertFilename,\n      clientKeyFilename,\n      caCertFilename,\n    ] = Array(4).fill('');\n\n    if (!!props.remote) {\n      requirementsFilename = this.props.remote.requirements_file\n        ? 'requirements.yml'\n        : '';\n      clientKeyFilename = this.props.remote.client_key ? 'client_key.yml' : '';\n      clientCertFilename = this.props.remote.client_cert\n        ? 'client_cert.yml'\n        : '';\n      caCertFilename = this.props.remote.ca_cert ? 'ca_cert.yml' : '';\n    }\n\n    this.state = {\n      uploadedRequirementFilename: requirementsFilename,\n      uploadedClientKeyFilename: clientKeyFilename,\n      uploadedClientCertFilename: clientCertFilename,\n      uploadedCaCertFilename: caCertFilename,\n    };\n  }\n\n  render() {\n    const { remote, errorMessages } = this.props;\n    if (!remote) {\n      return null;\n    }\n    const remoteType = this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n      >\n        requirements.yml\n      </a>\n    );\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          validated={this.toError(!('url' in errorMessages))}\n          helperTextInvalid={errorMessages['url']}\n        >\n          <TextInput\n            validated={this.toError(!('url' in errorMessages))}\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren't\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedRequirementFilename}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState(\n                      { uploadedRequirementFilename: filename },\n                      () => this.updateRemote(value, 'requirements_file'),\n                    );\n                  }}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      this.state.uploadedRequirementFilename,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'username'}\n              label={t`Username`}\n              labelIcon={\n                <HelperText\n                  content={t`The username to be used for authentication when syncing. This is not required when using a token.`}\n                />\n              }\n              isRequired={requiredFields.includes('username')}\n              validated={this.toError(!('username' in errorMessages))}\n              helperTextInvalid={errorMessages['username']}\n            >\n              <TextInput\n                validated={this.toError(!('username' in errorMessages))}\n                isRequired={requiredFields.includes('username')}\n                isDisabled={disabledFields.includes('username')}\n                id='username'\n                type='text'\n                value={remote.username || ''}\n                onChange={(value) => this.updateRemote(value, 'username')}\n              />\n            </FormGroup>\n            <FormGroup\n              fieldId={'password'}\n              label={t`Password`}\n              labelIcon={\n                <HelperText\n                  content={t`The password to be used for authentication when syncing. This is not required when using a token.`}\n                />\n              }\n              isRequired={requiredFields.includes('password')}\n              validated={this.toError(!('password' in errorMessages))}\n              helperTextInvalid={errorMessages['password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('password', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('password' in errorMessages))}\n                  isRequired={requiredFields.includes('password')}\n                  isDisabled={disabledFields.includes('password')}\n                  id='password'\n                  type='password'\n                  value={remote.password || ''}\n                  onChange={(value) => this.updateRemote(value, 'password')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_username' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_username')}\n                isDisabled={disabledFields.includes('proxy_username')}\n                id='proxy_username'\n                type='text'\n                value={remote.proxy_username || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_username')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='text'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedClientKeyFilename}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState({ uploadedClientKeyFilename: filename }, () =>\n                      this.updateRemote(value, 'client_key'),\n                    );\n                  }}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={this.state.uploadedClientCertFilename}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={(value, filename) => {\n                      this.setState(\n                        { uploadedClientCertFilename: filename },\n                        () => this.updateRemote(value, 'client_cert'),\n                      );\n                    }}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        this.state.uploadedClientCertFilename,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={this.state.uploadedCaCertFilename}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={(value, filename) => {\n                      this.setState({ uploadedCaCertFilename: filename }, () =>\n                        this.updateRemote(value, 'ca_cert'),\n                      );\n                    }}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        this.state.uploadedCaCertFilename,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={remote.download_concurrency > 0 ? 'default' : 'error'}\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency}\n                validated={\n                  remote.download_concurrency > 0 ? 'default' : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(parseInt(value), 'download_concurrency')\n                }\n              />\n            </FormGroup>\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                Number.isInteger(remote.rate_limit) ||\n                remote.rate_limit === null\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                value={remote.rate_limit}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n    if (remote.download_concurrency < 1) {\n      return false;\n    }\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, HelperText, SortTable, StatefulDropdown } from '..';\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  polling: any;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      } else {\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { user } = this.props;\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {!!remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        {!!remote.last_sync_task && !!remote.last_sync_task.finished_at ? (\n          <td>\n            <DateComponent date={remote.last_sync_task.finished_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{this.renderStatus(remote)}</td>\n        <td>\n          {remote.repositories.length === 0 ? (\n            <Tooltip\n              content={t`There are no repos associated with this remote.`}\n            >\n              <Button variant='plain'>\n                <ExclamationCircleIcon />\n              </Button>\n            </Tooltip>\n          ) : (\n            !!user &&\n            user.model_permissions.change_remote && (\n              <>\n                {this.getConfigureOrSyncButton(remote)}\n                <span>\n                  <StatefulDropdown\n                    items={[\n                      <DropdownItem\n                        key='edit'\n                        onClick={() => this.props.editRemote(remote)}\n                      >\n                        {t`Edit`}\n                      </DropdownItem>,\n                    ]}\n                  />\n                </span>\n              </>\n            )\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  private renderStatus(remote) {\n    if (!remote.last_sync_task) {\n      return '---';\n    }\n\n    let errorMessage = null;\n    if (remote['last_sync_task']['error']) {\n      errorMessage = (\n        <HelperText content={remote.last_sync_task.error['description']} />\n      );\n    }\n\n    return (\n      <>\n        <StatusIndicator status={remote.last_sync_task.state} /> {errorMessage}\n      </>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { user } = this.props;\n    if (!!user && !user.model_permissions.change_remote) {\n      return null;\n    }\n    const configButton = (\n      <Button onClick={() => this.props.editRemote(remote)} variant='secondary'>\n        {t`Configure`}\n      </Button>\n    );\n\n    const syncButton = (\n      <>\n        <Button\n          isDisabled={\n            remote.repositories.length === 0 ||\n            (remote.last_sync_task &&\n              ['running', 'waiting'].includes(remote.last_sync_task.state))\n          }\n          onClick={() =>\n            this.props.syncRemote(\n              remote.repositories[0].distributions[0].base_path,\n            )\n          }\n          variant='secondary'\n        >\n          {t`Sync`}\n        </Button>\n      </>\n    );\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: any;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return null;\n    }\n\n    const repoNames = Constants.REPOSITORYNAMES;\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              variant='plain'\n              className='input-group-text-no-wrap'\n            >\n              {t`Filter by repository`}\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoBasePath(event.target.name);\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: newRepo,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={(isExpanded) => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              {Object.keys(repoNames).map((option) => (\n                <SelectOption\n                  name={option}\n                  key={option}\n                  value={repoNames[option]}\n                />\n              ))}\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoBasePath(basePath) {\n    const newRepoName = Object.keys(Constants.REPOSITORYNAMES).find(\n      (key) => Constants.REPOSITORYNAMES[key] === basePath,\n    );\n\n    // allowing the repo to go through even if isn't one that we support so\n    // that 404s bubble up naturally from the child components.\n    if (!newRepoName) {\n      return basePath;\n    }\n    return newRepoName;\n  }\n\n  private getRepoName(repoName) {\n    if (Constants.REPOSITORYNAMES[repoName]) {\n      return Constants.REPOSITORYNAMES[repoName];\n    }\n\n    return repoName;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport { ObjectPermissionField } from 'src/components';\nimport { GroupObjectPermissionType } from 'src/api';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n  onSave: (string, []) => void;\n  onCancel: () => void;\n  permissions: string[];\n}\n\ninterface IState {\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: this.props.description,\n      selectedGroups: this.props.selectedGroups,\n    };\n  }\n\n  render() {\n    const { name, onSave, onCancel, namespace } = this.props;\n    const { description, selectedGroups } = this.state;\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={t`Edit repository`}\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            onClick={() => onSave(description, selectedGroups)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup key='name' fieldId='name' label={t`Name`}>\n            <TextInput id='name' value={name} isDisabled={true} type='text' />\n          </FormGroup>\n          <FormGroup key='name' fieldId='name' label={t`Container namespace`}>\n            <TextInput\n              id='name'\n              value={namespace}\n              isDisabled={true}\n              type='text'\n            />\n          </FormGroup>\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n          <FormGroup\n            key='groups'\n            fieldId='groups'\n            label={t`Groups with access`}\n          >\n            <div className='pf-c-form__helper-text'>\n              {t`Adding groups provides access to all repositories in the\n                \"${namespace}\" container namespace.`}\n            </div>\n            <ObjectPermissionField\n              groups={this.state.selectedGroups}\n              availablePermissions={Constants.CONTAINER_NAMESPACE_PERMISSIONS}\n              setGroups={(g) => this.setState({ selectedGroups: g })}\n              menuAppendTo='parent'\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.change_containernamespace',\n                )\n              }\n            ></ObjectPermissionField>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps, {}> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    return (\n      <Tooltip content={this.props.digest}>\n        <Label color='blue'>{truncateSha(this.props.digest)}</Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: any;\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams(\n        ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n      ),\n    );\n  }\n\n  private setDescending() {\n    let field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n    );\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Select input`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n            aria-labelledby='Sort results'\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n    );\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    let activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr aria-labelledby='headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNodeArray;\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Label } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: string;\n  icon: any;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps, {}> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: t`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: t`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: t`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: t`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type] as any}\n        color={labelProps.color as any}\n        icon={labelProps.icon}\n        className={this.props.className}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: t`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab.name}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Label className='tag' readOnly>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Toolbar as ToolbarPF,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarContent,\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { Sort } from 'src/components';\n\nimport { SortFieldType } from './sort';\n\ninterface IProps {\n  /** Current page params */\n  params: {\n    sort?: string;\n    keywords?: string;\n  };\n\n  /** List of sort options that the user can pick from */\n  sortOptions?: SortFieldType[];\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Search bar placeholder text*/\n  searchPlaceholder: string;\n\n  /** Extra set of customizeable inputs that appear to right of sort*/\n  extraInputs?: React.ReactNode[];\n}\n\ninterface IState {\n  kwField: string;\n}\n\n// FIXME: only used in collection-list & namespace-list, other Toolbar is unrelated; merge\nexport class Toolbar extends React.Component<IProps, IState> {\n  static defaultProps = {\n    extraInputs: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      kwField: props.params.keywords || '',\n    };\n  }\n\n  render() {\n    const {\n      params,\n      sortOptions,\n      updateParams,\n      searchPlaceholder,\n      extraInputs,\n    } = this.props;\n    const { kwField } = this.state;\n    return (\n      <ToolbarPF>\n        <ToolbarContent>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <InputGroup>\n                <TextInput\n                  value={kwField}\n                  onChange={(k) => this.setState({ kwField: k })}\n                  onKeyPress={(e) => this.handleEnter(e)}\n                  type='search'\n                  aria-label={t`search text input`}\n                  placeholder={searchPlaceholder}\n                />\n                <Button\n                  variant={ButtonVariant.control}\n                  aria-label={t`search button`}\n                  onClick={() => this.submitKeywords()}\n                >\n                  <SearchIcon />\n                </Button>\n              </InputGroup>\n            </ToolbarItem>\n          </ToolbarGroup>\n          {sortOptions && (\n            <ToolbarGroup>\n              <ToolbarItem>\n                <Sort\n                  options={sortOptions}\n                  params={params}\n                  updateParams={updateParams}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          )}\n          {extraInputs}\n        </ToolbarContent>\n      </ToolbarPF>\n    );\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter') {\n      this.submitKeywords();\n    }\n  }\n\n  private submitKeywords() {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        'keywords',\n        this.state.kwField,\n      ),\n      page: 1, // always reset the page when searching\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps, {}> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  errorMessages: any; // FIXME: { [key: string]: string }, but all callers use {}, object or any\n  formFields: {\n    formGroupLabelIcon?: React.ReactNode;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  model: any;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && (field.formGroupLabelIcon as any)}\n          validated={isReadonly ? 'default' : validated}\n          aria-labelledby={field.id}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as any) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\n\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: object;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: any[];\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm } = this.state;\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least 9 characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        aria-labelledby='readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelectGroup}\n          placeholderText={t`Select groups`}\n          selections={user.groups}\n          multiple={true}\n          onClear={this.clearGroups}\n          isDisabled={isReadonly}\n        />\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={(e) =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection, isPlaceholder) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 }).then((result) =>\n      this.setState({ searchGroups: result.data.data }),\n    );\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport { BaseHeader, Main, Breadcrumbs, UserForm } from 'src/components';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: any[];\n  errorMessages: object;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: object) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: any;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label={t`hidden value`}\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {t`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\n\ninterface IProps {\n  children: string;\n  [key: string]: any;\n}\n\nexport class ClipboardCopy extends React.Component<IProps, {}> {\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <PFClipboardCopy\n        hoverTip={t`Copy to clipboard`}\n        clickTip={t`Successfully copied to clipboard!`}\n        {...props}\n      >\n        {children}\n      </PFClipboardCopy>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  FileUpload as PFFileUpload,\n  FileUploadProps,\n} from '@patternfly/react-core';\n\nexport class FileUpload extends React.Component<FileUploadProps, {}> {\n  render() {\n    return (\n      <PFFileUpload\n        browseButtonText={t`Browse...`}\n        clearButtonText={t`Clear`}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        {...this.props}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      object_permissions: [\n        'galaxy.add_namespace',\n        'galaxy.change_namespace',\n        'galaxy.upload_to_namespace',\n      ],\n    },\n    {\n      name: 'collections',\n      object_permissions: ['ansible.modify_ansible_repo_content'],\n    },\n    {\n      name: 'users',\n      object_permissions: [\n        'galaxy.view_user',\n        'galaxy.delete_user',\n        'galaxy.add_user',\n        'galaxy.change_user',\n      ],\n    },\n    {\n      name: 'groups',\n      object_permissions: [\n        'galaxy.view_group',\n        'galaxy.delete_group',\n        'galaxy.add_group',\n        'galaxy.change_group',\n      ],\n    },\n    {\n      name: 'remotes',\n      object_permissions: [\n        'ansible.change_collectionremote',\n        'ansible.view_collectionremote',\n      ],\n    },\n    {\n      name: 'containers',\n      object_permissions: [\n        // Turning off private container permissions since they aren't supported yet\n        // 'container.namespace_pull_containerdistribution',\n        // 'container.namespace_view_containerdistribution',\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.change_containernamespace',\n        'container.namespace_push_containerdistribution',\n        'container.add_containernamespace',\n      ],\n    },\n\n    // These aren't currently used. Removing them to reduce confusion in the UI\n    // {\n    //   name: 'distribution',\n    //   object_permissions: [\n    //     'ansible.change_ansibledistribution',\n    //     'ansible.view_ansibledistribution',\n    //   ],\n    // },\n    // {\n    //   name: 'synclists',\n    //   object_permissions: [\n    //     'galaxy.delete_synclist',\n    //     'galaxy.change_synclist',\n    //     'galaxy.view_synclist',\n    //     'galaxy.add_synclist',\n    //   ],\n    // },\n  ];\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n  static HUMAN_PERMISSIONS = {\n    'galaxy.add_namespace': t`Add namespace`,\n    'galaxy.change_namespace': t`Change namespace`,\n    'galaxy.upload_to_namespace': t`Upload to namespace`,\n    'ansible.modify_ansible_repo_content': t`Modify Ansible repo content`,\n    'galaxy.view_user': t`View user`,\n    'galaxy.delete_user': t`Delete user`,\n    'galaxy.add_user': t`Add user`,\n    'galaxy.change_user': t`Change user`,\n    'galaxy.view_group': t`View group`,\n    'galaxy.delete_group': t`Delete group`,\n    'galaxy.add_group': t`Add group`,\n    'galaxy.change_group': t`Change group`,\n    'ansible.change_collectionremote': t`Change collection remote`,\n    'ansible.view_collectionremote': t`View collection remote`,\n    'ansible.change_ansibledistribution': t`Change Ansible distribution`,\n    'ansible.view_ansibledistribution': t`View Ansible distribution`,\n    'galaxy.delete_synclist': t`Delete synclist`,\n    'galaxy.change_synclist': t`Change synclist`,\n    'galaxy.view_synclist': t`View synclist`,\n    'galaxy.add_synclist': t`Add synclist`,\n    'container.add_containernamespace': t`Create new containers`,\n    'container.namespace_pull_containerdistribution': t`Pull private containers`,\n    'container.namespace_change_containerdistribution': t`Change containers`,\n    'container.namespace_view_containerdistribution': t`View private containers`,\n    'container.namespace_modify_content_containerpushrepository': t`Change image tags`,\n    'container.change_containernamespace': t`Change container namespace permissions`,\n    'container.namespace_push_containerdistribution': t`Push to existing containers`,\n  };\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: t`Change namespace`,\n    upload_to_namespace: t`Upload to namespace`,\n    add_containernamespace: t`Create new containers`,\n    namespace_pull_containerdistribution: t`Pull private containers`,\n    namespace_change_containerdistribution: t`Update container information`,\n    namespace_view_containerdistribution: t`View private containers`,\n    namespace_modify_content_containerpushrepository: t`Change image tags`,\n    change_containernamespace: t`Change container namespace permissions`,\n    namespace_push_containerdistribution: t`Push images to existing containers`,\n    view_containernamespace: t`View container's namespace`,\n    delete_containernamespace: t`Delete container's namespace`,\n    namespace_delete_containerdistribution: t`Delete container's distribution`,\n    namespace_view_containerpushrepository: t`View container's repository`,\n    namespace_add_containerdistribution: t`Push new containers`,\n    change_containerdistribution: t`Change distribution`,\n    delete_containerdistribution: t`Delete distribution`,\n    push_containerdistribution: t`Push distribution`,\n    pull_containerdistribution: t`Pull distribution`,\n    view_containerdistribution: t`View distribution`,\n  };\n  static HUMAN_GROUP_DETAIL_PERMISSIONS = {\n    namespaces: t`Namespaces`,\n    collections: t`Collections`,\n    users: t`Users`,\n    groups: t`Groups`,\n    remotes: t`Remotes`,\n    containers: t`Containers`,\n  };\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: t`Published`,\n    'rh-certified': t`Red Hat Certified`,\n    community: t`Community`,\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': t`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': t`Import and auto approve`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': t`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': t`Import and move to staging`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': t`Import and auto approve`,\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': t`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': t`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.sync': t`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.copy.copy_content': t`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.collections.collection_sync': t`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.roles.synchronize': t`Pulp Ansible: Roles synchronize`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': t`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.collections.import_collection': t`Pulp ansible: Import collection`,\n    'pulp_container.app.tasks.tag_image': t`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': t`Pulp container: Untage image`,\n    'pulp_container.app.tasks.synchronize': t`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.recursive_add_content': t`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': t`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.build_image_from_containerfile': t`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': t`Pulp container: General multi delete`,\n    'pulpcore.tasking.tasks.import_repository_version': t`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': t`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': t`Pulpcore: Repair all artifacts`,\n    'pulpcore.tasking.tasks.base.general_create': t`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_update': t`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.base.general_delete': t`Pulpcore: General delete`,\n    'pulpcore.app.tasks.export.pulp_export': t`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': t`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.delete_version': t`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': t`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': t`Pulpcore: Upload commit`,\n    'pulpcore.app.tasks.repository.add_and_remove': t`Pulpcore: Add and remove`,\n    'pulpcore.plugin.tasking.add_and_remove': t`Pulpcore: Add or remove`,\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n}\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (registry) {\n    throw new Error('store already initialized');\n  }\n\n  registry = new ReducerRegistry({}, [promise, ...middleware]);\n\n  //If you want to register all of your reducers, this is good place.\n  /*\n   *  registry.register({\n   *    someName: (state, action) => ({...state})\n   *  });\n   */\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React, { Component } from 'react';\nimport { LoadingPageWithHeader } from 'src/components';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null,\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component,\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? (\n        <C {...this.props} />\n      ) : (\n        <LoadingPageWithHeader></LoadingPageWithHeader>\n      );\n    }\n  }\n\n  return AsyncComponent;\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport asyncComponent from 'src/utilities/asyncComponent';\nimport some from 'lodash/some';\nimport { Paths } from 'src/paths';\n\n/**\n * Aysnc imports of components\n *\n * https://webpack.js.org/guides/code-splitting/\n * https://reactjs.org/docs/code-splitting.html\n *\n * pros:\n *      1) code splitting\n *      2) can be used in server-side rendering\n * cons:\n *      1) nameing chunk names adds unnecessary docs to code,\n *         see the difference with DashboardMap and InventoryDeployments.\n *\n */\nconst EditNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/edit-namespace/edit-namespace'\n  ),\n);\n\nconst CollectionDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-detail'\n  ),\n);\n\nconst CollectionContent = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-content'\n  ),\n);\n\nconst CollectionDocs = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-docs'\n  ),\n);\n\nconst CollectionImportLog = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-import-log'\n  ),\n);\n\nconst NotFound = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"not_found\" */\n    '../../containers/not-found/not-found'\n  ),\n);\n\nconst MyNamespaces = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/my-namespaces'\n  ),\n);\n\nconst ManageNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst PartnerDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst Partners = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/' + NAMESPACE_TERM\n  ),\n);\n\nconst MyImports = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"my_imports\" */\n    '../../containers/my-imports/my-imports'\n  ),\n);\n\nconst Search = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"search\" */\n    '../../containers/search/search'\n  ),\n);\n\nconst TokenPage = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/token/token-insights'\n  ),\n);\n\nconst CertificationDashboard = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/certification-dashboard/certification-dashboard'\n  ),\n);\n\nconst Repository = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"repository-list\" */\n    '../../containers/repositories/repository-list'\n  ),\n);\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n\n  return <Route {...rest} component={Component} />;\n};\n\nInsightsRoute.propTypes = {\n  component: PropTypes.func,\n  rootClass: PropTypes.string,\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = (props) => {\n  const path = props.childProps.location.pathname;\n\n  return (\n    <Switch>\n      <InsightsRoute\n        path={Paths.repositories}\n        component={Repository}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.approvalDashboard}\n        component={CertificationDashboard}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.notFound}\n        component={NotFound}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.token}\n        component={TokenPage}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths[NAMESPACE_TERM]}\n        component={Partners}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.editNamespace}\n        component={EditNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollections}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollectionsByRepo}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myNamespaces}\n        component={MyNamespaces}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPageByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndexByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocsByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentListByRepo}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLogByRepo}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionByRepo}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespaceByRepo}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.searchByRepo}\n        component={Search}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPage}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndex}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocs}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentList}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLog}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myImports}\n        component={MyImports}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collection}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespace}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute path={Paths.search} component={Search} rootClass='root' />\n      {/* Finally, catch all unmatched routes */}\n      <Route\n        render={() =>\n          some(Paths, (p) => p === path) ? null : (\n            <Redirect push to={Paths.notFound} />\n          )\n        }\n      />\n    </Switch>\n  );\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { ActiveUserAPI } from 'src/api';\nimport { Paths } from 'src/paths';\n\nconst DEFAULT_REPO = 'published';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      activeUser: null,\n      selectedRepo: DEFAULT_REPO,\n    };\n  }\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('automation-hub');\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = insights.chrome.on('APP_NAVIGATION', (event) => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, no trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename.replace(/^\\/beta\\//, '/');\n\n      if (event.domEvent.href) {\n        // prod-beta\n        // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n        // (navId: corresponds to the last url component, but not the same one, ansible-hub means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners)\n\n        // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n        this.props.history.push(\n          event.domEvent.href.replace(basename, '') || '/',\n        );\n      } else {\n        // FIXME: may no longer be needed by the time this gets to prod-stable\n        // prod-stable\n        // (domEvent is a react event, no href (there is an absolute url in domEvent.target.href))\n        // navId: corresponds to the first url component after prefix, \"\" means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners\n        this.props.history.push(`/${event.navId}`);\n      }\n    });\n\n    insights.chrome.auth\n      .getUser()\n      .then((user) => this.setState({ user: user }));\n    ActiveUserAPI.getActiveUser().then((result) =>\n      this.setState({ activeUser: result.data }),\n    );\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate(prevProps) {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user || !this.state.activeUser) {\n      return null;\n    } else {\n      return (\n        <AppContext.Provider\n          value={{\n            user: this.state.activeUser,\n            setUser: this.setActiveUser,\n            selectedRepo: this.state.selectedRepo,\n          }}\n        >\n          <Routes childProps={this.props} />\n        </AppContext.Provider>\n      );\n    }\n  }\n  setActiveUser = (user) => {\n    this.setState({ activeUser: user });\n  };\n\n  isRepoURL = (location) => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n  basename: PropTypes.string.isRequired,\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { I18nProvider } from '@lingui/react';\nimport { i18n } from '@lingui/core';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport getBaseName from './utilities/getBaseName';\nimport 'src/l10n';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst basename = getBaseName(window.location.pathname);\n\nReactDOM.render(\n  <Provider store={init().getStore()}>\n    <Router basename={basename}>\n      <I18nProvider i18n={i18n}>\n        <App basename={basename} />\n      </I18nProvider>\n    </Router>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\n\nconst availableLanguages = ['en', 'es', 'fr', 'nl', 'ja', 'zh'];\n\n// Accept-Language\nexport const userLanguage =\n  navigator.languages\n    .map((lang) => lang.replace(/[-_].*/, ''))\n    .filter((lang) => availableLanguages.includes(lang))[0] || 'en';\n\nasync function activate(locale: string) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (window.localStorage.test_l10n === 'true') {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>Foo <<\", ['param']]\n        messages[key] = messages[key].map((item) =>\n          Array.isArray(item) ? item : '»' + item + '«',\n        );\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n}\n\nactivate(userLanguage);\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType } from 'src/api';\n\ninterface IAppContextType {\n  user: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\n","import { t } from '@lingui/macro';\nimport { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(path: Paths, data: any, params?: object) {\n  let url = path as string;\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    return `${url}?${ParamHelper.getQueryString(params)}`;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { ContentSummaryType } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  content: ContentSummaryType[],\n): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: { module: 0, role: 0, plugin: 0 },\n  };\n\n  for (let c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport function mapErrorMessages(err) {\n  const messages: any = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = !!API_HOST ? API_HOST : window.location.origin;\n\n  return !!distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: any) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find((key) => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    console.log(field);\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data: any,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  let splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: Object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: Object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: Object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (let k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p: any, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: Object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: Object, ignoreParams?: string[]) {\n    let paramString = [];\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams(params);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + ({\"33\":\"namespace_detail\",\"152\":\"not_found\",\"378\":\"repository-list\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] || chunkId) + \".\" + {\"33\":\"ef7abd7897a4039648a1\",\"152\":\"39c01c5b9e5ab5672581\",\"378\":\"d740a43a477ced49d766\",\"379\":\"52de622d5ef47d5cc2c1\",\"415\":\"bd429f1e48ea61902d3c\",\"464\":\"0861436d137dff474aaa\",\"541\":\"3ab756fac52a348e124c\",\"571\":\"2574294b0882fddbf4bc\",\"682\":\"a60c31e654d98d7b2f22\",\"684\":\"f694deda008a61314a0c\",\"776\":\"726264593be2981028c2\",\"837\":\"48751bc024c0582da663\",\"853\":\"101455b5617233a392e2\",\"870\":\"e66553f393e6fd0f11ea\"}[chunkId] + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"css/\" + {\"33\":\"namespace_detail\",\"152\":\"not_found\",\"410\":\"pfVendor\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"768\":\"App\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] + \".\" + {\"33\":\"0404a1965d8cbc7e8752\",\"152\":\"edf236b3c340045471cc\",\"410\":\"e180aa45d98d96e6dbe5\",\"464\":\"479b6edf24556d317e6f\",\"571\":\"e278031ed8e7e4c376de\",\"684\":\"9d8e8029cd5e90f139f5\",\"768\":\"98638f739c40d6880c8f\",\"776\":\"5be18d32371f96ba784a\",\"837\":\"60d5edc9717bf67286eb\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/beta/apps/automation-hub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkansible_hub_ui\"] = self[\"webpackChunkansible_hub_ui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [410,293,252,736], () => (__webpack_require__(52853)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","loadStylesheet","installedCssChunks","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","source","forceReload","cachedCollection","result","docs_blob","filterDetailItem","distro_base_path","version","reject","err","ImportMessageCodes","PulpStatus","NamespaceAPI","API","ImportAPI","ActiveUserAPI","identity","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","MySyncListAPI","TaskAPI","GroupAPI","permissionId","RemoteAPI","distribution","remote","unModifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","obj","API_HOST","DistributionAPI","MyDistributionAPI","readme","digest","PulpAPI","repositoryID","tag","changedParams","APISearchTypeAhead","props","loadResults","onClear","evt","textInput","target","value","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","options","results","option","push","SelectOption","key","length","React","AlertList","alerts","closeAlert","style","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","Array","isArray","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","imageURL","pageControls","children","breadcrumbs","contextSelector","versionControl","status","cx","Logo","alt","image","size","unlockWidth","Title","headingLevel","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","to","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","avatar_url","TextContent","getCertification","formatPath","Paths","Text","component","TextVariants","CardBody","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","count","NumericLabel","number","hideNumber","label","CollectionContentList","toShow","summary","all","showing","keywords","c","typeMatch","match","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","selectedRepo","AppContext","DateComponent","date","moment","locale","userLanguage","Tooltip","format","fromNow","CollectionHeader","page_size","modalPagination","isOpenVersionsSelect","isOpenVersionsModal","activeTab","all_versions","find","x","created","created_at","urlKeys","latestVersion","isLatestVersion","collectionName","Modal","List","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","ListItem","isInline","toString","RepoSelector","loadingVariant","text","renderSelectVersions","renderTabs","href","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","CollectionInfo","downloadLinkRef","installCommand","Grid","hasGutter","GridItem","tags","Tag","Split","SplitItem","isFilled","license","ClipboardCopy","isReadOnly","ref","icon","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","filterConfig","inputType","ToolbarContent","CompoundFilter","marginTop","CollectionList","collections","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","alignItems","handleControlClick","StatefulDropdown","items","DropdownItem","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","newParams","selectedFilter","selectedID","currentTarget","replace","indexOf","submitMultiple","inputText","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","ButtonVariant","toggle","SelectGroup","onSelectMultiple","toLowerCase","isGrouped","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","margin","backgroundColor","color","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyStateCustom","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","EmptyStateNoData","PlusCircleIcon","EmptyStateUnauthorized","LockIcon","HelperText","Popover","PopoverPosition","bodyContent","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","task","apiError","loading","renderTitle","Spinner","isLoading","followMessages","handleScrollClick","messages","renderMessage","level","message","hideCollectionName","collectionVersion","collectionHead","approvalStatus","rlist","repository_list","StatusIndicator","error","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","selectImport","importList","namespaces","numberOfResults","renderNamespacePicker","renderList","perPage","onSetPage","_","onPerPageSelect","isCompact","filterIsSet","getStatusClass","renderDescription","finished_at","statusClass","FormSelect","ns","FormSelectOption","tab","renderTab","LoadingPageSpinner","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","sort","console","log","renderRow","cliConfig","repository","getRepoUrl","base_path","content_count","pulp_last_updated","isCode","join","justifyContent","objectFit","maxHeight","src","DefaultLogo","extra","MarkdownEditor","updateText","helperText","editing","Form","FormGroup","fieldId","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","newNamespaceGroup","errorMessages","userId","isRequired","helperTextInvalid","validated","toError","updateField","isNaN","Number","ObjectPermissionField","groups","availablePermissions","setGroups","g","newNS","updateNamespace","getLinksErrorText","renderLinkGroup","addLink","msg","update","last","updateLink","removeLink","NamespaceModal","newNamespaceName","newGroups","toggleModal","onCreateSuccess","errors","parameter","detail","newNamespaceNameValid","test","startsWith","actions","handleSubmit","labelIcon","newNamespaceNameIsValid","convertedNum","plural","roundNumber","n","Math","floor","name__contains","added","searchGroups","addedGroup","object_permissions","loadGroups","Flex","default","FlexItem","minWidth","grow","PermissionChipSelector","perm","twoWayMapper","selectedPermissions","setSelected","perms","setPermissions","cursor","removeGroup","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","titles","ofWord","perPageSuffix","toggleTemplate","ToggleTemplate","String","PartnerHeader","filters","Tabs","newPerms","Set","has","add","from","isViewOnly","Label","typeAheadAriaLabel","clearSelection","RemoteForm","fill","requirementsFilename","clientCertFilename","clientKeyFilename","caCertFilename","requirements_file","client_key","client_cert","ca_cert","uploadedRequirementFilename","uploadedClientKeyFilename","uploadedClientCertFilename","uploadedCaCertFilename","remoteType","getRemoteType","requiredFields","disabledFields","concat","showModal","closeModal","isValid","saveRemote","renderForm","docsAnsibleLink","updateRemote","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","FileUpload","filename","hideDefaultPreview","FileSaver","Blob","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","isChecked","tls_validation","download_concurrency","isInteger","rate_limit","host","fieldName","newFields","is_set","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","user","r","updated_at","renderStatus","model_permissions","change_remote","getConfigureOrSyncButton","editRemote","errorMessage","configButton","syncButton","syncRemote","distributions","selectExpanded","repoNames","InputGroupText","newRepo","getRepoBasePath","setRepo","getRepoName","basePath","repoName","ResourcesForm","resources","updateResources","Sort","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","undefined","ariaLabel","Dropdown","renderToggle","dropdownItems","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","split","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","content_name","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","T","findIndex","readOnly","Toolbar","sortOptions","searchPlaceholder","extraInputs","submitKeywords","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","onSubmit","preventDefault","onSave","UserForm","newUser","updateUser","updateUserFieldByName","passwordConfirm","saveUser","onCancel","isNewUser","isMe","superuserLabel","getSuperUserHelperText","Switch","is_superuser","labelOff","isPassSame","onSelectGroup","clearGroups","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","hoverTip","clickTip","browseButtonText","clearButtonText","filenamePlaceholder","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","change_containernamespace","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","users","containers","published","community","completed","failed","running","waiting","registry","asyncComponent","importComponent","C","Component","EditNamespace","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","CertificationDashboard","Repository","InsightsRoute","rootClass","rest","root","document","getElementById","removeAttribute","classList","setAttribute","propTypes","PropTypes","Routes","childProps","location","pathname","render","some","DEFAULT_REPO","App","activeUser","matchPath","init","identifyApp","appNav","on","domEvent","basename","history","navId","prevProps","isRepoURL","setUser","setActiveUser","withRouter","connect","release","pathName","shift","ReactDOM","store","middleware","ReducerRegistry","promise","getStore","i18n","availableLanguages","navigator","languages","lang","localStorage","test_l10n","forEach","plurals","activate","namespaceBreadcrumb","total_count","role","plugin","mapErrorMessages","distributionPath","origin","mapper","values","writeOnlyFields","el","newObj","truncateSha","sha","splitSha","paramString","numericTypes","URLSearchParams","appendParam","param","encodeURIComponent","callback","search","getQueryString","getReduced","deleteParam","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","getPrototypeOf","mode","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","reduce","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","l","done","script","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","fullhref","existingLinkTags","dataHref","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","createStylesheet","miniCss","installedChunks","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}