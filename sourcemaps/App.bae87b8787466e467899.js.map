{"version":3,"file":"js/App.3c27ec9de5ae2b4a2331.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/load script","webpack:///webpack/runtime/css loading","webpack:////home/runner/work/ansible-hub-ui/ansible-hub-ui/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/images.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/patternfly-wrappers/toolbar.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/user-form/user-form.tsx","webpack:///./src/components/user-form/user-form-page.tsx","webpack:///./src/components/permissions/obect-permission-field.tsx","webpack:///./src/components/permissions/permission-chip-selector.tsx","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/group-management/group-modal.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/constants.tsx","webpack:///./src/store/index.js","webpack:///./src/utilities/asyncComponent.js","webpack:///./src/loaders/insights/Routes.js","webpack:///./src/loaders/insights/insights-loader.js","webpack:///./src/entry.js","webpack:///./src/utilities/getBaseName.js","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"ansible-hub-ui:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var createStylesheet = (chunkId, fullhref, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"33\":1,\"152\":1,\"464\":1,\"571\":1,\"684\":1,\"776\":1,\"837\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: params => ParamHelper.getQueryString(params),\n    });\n\n    this.http.interceptors.request.use(request => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data: any, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data: any, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data: any, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await (window as any).insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      item => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  constructor() {\n    super();\n  }\n\n  list(params?: any, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then(response => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `content/${repo}/v3/collections/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: String,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?: any,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    return source;\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then(result => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `content/${distro_base_path}/v3/collections/${namespace}/${name}/versions/${version}/`,\n        )\n        .then(result => {\n          resolve(result.data['download_url']);\n        })\n        .catch(err => reject(err));\n    });\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const NamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  constructor() {\n    super();\n  }\n\n  getUser(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        (window as any).insights.chrome.auth\n          .getUser()\n          // we don't care about entitlements stuff in the UI, so just\n          // return the user's identity\n          .then(result => resolve(result.identity))\n          .catch(result => reject(result));\n      });\n    } else if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        this.http\n          .get(this.apiPath)\n          .then(result => {\n            resolve(result.data);\n          })\n          .catch(result => reject(result));\n      });\n    }\n  }\n\n  getActiveUser() {\n    return this.http.get(this.apiPath);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        reject(\n          'Use window.chrome.insights.auth to get tokens for insights deployments',\n        );\n      });\n    }\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    return new Promise((resolve, reject) => {\n      // Make a get request to the login endpoint to set CSRF tokens before making\n      // the authentication reqest\n      this.http\n        .get(loginURL)\n        .then(() => {\n          this.http\n            .post(loginURL, {\n              username: username,\n              password: password,\n            })\n            .then(response => resolve(response))\n            .catch(err => reject(err));\n        })\n        .catch(err => reject(err));\n    });\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  constructor() {\n    super();\n  }\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  constructor() {\n    super();\n  }\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n\n  constructor() {\n    super();\n  }\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n\n  constructor() {\n    super();\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId,\n    );\n  }\n}\n\nexport const GroupAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  constructor() {\n    super();\n  }\n\n  // removes unchanged values and write only fields before\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unModifiedRemote: RemoteType) {\n    // Deletes any write only fields from the object that are market as is_set.\n    // This is to prevent accidentally clearing fields that weren't updated.\n\n    // TODO: clearing set fields from the response will be unnecesary if the API\n    // stops returning field: null on write only fields\n    const reducedData: RemoteType = clearSetFieldsFromRequest(\n      remote,\n      remote.write_only_fields,\n    ) as RemoteType;\n\n    // Pulp complains if auth_url gets sent with a request that doesn't include a\n    // valid token, even if the token exists in the database and isn't being changed.\n    // To solve this issue, simply delete auth_url from the request if it hasn't\n    // been updated by the user.\n    if (reducedData.auth_url === unModifiedRemote.auth_url) {\n      delete reducedData['auth_url'];\n    }\n\n    for (const field of Object.keys(reducedData)) {\n      if (reducedData[field] === '') {\n        reducedData[field] = null;\n      }\n    }\n\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(id, obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = API_HOST;\n  constructor() {\n    super();\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  list(id, params) {\n    return this.http.get(this.apiPath + id + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n}\n\nexport const ImagesAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super('/pulp/api/v3/');\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  constructor() {\n    super();\n  }\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/namespaces/');\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Chip } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Chip className='tag' isReadOnly>\n        {this.props.children}\n      </Chip>\n    );\n  }\n}\n","import * as React from 'react';\n\ninterface IProps {\n  number: number | string;\n  label?: string;\n  hideNumber?: boolean;\n}\n\nexport class NumericLabel extends React.Component<IProps, {}> {\n  render() {\n    const { number, label, hideNumber } = this.props;\n    let convertedNum: number;\n\n    if (typeof number === 'string') {\n      convertedNum = Number(number);\n    } else {\n      convertedNum = number;\n    }\n\n    const plural = number === 1 ? '' : 's';\n\n    return (\n      <span>\n        {hideNumber ? null : NumericLabel.roundNumber(convertedNum)}{' '}\n        {label ? label + plural : null}\n      </span>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n","import * as React from 'react';\nimport './namespace-form.scss';\n\nimport { Form, FormGroup, TextInput, TextArea } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\n\nimport { NamespaceCard, ObjectPermissionField } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: any;\n  userId: string;\n\n  updateNamespace: (namespace) => void;\n}\n\ninterface IState {\n  newNamespaceGroup: string;\n}\n\nexport class NamespaceForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newNamespaceGroup: '',\n    };\n  }\n\n  render() {\n    const { namespace, errorMessages, userId } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <Form>\n        <div className='card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label='Name' isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label='Company name'\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                isRequired\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='groups'\n          label='Namespace owners'\n          helperTextInvalid={errorMessages['groups']}\n          validated={this.toError(\n            !isNaN(Number(this.state.newNamespaceGroup)) &&\n              !('groups' in errorMessages),\n          )}\n        >\n          <br />\n\n          <ObjectPermissionField\n            groups={namespace.groups}\n            availablePermissions={['change_namespace', 'upload_to_namespace']}\n            setGroups={g => {\n              const newNS = { ...namespace };\n              newNS.groups = g;\n              this.props.updateNamespace(newNS);\n            }}\n          ></ObjectPermissionField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label='Logo URL'\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label='Description'\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label='Useful links'\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push('Text: ' + errorMessages['links__name']);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push('URL: ' + errorMessages['links__url']);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <TextInput\n            id='name'\n            type='text'\n            placeholder='Link text'\n            value={link.name}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-url'>\n          <TextInput\n            id='url'\n            type='text'\n            placeholder='Link URL'\n            value={link.url}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Modal, Tooltip } from '@patternfly/react-core';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { NamespaceAPI, GroupObjectPermissionType } from 'src/api';\n\nimport { HelperText, ObjectPermissionField } from 'src/components';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  newGroups: GroupObjectPermissionType[];\n  errorMessages: any;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      newGroups: [],\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error: any = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = 'Please, provide the namespace name';\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = 'Name can only contain [A-Za-z0-9_]';\n    } else if (name.length <= 2) {\n      error['name'] = 'Name must be longer than 2 characters';\n    } else if (name.startsWith('_')) {\n      error['name'] = \"Name cannot begin with '_'\";\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = event => {\n    const data: any = {\n      name: this.state.newNamespaceName,\n      groups: this.state.newGroups,\n    };\n    NamespaceAPI.create(data)\n      .then(results => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          newGroups: [],\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch(error => {\n        const result = error.response;\n        const messages: any = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newGroups, newNamespaceNameValid } = this.state;\n    return (\n      <Modal\n        variant='large'\n        title='Create a new namespace'\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            Create\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            Cancel\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup\n            label='Name'\n            isRequired\n            fieldId='name'\n            helperText='Please, provide the namespace name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={\n                  'Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.'\n                }\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={value => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n          <FormGroup\n            label='Namespace owners'\n            fieldId='groups'\n            helperTextInvalid={this.state.errorMessages['groups']}\n          >\n            <ObjectPermissionField\n              availablePermissions={['change_namespace', 'upload_to_namespace']}\n              groups={newGroups}\n              setGroups={g => this.setState({ newGroups: g })}\n              menuAppendTo='parent'\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps, {}> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={\n          'You can can customize the Resources tab on your profile by entering custom markdown here.'\n        }\n        updateText={value => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport { Logo } from 'src/components';\n\ninterface IProps {\n  title: string;\n  imageURL?: string;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      title,\n      imageURL,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n    } = this.props;\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {imageURL ? (\n              <Logo\n                className='image'\n                alt='Page logo'\n                image={imageURL}\n                size='50px'\n              />\n            ) : null}\n            <div>\n              <PageHeaderTitle title={title} />\n            </div>\n          </div>\n\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { BaseHeader, Tabs, Breadcrumbs } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: string[];\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n    return (\n      <BaseHeader\n        title={namespace.company || namespace.name}\n        imageURL={namespace.avatar_url}\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={p => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import * as React from 'react';\nimport './list.scss';\n\nimport { Button, DropdownItem, DataList } from '@patternfly/react-core';\n\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  Toolbar,\n  Pagination,\n  StatefulDropdown,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n\n  showNamespace?: boolean;\n  showControls?: boolean;\n  handleControlClick?: (id, event) => void;\n  repo?: string;\n}\n\ninterface IState {\n  kwField: string;\n}\n\nexport class CollectionList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { kwField: props.params['keywords'] || '' };\n  }\n\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className='controls top'>\n          <Toolbar\n            searchPlaceholder='Find collection by name'\n            updateParams={updateParams}\n            params={params}\n          />\n\n          <div>\n            <Pagination\n              params={params}\n              updateParams={p => updateParams(p)}\n              count={itemCount}\n              isTop\n            />\n          </div>\n        </div>\n\n        <DataList aria-label={'List of Collections'}>\n          {collections.length > 0 ? (\n            collections.map(c => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter />\n          )}\n        </DataList>\n\n        <div className='controls bottom'>\n          <div></div>\n          <div>\n            <Pagination\n              params={params}\n              updateParams={p => updateParams(p)}\n              count={itemCount}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private handleEnter(e) {\n    if (e.key === 'Enter') {\n      this.props.updateParams(\n        ParamHelper.setParam(this.props.params, 'keywords', this.state.kwField),\n      );\n    }\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.props.handleControlClick(collection.id, 'upload')}\n          variant='secondary'\n        >\n          Upload new version\n        </Button>\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              onClick={e =>\n                this.props.handleControlClick(collection.id, 'deprecate')\n              }\n              key='1'\n            >\n              {collection.deprecated ? 'Undeprecate' : 'Deprecate'}\n            </DropdownItem>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  NumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps, {}> {\n  render() {\n    const {\n      name,\n      // download_count,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={company + ' logo'}\n            image={namespace.avatar_url}\n            size='50px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(\n      latest_version.metadata.contents,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>Provided by {company}</Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='entry'>{latest_version.metadata.description}</div>\n        <div className='entry pf-l-flex pf-m-wrap content'>\n          {Object.keys(contentSummary.contents).map(k => (\n            <div key={k}>\n              <NumericLabel label={k} number={contentSummary.contents[k]} />\n            </div>\n          ))}\n        </div>\n        <div className='entry pf-l-flex pf-m-wrap'>\n          {latest_version.metadata.tags.map((tag, index) => (\n            <Tag key={index}>{tag}</Tag>\n          ))}\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='entry'>{controls}</div> : null}\n        <div className='right-col entry'>\n          Updated <DateComponent date={latest_version.created_at} />\n        </div>\n        <div className='entry'>v{latest_version.version}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem aria-labelledby='simple-item1'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps, {}> {\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='ns-card-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              unlockWidth\n              image={avatar_url}\n              alt={company + ' logo'}\n              size='50px'\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <CardTitle>{company || name}</CardTitle>\n        <CardBody>{name}</CardBody>\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>View collections</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: {\n    name: string;\n    url?: string;\n  }[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: any;\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find(i => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams(\n        ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n      ),\n    );\n  }\n\n  private setDescending() {\n    let field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n    );\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find(x => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label='Select input'\n            onToggle={e => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n            aria-labelledby='Sort results'\n          >\n            {options.map(option => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: string[];\n\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const {\n      tabs,\n      params,\n      updateParams,\n      isDisabled,\n      disabledTitle,\n    } = this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        x => x.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map(tab => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNodeArray;\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const {\n      items,\n      toggleType,\n      defaultText,\n      position,\n      isPlain,\n      ariaLabel,\n    } = this.props;\n\n    return (\n      <Dropdown\n        onSelect={e => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={e => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || 'Dropdown'}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={e => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || 'Dropdown'}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={e => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Toolbar as ToolbarPF,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarContent,\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { Sort } from 'src/components';\n\nimport { SortFieldType } from './sort';\n\ninterface IProps {\n  /** Current page params */\n  params: {\n    sort?: string;\n    keywords?: string;\n  };\n\n  /** List of sort options that the user can pick from */\n  sortOptions?: SortFieldType[];\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Search bar placeholder text*/\n  searchPlaceholder: string;\n\n  /** Extra set of customizeable inputs that appear to right of sort*/\n  extraInputs?: React.ReactNode[];\n}\n\ninterface IState {\n  kwField: string;\n}\n\n// FIXME: only used in collection-list & namespace-list, other Toolbar is unrelated; merge\nexport class Toolbar extends React.Component<IProps, IState> {\n  static defaultProps = {\n    extraInputs: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      kwField: props.params.keywords || '',\n    };\n  }\n\n  render() {\n    const {\n      params,\n      sortOptions,\n      updateParams,\n      searchPlaceholder,\n      extraInputs,\n    } = this.props;\n    const { kwField } = this.state;\n    return (\n      <ToolbarPF>\n        <ToolbarContent>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <InputGroup>\n                <TextInput\n                  value={kwField}\n                  onChange={k => this.setState({ kwField: k })}\n                  onKeyPress={e => this.handleEnter(e)}\n                  type='search'\n                  aria-label='search text input'\n                  placeholder={searchPlaceholder}\n                />\n                <Button\n                  variant={ButtonVariant.control}\n                  aria-label='search button'\n                  onClick={() => this.submitKeywords()}\n                >\n                  <SearchIcon />\n                </Button>\n              </InputGroup>\n            </ToolbarItem>\n          </ToolbarGroup>\n          {sortOptions && (\n            <ToolbarGroup>\n              <ToolbarItem>\n                <Sort\n                  options={sortOptions}\n                  params={params}\n                  updateParams={updateParams}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          )}\n          {extraInputs}\n        </ToolbarContent>\n      </ToolbarPF>\n    );\n  }\n\n  private handleEnter(e) {\n    if (e.key === 'Enter') {\n      this.submitKeywords();\n    }\n  }\n\n  private submitKeywords() {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        'keywords',\n        this.state.kwField,\n      ),\n      page: 1, // always reset the page when searching\n    });\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Spinner } from '@redhat-cloud-services/frontend-components';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps, {}> {\n  lastImport: any;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? (\n              <div className='message'>{apiError}</div>\n            ) : (\n              <Spinner centered={false} />\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div className='import-console pf-c-content'>\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? 'Follow logs' : 'Scroll to end'}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>No task messages available</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>Done</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>Failed</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion } = this.props;\n\n    let collectionHead: any = `${selectedImport.namespace}.${selectedImport.name}`;\n    let approvalStatus = 'waiting for import to finish';\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = 'rejected';\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = 'waiting for approval';\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = 'approved';\n      } else {\n        approvalStatus = 'could not be determined';\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>Status: </span>\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>Approval status: </span>\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>Version: </span>\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>Error message: </span>\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { cloneDeep } from 'lodash';\n\nimport {\n  TextInput,\n  Pagination,\n  FormSelect,\n  FormSelectOption,\n  InputGroup,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { Spinner } from '@redhat-cloud-services/frontend-components';\n\nimport { PulpStatus, NamespaceType, ImportListType } from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData } from '..';\n\ninterface IProps {\n  namespaces: NamespaceType[];\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n}\n\ninterface IState {\n  kwField: string;\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n    };\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      namespaces,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    const { kwField } = this.state;\n\n    return (\n      <div className='import-list'>\n        {this.renderNamespacePicker(namespaces)}\n        <InputGroup className='search-box'>\n          <TextInput\n            value={kwField}\n            onChange={k => this.setState({ kwField: k })}\n            onKeyPress={e => this.handleEnter(e)}\n            type='search'\n            aria-label='search text input'\n            placeholder='Search imports'\n          />\n\n          <Button\n            variant={ButtonVariant.control}\n            aria-label='search button'\n            onClick={() => this.submitSearch()}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n\n        <div>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        <Pagination\n          itemCount={numberOfResults}\n          perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n          page={params.page || 1}\n          onSetPage={(_, p) =>\n            updateParams(ParamHelper.setParam(params, 'page', p))\n          }\n          onPerPageSelect={(_, p) => {\n            updateParams({ ...params, page: 1, page_size: p });\n          }}\n          isCompact={true}\n        />\n      </div>\n    );\n  }\n\n  private setPageSize(size) {\n    const params = cloneDeep(this.props.params);\n\n    params['page_size'] = size;\n    params['page'] = 1;\n    this.props.updateParams(params);\n  }\n\n  private setPageNumber(pageNum) {\n    const params = cloneDeep(this.props.params);\n    params['page'] = pageNum;\n    this.props.updateParams(params);\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (loading) {\n      return (\n        <div className='loading'>\n          <Spinner centered={true} />\n        </div>\n      );\n    }\n    if (importList.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={'No imports'}\n          description={'There have not been any imports on this namespace.'}\n        />\n      );\n    }\n\n    return (\n      <div>\n        {importList.map(item => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private handleEnter(e) {\n    if (e.key === 'Enter') {\n      this.submitSearch();\n    }\n  }\n\n  private submitSearch() {\n    this.props.updateParams(\n      ParamHelper.setParam(this.props.params, 'keywords', this.state.kwField),\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          {item.name} {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private renderNamespacePicker(namespaces) {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>Namespace</div>\n        <div className='selector'>\n          <FormSelect\n            onChange={val =>\n              this.props.updateParams(\n                ParamHelper.setParam(this.props.params, 'namespace', val),\n              )\n            }\n            value={this.props.params.namespace}\n            aria-label='Select namespace'\n          >\n            {namespaces.map(ns => (\n              <FormSelectOption key={ns.name} label={ns.name} value={ns.name} />\n            ))}\n          </FormSelect>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { NumericLabel, Logo } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      className,\n      footer,\n      repo,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(\n      latest_version.metadata.contents,\n    );\n\n    return (\n      <Card className={cx('collection-card-container', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            image={namespace.avatar_url}\n            alt={company + ' logo'}\n            size='40px'\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>Provided by {company}</Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <div className='description'>\n            {this.getDescription(latest_version.metadata.description)}\n          </div>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map(k =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>Certified</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <div>\n          <NumericLabel number={count} />\n        </div>\n        <div className='type-label'>\n          <NumericLabel number={count} hideNumber={true} label={type} />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n}\n\nexport class Logo extends React.Component<IProps> {\n  render() {\n    const { size, image, alt, className, unlockWidth } = this.props;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    };\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={image || DefaultLogo}\n          alt={alt}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const {\n      count,\n      params,\n      updateParams,\n      isTop,\n      perPageOptions,\n      isCompact,\n    } = this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map(option => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import * as React from 'react';\nimport './collection-info.scss';\n\nimport * as moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nimport {\n  ClipboardCopy,\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  FormSelect,\n  FormSelectOption,\n  Button,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: any;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      all_versions,\n      params,\n      updateParams,\n    } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>Info</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>License</SplitItem>\n              <SplitItem isFilled>{latest_version.metadata.license}</SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>Installation</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </div>\n                <div>\n                  <a ref={this.downloadLinkRef} style={{ display: 'none' }}></a>\n                  <Button\n                    className='download-button'\n                    variant='link'\n                    icon={<DownloadIcon />}\n                    onClick={() =>\n                      this.download(\n                        this.context.selectedRepo,\n                        namespace,\n                        name,\n                        latest_version,\n                      )\n                    }\n                  >\n                    Download tarball\n                  </Button>\n                </div>\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-tile'>Install Version</SplitItem>\n              <SplitItem isFilled>\n                <FormSelect\n                  onChange={val =>\n                    updateParams(ParamHelper.setParam(params, 'version', val))\n                  }\n                  value={\n                    params.version ? params.version : latest_version.version\n                  }\n                  aria-label='Select collection version'\n                >\n                  {all_versions.map(v => (\n                    <FormSelectOption\n                      key={v.version}\n                      value={v.version}\n                      label={`${v.version} released ${moment(\n                        v.created,\n                      ).fromNow()} ${\n                        v.version === latest_version.version ? '(latest)' : ''\n                      }`}\n                    />\n                  ))}\n                </FormSelect>\n              </SplitItem>\n            </Split>\n          </GridItem>\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  Requires Ansible\n                </SplitItem>\n                <SplitItem isFilled>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                Load full readme\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    ).then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      this.downloadLinkRef.current.href = downloadURL;\n      this.downloadLinkRef.current.click();\n    });\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { FormSelect, FormSelectOption, Alert } from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  LinkTabs,\n  RepoSelector,\n} from 'src/components';\nimport { CollectionDetailType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n}\n\nexport class CollectionHeader extends React.Component<IProps> {\n  ignoreParams = ['showing', 'keyords'];\n  static contextType = AppContext;\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      x => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: 'Docs site' },\n      { key: 'homepage', name: 'Website' },\n      { key: 'issues', name: 'Issue tracker' },\n      { key: 'repository', name: 'Repo' },\n    ];\n\n    return (\n      <BaseHeader\n        className={className}\n        title={collection.name}\n        imageURL={collection.namespace.avatar_url}\n        contextSelector={\n          <RepoSelector\n            selectedRepo={this.context.selectedRepo}\n            path={Paths.searchByRepo}\n            isDisabled\n          />\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <FormSelect\n              onChange={val =>\n                updateParams(ParamHelper.setParam(params, 'version', val))\n              }\n              value={collection.latest_version.version}\n              aria-label='Select collection version'\n            >\n              {all_versions.map(v => (\n                <FormSelectOption\n                  key={v.version}\n                  value={v.version}\n                  label={'v' + v.version}\n                />\n              ))}\n            </FormSelect>\n          </div>\n        }\n      >\n        {collection.deprecated && (\n          <Alert\n            variant='danger'\n            isInline\n            title='This collection has been deprecated.'\n          />\n        )}\n        <div className='tab-link-container'>\n          <div className='tabs'>{this.renderTabs(activeTab)}</div>\n          <div className='links'>\n            <div>\n              <ExternalLinkAltIcon />\n            </div>\n            {urlKeys.map(link => {\n              const l = collection.latest_version.metadata[link.key];\n              if (!l) {\n                return null;\n              }\n\n              return (\n                <div className='link' key={link.key}>\n                  <a href={l} target='_blank'>\n                    {link.name}\n                  </a>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'details',\n        title: 'Details',\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: 'Documentation',\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: 'Contents',\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: 'Import log',\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n}\n","import * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport { Nav, NavExpandable, NavItem, NavList } from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: object;\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { collapsedCategories: [] };\n  }\n\n  render() {\n    const { className, docs_blob } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map(key =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(table[key], key),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: 'Readme',\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name\n              .split('.')[0]\n              .split('_')\n              .join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links, title) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${links.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {links.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  TextInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const {\n      contents,\n      collection,\n      namespace,\n      params,\n      updateParams,\n    } = this.props;\n\n    let toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (let c of contents) {\n      summary['all']++;\n      if (summary[c.content_type]) {\n        summary[c.content_type]++;\n      } else {\n        summary[c.content_type] = 1;\n      }\n\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n      if (typeMatch && c.name.match(keywords)) {\n        toShow.push(c);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <TextInput\n                  value={params.keywords || ''}\n                  onChange={val =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  aria-label='find-content'\n                  placeholder='Find content'\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>Showing:</ToolbarItem>\n              {Object.keys(summary).map(key => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'selected-item': key === showing,\n                    'type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='content-table pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Spinner } from '@redhat-cloud-services/frontend-components';\nimport { Bullseye } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component<{}> {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Skeleton,\n  PageHeaderTitle,\n  PageHeader,\n  Section,\n} from '@redhat-cloud-services/frontend-components';\n\nimport { Main } from 'src/components';\n\nimport { LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component<{}> {\n  render() {\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <PageHeaderTitle\n            title={<Skeleton size='sm'></Skeleton>}\n          ></PageHeaderTitle>\n        </PageHeader>\n        <Main>\n          <Section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  inputText: string;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      inputText: '',\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map(v => (\n      <DropdownItem\n        onClick={() => this.setState({ selectedFilter: v, inputText: '' })}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup>\n        <StatefulDropdown\n          toggleType='dropdown'\n          defaultText={\n            <span>\n              <FilterIcon />\n              {'   '}\n              {selectedFilter.title}\n            </span>\n          }\n          position='left'\n          isPlain={false}\n          items={filterOptions}\n        />\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        const options = selectedFilter.options.map(option => (\n          // patternfly does not allow for us to set a display name aside from the ID\n          // which unfortunately means that multiple select will ignore the human readable\n          // option.title\n          <SelectOption key={option.id} value={option.id} />\n        ));\n\n        const toggle = [\n          <SelectGroup\n            label={'Filter by ' + selectedFilter.id}\n            key={selectedFilter.id}\n          >\n            {options}\n          </SelectGroup>,\n        ];\n\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={'Filter by ' + selectedFilter.id.toLowerCase()}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {toggle}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.state.inputText ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v, i) => (\n              <DropdownItem\n                onClick={() =>\n                  this.setState({ inputText: v.id }, () => this.submitFilter())\n                }\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              `Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.state.inputText}\n            onChange={k => this.setState({ inputText: k })}\n            onKeyPress={e => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    if (e.key === 'Enter') {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n    );\n  }\n\n  private submitFilter() {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        this.state.inputText,\n      ),\n    );\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = event => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n}\n","import * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps, {}> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(key =>\n            this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            Clear all filters\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={(niceNames[key] || key) as any}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams(ParamHelper.deleteParam(params, key, v))\n              }\n            >\n              {v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    let params = this.props.params;\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, this.props.ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    this.props.updateParams(params);\n  };\n}\n","import * as React from 'react';\n\nexport class DeprecatedTag extends React.Component<{}, {}> {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        DEPRECATED\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n    );\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    let activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr aria-labelledby='headers'>\n          {this.props.options['headers'].map(element =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  variant: AlertProps['variant'];\n  title: string;\n  description?: string;\n}\n\nexport class AlertList extends React.Component<IProps, {}> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function(alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nexport class Main extends React.Component<any> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  errorMessages: any; // FIXME: { [key: string]: string }, but all callers use {}, object or any\n  formFields: {\n    formGroupLabelIcon?: React.ReactNode;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  model: any;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map(field => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && (field.formGroupLabelIcon as any)}\n          validated={isReadonly ? 'default' : validated}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as any) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={e => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\n\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: object;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: any[];\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm } = this.state;\n    const formFields = [\n      { id: 'username', title: 'Username' },\n      { id: 'first_name', title: 'First name' },\n      { id: 'last_name', title: 'Last name' },\n      { id: 'email', title: 'Email' },\n      !isReadonly && {\n        id: 'password',\n        title: 'Password',\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={\n              'Create a password using at least 9 characters, including special characters , ex <!@$%>. Avoid using common names or expressions.'\n            }\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid='Passwords do not match'\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label='Password confirmation'\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={value => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup fieldId='groups' key='readonlyGroups' label='Groups'>\n        {user.groups.map(group => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label='Groups'\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelectGroup}\n          placeholderText='Select groups'\n          selections={user.groups}\n          multiple={true}\n          onClear={this.clearGroups}\n          isDisabled={isReadonly}\n        />\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label='User type'\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip content='Super users have all system permissions regardless of what groups they are in.'>\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label='Super user'\n            labelOff='Not a super user'\n            isChecked={user.is_superuser}\n            onChange={e =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          Save\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          Cancel\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return 'Requires super user permissions to edit.';\n    }\n    if (this.context.user.id === user.id) {\n      return \"Super users can't disable themselves.\";\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection, isPlaceholder) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex(g => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        g => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = name => {\n    GroupAPI.list({ name__contains: name, page_size: 5 }).then(result =>\n      this.setState({ searchGroups: result.data.data }),\n    );\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport { Section } from '@redhat-cloud-services/frontend-components';\n\nimport { BaseHeader, Main, Breadcrumbs, UserForm } from 'src/components';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: any[];\n  errorMessages: object;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: object) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <Section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\n\nimport { TrashIcon } from '@patternfly/react-icons';\n\nimport { GroupObjectPermissionType, GroupAPI } from 'src/api';\nimport { APISearchTypeAhead, PermissionChipSelector } from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  groups: GroupObjectPermissionType[];\n  availablePermissions: string[];\n  setGroups: (groups: GroupObjectPermissionType[]) => void;\n  isDisabled?: boolean;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  searchGroups: { name: string; id: number | string }[];\n}\n\nexport class ObjectPermissionField extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const { groups, availablePermissions } = this.props;\n\n    return (\n      <div>\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelect}\n          placeholderText='Find a group'\n          menuAppendTo={this.props.menuAppendTo}\n          isDisabled={!!this.props.isDisabled}\n        />\n        <br />\n        <div>\n          {groups.map((group, i) => (\n            <Flex\n              style={{ marginTop: '16px' }}\n              alignItems={{ default: 'alignItemsCenter' }}\n              key={group.name}\n            >\n              <FlexItem style={{ minWidth: '200px' }}>{group.name}</FlexItem>\n              <FlexItem grow={{ default: 'grow' }} style={{ width: '90%' }}>\n                <PermissionChipSelector\n                  availablePermissions={availablePermissions.map(perm =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  selectedPermissions={group.object_permissions.map(perm =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  setSelected={perms => this.setPermissions(perms, group)}\n                  menuAppendTo={this.props.menuAppendTo}\n                />\n              </FlexItem>\n              <FlexItem>\n                <TrashIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => this.removeGroup(group)}\n                />\n              </FlexItem>\n            </Flex>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  private removeGroup(group) {\n    const newGroups = [];\n    for (const g of this.props.groups) {\n      if (g.id !== group.id) {\n        newGroups.push(g);\n      }\n    }\n\n    this.props.setGroups(newGroups);\n  }\n\n  private setPermissions(perms, group) {\n    const newGroups = [...this.props.groups];\n    const selectedGroup = newGroups.find(g => g.id === group.id);\n    selectedGroup.object_permissions = perms.map(perm =>\n      twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n    );\n\n    this.props.setGroups(newGroups);\n  }\n\n  private loadGroups = name => {\n    GroupAPI.list({ name__contains: name }).then(result => {\n      const added = this.props.groups.map(group => group.name);\n      const groups = result.data.data.filter(\n        group => !added.includes(group.name),\n      );\n      this.setState({ searchGroups: groups });\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    const newGroups = [...this.props.groups];\n\n    const addedGroup = this.state.searchGroups.find(g => g.name === selection);\n\n    newGroups.push({\n      id: addedGroup.id as number,\n      name: addedGroup.name,\n      object_permissions: this.props.availablePermissions,\n    });\n\n    this.props.setGroups(newGroups);\n  };\n}\n","import * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions: string[];\n  selectedPermissions: string[];\n  setSelected: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map(text => (\n            <Label key={text}>{text}</Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel='Select permissions'\n        onToggle={this.onToggle}\n        onSelect={!!this.props.onSelect ? this.props.onSelect : this.onSelect}\n        onClear={\n          !!this.props.onClear ? this.props.onClear : this.clearSelection\n        }\n        selections={this.props.selectedPermissions}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={'Not found'}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option} />\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return 'Select permissions';\n    }\n    return this.props.selectedPermissions.length === 0 ? 'No permission' : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = isOpen => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    const newPerms = new Set(this.props.selectedPermissions);\n    if (newPerms.has(selection)) {\n      newPerms.delete(selection);\n    } else {\n      newPerms.add(selection);\n    }\n\n    this.props.setSelected(Array.from(newPerms));\n  };\n}\n","import * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map(group => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={'Not found'}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = evt => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = isOpen => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: any;\n  errorMessage?: any;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant='small'\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={''}\n        header={<h2>Create a group</h2>}\n        aria-label='group-modal'\n        actions={[\n          <Button\n            isDisabled={\n              this.state.name.length === 0 ||\n              (this.props.group && this.state.name === this.props.group.name)\n            }\n            key='create'\n            variant='primary'\n            onClick={() => onSave(this.state.name)}\n          >\n            {!this.props.group ? 'Create' : 'Save'}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            Cancel\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={e => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label='Name'\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={value => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  FileUpload,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText } from 'src/components';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet } from 'src/utilities';\n\ninterface IProps {\n  updateRemote: (remote) => void;\n  remote: RemoteType;\n  saveRemote: () => void;\n  showModal: boolean;\n  closeModal: () => void;\n  errorMessages: object;\n}\n\ninterface IState {\n  uploadedRequirementFilename: string;\n  uploadedClientKeyFilename: string;\n  uploadedClientCertFilename: string;\n  uploadedCaCertFilename: string;\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    let [\n      requirementsFilename,\n      clientCertFilename,\n      clientKeyFilename,\n      caCertFilename,\n    ] = Array(4).fill('');\n\n    if (!!props.remote) {\n      requirementsFilename = this.props.remote.requirements_file\n        ? 'requirements.yml'\n        : '';\n      clientKeyFilename = this.props.remote.client_key ? 'client_key.yml' : '';\n      clientCertFilename = this.props.remote.client_cert\n        ? 'client_cert.yml'\n        : '';\n      caCertFilename = this.props.remote.ca_cert ? 'ca_cert.yml' : '';\n    }\n\n    this.state = {\n      uploadedRequirementFilename: requirementsFilename,\n      uploadedClientKeyFilename: clientKeyFilename,\n      uploadedClientCertFilename: clientCertFilename,\n      uploadedCaCertFilename: caCertFilename,\n    };\n  }\n\n  render() {\n    const { remote, errorMessages } = this.props;\n    if (!remote) {\n      return null;\n    }\n    const remoteType = this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title='Edit remote'\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            Save\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.props.closeModal()}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={'Name'}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={value => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n        <FormGroup\n          fieldId={'url'}\n          label={'URL'}\n          labelIcon={\n            <HelperText content='The URL of an external content source.' />\n          }\n          isRequired={requiredFields.includes('url')}\n          validated={this.toError(!('url' in errorMessages))}\n          helperTextInvalid={errorMessages['url']}\n        >\n          <TextInput\n            validated={this.toError(!('url' in errorMessages))}\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={value => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={'Token'}\n            labelIcon={\n              <HelperText content='Token for authenticating to the server URL.' />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={value => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={'SSO URL'}\n            labelIcon={<HelperText content='Single sign on URL.' />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={value => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={'YAML requirements'}\n            labelIcon={\n              <HelperText\n                content={\n                  <>\n                    This uses the same{' '}\n                    <a\n                      target='_blank'\n                      href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n                    >\n                      requirements.yml\n                    </a>{' '}\n                    format as the ansible-galaxy CLI with the caveat that roles\n                    aren't supported and the source parameter is not supported.\n                  </>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedRequirementFilename}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState(\n                      { uploadedRequirementFilename: filename },\n                      () => this.updateRemote(value, 'requirements_file'),\n                    );\n                  }}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      this.state.uploadedRequirementFilename,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label='Download requirements file'\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n        <ExpandableSection\n          toggleTextExpanded='Hide advanced options'\n          toggleTextCollapsed='Show advanced options'\n        >\n          <FormGroup\n            fieldId={'username'}\n            label={'Username'}\n            labelIcon={\n              <HelperText content='The username to be used for authentication when syncing. This is not required when using a token.' />\n            }\n            isRequired={requiredFields.includes('username')}\n            validated={this.toError(!('username' in errorMessages))}\n            helperTextInvalid={errorMessages['username']}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={value => this.updateRemote(value, 'username')}\n            />\n          </FormGroup>\n          <FormGroup\n            fieldId={'password'}\n            label={'Password'}\n            labelIcon={\n              <HelperText content='The password to be used for authentication when syncing. This is not required when using a token.' />\n            }\n            isRequired={requiredFields.includes('password')}\n            validated={this.toError(!('password' in errorMessages))}\n            helperTextInvalid={errorMessages['password']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('password', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('password', false)}\n            >\n              <TextInput\n                validated={this.toError(!('password' in errorMessages))}\n                isRequired={requiredFields.includes('password')}\n                isDisabled={disabledFields.includes('password')}\n                id='password'\n                type='password'\n                value={remote.password || ''}\n                onChange={value => this.updateRemote(value, 'password')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n          <FormGroup\n            fieldId={'proxy_url'}\n            label={'Proxy URL'}\n            isRequired={requiredFields.includes('proxy_url')}\n            validated={this.toError(!('proxy_url' in errorMessages))}\n            helperTextInvalid={errorMessages['proxy_url']}\n          >\n            <TextInput\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              isRequired={requiredFields.includes('proxy_url')}\n              isDisabled={disabledFields.includes('proxy_url')}\n              id='proxy_url'\n              type='text'\n              value={remote.proxy_url || ''}\n              onChange={value => this.updateRemote(value, 'proxy_url')}\n            />\n          </FormGroup>\n\n          <FormGroup\n            fieldId={'proxy_username'}\n            label={'Proxy username'}\n            isRequired={requiredFields.includes('proxy_username')}\n            validated={this.toError(!('proxy_username' in errorMessages))}\n            helperTextInvalid={errorMessages['proxy_username']}\n          >\n            <TextInput\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              isRequired={requiredFields.includes('proxy_username')}\n              isDisabled={disabledFields.includes('proxy_username')}\n              id='proxy_username'\n              type='text'\n              value={remote.proxy_username || ''}\n              onChange={value => this.updateRemote(value, 'proxy_username')}\n            />\n          </FormGroup>\n\n          <FormGroup\n            fieldId={'proxy_password'}\n            label={'Proxy password'}\n            isRequired={requiredFields.includes('proxy_password')}\n            validated={this.toError(!('proxy_password' in errorMessages))}\n            helperTextInvalid={errorMessages['proxy_password']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet(\n                'proxy_password',\n                remote.write_only_fields,\n              )}\n              onClear={() => this.updateIsSet('proxy_password', false)}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_password' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_password')}\n                isDisabled={disabledFields.includes('proxy_password')}\n                id='proxy_password'\n                type='text'\n                value={remote.proxy_password || ''}\n                onChange={value => this.updateRemote(value, 'proxy_password')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n\n          <FormGroup\n            fieldId={'tls_validation'}\n            label={'TLS validation'}\n            labelIcon={\n              <HelperText content='If selected, TLS peer validation must be performed.' />\n            }\n            isRequired={requiredFields.includes('tls_validation')}\n            validated={this.toError(!('tls_validation' in errorMessages))}\n            helperTextInvalid={errorMessages['tls_validation']}\n          >\n            <Checkbox\n              onChange={value => this.updateRemote(value, 'tls_validation')}\n              id='tls_validation'\n              isChecked={remote.tls_validation}\n            />\n          </FormGroup>\n          <FormGroup\n            fieldId={'client_key'}\n            label={'Client key'}\n            labelIcon={\n              <HelperText content='A PEM encoded private key used for authentication.' />\n            }\n            isRequired={requiredFields.includes('client_key')}\n            validated={this.toError(!('client_key' in errorMessages))}\n            helperTextInvalid={errorMessages['client_key']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('client_key', false)}\n            >\n              <FileUpload\n                validated={this.toError(!('client_key' in errorMessages))}\n                isRequired={requiredFields.includes('client_key')}\n                id='yaml'\n                type='text'\n                filename={this.state.uploadedClientKeyFilename}\n                value={this.props.remote.client_key || ''}\n                hideDefaultPreview\n                onChange={(value, filename) => {\n                  this.setState({ uploadedClientKeyFilename: filename }, () =>\n                    this.updateRemote(value, 'client_key'),\n                  );\n                }}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n          <FormGroup\n            fieldId={'client_cert'}\n            label={'Client certificate'}\n            labelIcon={\n              <HelperText content='A PEM encoded client certificate used for authentication.' />\n            }\n            isRequired={requiredFields.includes('client_cert')}\n            validated={this.toError(!('client_cert' in errorMessages))}\n            helperTextInvalid={errorMessages['client_cert']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(!('client_cert' in errorMessages))}\n                  isRequired={requiredFields.includes('client_cert')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedClientCertFilename}\n                  value={this.props.remote.client_cert || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState(\n                      { uploadedClientCertFilename: filename },\n                      () => this.updateRemote(value, 'client_cert'),\n                    );\n                  }}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.client_cert}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.client_cert], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      this.state.uploadedClientCertFilename,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label='Download client certification file'\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n          <FormGroup\n            fieldId={'ca_cert'}\n            label={'CA certificate'}\n            labelIcon={\n              <HelperText content='A PEM encoded client certificate used for authentication.' />\n            }\n            isRequired={requiredFields.includes('ca_cert')}\n            validated={this.toError(!('ca_cert' in errorMessages))}\n            helperTextInvalid={errorMessages['ca_cert']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(!('ca_cert' in errorMessages))}\n                  isRequired={requiredFields.includes('ca_cert')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedCaCertFilename}\n                  value={this.props.remote.ca_cert || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState({ uploadedCaCertFilename: filename }, () =>\n                      this.updateRemote(value, 'ca_cert'),\n                    );\n                  }}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.ca_cert}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.ca_cert], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      this.state.uploadedCaCertFilename,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label='Download CA certification file'\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n          <FormGroup\n            fieldId={'download_concurrency'}\n            label={'Download concurrency'}\n            labelIcon={\n              <HelperText content='Total number of simultaneous connections.' />\n            }\n            validated={remote.download_concurrency > 0 ? 'default' : 'error'}\n            helperTextInvalid={'Number must be greater than 0'}\n          >\n            <TextInput\n              id='download_concurrency'\n              type='number'\n              value={remote.download_concurrency}\n              validated={remote.download_concurrency > 0 ? 'default' : 'error'}\n              onChange={value =>\n                this.updateRemote(parseInt(value), 'download_concurrency')\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            fieldId={'rate_limit'}\n            label={'Rate Limit'}\n            labelIcon={\n              <HelperText content='Limits total download rate in requests per second.' />\n            }\n            validated={\n              Number.isInteger(remote.rate_limit) || remote.rate_limit === null\n                ? 'default'\n                : 'error'\n            }\n            helperTextInvalid={'Must be an integer.'}\n          >\n            <TextInput\n              id='rate_limit'\n              value={remote.rate_limit}\n              onChange={value => this.updateRemote(value, 'rate_limit')}\n            />\n          </FormGroup>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n    if (remote.download_concurrency < 1) {\n      return false;\n    }\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, HelperText, SortTable, StatefulDropdown } from '..';\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  polling: any;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      } else {\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: 'Remote name',\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: 'Repositories',\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: 'Last updated',\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: 'Last synced',\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: 'Sync status',\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label='Collection versions'\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={p => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { user } = this.props;\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map(r => r.name).join(', ')}</td>\n        {!!remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        {!!remote.last_sync_task && !!remote.last_sync_task.finished_at ? (\n          <td>\n            <DateComponent date={remote.last_sync_task.finished_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{this.renderStatus(remote)}</td>\n        <td>\n          {remote.repositories.length === 0 ? (\n            <Tooltip content='There are no repos associated with this remote.'>\n              <Button variant='plain'>\n                <ExclamationCircleIcon />\n              </Button>\n            </Tooltip>\n          ) : (\n            !!user &&\n            user.model_permissions.change_remote && (\n              <>\n                {this.getConfigureOrSyncButton(remote)}\n                <span>\n                  <StatefulDropdown\n                    items={[\n                      <DropdownItem\n                        key='edit'\n                        onClick={() => this.props.editRemote(remote)}\n                      >\n                        Edit\n                      </DropdownItem>,\n                    ]}\n                  />\n                </span>\n              </>\n            )\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  private renderStatus(remote) {\n    if (!remote.last_sync_task) {\n      return '---';\n    }\n\n    let errorMessage = null;\n    if (remote['last_sync_task']['error']) {\n      errorMessage = (\n        <HelperText content={remote.last_sync_task.error['description']} />\n      );\n    }\n\n    return (\n      <>\n        <StatusIndicator status={remote.last_sync_task.state} /> {errorMessage}\n      </>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { user } = this.props;\n    if (!!user && !user.model_permissions.change_remote) {\n      return null;\n    }\n    const configButton = (\n      <Button onClick={() => this.props.editRemote(remote)} variant='secondary'>\n        Configure\n      </Button>\n    );\n\n    const syncButton = (\n      <>\n        <Button\n          isDisabled={\n            remote.repositories.length === 0 ||\n            (remote.last_sync_task &&\n              ['running', 'waiting'].includes(remote.last_sync_task.state))\n          }\n          onClick={() =>\n            this.props.syncRemote(\n              remote.repositories[0].distributions[0].base_path,\n            )\n          }\n          variant='secondary'\n        >\n          Sync\n        </Button>\n      </>\n    );\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import * as React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { DropdownItem, ClipboardCopy } from '@patternfly/react-core';\nimport {\n  DateComponent,\n  EmptyStateNoData,\n  SortTable,\n  StatefulDropdown,\n} from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  repositories: {}[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={'No local repositories yet'}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: 'Distribution name',\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: 'Repository name',\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: 'Content count',\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: 'Last updated',\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: 'Repo URL',\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: 'CLI configuration',\n          type: 'none',\n          id: 'cli_config',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'kebab',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter(object => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label='Collection versions'\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={p => console.log(p)}\n        />\n        <tbody>\n          {repositories.map(distribution => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>{distribution.repository.content_count}</td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : !!distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n        <td>\n          <span>\n            <StatefulDropdown\n              items={[\n                <DropdownItem\n                  key='2'\n                  component={\n                    <Link to={formatPath(Paths.token, {})} target='_blank'>\n                      Get token\n                    </Link>\n                  }\n                />,\n              ]}\n            />\n          </span>\n        </td>\n      </tr>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Label } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n}\n\ninterface LabelPropType {\n  color: string;\n  icon: any;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps, {}> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: 'Pending',\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: 'Canceled',\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: 'Running', icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: 'Completed',\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: 'Failed',\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type] as any}\n        color={labelProps.color as any}\n        icon={labelProps.icon}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Popover\n        aria-label='popover example'\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /**\n    Component to display when the user is allowed to update this field.\n   */\n  children: any;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label='hidden value'\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            Clear\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: string;\n  button?: ReactElement;\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\ninterface IProps {}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={'No results found'}\n        description={\n          'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n        }\n        icon={SearchIcon}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\n\ninterface IProps {}\n\nexport class EmptyStateUnauthorized extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={_`You do not have access to Automation Hub`}\n        description={_`Contact you organization administrator for more information.`}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, SearchIcon } from '@patternfly/react-icons';\nimport { ReactElement } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: string;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : SearchIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps, {}> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>Raw Markdown</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={value => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && 'Preview'}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              {text ? (\n                <ReactMarkdown children={text} />\n              ) : (\n                <ReactMarkdown children={placeholder} />\n              )}\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    return (\n      <Tooltip content={this.props.digest}>\n        <Label color='blue'>{truncateSha(this.props.digest)}</Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport { Paths } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const tabs = ['Detail', 'Activity', 'Images'];\n    return (\n      <BaseHeader\n        title={this.props.container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: 'Container Registry',\n              },\n              { name: this.props.container.name },\n            ]}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        <Tooltip content={this.props.container.description}>\n          <p className={'truncated'}>{this.props.container.description}</p>\n        </Tooltip>\n        <span />\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab: this.props.tab }}\n              updateParams={p => this.props.updateState({ redirect: p.tab })}\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport { ObjectPermissionField } from 'src/components';\nimport { GroupObjectPermissionType } from 'src/api';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n  onSave: (string, []) => void;\n  onCancel: () => void;\n  permissions: string[];\n}\n\ninterface IState {\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: this.props.description,\n      selectedGroups: this.props.selectedGroups,\n    };\n  }\n\n  render() {\n    const { name, onSave, onCancel, namespace } = this.props;\n    const { description, selectedGroups } = this.state;\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={'Edit repository'}\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            onClick={() => onSave(description, selectedGroups)}\n          >\n            Save\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            Cancel\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup key='name' fieldId='name' label='Name'>\n            <TextInput id='name' value={name} isDisabled={true} type='text' />\n          </FormGroup>\n          <FormGroup key='name' fieldId='name' label='Container namespace'>\n            <TextInput\n              id='name'\n              value={namespace}\n              isDisabled={true}\n              type='text'\n            />\n          </FormGroup>\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label='Description'\n          >\n            <TextArea\n              id='description'\n              value={description}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={value => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n          <FormGroup key='groups' fieldId='groups' label='Groups with access'>\n            <div className='pf-c-form__helper-text'>\n              Adding groups provides access to all repositories in the \"\n              {namespace}\" container namespace.\n            </div>\n            <ObjectPermissionField\n              groups={this.state.selectedGroups}\n              availablePermissions={Constants.CONTAINER_NAMESPACE_PERMISSIONS}\n              setGroups={g => this.setState({ selectedGroups: g })}\n              menuAppendTo='parent'\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.change_containernamespace',\n                )\n              }\n            ></ObjectPermissionField>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: any;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return null;\n    }\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              variant='plain'\n              className='input-group-text-no-wrap'\n            >\n              Filter by repository\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event, value) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoBasePath(value.toString());\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: newRepo,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={isExpanded => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              <SelectOption key={'published'} value={'Published'} />\n              <SelectOption key={'rh-certified'} value={'Red Hat Certified'} />\n              <SelectOption key={'community'} value={'Community'} />\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoName(basePath) {\n    const newRepoName = Object.keys(Constants.REPOSITORYNAMES).find(\n      key => Constants.REPOSITORYNAMES[key] === basePath,\n    );\n\n    // allowing the repo to go through even if isn't one that we support so\n    // that 404s bubble up naturally from the child components.\n    if (!newRepoName) {\n      return basePath;\n    }\n    return newRepoName;\n  }\n\n  private getRepoBasePath(repoName) {\n    if (Constants.REPOSITORYNAMES[repoName]) {\n      return Constants.REPOSITORYNAMES[repoName];\n    }\n\n    return repoName;\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as moment from 'moment';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n    console.log(date);\n    return (\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        <div>{moment(date).fromNow()}</div>\n      </Tooltip>\n    );\n  }\n}\n","export class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 12;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [12, 24, 60, 120];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      object_permissions: [\n        'galaxy.add_namespace',\n        'galaxy.change_namespace',\n        'galaxy.upload_to_namespace',\n      ],\n    },\n    {\n      name: 'collections',\n      object_permissions: ['ansible.modify_ansible_repo_content'],\n    },\n    {\n      name: 'users',\n      object_permissions: [\n        'galaxy.view_user',\n        'galaxy.delete_user',\n        'galaxy.add_user',\n        'galaxy.change_user',\n      ],\n    },\n    {\n      name: 'groups',\n      object_permissions: [\n        'galaxy.view_group',\n        'galaxy.delete_group',\n        'galaxy.add_group',\n        'galaxy.change_group',\n      ],\n    },\n    {\n      name: 'remotes',\n      object_permissions: [\n        'ansible.change_collectionremote',\n        'ansible.view_collectionremote',\n      ],\n    },\n    {\n      name: 'containers',\n      object_permissions: [\n        // Turning off private container permissions since they aren't supported yet\n        // 'container.namespace_pull_containerdistribution',\n        // 'container.namespace_view_containerdistribution',\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.change_containernamespace',\n        'container.namespace_push_containerdistribution',\n        'container.add_containernamespace',\n      ],\n    },\n\n    // These aren't currently used. Removing them to reduce confusion in the UI\n    // {\n    //   name: 'distribution',\n    //   object_permissions: [\n    //     'ansible.change_ansibledistribution',\n    //     'ansible.view_ansibledistribution',\n    //   ],\n    // },\n    // {\n    //   name: 'synclists',\n    //   object_permissions: [\n    //     'galaxy.delete_synclist',\n    //     'galaxy.change_synclist',\n    //     'galaxy.view_synclist',\n    //     'galaxy.add_synclist',\n    //   ],\n    // },\n  ];\n  static HUMAN_PERMISSIONS = {\n    'galaxy.add_namespace': 'Add namespace',\n    'galaxy.change_namespace': 'Change namespace',\n    'galaxy.upload_to_namespace': 'Upload to namespace',\n    'ansible.modify_ansible_repo_content': 'Modify Ansible repo content',\n    'galaxy.view_user': 'View user',\n    'galaxy.delete_user': 'Delete user',\n    'galaxy.add_user': 'Add user',\n    'galaxy.change_user': 'Change user',\n    'galaxy.view_group': 'View group',\n    'galaxy.delete_group': 'Delete group',\n    'galaxy.add_group': 'Add group',\n    'galaxy.change_group': 'Change group',\n    'ansible.change_collectionremote': 'Change collection remote',\n    'ansible.view_collectionremote': 'View collection remote',\n    'ansible.change_ansibledistribution': 'Change Ansible distribution',\n    'ansible.view_ansibledistribution': 'View Ansible distribution',\n    'galaxy.delete_synclist': 'Delete synclist',\n    'galaxy.change_synclist': 'Change synclist',\n    'galaxy.view_synclist': 'View synclist',\n    'galaxy.add_synclist': 'Add synclist',\n    'container.add_containernamespace': 'Create new containers',\n    'container.namespace_pull_containerdistribution': 'Pull private containers',\n    'container.namespace_change_containerdistribution': 'Change containers',\n    'container.namespace_view_containerdistribution': 'View private containers',\n    'container.namespace_modify_content_containerpushrepository':\n      'Change image tags',\n    'container.change_containernamespace':\n      'Change container namespace permissions',\n    'container.namespace_push_containerdistribution':\n      'Push to existing containers',\n  };\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: 'Change namespace',\n    upload_to_namespace: 'Upload to namespace',\n    add_containernamespace: 'Create new containers',\n    namespace_pull_containerdistribution: 'Pull private containers',\n    namespace_change_containerdistribution: 'Update container information',\n    namespace_view_containerdistribution: 'View private containers',\n    namespace_modify_content_containerpushrepository: 'Change image tags',\n    change_containernamespace: 'Change container namespace permissions',\n    namespace_push_containerdistribution: 'Push images to existing containers',\n    view_containernamespace: \"View container's namespace\",\n    delete_containernamespace: \"Delete container's namespace\",\n    namespace_delete_containerdistribution: \"Delete container's distribution\",\n    namespace_view_containerpushrepository: \"View container's repository\",\n    namespace_add_containerdistribution: 'Push new containers',\n    change_containerdistribution: 'Change distribution',\n    delete_containerdistribution: 'Delete distribution',\n    push_containerdistribution: 'Push distribution',\n    pull_containerdistribution: 'Pull distribution',\n    view_containerdistribution: 'View distribution',\n  };\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n  static REPOSITORYNAMES = {\n    'Red Hat Certified': 'rh-certified',\n    Community: 'community',\n    Published: 'published',\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified'];\n}\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (registry) {\n    throw new Error('store already initialized');\n  }\n\n  registry = new ReducerRegistry({}, [promise, ...middleware]);\n\n  //If you want to register all of your reducers, this is good place.\n  /*\n   *  registry.register({\n   *    someName: (state, action) => ({...state})\n   *  });\n   */\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React, { Component } from 'react';\nimport { LoadingPageWithHeader } from 'src/components';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null,\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component,\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? (\n        <C {...this.props} />\n      ) : (\n        <LoadingPageWithHeader></LoadingPageWithHeader>\n      );\n    }\n  }\n\n  return AsyncComponent;\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport asyncComponent from 'src/utilities/asyncComponent';\nimport some from 'lodash/some';\nimport { Paths } from 'src/paths';\n\n/**\n * Aysnc imports of components\n *\n * https://webpack.js.org/guides/code-splitting/\n * https://reactjs.org/docs/code-splitting.html\n *\n * pros:\n *      1) code splitting\n *      2) can be used in server-side rendering\n * cons:\n *      1) nameing chunk names adds unnecessary docs to code,\n *         see the difference with DashboardMap and InventoryDeployments.\n *\n */\nconst EditNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/edit-namespace/edit-namespace'\n  ),\n);\n\nconst CollectionDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-detail'\n  ),\n);\n\nconst CollectionContent = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-content'\n  ),\n);\n\nconst CollectionDocs = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-docs'\n  ),\n);\n\nconst CollectionImportLog = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-import-log'\n  ),\n);\n\nconst NotFound = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"not_found\" */\n    '../../containers/not-found/not-found'\n  ),\n);\n\nconst MyNamespaces = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/my-namespaces'\n  ),\n);\n\nconst ManageNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst PartnerDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst Partners = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/' + NAMESPACE_TERM\n  ),\n);\n\nconst MyImports = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"my_imports\" */\n    '../../containers/my-imports/my-imports'\n  ),\n);\n\nconst Search = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"search\" */\n    '../../containers/search/search'\n  ),\n);\n\nconst TokenPage = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/token/token-insights'\n  ),\n);\n\nconst CertificationDashboard = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/certification-dashboard/certification-dashboard'\n  ),\n);\n\nconst Repository = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"repository-list\" */\n    '../../containers/repositories/repository-list'\n  ),\n);\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n\n  return <Route {...rest} component={Component} />;\n};\n\nInsightsRoute.propTypes = {\n  component: PropTypes.func,\n  rootClass: PropTypes.string,\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = props => {\n  const path = props.childProps.location.pathname;\n\n  return (\n    <Switch>\n      <InsightsRoute\n        path={Paths.repositories}\n        component={Repository}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.approvalDashboard}\n        component={CertificationDashboard}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.notFound}\n        component={NotFound}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.token}\n        component={TokenPage}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths[NAMESPACE_TERM]}\n        component={Partners}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.editNamespace}\n        component={EditNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollections}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollectionsByRepo}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myNamespaces}\n        component={MyNamespaces}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPageByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndexByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocsByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentListByRepo}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLogByRepo}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionByRepo}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespaceByRepo}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.searchByRepo}\n        component={Search}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPage}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndex}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocs}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentList}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLog}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myImports}\n        component={MyImports}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collection}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespace}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute path={Paths.search} component={Search} rootClass='root' />\n      {/* Finally, catch all unmatched routes */}\n      <Route\n        render={() =>\n          some(Paths, p => p === path) ? null : <Redirect to={Paths.notFound} />\n        }\n      />\n    </Switch>\n  );\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { ActiveUserAPI } from 'src/api';\nimport { Paths } from 'src/paths';\n\nconst DEFAULT_REPO = 'published';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      activeUser: null,\n      selectedRepo: DEFAULT_REPO,\n    };\n  }\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('automation-hub');\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = insights.chrome.on('APP_NAVIGATION', event => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, no trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename.replace(/^\\/beta\\//, '/');\n\n      if (event.domEvent.href) {\n        // prod-beta\n        // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n        // (navId: corresponds to the last url component, but not the same one, ansible-hub means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners)\n\n        // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n        this.props.history.push(\n          event.domEvent.href.replace(basename, '') || '/',\n        );\n      } else {\n        // FIXME: may no longer be needed by the time this gets to prod-stable\n        // prod-stable\n        // (domEvent is a react event, no href (there is an absolute url in domEvent.target.href))\n        // navId: corresponds to the first url component after prefix, \"\" means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners\n        this.props.history.push(`/${event.navId}`);\n      }\n    });\n\n    insights.chrome.auth.getUser().then(user => this.setState({ user: user }));\n    ActiveUserAPI.getActiveUser().then(result =>\n      this.setState({ activeUser: result.data }),\n    );\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate(prevProps) {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user || !this.state.activeUser) {\n      return null;\n    } else {\n      return (\n        <AppContext.Provider\n          value={{\n            user: this.state.activeUser,\n            setUser: this.setActiveUser,\n            selectedRepo: this.state.selectedRepo,\n          }}\n        >\n          <Routes childProps={this.props} />\n        </AppContext.Provider>\n      );\n    }\n  }\n  setActiveUser = user => {\n    this.setState({ activeUser: user });\n  };\n\n  isRepoURL = location => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n  basename: PropTypes.string.isRequired,\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport getBaseName from './utilities/getBaseName';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst basename = getBaseName(window.location.pathname);\n\nReactDOM.render(\n  <Provider store={init().getStore()}>\n    <Router basename={basename}>\n      <App basename={basename} />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType } from 'src/api';\n\ninterface IAppContextType {\n  user: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\n","import { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(path: Paths, data: any, params?: object) {\n  let url = path as string;\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    return `${url}?${ParamHelper.getQueryString(params)}`;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n}\n\n// HACK: ensure l10n marked strings can be backported without breaking\nwindow._ = String.raw;\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: 'Namespaces',\n    partners: 'Partners',\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { ContentSummaryType } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  content: ContentSummaryType[],\n): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: { module: 0, role: 0, plugin: 0 },\n  };\n\n  for (let c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport function mapErrorMessages(err) {\n  const messages: any = {};\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n  return messages;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = !!API_HOST ? API_HOST : window.location.origin;\n\n  return !!distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: any) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find(key => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find(el => el.name === name);\n  if (field) {\n    console.log(field);\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data: any,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, filter => filter in params);\n}\n","export function truncateSha(sha) {\n  let splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: Object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: Object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: Object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (let k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p: any, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: Object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: Object, ignoreParams?: string[]) {\n    let paramString = [];\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function(params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + {\"33\":\"namespace_detail\",\"152\":\"not_found\",\"378\":\"repository-list\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] + \".\" + {\"33\":\"fd5368cc1835787c71ce\",\"152\":\"9970b3398fc0469edca9\",\"378\":\"f65321da46e0f38090ab\",\"464\":\"29d6f242211575416473\",\"571\":\"67291dab7717aaaf901e\",\"684\":\"e6ca77d39f82791382cb\",\"776\":\"60cd3b7ebaca53387fdc\",\"837\":\"98389b7159391f9f7435\"}[chunkId] + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"css/\" + {\"33\":\"namespace_detail\",\"152\":\"not_found\",\"252\":\"rhcsVendor\",\"410\":\"pfVendor\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] + \".\" + {\"33\":\"60d0b58c23362c913ef4\",\"152\":\"edf236b3c340045471cc\",\"252\":\"b659ff971a6b51da1e7a\",\"410\":\"3323176d22cd289fb3e2\",\"464\":\"1c4fa97f44a40fb6a48f\",\"571\":\"e278031ed8e7e4c376de\",\"684\":\"cdf15be1a2a13e29a091\",\"776\":\"d5887010b4a63855f4bf\",\"837\":\"60d5edc9717bf67286eb\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/apps/automation-hub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkansible_hub_ui\"] = self[\"webpackChunkansible_hub_ui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [410,252,293,736], () => (__webpack_require__(52853)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","loadStylesheet","installedCssChunks","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","then","response","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","source","forceReload","cachedCollection","Promise","result","docs_blob","filterDetailItem","distro_base_path","version","reject","err","ImportMessageCodes","PulpStatus","NamespaceAPI","API","ImportAPI","ActiveUserAPI","identity","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","MySyncListAPI","TaskAPI","GroupAPI","permissionId","RemoteAPI","distribution","remote","unModifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","obj","API_HOST","DistributionAPI","MyDistributionAPI","readme","digest","PulpAPI","repositoryID","tag","Tag","Chip","className","isReadOnly","props","children","React","NumericLabel","convertedNum","number","label","hideNumber","Number","plural","roundNumber","n","toString","Math","floor","NamespaceForm","state","newNamespaceGroup","errorMessages","userId","Form","FormGroup","fieldId","isRequired","TextInput","isDisabled","type","value","helperTextInvalid","validated","toError","company","onChange","event","updateField","NamespaceCard","isNaN","ObjectPermissionField","groups","availablePermissions","setGroups","g","newNS","updateNamespace","avatar_url","TextArea","description","getLinksErrorText","links","link","index","renderLinkGroup","length","onClick","addLink","size","msg","push","join","update","target","splice","last","key","placeholder","updateLink","removeLink","NamespaceModal","newNamespaceName","newGroups","results","toggleModal","setState","onCreateSuccess","error","messages","errors","parameter","detail","newNamespaceNameValid","test","startsWith","Modal","variant","title","isOpen","onClose","actions","Button","handleSubmit","helperText","labelIcon","HelperText","content","InputGroup","newNamespaceNameIsValid","menuAppendTo","ResourcesForm","MarkdownEditor","text","resources","updateText","updateResources","editing","BaseHeader","imageURL","pageControls","breadcrumbs","contextSelector","cx","Logo","alt","image","PageHeaderTitle","PartnerHeader","tabs","updateParams","Breadcrumbs","Tabs","x","i","href","CollectionList","kwField","collections","itemCount","showControls","Toolbar","searchPlaceholder","Pagination","count","isTop","DataList","c","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","style","display","alignItems","handleControlClick","StatefulDropdown","items","DropdownItem","showNamespace","cells","DataListCell","isFilled","alignRight","contentSummary","convertContentSummaryCounts","to","formatPath","Paths","DeprecatedTag","TextContent","Text","component","TextVariants","k","tags","DateComponent","date","created_at","DataListItem","DataListItemRow","DataListItemCells","dataListCells","namespaceURL","Card","CardHeader","CardHeaderMain","unlockWidth","CardTitle","CardBody","CardFooter","Breadcrumb","renderLink","BreadcrumbItem","isActive","Sort","isExpanded","isDescending","getIsDescending","option","options","find","desc","sortParamName","getSelected","descending","sort","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","Select","SelectVariant","onToggle","onSelect","_","selections","SelectOption","setDescending","disabledTitle","activeKey","getActiveTab","toLowerCase","tab","Tab","eventKey","TabTitleText","T","findIndex","LinkTabs","renderTab","active","selected","undefined","toggleType","defaultText","position","isPlain","ariaLabel","Dropdown","toggle","renderToggle","dropdownItems","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","currentTarget","keywords","sortOptions","extraInputs","ToolbarContent","ToolbarGroup","ToolbarItem","onKeyPress","handleEnter","ButtonVariant","submitKeywords","ImportConsole","lastImport","followLogs","selectedImport","task","apiError","loading","renderTitle","Spinner","centered","isLoading","followMessages","Tooltip","handleScrollClick","renderMessage","ref","level","message","hideCollectionName","collectionVersion","collectionHead","approvalStatus","rlist","repository_list","StatusIndicator","status","traceback","setFollowMessages","current","scrollIntoView","behavior","requestAnimationFrame","ImportList","selectImport","importList","namespaces","numberOfResults","renderNamespacePicker","submitSearch","renderList","perPage","page_size","onSetPage","onPerPageSelect","isCompact","pageNum","EmptyStateNoData","clickable","getStatusClass","renderDescription","finished_at","statusClass","FormSelect","val","ns","FormSelectOption","CollectionCard","footer","getCertification","getDescription","renderTypeCount","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","CardListSwitcher","disp","view_type","iconClasses","height","justifyContent","objectFit","maxHeight","src","DefaultLogo","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","String","CollectionInfo","downloadLinkRef","all_versions","installCommand","Grid","hasGutter","GridItem","Split","SplitItem","license","ClipboardCopy","icon","download","context","selectedRepo","v","moment","created","fromNow","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","click","AppContext","CollectionHeader","activeTab","RepoSelector","Alert","isInline","renderTabs","l","pathParams","reduced","ignoreParams","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","split","getContentEntry","a","b","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","content_name","CollectionContentList","toShow","summary","all","showing","match","ignoredParams","LoadingPageSpinner","Bullseye","width","LoadingPageWithHeader","PageHeader","Skeleton","Main","Section","CompoundFilter","newParams","selectedFilter","selectedID","replace","indexOf","submitMultiple","filterConfig","inputText","isCreatable","hasOnCreateOption","filterOptions","renderInput","submitFilter","inputType","SelectGroup","onSelectMultiple","placeholderText","isGrouped","newValues","AppliedFilters","renderGroup","clearAllFilters","chips","niceNames","Array","isArray","marginRight","ChipGroup","categoryName","margin","backgroundColor","color","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","SortTable","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","AlertList","alerts","closeAlert","right","top","zIndex","flexDirection","alert","marginBottom","actionClose","AlertActionCloseButton","closeAlertMixin","alertStateVariable","alertIndex","newList","newState","extra","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","requiredFields","fields","formGroupLabelIcon","onSubmit","preventDefault","onSave","UserForm","newUser","user","updateUser","selection","isPlaceholder","addedGroup","searchGroups","name__contains","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","onCancel","isNewUser","isMe","superuserLabel","getSuperUserHelperText","Switch","is_superuser","labelOff","isChecked","isPassSame","group","Label","APISearchTypeAhead","loadResults","onSelectGroup","multiple","onClear","clearGroups","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","added","object_permissions","Flex","marginTop","default","FlexItem","minWidth","grow","PermissionChipSelector","perm","twoWayMapper","selectedPermissions","setSelected","perms","setPermissions","cursor","removeGroup","newPerms","Set","has","add","from","isViewOnly","LabelGroup","typeAheadAriaLabel","clearSelection","evt","textInput","getOptions","hasInlineFilter","onFilter","RemoteForm","fill","requirementsFilename","clientCertFilename","clientKeyFilename","caCertFilename","requirements_file","client_key","client_cert","ca_cert","uploadedRequirementFilename","uploadedClientKeyFilename","uploadedClientCertFilename","uploadedCaCertFilename","remoteType","getRemoteType","disabledFields","concat","showModal","closeModal","isValid","saveRemote","renderForm","updateRemote","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","FileUpload","filename","hideDefaultPreview","FileSaver","Blob","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","download_concurrency","isInteger","rate_limit","host","fieldName","newFields","is_set","RemoteRepositoryTable","polling","setInterval","refresh","remotes","repositories","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","renderTable","renderRow","r","updated_at","renderStatus","model_permissions","change_remote","getConfigureOrSyncButton","editRemote","errorMessage","configButton","syncButton","syncRemote","distributions","base_path","LocalRepositoryTable","sortTableOptions","object","console","log","cliConfig","repository","getRepoUrl","content_count","pulp_last_updated","isCode","primary","secondary","labelProps","typeToVariantMap","Popover","PopoverPosition","bodyContent","iconPosition","EmptyStateCustom","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","EmptyStateUnauthorized","LockIcon","PlusCircleIcon","selectExpanded","InputGroupText","newRepo","getRepoBasePath","setRepo","getRepoName","basePath","repoName","format","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","change_containernamespace","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","Community","Published","registry","asyncComponent","importComponent","C","Component","EditNamespace","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","CertificationDashboard","Repository","InsightsRoute","rootClass","rest","root","document","getElementById","removeAttribute","classList","setAttribute","propTypes","PropTypes","Routes","childProps","location","pathname","render","some","DEFAULT_REPO","App","activeUser","matchPath","init","identifyApp","appNav","on","domEvent","basename","history","navId","prevProps","isRepoURL","setUser","setActiveUser","withRouter","connect","release","pathName","shift","ReactDOM","store","middleware","ReducerRegistry","promise","getStore","raw","namespaceBreadcrumb","total_count","role","plugin","mapErrorMessages","distributionPath","origin","mapper","values","writeOnlyFields","el","newObj","filterIsSet","filters","truncateSha","sha","splitSha","paramString","numericTypes","URLSearchParams","forEach","appendParam","param","encodeURIComponent","callback","search","getQueryString","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","definition","defineProperty","enumerable","f","chunkId","reduce","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","done","script","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","fullhref","existingLinkTags","dataHref","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","createStylesheet","miniCss","installedChunks","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}