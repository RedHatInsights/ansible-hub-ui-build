{"version":3,"file":"js/429.ebfa8b35db10e59d4234.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Checkbox,\n  DropdownItem,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionFilter,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  OwnersTab,\n  Pagination,\n  PartnerHeader,\n  RepoSelector,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoUrl,\n  waitForTask,\n} from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\nimport './namespace-detail.scss';\n\ninterface IState {\n  canSign: boolean;\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n    group?: number;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n  showControls: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isNamespaceEmpty: boolean;\n  confirmDelete: boolean;\n  isNamespacePending: boolean;\n  alerts: AlertType[];\n  deleteCollection: CollectionListType;\n  isDeletionPending: boolean;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  group: GroupType;\n}\n\ninterface IProps extends RouteProps {\n  selectedRepo: string;\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab', 'group'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.routeParams.namespace;\n\n    this.state = {\n      canSign: false,\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isNamespaceEmpty: false,\n      confirmDelete: false,\n      isNamespacePending: false,\n      alerts: [],\n      deleteCollection: null,\n      isDeletionPending: false,\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      group: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = ParamHelper.parseParamString(this.props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      params['namespace'] = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params['group'], this.state.namespace.groups),\n      });\n    }\n  }\n\n  filterGroup(groupId, groups) {\n    return groupId ? groups.find(({ id }) => Number(groupId) === id) : null;\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateUpdate }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  render() {\n    const {\n      canSign,\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showControls,\n      showImportModal,\n      warning,\n      updateCollection,\n      isOpenNamespaceModal,\n      confirmDelete,\n      isNamespacePending,\n      alerts,\n      deleteCollection,\n      isDeletionPending,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'owners', name: t`Namespace owners` },\n    ].filter(Boolean);\n\n    const tab = params['tab'] || 'collections';\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        name: namespace.name,\n        url:\n          tab === 'owners'\n            ? formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'owners'\n        ? {\n            name: t`Namespace owners`,\n            url: params.group\n              ? formatPath(\n                  Paths.namespaceByRepo,\n                  {\n                    repo: this.context.selectedRepo,\n                    namespace: namespace.name,\n                  },\n                  { tab: 'owners' },\n                )\n              : null,\n          }\n        : null,\n      tab === 'owners' && params.group\n        ? { name: t`Group ${params.group}` }\n        : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoUrl('inbound-' + namespace.name);\n\n    const noData = itemCount === 0 && !filterIsSet(params, ['keywords']);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'view_type',\n    ];\n\n    const { hasPermission } = this.context;\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || hasPermission('galaxy.change_namespace');\n\n    // remove ?group (owners tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                selectedRepo: this.context.selectedRepo,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          contextSelector={\n            <RepoSelector\n              path={this.props.routePath}\n              pathParams={{ namespace: namespace.name }}\n              selectedRepo={this.context.selectedRepo}\n            />\n          }\n          filters={\n            tab === 'collections' ? (\n              <div className='hub-toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        ></PartnerHeader>\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      {t`Upload collection`}\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  showControls={this.state.showControls}\n                  repo={this.context.selectedRepo}\n                  renderCollectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                  displaySignatures={\n                    this.context.featureFlags.display_signatures\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'owners' ? (\n            <OwnersTab\n              showGroupRemoveModal={this.state.showGroupRemoveModal}\n              showGroupSelectWizard={this.state.showGroupSelectWizard}\n              showRoleRemoveModal={this.state.showRoleRemoveModal}\n              showRoleSelectWizard={this.state.showRoleSelectWizard}\n              canEditOwners={canEditOwners}\n              group={this.state.group}\n              groups={namespace.groups}\n              name={namespace.name}\n              pulpObjectType='pulp_ansible/namespaces'\n              selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n              updateProps={(prop) => {\n                this.setState(prop);\n              }}\n              addGroup={(group, roles) => {\n                const { groups, name } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: roles.map(({ name }) => name),\n                };\n                const newGroups = [...groups, newGroup];\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                  stateUpdate: { showGroupSelectWizard: null },\n                });\n              }}\n              removeGroup={(group) => {\n                const { name, groups } = namespace;\n                const newGroups = groups.filter((g) => g !== group);\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                  stateUpdate: { showGroupRemoveModal: null },\n                });\n              }}\n              addRole={(group, roles) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: [\n                    ...group.object_roles,\n                    ...roles.map(({ name }) => name),\n                  ],\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleSelectWizard: null },\n                });\n              }}\n              removeRole={(role, group) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: group.object_roles.filter(\n                    (name) => name !== role,\n                  ),\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleRemoveModal: null },\n                });\n              }}\n              urlPrefix={formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => {\n              this.signAllCertificates(namespace);\n            }}\n            onCancel={() => {\n              this.setState({ isOpenSignModal: false });\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find((x) => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${collection.name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(\n          collection,\n          !collection.deprecated,\n          this.context.selectedRepo,\n        )\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.deprecated\n                ? t`Collection \"${collection.name}\" has been successfully undeprecated.`\n                : t`Collection \"${collection.name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.load();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  }\n\n  private loadCollections() {\n    CollectionAPI.list(\n      {\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      },\n      this.context.selectedRepo,\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        },\n        this.context.selectedRepo,\n      ),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // TODO this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then((val) => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n          canSign: canSignNamespace(this.context, val[2]?.data),\n          group: this.filterGroup(\n            this.state.params['group'],\n            val[1].data['groups'],\n          ),\n        });\n\n        this.loadAllRepos(val[0].data.meta.count);\n      })\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private loadAllRepos(currentRepoCount) {\n    // get collections in namespace from each repo\n    // except the one we already have\n    const repoPromises = Object.keys(Constants.REPOSITORYNAMES)\n      .filter((repo) => repo !== this.context.selectedRepo)\n      .map((repo) =>\n        CollectionAPI.list(\n          { namespace: this.props.routeParams.namespace },\n          repo,\n        ),\n      );\n\n    Promise.all(repoPromises)\n      .then((results) =>\n        this.setState({\n          isNamespaceEmpty:\n            results.every((val) => val.data.meta.count === 0) &&\n            currentRepoCount === 0,\n        }),\n      )\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Collection repositories could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections } = this.state;\n    const { can_upload_signatures } = this.context.featureFlags;\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='1'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      hasPermission('galaxy.delete_namespace') && (\n        <React.Fragment key={'2'}>\n          {this.state.isNamespaceEmpty ? (\n            <DropdownItem\n              onClick={() => this.setState({ isOpenNamespaceModal: true })}\n            >\n              {t`Delete namespace`}\n            </DropdownItem>\n          ) : (\n            <Tooltip\n              isVisible={false}\n              content={\n                <Trans>\n                  Cannot delete namespace until <br />\n                  collections&apos; dependencies have <br />\n                  been deleted\n                </Trans>\n              }\n              position='left'\n            >\n              <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n            </Tooltip>\n          )}\n        </React.Fragment>\n      ),\n      <DropdownItem\n        key='3'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-collections'\n          data-cy='sign-all-collections-button'\n          onClick={() => this.setState({ isOpenSignModal: true })}\n        >\n          {t`Sign all collections`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls'></div>;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            {t`Upload collection`}\n          </Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb.url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.setAlerts([\n            ...this.context.alerts,\n            {\n              variant: 'success',\n              title: (\n                <Trans>\n                  Namespace &quot;{name}&quot; has been successfully deleted.\n                </Trans>\n              ),\n            },\n          ]);\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    const { hasPermission } = this.context;\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.handleCollectionAction(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection: hasPermission('ansible.delete_collection'),\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                }),\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(collection.id, 'deprecate')\n              }\n              key='deprecate'\n            >\n              {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      </div>\n    );\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","confirmDelete","context","setAlerts","concat","_toConsumableArray","alerts","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","i18n","description","errorMessage","params","ParamHelper","location","search","routeParams","canSign","collections","itemCount","showImportModal","warning","updateCollection","showControls","isOpenSignModal","isNamespaceEmpty","deleteCollection","isDeletionPending","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","group","_createClass","key","value","this","load","prevProps","filterGroup","groups","groupId","find","_ref","Number","_ref2","_this2","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","_objectSpread","addAlert","_ref3","_ref3$response","_this$state$namespace","_this3","_this$state","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","url","formatPath","Paths","repo","selectedRepo","repositoryUrl","getRepoUrl","noData","filterIsSet","updateParams","loadCollections","ignoredParams","hasPermission","canEditOwners","related_fields","my_permissions","includes","tabParams","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","setOpen","warn","toggleImportModal","collection","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","className","components","Checkbox","isChecked","onChange","val","label","Alert","actionClose","AlertActionCloseButton","onClose","PartnerHeader","p","pageControls","renderPageControls","contextSelector","RepoSelector","path","routePath","pathParams","filters","CollectionFilter","Pagination","count","isTop","Main","EmptyStateNoData","button","Button","onClick","CollectionList","renderCollectionControls","displaySignatures","featureFlags","display_signatures","href","target","rel","ExternalLinkAltIcon","ClipboardCopy","isReadOnly","renderResources","OwnersTab","pulpObjectType","selectRolesMessage","updateProps","prop","addGroup","roles","newGroup","object_roles","map","_ref4","newGroups","updateGroups","removeGroup","g","addRole","_ref5","removeRole","role","urlPrefix","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","action","_this4","x","CollectionAPI","deprecated","result","taskId","parsePulpIDFromURL","data","task","waitForTask","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","distro_base_path","task_id","error","_this6","nonAPIParams","meta","_this7","Promise","all","include_related","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_val$","canSignNamespace","loadAllRepos","currentRepoCount","_this8","repoPromises","Object","keys","Constants","results","every","err","_err$response","get","nonQueryStringParams","_this9","_this$state2","can_upload_signatures","dropdownItems","DropdownItem","component","Link","Tooltip","isVisible","content","position","StatefulDropdown","items","newState","closeAlertMixin","_this10","style","display","alignItems","handleCollectionAction","canDeleteCollection","noDependencies","ariaLabel","contextType","AppContext","withRouter"],"sourceRoot":""}