{"version":3,"file":"js/264.1673911840215.fa5f224da32138fe621b.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/about-modal/about-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/delete-modal/delete-execution-environment-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/owners-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-header.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/constants.tsx","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/l10n.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: string,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n}\n\nexport const Repositories = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport class AlertList extends React.Component<IProps> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n        data-cy='AlertList'\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams({\n                  ...ParamHelper.deleteParam(params, key, v),\n                  page: 1,\n                })\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  AboutModal,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from '@patternfly/react-core';\nimport Logo from 'src/../static/images/logo_large.svg';\nimport { ApplicationInfoAPI, UserType } from 'src/api';\nimport { detect } from 'detect-browser';\n\nconst Label = ({ children }: { children: React.ReactNode }) => (\n  <TextListItem component={TextListItemVariants.dt}>{children}</TextListItem>\n);\n\nconst Value = ({ children }: { children: React.ReactNode }) => (\n  <TextListItem component={TextListItemVariants.dd}>{children}</TextListItem>\n);\n\ninterface IProps {\n  isOpen: boolean;\n  trademark: string;\n  brandImageSrc: string;\n  onClose: () => void;\n  brandImageAlt: string;\n  productName: string;\n  user: UserType;\n  userName: string;\n}\n\ninterface IState {\n  applicationInfo: {\n    galaxy_ng_commit: string;\n    pulp_ansible_version: string;\n    server_version: string;\n    aap_version: string;\n  };\n}\n\nexport class AboutModalWindow extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicationInfo: {\n        galaxy_ng_commit: '',\n        pulp_ansible_version: '',\n        server_version: '',\n        aap_version: '',\n      },\n    };\n  }\n\n  componentDidMount() {\n    ApplicationInfoAPI.get().then((result) => {\n      this.setState({\n        applicationInfo: {\n          galaxy_ng_commit: result.data.galaxy_ng_commit,\n          pulp_ansible_version: result.data.pulp_ansible_version,\n          server_version: result.data.server_version,\n          aap_version: result.data?.aap_version,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { isOpen, onClose, brandImageAlt, productName, user, userName } =\n      this.props;\n    const browser = detect();\n\n    return (\n      <AboutModal\n        isOpen={isOpen}\n        trademark=''\n        brandImageSrc={Logo}\n        onClose={onClose}\n        brandImageAlt={brandImageAlt}\n        productName={productName}\n      >\n        <TextContent>\n          <TextList component={TextListVariants.dl}>\n            <Label>{t`Server version`}</Label>\n            <Value>\n              {this.state.applicationInfo.server_version}\n              <br />\n              {this.state.applicationInfo.galaxy_ng_commit}\n            </Value>\n\n            <Label>{t`Pulp Ansible Version`}</Label>\n            <Value>{this.state.applicationInfo.pulp_ansible_version}</Value>\n\n            {this.state.applicationInfo?.aap_version && (\n              <>\n                <Label>{t`Ansible Automation Platform`}</Label>\n                <Value>{this.state.applicationInfo.aap_version}</Value>\n              </>\n            )}\n\n            <Label>{t`UI Version`}</Label>\n            <Value>{UI_COMMIT_HASH}</Value>\n\n            <Label>{t`Username`}</Label>\n            <Value>{userName}</Value>\n\n            <Label>{t`User Groups`}</Label>\n            <Value>{user.groups.map((group) => group.name).join()}</Value>\n\n            <Label>{t`Browser Version`}</Label>\n            <Value>{browser.name + ' ' + browser.version}</Value>\n\n            <Label>{t`Browser OS`}</Label>\n            <Value>{browser.os}</Value>\n          </TextList>\n        </TextContent>\n      </AboutModal>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <span data-cy='view_type_card'>\n          <ThLargeIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'card' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n            }\n          />\n        </span>\n        <span data-cy='view_type_list'>\n          <ListIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'list' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n            }\n          />\n        </span>\n      </div>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      className,\n      footer,\n      repo,\n      sign_state,\n      menu,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    return (\n      <Card className={cx('hub-c-card-collection-container ', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            flexGrow\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n          <SignatureBadge isCompact signState={sign_state} />\n          {menu}\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{t`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <CollectionNumericLabel count={count} newline type={type} />\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport { EmptyStateCustom } from 'src/components';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    const toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (const c of contents) {\n      summary[c.content_type] ||= 0;\n\n      const keywordMatch = c.name.match(keywords);\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n      // count only items matching keyword\n      if (keywordMatch) {\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n\n      // show only items matching keyword + type\n      if (keywordMatch && typeMatch) {\n        toShow.push(c);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label={t`find-content`}\n                  placeholder={t`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{t`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'hub-c-toolbar__item-selected-item': key === showing,\n                    'hub-c-toolbar__item-type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='hub-c-table-content pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{t`Name`}</th>\n              <th>{t`Type`}</th>\n              <th>{t`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {summary.all <= 0 &&\n          this.context.selectedRepo === 'community' &&\n          this.renderCommunityWarningMessage()}\n      </div>\n    );\n  }\n\n  private renderCommunityWarningMessage() {\n    return (\n      <EmptyStateCustom\n        title={t`Warning`}\n        description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n        icon={ExclamationTriangleIcon}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { Spinner } from '@patternfly/react-core';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\ninterface IState {\n  collectionCount: number;\n  alerts: AlertType[];\n  loading: boolean;\n}\n\nexport class CollectionCount extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collectionCount: null,\n      alerts: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getCollectionCount(this.props.distributionPath);\n  }\n\n  render() {\n    const { collectionCount, loading } = this.state;\n    return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n  }\n\n  private getCollectionCount(repo) {\n    const { distributionPath } = this.props;\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        this.setState({ collectionCount: count, loading: false });\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n        const { status, statusText } = err.response;\n        this.addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n        );\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport React, { FC } from 'react';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n\n  if (!display_signatures) {\n    return null;\n  }\n\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { errorMessage, DeleteCollectionUtils } from 'src/utilities';\nimport './header.scss';\n\nimport { Navigate } from 'react-router-dom';\n\nimport * as moment from 'moment';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Text,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  BreadcrumbType,\n  LinkTabs,\n  Logo,\n  RepoSelector,\n  Pagination,\n  AlertList,\n  AlertType,\n  closeAlertMixin,\n  StatefulDropdown,\n  SignSingleCertificateModal,\n  SignAllCertificatesModal,\n  UploadSingCertificateModal,\n  ImportModal,\n  DeleteCollectionModal,\n} from 'src/components';\n\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  SignCollectionAPI,\n  CollectionListType,\n  MyNamespaceAPI,\n  CollectionVersion,\n  Repositories,\n  CertificateUploadAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  waitForTask,\n  canSign as canSignNS,\n  parsePulpIDFromURL,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { Constants } from 'src/constants';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context?.featureFlags || {};\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNS(this.context, namespace);\n\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${namespace.name}-${collectionName}-${collection.latest_version.version}`,\n      );\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={collectionVersion}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceByRepo, {\n                      repo: this.context.selectedRepo,\n                      namespace: deleteCollection.namespace.name,\n                    }),\n                    selectedRepo: this.context.selectedRepo,\n                    addAlert: (alert) =>\n                      this.context.setAlerts([...this.state.alerts, alert]),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              path={Paths.searchByRepo}\n              selectedRepo={this.context.selectedRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              <SignatureBadge\n                isCompact\n                signState={collection.latest_version.sign_state}\n              />\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import React, { FC, useState } from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { t } from '@lingui/macro';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem: FC<Props> = ({ version }) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-info.scss';\nimport { errorMessage } from 'src/utilities';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  Button,\n  Alert,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag, ClipboardCopy, LoginLink } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: React.RefObject<HTMLAnchorElement>;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const { name, latest_version, namespace, params } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{t`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          {latest_version?.metadata?.license?.length > 0 && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>{t`License`}</SplitItem>\n                <SplitItem isFilled>\n                  {latest_version.metadata.license\n                    ? latest_version.metadata.license.join(', ')\n                    : ''}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Installing collections with ansible-galaxy is\n                    only supported in ansible 2.9+\n                  </Trans>\n                </div>\n                {this.context.user.is_anonymous &&\n                !this.context.settings\n                  .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                  <Alert\n                    className={'hub-collection-download-alert'}\n                    isInline\n                    variant='warning'\n                    title={\n                      <React.Fragment>\n                        {t`You have to be logged in to be able to download the tarball.`}{' '}\n                        <LoginLink />\n                      </React.Fragment>\n                    }\n                  />\n                ) : (\n                  <div>\n                    <a\n                      ref={this.downloadLinkRef}\n                      style={{ display: 'none' }}\n                    ></a>\n                    <Button\n                      className='download-button'\n                      variant='link'\n                      data-cy='download-collection-tarball-button'\n                      icon={<DownloadIcon />}\n                      onClick={() =>\n                        this.download(\n                          this.context.selectedRepo,\n                          namespace,\n                          name,\n                          latest_version,\n                        )\n                      }\n                    >\n                      {t`Download tarball`}\n                    </Button>\n                  </div>\n                )}\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <DownloadSignatureGridItem version={latest_version} />\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {t`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled data-cy='ansible-requirement'>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='hub-readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='hub-fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {t`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    )\n      .then((downloadURL: string) => {\n        // By getting a reference to a hidden <a> tag, setting the href and\n        // programmatically clicking it, we can hold off on making the api\n        // calls to get the download URL until it's actually needed. Clicking\n        // the <a> tag also gets around all the problems using a popup with\n        // window.open() causes.\n        this.downloadLinkRef.current.href = downloadURL;\n        this.downloadLinkRef.current.click();\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.props.addAlert(\n          'danger',\n          t`Collection \"${name}\" could not be downloaded.`,\n          errorMessage(status, statusText),\n        );\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\ninterface IState {\n  inputText: string;\n}\n\nexport class CollectionFilter extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: props.params.keywords || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.keywords !== this.props.params['keywords']) {\n      this.setState({ inputText: this.props.params['keywords'] || '' });\n    }\n  }\n\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n    const { display_signatures } = this.context?.featureFlags || {};\n    const display_tags = ignoredParams.includes('tags') === false;\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      display_tags && {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as const,\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n      display_signatures && {\n        id: 'sign_state',\n        title: t`Sign state`,\n        inputType: 'select' as const,\n        options: [\n          { id: 'signed', title: t`Signed` },\n          { id: 'unsigned', title: t`Unsigned` },\n        ],\n      },\n    ].filter(Boolean);\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup style={{ marginLeft: 0 }}>\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={this.state.inputText}\n                onChange={(text) => this.setState({ inputText: text })}\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  niceNames={{\n                    sign_state: t`sign state`,\n                    tags: t`tags`,\n                    keywords: t`keywords`,\n                  }}\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './list.scss';\n\nimport { DataList } from '@patternfly/react-core';\nimport { CollectionListType } from 'src/api';\n\nimport {\n  CollectionListItem,\n  Pagination,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  repo?: string;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.props.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n        <Pagination\n          params={params}\n          updateParams={(p) => updateParams(p)}\n          count={itemCount}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  CollectionNumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps> {\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n      sign_state,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n            data-cy='CollectionList-name'\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='hub-entry'>{latest_version.metadata.description}</div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          {Object.keys(contentSummary.contents).map((type) => (\n            <div key={type}>\n              <CollectionNumericLabel\n                count={contentSummary.contents[type]}\n                type={type}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='hub-entry'>{controls}</div> : null}\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>v{latest_version.version}</div>\n        <SignatureBadge className='hub-entry' signState={sign_state} />\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='CollectionListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\n\nimport { EmptyStateNoData, HelperText } from 'src/components';\n\nimport { CollectionDetailType, CollectionVersion } from 'src/api';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  dependencies_repos: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport class CollectionDependenciesList extends React.Component<IProps> {\n  render() {\n    const { collection, dependencies_repos } = this.props;\n    const { dependencies } = collection.latest_version.metadata;\n\n    if (!Object.keys(dependencies).length) {\n      return (\n        <EmptyStateNoData\n          title={t`No dependencies`}\n          description={t`Collection does not have dependencies.`}\n        />\n      );\n    }\n\n    return (\n      <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n        {dependencies_repos.map((dependency, i) =>\n          this.listDep(dependency, i, dependencies),\n        )}\n      </List>\n    );\n  }\n\n  private listDep(dependency, i, dependencies) {\n    const fqn = dependency.namespace + '.' + dependency.name;\n    const version_range = dependencies[fqn];\n\n    if (dependency.path) {\n      return (\n        <ListItem key={i} style={{ marginRight: '70px' }}>\n          <Link to={dependency.path}>{fqn}</Link>: {version_range}\n        </ListItem>\n      );\n    } else {\n      return (\n        <ListItem key={i} style={{ marginRight: '70px' }}>\n          {fqn}: {version_range}\n          <HelperText\n            content={t`No version of ${fqn} exists that matches ${version_range}.`}\n          />\n        </ListItem>\n      );\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CollectionUsedByDependencies } from 'src/api';\n\nimport {\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup,\n  SearchInput,\n} from '@patternfly/react-core';\n\nimport {\n  Pagination,\n  EmptyStateNoData,\n  EmptyStateFilter,\n  Sort,\n  LoadingPageSpinner,\n} from 'src/components';\n\nimport { ParamHelper, filterIsSet } from 'src/utilities';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionUsedbyDependenciesList extends React.Component<IProps> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  render() {\n    const {\n      params,\n      usedByDependencies,\n      itemCount,\n      updateParams,\n      usedByDependenciesLoading,\n    } = this.props;\n\n    if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n      return (\n        <EmptyStateNoData\n          title={t`Not required for use by other collections`}\n          description={t`Collection is not being used by any collection.`}\n        />\n      );\n    }\n\n    return (\n      <>\n        <div className='hub-toolbar'>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.name__icontains || ''}\n                  onChange={(val) =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', val),\n                    )\n                  }\n                  onClear={() =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', ''),\n                    )\n                  }\n                  aria-label='filter-collection-name'\n                  placeholder={t`Filter by name`}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Sort\n                  options={[\n                    { title: t`Collection`, id: 'collection', type: 'alpha' },\n                  ]}\n                  params={params}\n                  updateParams={({ sort }) =>\n                    updateParams(ParamHelper.setParam(params, 'sort', sort))\n                  }\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n          {!!itemCount && (\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n              isTop\n            />\n          )}\n        </div>\n\n        {usedByDependenciesLoading ? (\n          <LoadingPageSpinner />\n        ) : (\n          <>\n            {!itemCount ? (\n              <EmptyStateFilter />\n            ) : (\n              <>\n                <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                  <tbody>\n                    {usedByDependencies.map(\n                      ({ name, namespace, version, repository_list }, i) => (\n                        <tr key={i}>\n                          <td>\n                            <Link\n                              to={formatPath(\n                                Paths.collectionByRepo,\n                                {\n                                  collection: name,\n                                  namespace,\n                                  repo: repository_list[0],\n                                },\n                                ParamHelper.getReduced(\n                                  { version },\n                                  this.ignoredParams,\n                                ),\n                              )}\n                            >\n                              {namespace + '.' + name} v{version}\n                            </Link>\n                          </td>\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n                <Pagination\n                  params={params}\n                  updateParams={(params) => updateParams(params)}\n                  count={itemCount}\n                />\n              </>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, strgin | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length != 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    const {\n      cancelAction,\n      children,\n      deleteAction,\n      isDisabled,\n      title,\n      spinner,\n      variant,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <div data-cy='delete-button' key='delete'>\n            <Button\n              key='delete'\n              onClick={deleteAction}\n              variant='danger'\n              isDisabled={isDisabled}\n            >\n              {t`Delete`}\n              {spinner && <Spinner size='sm'></Spinner>}\n            </Button>\n          </div>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant={variant}\n        data-cy='modal_checkbox'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { ExecutionEnvironmentAPI } from 'src/api';\nimport { waitForTask } from 'src/utilities';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\n\nimport { Checkbox, Text } from '@patternfly/react-core';\n\ninterface IState {\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\ninterface IProps {\n  closeAction: () => void;\n  selectedItem: string;\n  addAlert: (message, variant, description?) => void;\n  afterDelete: () => void;\n}\n\nexport class DeleteExecutionEnvironmentModal extends React.Component<\n  IProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  render() {\n    const { selectedItem, closeAction } = this.props;\n    const { isDeletionPending, confirmDelete } = this.state;\n\n    return (\n      <DeleteModal\n        spinner={isDeletionPending}\n        title={t`Delete container?`}\n        cancelAction={() => closeAction()}\n        deleteAction={() => this.deleteContainer(selectedItem)}\n        isDisabled={!confirmDelete || isDeletionPending}\n      >\n        <Text className='delete-container-modal-message'>\n          <Trans>\n            Deleting <b>{selectedItem}</b> and its data will be lost.\n          </Trans>\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={(value) => this.setState({ confirmDelete: value })}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    );\n  }\n\n  deleteContainer(selectedItem: string) {\n    const { addAlert, closeAction, afterDelete } = this.props;\n    this.setState({ isDeletionPending: true }, () =>\n      ExecutionEnvironmentAPI.deleteExecutionEnvironment(selectedItem)\n        .then((result) => {\n          const taskId = result.data.task.split('tasks/')[1].replace('/', '');\n          waitForTask(taskId).then(() => {\n            this.setState({\n              confirmDelete: false,\n              isDeletionPending: false,\n            });\n            closeAction();\n            addAlert(\n              <Trans>\n                Execution environment &quot;{selectedItem}&quot; has been\n                successfully deleted.\n              </Trans>,\n              'success',\n            );\n            afterDelete();\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            confirmDelete: false,\n            isDeletionPending: false,\n          });\n          addAlert(\n            t`Execution environment \"${selectedItem}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n          closeAction();\n        }),\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { List, ListItem, Spinner, Alert } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserType, UserAPI } from 'src/api';\nimport { mapErrorMessages } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nexport class DeprecatedTag extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {t`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    return (\n      <EmptyState\n        variant={EmptyStateVariant[this.props.variant]}\n        data-cy='EmptyState'\n      >\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, CubesIcon } from '@patternfly/react-icons';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { LoginLink } from 'src/components';\n\nexport class EmptyStateUnauthorized extends React.Component {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={\n          <>\n            {t`Contact your organization administrator for more information.`}\n            <br />\n            <br />\n            <LoginLink button />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs, SignatureBadge } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'owners', name: t`Owners` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'owners'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'owners'\n                ? {\n                    name: t`Owners`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailOwners, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'owners' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { RoleAPI } from 'src/api';\nimport { PermissionCategories, LoadingPageSpinner } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n  APISearchTypeAhead,\n} from 'src/components';\nimport {\n  PulpStatus,\n  NamespaceType,\n  ImportListType,\n  MyNamespaceAPI,\n} from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet, errorMessage } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from 'src/api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { DateComponent, EmptyStateNoData, SortTable, ClipboardCopy } from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { CollectionCount } from 'src/components';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport class LoginLink extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { button, next } = this.props;\n    const { featureFlags } = this.context;\n    const className = button ? 'pf-c-button pf-m-primary' : '';\n\n    // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n    if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n      return (\n        <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>\n      );\n    } else {\n      return (\n        <Link\n          className={className}\n          to={formatPath(Paths.login, {}, { next })}\n        >{t`Login`}</Link>\n      );\n    }\n  }\n}\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport class Main extends React.Component<IProps> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='hub-c-card-ns-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              alt={t`${company} logo`}\n              fallbackToDefault\n              image={avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{t`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\n\nimport {\n  Alert,\n  Form,\n  FormGroup,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  ExternalLinkAltIcon,\n  PlusCircleIcon,\n  TrashIcon,\n} from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\n\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup fieldId='none' label={t`Namespace owners`}>\n          <Alert\n            isInline\n            variant='info'\n            title={\n              <Trans>\n                Moved to the{' '}\n                <Link\n                  target='_blank'\n                  to={formatPath(\n                    Paths.namespaceByRepo,\n                    {\n                      repo: this.context.selectedRepo,\n                      namespace: namespace.name,\n                    },\n                    { tab: 'owners' },\n                  )}\n                >\n                  Namespace owners\n                </Link>{' '}\n                <ExternalLinkAltIcon /> tab\n              </Trans>\n            }\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\nimport { plural } from '@lingui/macro';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nexport class NumericLabel extends React.Component<IProps> {\n  render() {\n    const { number, newline, label } = this.props;\n\n    let numberElem = (\n      <span key='number'>{NumericLabel.roundNumber(number)} </span>\n    );\n    let labelElem = (\n      <span key='label' className='hub-numeric-label-label'>\n        {label}\n      </span>\n    );\n\n    if (newline) {\n      numberElem = <div>{numberElem}</div>;\n      labelElem = <div>{labelElem}</div>;\n    }\n\n    return (\n      <div>\n        {numberElem}\n        {labelElem}\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nexport class CollectionNumericLabel extends React.Component<ICNLProps> {\n  render() {\n    const { count, newline, type } = this.props;\n\n    const label =\n      {\n        module: plural(count, {\n          one: 'Module',\n          other: 'Modules',\n        }),\n        role: plural(count, {\n          one: 'Role',\n          other: 'Roles',\n        }),\n        plugin: plural(count, {\n          one: 'Plugin',\n          other: 'Plugins',\n        }),\n        dependency: plural(count, {\n          one: 'Dependency',\n          other: 'Dependencies',\n        }),\n      }[type] || type;\n\n    return <NumericLabel number={count} newline={newline} label={label} />;\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { sortBy } from 'lodash';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class OwnersTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`OwnersTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'owners',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n  ToggleTemplate,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n        titles={{\n          ofWord: t`of`,\n          perPageSuffix: t`per page`,\n          items: null,\n        }}\n        toggleTemplate={(props) => <ToggleTemplate ofWord={t`of`} {...props} />}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport {\n  BaseHeader,\n  Logo,\n  Tabs,\n  TabsType,\n  Breadcrumbs,\n  BreadcrumbType,\n} from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Flex, FlexItem } from '@patternfly/react-core';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n  inputText: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n  inputText: '',\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Controllers list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Tags could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, digest, tag } = this.state;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    const docsLink =\n      'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank' rel='noreferrer'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that\n              Controller&apos;s console. Log in (if necessary) and follow the\n              steps to complete the configuration.\n            </Trans>\n            <br />\n            {!unsafeLinksSupported && (\n              <Trans>\n                <b>Note:</b> The following links may be blocked by your browser.\n                Copy and paste the external link manually.\n              </Trans>\n            )}\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  inputText={this.state.inputText}\n                  onChange={(text) => this.setState({ inputText: text })}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import * as React from 'react';\nimport './render-plugin-doc.scss';\n\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderModuleLink: (moduleName: string) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  // checks if I(), B(), M(), U(), L(), or C() exists. Returns type (ex: B)\n  // and value in parenthesis. Based off of formatters in ansible:\n  // https://github.com/ansible/ansible/blob/devel/hacking/build_library/build_ansible/jinja2/filters.py#L26\n  CUSTOM_FORMATTERS = /([IBMULC])\\(([^)]+)\\)/gm;\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  // This functions similar to how string.replace() works, except it returns\n  // a react object instead of a string\n  private reactReplace(\n    text: string,\n    reg: RegExp,\n    replacement: (matches: string[]) => React.ReactNode,\n  ): React.ReactNode {\n    const fragments = [];\n\n    let match: string[];\n    let prevIndex = 0;\n    while ((match = reg.exec(text)) !== null) {\n      fragments.push(\n        text.substr(prevIndex, reg.lastIndex - prevIndex - match[0].length),\n      );\n      fragments.push(replacement(match));\n      prevIndex = reg.lastIndex;\n    }\n\n    if (fragments.length === 0) {\n      return <span>{text}</span>;\n    }\n\n    // append any text after the last match\n    if (prevIndex != text.length - 1) {\n      fragments.push(text.substring(prevIndex));\n    }\n\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    const { renderModuleLink, renderDocLink } = this.props;\n\n    const nstring = this.reactReplace(text, this.CUSTOM_FORMATTERS, (match) => {\n      const fullMatch = match[0];\n      const type = match[1];\n      const textMatch = match[2];\n\n      switch (type) {\n        case 'L': {\n          const url = textMatch.split(',');\n          return renderDocLink(url[0], url[1]);\n        }\n        case 'U':\n          return (\n            <a href={textMatch} target='_blank' rel='noreferrer'>\n              {textMatch}\n            </a>\n          );\n        case 'I':\n          return <i>{textMatch}</i>;\n        case 'C':\n          return <span className='inline-code'>{textMatch}</span>;\n        case 'M':\n          return renderModuleLink(textMatch);\n\n        case 'B':\n          return <b>{textMatch}</b>;\n\n        default:\n          return fullMatch;\n      }\n    });\n\n    return nstring;\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, pluginName: string) {\n    const isDeprecated = doc.deprecated || pluginName.startsWith('_');\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText, FileUpload } from 'src/components';\n\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  DownloadIcon,\n  ExclamationTriangleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet, isWriteOnly, ErrorMessagesType } from 'src/utilities';\n\nimport { validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const { remote } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n        'signed_only',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='link'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const { filenames } = this.state;\n    const { signatures_enabled } = this.context?.featureFlags || {};\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && signatures_enabled ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      filenames.requirements_file.name,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.client_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.ca_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { AppContext } from 'src/loaders/app-context';\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, SortTable, ListItemActions } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { lastSynced, lastSyncStatus } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { hasPermission } = this.context;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length &&\n        hasPermission('ansible.change_collectionremote') && (\n          <DropdownItem\n            key='edit'\n            onClick={() => this.props.editRemote(remote)}\n          >\n            {t`Edit`}\n          </DropdownItem>\n        ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { hasPermission } = this.context;\n    if (!hasPermission('ansible.change_collectionremote')) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\n\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\nexport const RepoSelector = ({\n  selectedRepo,\n  path,\n  pathParams,\n  isDisabled,\n}: IProps) => {\n  const [selectExpanded, setSelectExpanded] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const getRepoName = (repoName) => {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return repo ? i18n._(repo) : repoName;\n  };\n\n  const repoNames = Constants.REPOSITORYNAMES;\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <InputGroupText\n            style={{ paddingLeft: 0 }}\n            variant='plain'\n            className='hub-input-group-text-no-wrap'\n          >\n            {t`Filter by repository`}\n          </InputGroupText>\n          <Select\n            className='nav-select'\n            isDisabled={isDisabled}\n            isOpen={selectExpanded}\n            isPlain={false}\n            onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const originalRepo = selectedRepo;\n              const newRepo = getRepoName(event.target.name);\n\n              setSelectExpanded(false);\n\n              if (newRepo !== originalRepo) {\n                const newPath = formatPath(path, {\n                  ...pathParams,\n                  repo: event.target.name,\n                });\n                navigate(newPath);\n              }\n            }}\n            onToggle={(isExpanded) => setSelectExpanded(isExpanded)}\n            selections={getRepoName(selectedRepo)}\n            variant='single'\n          >\n            {Object.keys(repoNames).map((option) => (\n              <SelectOption\n                name={option}\n                key={option}\n                value={i18n._(repoNames[option])}\n              />\n            ))}\n          </Select>\n        </InputGroup>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  AlertType,\n  APISearchTypeAhead,\n  HelperText,\n  AlertList,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport { Paths, formatEEPath } from 'src/paths';\nimport {\n  errorMessage,\n  ErrorMessagesType,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n  alertErrorsWithoutFields,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n\n          <FormGroup fieldId='none' label={t`Groups with access`}>\n            <Alert\n              isInline\n              variant='info'\n              title={\n                isNew ? (\n                  <Trans>\n                    Moved to the <b>Owners</b> tab\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Moved to the{' '}\n                    <Link\n                      target='_blank'\n                      to={formatEEPath(Paths.executionEnvironmentDetailOwners, {\n                        container: name,\n                      })}\n                    >\n                      Owners\n                    </Link>{' '}\n                    <ExternalLinkAltIcon /> tab\n                  </Trans>\n                )\n              }\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder='Role name'\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder='Add a role description here'\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>Permissions</Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { BaseHeader, Breadcrumbs, BreadcrumbType } from 'src/components';\n\ninterface IProps {\n  title: string;\n  subTitle?: string;\n  breadcrumbs: BreadcrumbType[];\n}\n\nexport class RoleHeader extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title, subTitle, breadcrumbs } = this.props;\n    return (\n      <BaseHeader\n        breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n        title={title}\n      >\n        {' '}\n        <div style={{ paddingBottom: '10px' }}>\n          <Trans>{subTitle}</Trans>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { AlertType } from 'src/components';\n\nimport {\n  Button,\n  Modal,\n  Spinner,\n  Label,\n  LabelGroup,\n  Form,\n  FormGroup,\n  TextInput,\n  InputGroup,\n  Alert,\n  AlertActionLink,\n} from '@patternfly/react-core';\n\nimport { TagIcon } from '@patternfly/react-icons';\n\nimport {\n  ContainerManifestType,\n  ExecutionEnvironmentAPI,\n  ContainerTagAPI,\n  ContainerRepositoryType,\n  TaskAPI,\n  PulpStatus,\n} from 'src/api';\n\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup id='remove-tag' defaultIsOpen={true}>\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    const { digest, grey, long } = this.props;\n\n    return (\n      <Tooltip content={digest}>\n        <Label color={grey ? 'grey' : 'blue'}>\n          {long ? digest : truncateSha(digest)}\n        </Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n      page: 1,\n    });\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    const activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap: Record<string, LabelProps['variant']> = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: t`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: t`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: t`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: t`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type]}\n        color={labelProps.color}\n        icon={labelProps.icon}\n        className={this.props.className}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: t`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab.name}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps> {\n  render() {\n    return (\n      <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nexport const HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import * as React from 'react';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n  Alert,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { AlertType, APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport {\n  BaseHeader,\n  Main,\n  Breadcrumbs,\n  BreadcrumbType,\n  UserForm,\n} from 'src/components';\nimport { UserType } from 'src/api';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\n\nimport React, { useState } from 'react';\n\nimport { SortTable } from 'src/components';\n\nimport {\n  TableComposable,\n  Tr,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n} from '@patternfly/react-table';\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label={t`hidden value`}\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {t`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport class ClipboardCopy extends React.Component<IProps> {\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <PFClipboardCopy\n        hoverTip={t`Copy to clipboard`}\n        clickTip={t`Successfully copied to clipboard!`}\n        {...props}\n      >\n        {children}\n      </PFClipboardCopy>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  FileUpload as PFFileUpload,\n  FileUploadProps,\n} from '@patternfly/react-core';\n\nexport class FileUpload extends React.Component<FileUploadProps> {\n  render() {\n    return (\n      <PFFileUpload\n        browseButtonText={t`Browse...`}\n        clearButtonText={t`Clear`}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        {...this.props}\n      />\n    );\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n\n    return (\n      <td\n        style={{\n          paddingRight: '0px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {buttons?.length ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {kebabItems?.length ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { Text, Checkbox } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components';\nimport { CollectionDetailType, CollectionListType } from 'src/api';\n\ninterface IProps {\n  deleteCollection: CollectionDetailType | CollectionListType;\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport class DeleteCollectionModal extends React.Component<IProps> {\n  render() {\n    const {\n      deleteCollection,\n      isDeletionPending,\n      confirmDelete,\n      collectionVersion,\n      cancelAction,\n      deleteAction,\n      setConfirmDelete,\n    } = this.props;\n\n    return (\n      deleteCollection && (\n        <DeleteModal\n          spinner={isDeletionPending}\n          cancelAction={() => cancelAction()}\n          deleteAction={() => deleteAction()}\n          isDisabled={!confirmDelete || isDeletionPending}\n          title={\n            collectionVersion\n              ? t`Delete collection version?`\n              : t`Delete collection?`\n          }\n        >\n          <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n            {collectionVersion ? (\n              <>\n                {(deleteCollection as CollectionDetailType).all_versions\n                  .length === 1 ? (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost and this will cause the entire\n                    collection to be deleted.\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost.\n                  </Trans>\n                )}\n              </>\n            ) : (\n              <Trans>\n                Deleting <b>{deleteCollection.name}</b> and its data will be\n                lost.\n              </Trans>\n            )}\n          </Text>\n          <Checkbox\n            isChecked={confirmDelete}\n            onChange={setConfirmDelete}\n            label={t`I understand that this action cannot be undone.`}\n            id='delete_confirm'\n          />\n        </DeleteModal>\n      )\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Flex, FlexItem, Label, Divider } from '@patternfly/react-core';\nimport { RoleType, GroupType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { RoleType, RoleAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  CheckboxRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { GroupType, GroupAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  RadioRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './legacy-role-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport { Tag, Logo, DateComponent } from 'src/components';\n\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`role.github_user logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          ></Logo>\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport './legacy-namespace-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport { Logo } from 'src/components';\n\nimport { LegacyNamespaceDetailType } from 'src/api/response-types/legacy-namespace';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        ></Logo>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t, defineMessage } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n    validated: defineMessage({ message: `Validated` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified', 'validated'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import React, { lazy, Suspense } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst RepositoryList = lazy(\n  () => import('src/containers/repositories/repository-list'),\n);\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenPage = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.repositories, component: RepositoryList },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenPage },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceByRepo, component: NamespaceDetail },\n  { path: Paths.searchByRepo, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.collection, component: CollectionDetail },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.search, component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { Alert } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { hasPermission } from 'src/utilities';\n\nconst DEFAULT_REPO = 'published';\n\nconst isRepoURL = (pathname) =>\n  matchPath({ path: formatPath(Paths.searchByRepo) + '*' }, pathname);\n\nconst App = (_props) => {\n  const location = useLocation();\n  const match = isRepoURL(location.pathname);\n\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [selectedRepo, setSelectedRepo] = useState<string>(DEFAULT_REPO);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    // This is sort of a dirty hack to make it so that collection details can view repositories other than \"published\", but all other views are locked to \"published\"\n    // We do this because there is not currently a way to toggle repositories in automation hub on console.redhat.com, so it's important to ensure the user always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in the url\n      if (match.params.repo !== selectedRepo) {\n        setSelectedRepo(match.params.repo);\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo if the repo is set to anything else.\n      if (selectedRepo !== DEFAULT_REPO) {\n        setSelectedRepo(DEFAULT_REPO);\n      }\n    }\n  });\n\n  // block the page from rendering if we're on a repo route and the repo in the url doesn't match the current state\n  // This gives componentDidUpdate a chance to recognize that route has changed and update the internal state to match the route before any pages can redirect the URL to a 404 state.\n  if (match && match.params.repo !== selectedRepo) {\n    return null;\n  }\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        selectedRepo,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <Alert\n        isInline\n        variant='info'\n        title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n      />\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  UserType,\n  SettingsType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags?._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// Accept-Language\nexport const userLanguage =\n  navigator.languages\n    .map((lang) => lang.replace(/[-_].*/, ''))\n    .filter((lang) => availableLanguages.includes(lang))[0] || 'en';\n\nasync function activate(locale: string) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (window.localStorage.test_l10n === 'true') {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(locale);\n}\n\nactivate(userLanguage);\n","import React from 'react';\nimport { I18nProvider } from '@lingui/react';\nimport { i18n } from '@lingui/core';\nimport App from './loaders/insights/loader';\nimport 'src/l10n';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\nexport default AnsibleHub;\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType, SettingsType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport function formatPath(\n  path: Paths,\n  data = {},\n  params?: Record<string, string | boolean>,\n) {\n  // insights router has basename=\"/\" or \"/beta/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/beta/', '/').replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailOwners]:\n      Paths.executionEnvironmentDetailOwnersWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailOwners = '/containers/:container/_content/owners',\n  executionEnvironmentDetailOwnersWithNamespace = '/containers/:namespace/:container/_content/owners',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: formatPath(Paths[NAMESPACE_TERM]),\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  const splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","// TODO - canSign can be renamed to canSignNS\nexport const canSign = ({ featureFlags }, namespace) => {\n  const { can_create_signatures } = featureFlags || {};\n  const permissions = namespace?.related_fields?.my_permissions || [];\n  return (\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = ({ featureFlags }, container) => {\n  const { can_create_signatures, signatures_enabled, container_signing } =\n    featureFlags || {};\n\n  return (\n    can_create_signatures &&\n    signatures_enabled &&\n    container_signing &&\n    container.namespace.my_permissions.includes(\n      'container.change_containernamespace',\n    )\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React from 'react';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { CollectionAPI } from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection) {\n    const { name, namespace } = collection;\n    return CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    selectedRepo,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(selectedRepo, collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { Constants } from 'src/constants';\nimport { i18n } from '@lingui/core';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","reject","err","undefined","ImportMessageCodes","PulpStatus","NamespaceAPI","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","for_object_type","newParams","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","RemoteAPI","distribution","_id","_obj","ApplicationInfoAPI","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","ControllerAPI","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","SigningServiceAPI","CertificateUploadAPI","repository","signed_collection","Repositories","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","APISearchTypeAhead","props","loadResults","onClear","evt","textInput","target","value","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","options","results","option","push","SelectOption","key","length","React","AlertList","alerts","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","Array","isArray","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","showRepoSelector","cx","Title","headingLevel","size","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","Link","to","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","getCertification","SignatureBadge","isCompact","signState","formatPath","Paths","Text","component","TextVariants","CardBody","Tooltip","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","CollectionNumericLabel","newline","CollectionContentList","toShow","summary","all","showing","keywords","c","keywordMatch","match","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","selectedRepo","renderCommunityWarningMessage","EmptyStateCustom","icon","ExclamationTriangleIcon","AppContext","CollectionCount","collectionCount","loading","getCollectionCount","Spinner","promises","collections","statusText","addAlert","errorMessage","DateComponent","date","moment","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","useContext","featureFlags","display_signatures","Label","color","text","UploadSingCertificateModal","useState","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","page_size","modalPagination","errorAlert","isOpenSignAllModal","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","setAlerts","redirect","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","activeTab","find","created","created_at","urlKeys","latestVersion","can_upload_signatures","isLatestVersion","signedString","collectionName","Navigate","canSign","canSignNS","hasPermission","dropdownItems","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","issueUrl","encodeURIComponent","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","isInline","toString","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","loadingVariant","renderSelectVersions","Flex","FlexItem","href","rel","StatefulDropdown","items","renderTabs","include_related","related_fields","my_permissions","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","concat","pulp_href","reload","warning","DownloadSignatureGridItem","show","setShow","signatures","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","downloadLinkRef","installCommand","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","inputText","prevProps","display_tags","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","listDep","EmptyStateNoData","fqn","version_range","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","selectedFilter","selectedID","currentTarget","replace","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","trim","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteModal","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","setRole","useEffect","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","messages","renderMessage","level","message","hideCollectionName","empty","collectionHead","approvalStatus","rlist","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","split","artifact","sha256","loaded","total","msg","cancel","tab","renderTab","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","cliConfig","getRepoUrl","pulp_last_updated","isCode","next","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","preventDefault","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","roundNumber","labelElem","n","Math","floor","plugin","OwnersTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","noData","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","renderGroupRow","urlPrefix","ListItemActions","kebabItems","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","pulpObjectType","selectRolesMessage","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addGroup","addRole","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","titles","ofWord","perPageSuffix","toggleTemplate","ToggleTemplate","String","PartnerHeader","filters","Tabs","setSelected","model_permissions","showUserManagement","userManagementFilter","permission","allPermissions","categories","entries","forEach","ui_category","values","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","default","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","typeAheadAriaLabel","RenderPluginDoc","renderError","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","suboptions","parseReturnRecursive","returnV","ret","contains","reg","replacement","fragments","prevIndex","exec","substr","lastIndex","substring","renderModuleLink","renderDocLink","reactReplace","CUSTOM_FORMATTERS","fullMatch","textMatch","pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","getRemoteType","requiredFields","disabledFields","allowEditName","showModal","isValid","saveRemote","renderForm","signatures_enabled","docsAnsibleLink","fileOnChange","helperTextIcon","helperTextInvalidIcon","Switch","isChecked","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","isNumericSet","rate_limit","Number","isInteger","host","fieldName","newFields","is_set","isNaN","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","editRemote","updated_at","lastSynced","lastSyncStatus","configButton","syncButton","syncRemote","distributions","selectExpanded","setSelectExpanded","navigate","useNavigate","getRepoName","repoName","i18n","repoNames","InputGroupText","newRepo","newPath","ResourcesForm","resources","updateResources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","ariaLabel","Dropdown","toggle","renderToggle","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","select","disable","RadioRow","hoverTip","clickTip","clearButtonText","textAlign","showClose","hasNoBodyWrapper","hasNoBodyPadding","navAriaLabel","mainAriaLabel","titleId","descriptionId","direction","perm","category","catTitle","charAt","splitByDot","Divider","setInputText","setRoles","rolesItemCount","setRolesItemCount","setLoading","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","INSIGHTS_DEPLOYMENT_MODE","published","community","completed","running","CertificationDashboard","lazy","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","NotFound","Partners","RepositoryList","Search","SignatureKeysList","TaskDetail","TaskListView","TokenPage","routes","InsightsRoutes","Suspense","fallback","Routes","Component","Route","DEFAULT_REPO","_props","pathname","useLocation","matchPath","setFeatureFlags","setSelectedRepo","setSettings","setUser","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","availableLanguages","locale","localStorage","test_l10n","plurals","activate","navigator","languages","lang","UI_BASE_PATH","formatEEPath","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailOwners","executionEnvironmentDetailOwnersWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","namespaceBreadcrumb","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","location","origin","getContainersURL","writeOnlyFields","el","newObj","sha","splitSha","has_model_permission","entity","waitMs","bailAfter","statusCode","outsideError","protocol","URL","can_create_signatures","getUsedbyDependencies","withRouter","ClassComponent","WithRouter","useParams","routeParams","routePath","displayName","paramString","numericTypes","URLSearchParams","appendParam","param","callback","search","getQueryString","getReduced","deleteParam","sortParams","defaultSort","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}