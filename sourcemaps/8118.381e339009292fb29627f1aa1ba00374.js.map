{"version":3,"file":"js/8118.5529a123a1cfb9e5dddd.js","mappings":"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","sources":["webpack:///./src/containers/ansible-repository/tab-access.tsx","webpack:///./src/containers/ansible-repository/tab-collection-versions.tsx","webpack:///./src/containers/ansible-repository/tab-details.tsx","webpack:///./src/containers/ansible-repository/tab-repository-versions.tsx","webpack:///./src/containers/ansible-repository/detail.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  GroupAPI,\n  GroupType,\n  RoleType,\n} from 'src/api';\nimport { AccessTab } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepositoryAccess } from 'src/permissions';\nimport { errorMessage, parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    featureFlags;\n    hasPermission;\n    state: { params };\n    user;\n  };\n}\n\nexport const RepositoryAccessTab = ({\n  item,\n  actionContext: {\n    addAlert,\n    featureFlags,\n    hasPermission,\n    state: { params },\n    user,\n  },\n}: TabProps) => {\n  const id = item?.pulp_href && parsePulpIDFromURL(item.pulp_href);\n  const [name, setName] = useState<string>(item?.name);\n  const [groups, setGroups] = useState<GroupType[]>(null); // loading\n  const [canEditOwners, setCanEditOwners] = useState<boolean>(false);\n  const [selectedGroup, setSelectedGroup] = useState<GroupType>(null);\n  const [showGroupRemoveModal, setShowGroupRemoveModal] =\n    useState<GroupType>(null);\n  const [showGroupSelectWizard, setShowGroupSelectWizard] = useState<{\n    group?: GroupType;\n    roles?: RoleType[];\n  }>(null);\n  const [showRoleRemoveModal, setShowRoleRemoveModal] = useState<string>(null);\n  const [showRoleSelectWizard, setShowRoleSelectWizard] = useState<{\n    roles?: RoleType[];\n  }>(null);\n\n  const query = () => {\n    setGroups(null);\n    AnsibleRepositoryAPI.myPermissions(id)\n      .then(({ data: { permissions } }) => {\n        setCanEditOwners(\n          canEditAnsibleRepositoryAccess({\n            hasPermission,\n            hasObjectPermission: (p: string): boolean =>\n              permissions.includes(p),\n            user,\n            featureFlags,\n          }),\n        );\n        AnsibleRepositoryAPI.listRoles(id)\n          .then(({ data: { roles } }) => {\n            const groupRoles = [];\n            for (const { groups, role } of roles) {\n              for (const name of groups) {\n                const groupIndex = groupRoles.findIndex((g) => g.name === name);\n                if (groupIndex == -1) {\n                  groupRoles.push({ name, object_roles: [role] });\n                } else {\n                  groupRoles[groupIndex].object_roles.push(role);\n                }\n              }\n            }\n\n            setName(name);\n            setGroups(groupRoles);\n          })\n          .catch(() => {\n            setGroups([]);\n          });\n      })\n      .catch(() => {\n        setGroups([]);\n        setCanEditOwners(false);\n      });\n  };\n\n  const updateGroupRoles = ({\n    roles,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) => {\n    Promise.all(roles)\n      .then(() => {\n        addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        query();\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        updateProps(stateUpdate);\n      });\n  };\n\n  const addGroup = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n      stateUpdate: { showGroupSelectWizard: null },\n    });\n  };\n\n  const removeGroup = (group) => {\n    const roles = group.object_roles.map((role) =>\n      AnsibleRepositoryAPI.removeRole(id, {\n        role,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles,\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showGroupRemoveModal: null },\n    });\n  };\n  const addRole = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n  const removeRole = (role, group) => {\n    const removedRole = AnsibleRepositoryAPI.removeRole(id, {\n      role,\n      groups: [group.name],\n    });\n    updateGroupRoles({\n      roles: [removedRole],\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const updateProps = (props) => {\n    Object.entries(props).forEach(([k, v]) => {\n      switch (k) {\n        case 'showGroupRemoveModal':\n          setShowGroupRemoveModal(v as GroupType);\n          break;\n        case 'showGroupSelectWizard':\n          setShowGroupSelectWizard(\n            v as { group?: GroupType; roles?: RoleType[] },\n          );\n          break;\n        case 'showRoleRemoveModal':\n          setShowRoleRemoveModal(v as string);\n          break;\n        case 'showRoleSelectWizard':\n          setShowRoleSelectWizard(v as { roles?: RoleType[] });\n          break;\n        default:\n          console.error('updateProps', k, v);\n      }\n    });\n  };\n\n  useEffect(query, [item.pulp_href]);\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n\n    if (!params?.group) {\n      setSelectedGroup(null);\n      return;\n    }\n\n    GroupAPI.list({ name: params.group }).then(({ data: { data } }) => {\n      setSelectedGroup(groups.find((g) => g.name === data[0].name));\n    });\n  }, [params?.group, groups]);\n\n  return (\n    <AccessTab\n      addGroup={addGroup}\n      addRole={addRole}\n      canEditOwners={canEditOwners}\n      group={selectedGroup}\n      groups={groups}\n      name={name}\n      pulpObjectType='repositories/ansible/ansible'\n      removeGroup={removeGroup}\n      removeRole={removeRole}\n      selectRolesMessage={t`The selected roles will be added to this specific Ansible repository.`}\n      showGroupRemoveModal={showGroupRemoveModal}\n      showGroupSelectWizard={showGroupSelectWizard}\n      showRoleRemoveModal={showRoleRemoveModal}\n      showRoleSelectWizard={showRoleSelectWizard}\n      updateProps={updateProps}\n      urlPrefix={formatPath(Paths.ansibleRepositoryDetail, {\n        name,\n      })}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ansibleRepositoryCollectionVersionAddAction,\n  ansibleRepositoryCollectionVersionRemoveAction,\n} from 'src/actions';\nimport {\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { DetailList, ListItemActions } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission;\n  };\n}\n\nexport const CollectionVersionsTab = ({\n  item,\n  actionContext: { addAlert, hasPermission },\n}: TabProps) => {\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    const repository = parsePulpIDFromURL(item.pulp_href);\n    return CollectionVersionAPI.list({\n      repository,\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({ repository: item });\n  useEffect(() => setModalState((ms) => ({ ...ms, repository: item })), [item]);\n\n  const renderTableRow = (\n    item: CollectionVersionSearch,\n    index: number,\n    actionContext,\n    listItemActions,\n  ) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem(item, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link\n            to={formatPath(\n              Paths.collectionByRepo,\n              {\n                repo: repository.name,\n                namespace,\n                collection: name,\n              },\n              {\n                version,\n              },\n            )}\n          >\n            {namespace}.{name} v{version}\n          </Link>\n        </td>\n        <td>{description}</td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  };\n\n  return (\n    <DetailList<CollectionVersionSearch>\n      actionContext={{\n        addAlert,\n        state: modalState,\n        setState: setModalState,\n        query,\n        hasPermission,\n        hasObjectPermission: (p: string): boolean =>\n          item?.my_permissions?.includes?.(p),\n      }}\n      defaultPageSize={10}\n      defaultSort={'name'}\n      errorTitle={t`Collection versions could not be displayed.`}\n      filterConfig={[\n        {\n          id: 'keywords',\n          title: t`Keywords`,\n        },\n        {\n          id: 'namespace',\n          title: t`Namespace`,\n        },\n      ]}\n      headerActions={[ansibleRepositoryCollectionVersionAddAction]}\n      listItemActions={[ansibleRepositoryCollectionVersionRemoveAction]}\n      noDataButton={ansibleRepositoryCollectionVersionAddAction.button}\n      noDataDescription={t`Collection versions will appear once the collection is modified.`}\n      noDataTitle={t`No collection versions yet`}\n      query={query}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Collection`,\n          type: 'none',\n          id: 'col1',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'col2',\n        },\n      ]}\n      title={t`Collection versions`}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  AnsibleRemoteAPI,\n  AnsibleRemoteType,\n  AnsibleRepositoryType,\n} from 'src/api';\nimport { Details, LazyDistributions, PulpLabels } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: { addAlert: (alert) => void; state: { params } };\n}\n\nexport const DetailsTab = ({ item }: TabProps) => {\n  const [remote, setRemote] = useState<AnsibleRemoteType>(null);\n\n  useEffect(() => {\n    const pk = item.remote && parsePulpIDFromURL(item.remote);\n    if (pk) {\n      AnsibleRemoteAPI.get(pk).then(({ data }) => setRemote(data));\n    } else {\n      setRemote(null);\n    }\n  }, [item.remote]);\n\n  return (\n    <Details\n      fields={[\n        { label: t`Repository name`, value: item?.name },\n        { label: t`Description`, value: item?.description || t`None` },\n        {\n          label: t`Retained version count`,\n          value: item?.retain_repo_versions ?? t`All`,\n        },\n        {\n          label: t`Distribution`,\n          value: <LazyDistributions repositoryHref={item.pulp_href} />,\n        },\n        {\n          label: t`Labels`,\n          value: <PulpLabels labels={item?.pulp_labels} />,\n        },\n        {\n          label: t`Private`,\n          value: item?.private ? t`Yes` : t`No`,\n        },\n        {\n          label: t`Remote`,\n          value: remote ? (\n            <Link\n              to={formatPath(Paths.ansibleRemoteDetail, { name: remote.name })}\n            >\n              {remote.name}\n            </Link>\n          ) : (\n            t`None`\n          ),\n        },\n      ]}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ansibleRepositoryVersionRevertAction } from 'src/actions';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  AnsibleRepositoryVersionType,\n  PulpAPI,\n} from 'src/api';\nimport {\n  DateComponent,\n  DetailList,\n  Details,\n  ListItemActions,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission: (string) => boolean;\n    hasObjectPermission: (string) => boolean;\n  };\n}\n\nconst AnyAPI = (href) =>\n  new (class extends PulpAPI {\n    useOrdering = true;\n    apiPath = href.replace(PULP_API_BASE_PATH, '');\n  })();\n\nconst VersionContent = ({\n  href,\n  addAlert,\n  hasPermission,\n  repositoryName,\n}: {\n  href: string;\n  addAlert: (alert) => void;\n  hasPermission: (string) => boolean;\n  repositoryName: string;\n}) => {\n  const [state, setState] = useState({});\n  if (!href) {\n    return null;\n  }\n\n  const API = AnyAPI(href);\n  const query = ({ params }) => API.list(params);\n  const renderTableRow = ({\n    manifest: {\n      collection_info: { namespace, name, version },\n    },\n    description,\n  }) => (\n    <tr>\n      <td>\n        <Link\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              repo: repositoryName,\n              namespace,\n              collection: name,\n            },\n            {\n              version,\n            },\n          )}\n        >\n          {namespace}.{name} v{version}\n        </Link>\n      </td>\n      <td>{description}</td>\n    </tr>\n  );\n\n  return (\n    <DetailList<{ manifest; description; pulp_href }>\n      actionContext={{\n        addAlert,\n        state,\n        setState,\n        query,\n        hasPermission,\n      }}\n      defaultPageSize={10}\n      defaultSort={'name'}\n      errorTitle={t`Collection versions could not be displayed.`}\n      noDataDescription={t`No collection versions in this repository version.`}\n      noDataTitle={t`No collection versions yet`}\n      query={query}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Collection`,\n          type: 'none',\n          id: 'col1',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'col2',\n        },\n      ]}\n      title={t`Collection versions`}\n    />\n  );\n};\n\nconst ContentSummary = ({ data }: { data: object }) => {\n  if (!Object.keys(data).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <table className='pf-c-table'>\n      <tr>\n        <th>{t`Count`}</th>\n        <th>{t`Pulp type`}</th>\n      </tr>\n      {Object.entries(data).map(([k, v]) => (\n        <tr key={k}>\n          <td>{v['count']}</td>\n          <th>{k}</th>\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nconst BaseVersion = ({\n  repositoryName,\n  data,\n}: {\n  repositoryName: string;\n  data?: string;\n}) => {\n  if (!data) {\n    return <>{t`None`}</>;\n  }\n\n  const number = data.split('/').at(-2);\n  return (\n    <Link\n      to={formatPath(\n        Paths.ansibleRepositoryDetail,\n        {\n          name: repositoryName,\n        },\n        {\n          repositoryVersion: number,\n          tab: 'repository-versions',\n        },\n      )}\n    >\n      {number}\n    </Link>\n  );\n};\n\nexport const RepositoryVersionsTab = ({\n  item,\n  actionContext: { addAlert, state, hasPermission, hasObjectPermission },\n}: TabProps) => {\n  const pulpId = parsePulpIDFromURL(item.pulp_href);\n  const latest_href = item.latest_version_href;\n  const repositoryName = item.name;\n  const queryList = ({ params }) =>\n    AnsibleRepositoryAPI.listVersions(pulpId, params);\n  const queryDetail = ({ number }) =>\n    AnsibleRepositoryAPI.listVersions(pulpId, { number });\n  const [modalState, setModalState] = useState({});\n  const [version, setVersion] = useState(null);\n\n  useEffect(() => {\n    if (state.params.repositoryVersion) {\n      queryDetail({ number: state.params.repositoryVersion }).then(\n        ({ data }) => {\n          if (!data?.results?.[0]) {\n            addAlert({\n              variant: 'danger',\n              title: t`Failed to find repository version`,\n            });\n          }\n          setVersion(data.results[0]);\n        },\n      );\n    } else {\n      setVersion(null);\n    }\n  }, [state.params.repositoryVersion]);\n\n  const renderTableRow = (\n    item: AnsibleRepositoryVersionType,\n    index: number,\n    actionContext,\n    listItemActions,\n  ) => {\n    const { number, pulp_created, pulp_href } = item;\n\n    const isLatest = latest_href === pulp_href;\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem({ ...item, isLatest, repositoryName }, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link\n            to={formatPath(\n              Paths.ansibleRepositoryDetail,\n              {\n                name: repositoryName,\n              },\n              {\n                repositoryVersion: number,\n                tab: 'repository-versions',\n              },\n            )}\n          >\n            {number}\n          </Link>\n          {isLatest ? ' ' + t`(latest)` : null}\n        </td>\n        <td>\n          <DateComponent date={pulp_created} />\n        </td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  };\n\n  return state.params.repositoryVersion ? (\n    version ? (\n      <>\n        <Details\n          fields={[\n            { label: t`Version number`, value: version.number },\n            {\n              label: t`Created date`,\n              value: <DateComponent date={version.pulp_created} />,\n            },\n            {\n              label: t`Content added`,\n              value: <ContentSummary data={version.content_summary?.added} />,\n            },\n            {\n              label: t`Content removed`,\n              value: <ContentSummary data={version.content_summary?.removed} />,\n            },\n            {\n              label: t`Current content`,\n              value: <ContentSummary data={version.content_summary?.present} />,\n            },\n            {\n              label: t`Base version`,\n              value: (\n                <BaseVersion\n                  repositoryName={repositoryName}\n                  data={version.base_version}\n                />\n              ),\n            },\n          ]}\n        />\n        <div\n          className='pf-c-page__main-section'\n          style={{ padding: '8px 0', margin: '24px -16px 0' }}\n        />\n        <VersionContent\n          {...version.content_summary.present['ansible.collection_version']}\n          repositoryName={repositoryName}\n        />\n      </>\n    ) : (\n      <Spinner size='md' />\n    )\n  ) : (\n    <DetailList<AnsibleRepositoryVersionType>\n      actionContext={{\n        addAlert,\n        state: modalState,\n        setState: setModalState,\n        query: queryList,\n        hasPermission,\n        hasObjectPermission, // needs item=repository, not repository version\n      }}\n      defaultPageSize={10}\n      defaultSort={'-pulp_created'}\n      errorTitle={t`Repository versions could not be displayed.`}\n      filterConfig={null}\n      listItemActions={[ansibleRepositoryVersionRevertAction]}\n      noDataButton={null}\n      noDataDescription={t`Repository versions will appear once the repository is modified.`}\n      noDataTitle={t`No repository versions yet`}\n      query={queryList}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Version number`,\n          type: 'numeric',\n          id: 'number',\n        },\n        {\n          title: t`Created date`,\n          type: 'numeric',\n          id: 'pulp_created',\n        },\n      ]}\n      title={t`Repository versions`}\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  ansibleRepositoryCopyAction,\n  ansibleRepositoryDeleteAction,\n  ansibleRepositoryEditAction,\n  ansibleRepositorySyncAction,\n} from 'src/actions';\nimport { AnsibleRepositoryAPI, AnsibleRepositoryType } from 'src/api';\nimport { PageWithTabs } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRepositories } from 'src/permissions';\nimport { parsePulpIDFromURL } from 'src/utilities';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\nimport { RepositoryAccessTab } from './tab-access';\nimport { CollectionVersionsTab } from './tab-collection-versions';\nimport { DetailsTab } from './tab-details';\nimport { RepositoryVersionsTab } from './tab-repository-versions';\n\nconst tabs = [\n  { id: 'details', name: t`Details` },\n  { id: 'access', name: t`Access` },\n  { id: 'collection-versions', name: t`Collection versions` },\n  { id: 'repository-versions', name: t`Versions` },\n];\n\nconst AnsibleRepositoryDetail = PageWithTabs<AnsibleRepositoryType>({\n  breadcrumbs: ({ name, tab, params: { repositoryVersion, group } }) =>\n    [\n      { url: formatPath(Paths.ansibleRepositories), name: t`Repositories` },\n      { url: formatPath(Paths.ansibleRepositoryDetail, { name }), name },\n      (tab.id === 'repository-versions' && repositoryVersion) ||\n      (tab.id === 'access' && group)\n        ? {\n            url: formatPath(\n              Paths.ansibleRepositoryDetail,\n              { name },\n              { tab: tab.id },\n            ),\n            name: tab.name,\n          }\n        : null,\n      tab.id === 'repository-versions' && repositoryVersion\n        ? { name: t`Version ${repositoryVersion}` }\n        : tab.id === 'access' && group\n        ? { name: t`Group ${group}` }\n        : { name: tab.name },\n    ].filter(Boolean),\n  condition: canViewAnsibleRepositories,\n  displayName: 'AnsibleRepositoryDetail',\n  errorTitle: t`Repository could not be displayed.`,\n  headerActions: [\n    ansibleRepositoryEditAction,\n    ansibleRepositorySyncAction,\n    ansibleRepositoryCopyAction,\n    ansibleRepositoryDeleteAction,\n  ],\n  headerDetails: (item) => (\n    <>\n      {item?.last_sync_task && (\n        <p className='hub-m-truncated'>\n          <Trans>Last updated from registry {lastSynced(item)}</Trans>{' '}\n          {lastSyncStatus(item)}\n        </p>\n      )}\n    </>\n  ),\n  query: ({ name }) => {\n    return AnsibleRepositoryAPI.list({ name })\n      .then(({ data: { results } }) => results[0])\n      .then((repository) => {\n        // using the list api, so an empty array is really a 404\n        if (!repository) {\n          return Promise.reject({ response: { status: 404 } });\n        }\n\n        return AnsibleRepositoryAPI.myPermissions(\n          parsePulpIDFromURL(repository.pulp_href),\n        )\n          .then(({ data: { permissions } }) => permissions)\n          .catch((e) => {\n            console.error(e);\n            return [];\n          })\n          .then((my_permissions) => ({ ...repository, my_permissions }));\n      });\n  },\n  renderTab: (tab, item, actionContext) =>\n    ({\n      details: <DetailsTab item={item} actionContext={actionContext} />,\n      access: <RepositoryAccessTab item={item} actionContext={actionContext} />,\n      'collection-versions': (\n        <CollectionVersionsTab item={item} actionContext={actionContext} />\n      ),\n      'repository-versions': (\n        <RepositoryVersionsTab item={item} actionContext={actionContext} />\n      ),\n    }[tab]),\n  tabs,\n  tabUpdateParams: (p) => {\n    delete p.repositoryVersion;\n    delete p.group;\n    return p;\n  },\n});\n\nexport default AnsibleRepositoryDetail;\n"],"names":["RepositoryAccessTab","_ref","item","_ref$actionContext","actionContext","addAlert","featureFlags","hasPermission","params","state","user","id","pulp_href","parsePulpIDFromURL","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","_useState4","groups","setGroups","_useState5","_useState6","canEditOwners","setCanEditOwners","_useState7","_useState8","selectedGroup","setSelectedGroup","_useState9","_useState10","showGroupRemoveModal","setShowGroupRemoveModal","_useState11","_useState12","showGroupSelectWizard","setShowGroupSelectWizard","_useState13","_useState14","showRoleRemoveModal","setShowRoleRemoveModal","_useState15","_useState16","showRoleSelectWizard","setShowRoleSelectWizard","query","AnsibleRepositoryAPI","then","_ref2","permissions","data","canEditAnsibleRepositoryAccess","hasObjectPermission","p","includes","_ref3","_step","roles","groupRoles","_iterator","_createForOfIteratorHelper","s","n","done","_step2","_step$value","value","role","_iterator2","_loop","groupIndex","findIndex","g","push","object_roles","err","e","f","updateGroupRoles","_ref4","alertSuccess","alertFailure","stateUpdate","Promise","all","title","variant","_ref5","_ref5$response","response","status","statusText","description","errorMessage","updateProps","props","Object","entries","forEach","_ref6","_ref7","k","v","console","error","useEffect","group","GroupAPI","_ref8","find","React","AccessTab","addGroup","rolePromises","map","i18n","addRole","pulpObjectType","removeGroup","removeRole","removedRole","selectRolesMessage","urlPrefix","formatPath","Paths","CollectionVersionsTab","newParams","_objectSpread","ordering","sort","repository","CollectionVersionAPI","_ref3$data","count","meta","results","modalState","setModalState","ms","DetailList","setState","_item$my_permissions","_item$my_permissions$","my_permissions","call","defaultPageSize","defaultSort","errorTitle","filterConfig","headerActions","ansibleRepositoryCollectionVersionAddAction","listItemActions","ansibleRepositoryCollectionVersionRemoveAction","noDataButton","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","version","kebabItems","action","dropdownItem","key","Link","to","repo","collection","ListItemActions","sortHeaders","type","DetailsTab","_item$retain_repo_ver","remote","setRemote","pk","AnsibleRemoteAPI","Details","fields","label","retain_repo_versions","LazyDistributions","repositoryHref","PulpLabels","labels","pulp_labels","VersionContent","href","repositoryName","API","_PulpAPI","_inherits","_class2","_super","_this","_classCallCheck","_len","arguments","length","args","Array","_key","apply","concat","_defineProperty","_assertThisInitialized","replace","PULP_API_BASE_PATH","_createClass","PulpAPI","AnyAPI","list","_ref3$manifest$collec","manifest","collection_info","ContentSummary","keys","className","BaseVersion","number","split","at","repositoryVersion","tab","RepositoryVersionsTab","_version$content_summ","_version$content_summ2","_version$content_summ3","_ref8$actionContext","pulpId","latest_href","latest_version_href","queryList","_ref9","setVersion","_ref10","_ref11","_data$results","DateComponent","date","pulp_created","content_summary","added","removed","present","base_version","style","padding","margin","_extends","Spinner","size","ansibleRepositoryVersionRevertAction","isLatest","tabs","PageWithTabs","breadcrumbs","_ref$params","url","filter","Boolean","condition","canViewAnsibleRepositories","displayName","ansibleRepositoryEditAction","ansibleRepositorySyncAction","ansibleRepositoryCopyAction","ansibleRepositoryDeleteAction","headerDetails","last_sync_task","Trans","values","lastSynced","lastSyncStatus","reject","renderTab","details","access","tabUpdateParams"],"sourceRoot":""}