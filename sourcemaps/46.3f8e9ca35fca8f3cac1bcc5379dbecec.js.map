{"version":3,"file":"js/46.1657650371534.7ab2925472cefda53ed1.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/store/index.js","webpack:///./src/loaders/insights/Routes.js","webpack:///./src/loaders/insights/insights-loader.js","webpack:///./src/l10n.ts","webpack:///./src/app-entry.js","webpack:///./src/utilities/getBaseName.js","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/about-modal/about-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/delete-modal/delete-execution-environment-modal.tsx","webpack:///./src/components/group-management/delete-group-modal.tsx","webpack:///./src/components/delete-modal/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/group-management/group-modal.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/permissions/obect-permission-field.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/permissions/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/user-form/user-form.tsx","webpack:///./src/components/user-form/user-form-page.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/constants.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: (params) => ParamHelper.getQueryString(params),\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: string,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n}\n\nexport const NamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\n\ntype GetUserReturn = Awaited<\n  Promise<ReturnType<typeof window.insights.chrome.auth.getUser>>\n>;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<GetUserReturn['identity']> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        window.insights.chrome.auth\n          .getUser()\n          // we don't care about entitlements stuff in the UI, so just\n          // return the user's identity\n          .then((result) => resolve(result.identity))\n          .catch((result) => reject(result));\n      });\n    } else if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        this.http\n          .get(this.apiPath)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((result) => reject(result));\n      });\n    }\n  }\n\n  getActiveUser() {\n    return this.http.get(this.apiPath);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getToken(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        reject(\n          'Use window.insights.chrome.auth to get tokens for insights deployments',\n        );\n      });\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    return new Promise((resolve, reject) => {\n      // Make a get request to the login endpoint to set CSRF tokens before making\n      // the authentication reqest\n      this.http\n        .get(loginURL)\n        .then(() => {\n          this.http\n            .post(loginURL, {\n              username: username,\n              password: password,\n            })\n            .then((response) => resolve(response))\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const GroupAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = this.getUIPath('execution-environments/repositories/');\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/namespaces/');\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n\n  list(params) {\n    const changedParams = { ...params };\n    if (changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams);\n  }\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n}\n\nexport const Repositories = new API();\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (!registry) {\n    registry = new ReducerRegistry({}, [promise, ...middleware]);\n  }\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paths } from 'src/paths';\nimport { LoadingPageWithHeader } from 'src/components';\n\nconst EditNamespace = lazy(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/edit-namespace/edit-namespace'\n  ),\n);\n\nconst CollectionDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-detail'\n  ),\n);\n\nconst CollectionContent = lazy(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-content'\n  ),\n);\n\nconst CollectionDocs = lazy(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-docs'\n  ),\n);\n\nconst CollectionImportLog = lazy(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-import-log'\n  ),\n);\n\nconst CollectionDependencies = lazy(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-dependencies'\n  ),\n);\n\nconst NotFound = lazy(() =>\n  import(\n    /* webpackChunkName: \"not_found\" */\n    '../../containers/not-found/not-found'\n  ),\n);\n\nconst MyNamespaces = lazy(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/my-namespaces'\n  ),\n);\n\nconst ManageNamespace = lazy(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst PartnerDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst Partners = lazy(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/' + NAMESPACE_TERM\n  ),\n);\n\nconst MyImports = lazy(() =>\n  import(\n    /* webpackChunkName: \"my_imports\" */\n    '../../containers/my-imports/my-imports'\n  ),\n);\n\nconst Search = lazy(() =>\n  import(\n    /* webpackChunkName: \"search\" */\n    '../../containers/search/search'\n  ),\n);\n\nconst TokenPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/token/token-insights'\n  ),\n);\n\nconst TaskListView = lazy(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/task-management/task-list-view'\n  ),\n);\n\nconst TaskDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/task-management/task_detail'\n  ),\n);\n\nconst CertificationDashboard = lazy(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/certification-dashboard/certification-dashboard'\n  ),\n);\n\nconst Repository = lazy(() =>\n  import(\n    /* webpackChunkName: \"repository-list\" */\n    '../../containers/repositories/repository-list'\n  ),\n);\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n  return (\n    <Suspense fallback={LoadingPageWithHeader}>\n      <Switch>\n        <Route path={Paths.repositories} component={Repository} />\n        <Route\n          path={Paths.approvalDashboard}\n          component={CertificationDashboard}\n        />\n        <Route path={Paths.notFound} component={NotFound} />\n        <Route path={Paths.token} component={TokenPage} />\n        <Route path={Paths[NAMESPACE_TERM]} component={Partners} />\n        <Route path={Paths.editNamespace} component={EditNamespace} />\n        <Route path={Paths.myCollections} component={ManageNamespace} />\n        <Route path={Paths.myCollectionsByRepo} component={ManageNamespace} />\n        <Route path={Paths.myNamespaces} component={MyNamespaces} />\n        <Route path={Paths.taskList} component={TaskListView} />\n        <Route path={Paths.taskDetail} component={TaskDetail} />\n        <Route\n          path={Paths.collectionDocsPageByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionDocsIndexByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentDocsByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentListByRepo}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLogByRepo}\n          component={CollectionImportLog}\n        />\n        <Route\n          path={Paths.collectionDependenciesByRepo}\n          component={CollectionDependencies}\n        />\n        <Route path={Paths.collectionByRepo} component={CollectionDetail} />\n        <Route path={Paths.namespaceByRepo} component={PartnerDetail} />\n        <Route path={Paths.searchByRepo} component={Search} />\n        <Route path={Paths.collectionDocsPage} component={CollectionDocs} />\n        <Route path={Paths.collectionDocsIndex} component={CollectionDocs} />\n        <Route path={Paths.collectionContentDocs} component={CollectionDocs} />\n        <Route\n          path={Paths.collectionContentList}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLog}\n          component={CollectionImportLog}\n        />\n        <Route path={Paths.myImports} component={MyImports} />\n        <Route path={Paths.collection} component={CollectionDetail} />\n        <Route path={Paths.namespace} component={PartnerDetail} />\n        <Route path={Paths.search} component={Search} />\n        <Route>\n          <Redirect push to={Paths.notFound} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Alert } from '@patternfly/react-core';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { ActiveUserAPI, SettingsAPI } from 'src/api';\nimport { Paths } from 'src/paths';\nimport { UIVersion } from 'src/components';\n\nconst DEFAULT_REPO = 'published';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      activeUser: null,\n      selectedRepo: DEFAULT_REPO,\n      alerts: [],\n      settings: {},\n    };\n  }\n\n  componentDidMount() {\n    window.insights.chrome.init();\n    window.insights.chrome.identifyApp('automation-hub');\n    document.title = APPLICATION_NAME; // change window title from automationHub\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = window.insights.chrome.on('APP_NAVIGATION', (event) => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, no trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename.replace(/^\\/beta\\//, '/');\n\n      if (event.domEvent.href) {\n        // prod-beta\n        // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n        // (navId: corresponds to the last url component, but not the same one, ansible-hub means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners)\n\n        // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n        this.props.history.push(\n          event.domEvent.href.replace(basename, '') || '/',\n        );\n      } else {\n        // FIXME: may no longer be needed by the time this gets to prod-stable\n        // prod-stable\n        // (domEvent is a react event, no href (there is an absolute url in domEvent.target.href))\n        // navId: corresponds to the first url component after prefix, \"\" means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners\n        this.props.history.push(`/${event.navId}`);\n      }\n    });\n\n    window.insights.chrome.auth\n      .getUser()\n      .then((user) => this.setState({ user: user }));\n    let promises = [];\n    promises.push(ActiveUserAPI.getActiveUser());\n    promises.push(SettingsAPI.get());\n    Promise.all(promises).then((results) => {\n      this.setState({\n        activeUser: results[0].data,\n        settings: results[1].data,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate() {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user || !this.state.activeUser) {\n      return null;\n    }\n\n    return (\n      <AppContext.Provider\n        value={{\n          user: this.state.activeUser,\n          setUser: this.setActiveUser,\n          selectedRepo: this.state.selectedRepo,\n          alerts: this.state.alerts,\n          setAlerts: this.setAlerts,\n          settings: this.state.settings,\n        }}\n      >\n        <Alert\n          isInline\n          variant='info'\n          title='The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.'\n        />\n        <Routes childProps={this.props} />\n        <UIVersion />\n      </AppContext.Provider>\n    );\n  }\n\n  setActiveUser = (user) => {\n    this.setState({ activeUser: user });\n  };\n\n  setAlerts = (alerts) => {\n    this.setState({ alerts });\n  };\n\n  isRepoURL = (location) => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n  basename: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }),\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// Accept-Language\nexport const userLanguage =\n  navigator.languages\n    .map((lang) => lang.replace(/[-_].*/, ''))\n    .filter((lang) => availableLanguages.includes(lang))[0] || 'en';\n\nasync function activate(locale: string) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (window.localStorage.test_l10n === 'true') {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(locale);\n}\n\nactivate(userLanguage);\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { I18nProvider } from '@lingui/react';\nimport { i18n } from '@lingui/core';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport getBaseName from './utilities/getBaseName';\nimport 'src/l10n';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst basename = getBaseName(window.location.pathname);\n\nconst AnsibleHub = () => (\n  <Provider store={init().getStore()}>\n    <Router basename={basename}>\n      <I18nProvider i18n={i18n}>\n        <App basename={basename} />\n      </I18nProvider>\n    </Router>\n  </Provider>\n);\n\nexport default AnsibleHub;\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport class AlertList extends React.Component<IProps> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n        data-cy='AlertList'\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams(ParamHelper.deleteParam(params, key, v))\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  AboutModal,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from '@patternfly/react-core';\nimport Logo from 'src/../static/images/logo_large.svg';\nimport { ApplicationInfoAPI, UserType } from 'src/api';\nimport { detect } from 'detect-browser';\n\ninterface IProps {\n  isOpen: boolean;\n  trademark: string;\n  brandImageSrc: string;\n  onClose: () => void;\n  brandImageAlt: string;\n  productName: string;\n  user: UserType;\n  userName: string;\n}\n\ninterface IState {\n  applicationInfo: {\n    galaxy_ng_commit: string;\n    pulp_ansible_version: string;\n    server_version: string;\n  };\n}\n\nexport class AboutModalWindow extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicationInfo: {\n        galaxy_ng_commit: '',\n        pulp_ansible_version: '',\n        server_version: '',\n      },\n    };\n  }\n\n  componentDidMount() {\n    ApplicationInfoAPI.get().then((result) => {\n      this.setState({\n        applicationInfo: {\n          galaxy_ng_commit: result.data.galaxy_ng_commit,\n          pulp_ansible_version: result.data.pulp_ansible_version,\n          server_version: result.data.server_version,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { isOpen, onClose, brandImageAlt, productName, user, userName } =\n      this.props;\n    const browser = detect();\n\n    const Label = ({ children }) => (\n      <TextListItem component={TextListItemVariants.dt}>\n        {children}\n      </TextListItem>\n    );\n    const Value = ({ children }) => (\n      <TextListItem component={TextListItemVariants.dd}>\n        {children}\n      </TextListItem>\n    );\n\n    return (\n      <AboutModal\n        isOpen={isOpen}\n        trademark=''\n        brandImageSrc={Logo}\n        onClose={onClose}\n        brandImageAlt={brandImageAlt}\n        productName={productName}\n      >\n        <TextContent>\n          <TextList component={TextListVariants.dl}>\n            <Label>{t`Server version`}</Label>\n            <Value>\n              {this.state.applicationInfo.server_version}\n              <br />\n              {this.state.applicationInfo.galaxy_ng_commit}\n            </Value>\n\n            <Label>{t`Pulp Ansible Version`}</Label>\n            <Value>{this.state.applicationInfo.pulp_ansible_version}</Value>\n\n            <Label>{t`UI Version`}</Label>\n            <Value>{UI_COMMIT_HASH}</Value>\n\n            <Label>{t`Username`}</Label>\n            <Value>{userName}</Value>\n\n            <Label>{t`User Groups`}</Label>\n            <Value>{user.groups.map((group) => group.name).join()}</Value>\n\n            <Label>{t`Browser Version`}</Label>\n            <Value>{browser.name + ' ' + browser.version}</Value>\n\n            <Label>{t`Browser OS`}</Label>\n            <Value>{browser.os}</Value>\n          </TextList>\n        </TextContent>\n      </AboutModal>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: {\n    name: string;\n    url?: string;\n  }[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <span data-cy='view_type_card'>\n          <ThLargeIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'card' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n            }\n          />\n        </span>\n        <span data-cy='view_type_list'>\n          <ListIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'list' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n            }\n          />\n        </span>\n      </div>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      className,\n      footer,\n      repo,\n      sign_state,\n      menu,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    return (\n      <Card className={cx('hub-c-card-collection-container ', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            flexGrow\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n          <SignatureBadge isCompact signState={sign_state} />\n          {menu}\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{t`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <CollectionNumericLabel count={count} newline type={type} />\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport { EmptyStateCustom } from 'src/components';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    const toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (const c of contents) {\n      summary[c.content_type] ||= 0;\n\n      const keywordMatch = c.name.match(keywords);\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n      // count only items matching keyword\n      if (keywordMatch) {\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n\n      // show only items matching keyword + type\n      if (keywordMatch && typeMatch) {\n        toShow.push(c);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label={t`find-content`}\n                  placeholder={t`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{t`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'hub-c-toolbar__item-selected-item': key === showing,\n                    'hub-c-toolbar__item-type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='hub-c-table-content pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{t`Name`}</th>\n              <th>{t`Type`}</th>\n              <th>{t`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {summary.all <= 0 &&\n          this.context.selectedRepo === 'community' &&\n          this.renderCommunityWarningMessage()}\n      </div>\n    );\n  }\n\n  private renderCommunityWarningMessage() {\n    return (\n      <EmptyStateCustom\n        title={t`Warning`}\n        description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n        icon={ExclamationTriangleIcon}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { Spinner } from '@patternfly/react-core';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\ninterface IState {\n  collectionCount: number;\n  alerts: AlertType[];\n  loading: boolean;\n}\n\nexport class CollectionCount extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collectionCount: null,\n      alerts: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getCollectionCount(this.props.distributionPath);\n  }\n\n  render() {\n    const { collectionCount, loading } = this.state;\n    return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n  }\n\n  private getCollectionCount(repo) {\n    const { distributionPath } = this.props;\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        this.setState({ collectionCount: count, loading: false });\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n        const { status, statusText } = err.response;\n        this.addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n        );\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button key='sign' variant={ButtonVariant.primary} onClick={onSubmit}>\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Badge,\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  numberOfAffected: number;\n  affectedUnsigned: number;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  numberOfAffected,\n  affectedUnsigned,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>{numberOfAffected}</strong>{' '}\n              version(s) under <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem>\n              <Badge isRead>{numberOfAffected - affectedUnsigned}</Badge>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n            <SplitItem>\n              <Badge isRead>{affectedUnsigned}</Badge>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport React, { FC } from 'react';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned' | 'partial';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n\n  if (!display_signatures) {\n    return null;\n  }\n\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n      case 'partial':\n        return t`Partially signed`;\n    }\n  };\n\n  return (\n    <Label\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { errorMessage } from 'src/utilities';\nimport './header.scss';\n\nimport { Redirect } from 'react-router-dom';\n\nimport * as moment from 'moment';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  List,\n  ListItem,\n  Modal,\n  Alert,\n  Text,\n  Button,\n  DropdownItem,\n  Tooltip,\n  Checkbox,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  LinkTabs,\n  Logo,\n  RepoSelector,\n  Pagination,\n  AlertList,\n  AlertType,\n  closeAlertMixin,\n  StatefulDropdown,\n  DeleteModal,\n  SignSingleCertificateModal,\n  SignAllCertificatesModal,\n  UploadSingCertificateModal,\n  ImportModal,\n} from 'src/components';\n\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  SignCollectionAPI,\n  CollectionListType,\n  MyNamespaceAPI,\n  CollectionVersion,\n  Repositories,\n  CertificateUploadAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  waitForTask,\n  canSign as canSignNS,\n  parsePulpIDFromURL,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { Constants } from 'src/constants';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.getUsedbyDependencies();\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context?.featureFlags || {};\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Redirect push to={redirect} />;\n    }\n\n    const canSign = canSignNS(this.context, namespace);\n\n    const dropdownItems = [\n      noDependencies\n        ? this.context.user.model_permissions.delete_collection && (\n            <DropdownItem\n              key='delete-collection-enabled'\n              onClick={() => this.openDeleteModalWithConfirm()}\n              data-cy='delete-collection-dropdown'\n            >\n              {t`Delete entire collection`}\n            </DropdownItem>\n          )\n        : this.context.user.model_permissions.delete_collection && (\n            <Tooltip\n              key='delete-collection-disabled'\n              position='left'\n              content={\n                <Trans>\n                  Cannot delete until collections <br />\n                  that depend on this collection <br />\n                  have been deleted.\n                </Trans>\n              }\n            >\n              <DropdownItem isDisabled>\n                {t`Delete entire collection`}\n              </DropdownItem>\n            </Tooltip>\n          ),\n      this.context.user.model_permissions.delete_collection && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              numberOfAffected={collection.total_versions}\n              affectedUnsigned={collection.unsigned_versions}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        {deleteCollection && (\n          <DeleteModal\n            spinner={isDeletionPending}\n            cancelAction={this.closeModal}\n            deleteAction={() =>\n              this.setState({ isDeletionPending: true }, () => {\n                collectionVersion\n                  ? this.deleteCollectionVersion(collectionVersion)\n                  : this.deleteCollection();\n              })\n            }\n            isDisabled={!confirmDelete || isDeletionPending}\n            title={\n              collectionVersion\n                ? t`Delete collection version?`\n                : t`Delete collection?`\n            }\n          >\n            <>\n              <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n                {collectionVersion ? (\n                  <>\n                    {deleteCollection.all_versions.length === 1 ? (\n                      <Trans>\n                        Deleting{' '}\n                        <b>\n                          {deleteCollection.name} v{collectionVersion}\n                        </b>{' '}\n                        and its data will be lost and this will cause the entire\n                        collection to be deleted.\n                      </Trans>\n                    ) : (\n                      <Trans>\n                        Deleting{' '}\n                        <b>\n                          {deleteCollection.name} v{collectionVersion}\n                        </b>{' '}\n                        and its data will be lost.\n                      </Trans>\n                    )}\n                  </>\n                ) : (\n                  <Trans>\n                    Deleting <b>{deleteCollection.name}</b> and its data will be\n                    lost.\n                  </Trans>\n                )}\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={Paths.searchByRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              <SignatureBadge\n                isCompact\n                signState={collection.latest_version.sign_state}\n              />\n            </div>\n          }\n          pageControls={\n            dropdownItems.length > 0 ? (\n              <div data-cy='kebab-toggle'>\n                <StatefulDropdown items={dropdownItems} />\n              </div>\n            ) : null\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`API Error: ${status}`,\n      description: t`Failed to sign all versions in the collection.`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`API Error: ${status}`,\n      description: t`Failed to sign the version.`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private deleteCollection = () => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollection(this.context.selectedRepo, deleteCollection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n\n        waitForTask(taskId).then(() => {\n          this.context.setAlerts([\n            ...this.context.alerts,\n            {\n              variant: 'success',\n              title: t`Collection \"${name}\" has been successfully deleted.`,\n            },\n          ]);\n          this.setState({\n            collectionVersion: null,\n            deleteCollection: null,\n            isDeletionPending: false,\n            redirect: formatPath(Paths.namespaceByRepo, {\n              repo: this.context.selectedRepo,\n              namespace: deleteCollection.namespace.name,\n            }),\n          });\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          deleteCollection: null,\n          isDeletionPending: false,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Collection \"${name}\" could not be deleted.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  };\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private getUsedbyDependencies() {\n    const { name, namespace } = this.props.collection;\n    CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => {\n        this.setState({ noDependencies: !data.data.length });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import React, { FC, useState } from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { t } from '@lingui/macro';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem: FC<Props> = ({ version }) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-info.scss';\nimport { errorMessage } from 'src/utilities';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  Button,\n  Alert,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag, ClipboardCopy, LoginLink } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: React.RefObject<HTMLAnchorElement>;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const { name, latest_version, namespace, params } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{t`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>{latest_version.metadata.license}</SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Installing collections with ansible-galaxy is\n                    only supported in ansible 2.9+\n                  </Trans>\n                </div>\n                {this.context.user.is_anonymous &&\n                !this.context.settings\n                  .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                  <Alert\n                    className={'hub-collection-download-alert'}\n                    isInline\n                    variant='warning'\n                    title={\n                      <React.Fragment>\n                        {t`You have to be logged in to be able to download the tarball.`}{' '}\n                        <LoginLink />\n                      </React.Fragment>\n                    }\n                  />\n                ) : (\n                  <div>\n                    <a\n                      ref={this.downloadLinkRef}\n                      style={{ display: 'none' }}\n                    ></a>\n                    <Button\n                      className='download-button'\n                      variant='link'\n                      data-cy='download-collection-tarball-button'\n                      icon={<DownloadIcon />}\n                      onClick={() =>\n                        this.download(\n                          this.context.selectedRepo,\n                          namespace,\n                          name,\n                          latest_version,\n                        )\n                      }\n                    >\n                      {t`Download tarball`}\n                    </Button>\n                  </div>\n                )}\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <DownloadSignatureGridItem version={latest_version} />\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {t`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled data-cy='ansible-requirement'>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='hub-readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='hub-fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {t`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    )\n      .then((downloadURL: string) => {\n        // By getting a reference to a hidden <a> tag, setting the href and\n        // programmatically clicking it, we can hold off on making the api\n        // calls to get the download URL until it's actually needed. Clicking\n        // the <a> tag also gets around all the problems using a popup with\n        // window.open() causes.\n        this.downloadLinkRef.current.href = downloadURL;\n        this.downloadLinkRef.current.click();\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.props.addAlert(\n          'danger',\n          t`Collection \"${name}\" could not be downloaded.`,\n          errorMessage(status, statusText),\n        );\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\ninterface IState {\n  inputText: string;\n}\n\nexport class CollectionFilter extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: props.params.keywords || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.keywords !== this.props.params['keywords']) {\n      this.setState({ inputText: this.props.params['keywords'] || '' });\n    }\n  }\n\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n    const { display_signatures } = this.context?.featureFlags || {};\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as const,\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n      display_signatures && {\n        id: 'sign_state',\n        title: t`Sign state`,\n        inputType: 'select' as const,\n        options: [\n          { id: 'signed', title: t`Signed` },\n          { id: 'unsigned', title: t`Unsigned` },\n          { id: 'partial', title: t`Partial` },\n        ],\n      },\n    ].filter(Boolean);\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup style={{ marginLeft: 0 }}>\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={this.state.inputText}\n                onChange={(text) => this.setState({ inputText: text })}\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  niceNames={{\n                    sign_state: t`sign state`,\n                    tags: t`tags`,\n                    keywords: t`keywords`,\n                  }}\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './list.scss';\n\nimport { Button, DropdownItem, DataList } from '@patternfly/react-core';\n\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  Pagination,\n  StatefulDropdown,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n\n  showNamespace?: boolean;\n  showControls?: boolean;\n  handleControlClick?: (id, event) => void;\n  repo?: string;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n        <Pagination\n          params={params}\n          updateParams={(p) => updateParams(p)}\n          count={itemCount}\n        />\n      </React.Fragment>\n    );\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.props.handleControlClick(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              onClick={() =>\n                this.props.handleControlClick(collection.id, 'deprecate')\n              }\n              key='deprecate'\n            >\n              {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ]}\n          ariaLabel='collection-kebab'\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  CollectionNumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps> {\n  render() {\n    const {\n      name,\n      // download_count,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n      sign_state,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n            data-cy='CollectionList-name'\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='hub-entry'>{latest_version.metadata.description}</div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          {Object.keys(contentSummary.contents).map((type) => (\n            <div key={type}>\n              <CollectionNumericLabel\n                count={contentSummary.contents[type]}\n                type={type}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='hub-entry'>{controls}</div> : null}\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>v{latest_version.version}</div>\n        <SignatureBadge className='hub-entry' signState={sign_state} />\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='CollectionListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\n\nimport { EmptyStateNoData } from 'src/components';\n\nimport { CollectionDetailType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  repo: string;\n}\n\nexport class CollectionDependenciesList extends React.Component<IProps> {\n  render() {\n    const { collection, repo } = this.props;\n\n    const { dependencies } = collection.latest_version.metadata;\n\n    if (!Object.keys(dependencies).length) {\n      return (\n        <EmptyStateNoData\n          title={t`No dependencies`}\n          description={t`Collection does not have dependencies.`}\n        />\n      );\n    }\n\n    return (\n      <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n        {Object.keys(dependencies).map((dependency, i) => (\n          <ListItem key={i} style={{ marginRight: '70px' }}>\n            <Link\n              to={formatPath(\n                Paths.collectionByRepo,\n                {\n                  collection: this.splitDependencyName(dependency).collection,\n                  namespace: this.splitDependencyName(dependency).namespace,\n                  repo,\n                },\n                this.separateVersion(dependencies[dependency]),\n              )}\n            >\n              {this.splitDependencyName(dependency).collection}\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n\n  private splitDependencyName(dependency) {\n    const [namespace, collection] = dependency.split('.');\n    return { namespace, collection };\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CollectionUsedByDependencies } from 'src/api';\n\nimport {\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup,\n  SearchInput,\n} from '@patternfly/react-core';\n\nimport {\n  Pagination,\n  EmptyStateNoData,\n  EmptyStateFilter,\n  Sort,\n  LoadingPageSpinner,\n} from 'src/components';\n\nimport { ParamHelper, filterIsSet } from 'src/utilities';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionUsedbyDependenciesList extends React.Component<IProps> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  render() {\n    const {\n      params,\n      usedByDependencies,\n      itemCount,\n      updateParams,\n      usedByDependenciesLoading,\n    } = this.props;\n\n    if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n      return (\n        <EmptyStateNoData\n          title={t`Not required for use by other collections`}\n          description={t`Collection is not being used by any collection.`}\n        />\n      );\n    }\n\n    return (\n      <>\n        <div className='hub-usedby-dependencies-header'>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.name__icontains || ''}\n                  onChange={(val) =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', val),\n                    )\n                  }\n                  onClear={() =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', ''),\n                    )\n                  }\n                  aria-label='filter-collection-name'\n                  placeholder={t`Filter by name`}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Sort\n                  options={[\n                    { title: t`Collection`, id: 'collection', type: 'alpha' },\n                  ]}\n                  params={params}\n                  updateParams={({ sort }) =>\n                    updateParams(ParamHelper.setParam(params, 'sort', sort))\n                  }\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n          {!!itemCount && (\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n              isTop\n            />\n          )}\n        </div>\n\n        {usedByDependenciesLoading ? (\n          <LoadingPageSpinner />\n        ) : (\n          <>\n            {!itemCount ? (\n              <EmptyStateFilter />\n            ) : (\n              <>\n                <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                  <tbody>\n                    {usedByDependencies.map(\n                      ({ name, namespace, version, repository_list }, i) => (\n                        <tr key={i}>\n                          <td>\n                            <Link\n                              to={formatPath(\n                                Paths.collectionByRepo,\n                                {\n                                  collection: name,\n                                  namespace,\n                                  repo: repository_list[0],\n                                },\n                                ParamHelper.getReduced(\n                                  { version },\n                                  this.ignoredParams,\n                                ),\n                              )}\n                            >\n                              {name} v{version}\n                            </Link>\n                          </td>\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n                <Pagination\n                  params={params}\n                  updateParams={(params) => updateParams(params)}\n                  count={itemCount}\n                />\n              </>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, strgin | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length != 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n    );\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n    );\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, children, deleteAction, isDisabled, title, spinner } =\n      this.props;\n\n    return (\n      <Modal\n        actions={[\n          <div data-cy='delete-button' key='delete'>\n            <Button\n              key='delete'\n              onClick={deleteAction}\n              variant='danger'\n              isDisabled={isDisabled}\n            >\n              {t`Delete`}\n              {spinner && <Spinner size='sm'></Spinner>}\n            </Button>\n          </div>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n        data-cy='modal_checkbox'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { ExecutionEnvironmentAPI } from 'src/api';\nimport { waitForTask } from 'src/utilities';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\n\nimport { Checkbox, Text } from '@patternfly/react-core';\n\ninterface IState {\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\ninterface IProps {\n  closeAction: () => void;\n  selectedItem: string;\n  addAlert: (message, variant, description?) => void;\n  afterDelete: () => void;\n}\n\nexport class DeleteExecutionEnvironmentModal extends React.Component<\n  IProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  render() {\n    const { selectedItem, closeAction } = this.props;\n    const { isDeletionPending, confirmDelete } = this.state;\n\n    return (\n      <DeleteModal\n        spinner={isDeletionPending}\n        title={t`Delete container?`}\n        cancelAction={() => closeAction()}\n        deleteAction={() => this.deleteContainer(selectedItem)}\n        isDisabled={!confirmDelete || isDeletionPending}\n      >\n        <Text className='delete-container-modal-message'>\n          <Trans>\n            Deleting <b>{selectedItem}</b> and its data will be lost.\n          </Trans>\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={(value) => this.setState({ confirmDelete: value })}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    );\n  }\n\n  deleteContainer(selectedItem: string) {\n    const { addAlert, closeAction, afterDelete } = this.props;\n    this.setState({ isDeletionPending: true }, () =>\n      ExecutionEnvironmentAPI.deleteExecutionEnvironment(selectedItem)\n        .then((result) => {\n          const taskId = result.data.task.split('tasks/')[1].replace('/', '');\n          waitForTask(taskId).then(() => {\n            this.setState({\n              confirmDelete: false,\n              isDeletionPending: false,\n            });\n            closeAction();\n            addAlert(\n              <Trans>\n                Execution environment &quot;{selectedItem}&quot; has been\n                successfully deleted.\n              </Trans>,\n              'success',\n            );\n            afterDelete();\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            confirmDelete: false,\n            isDeletionPending: false,\n          });\n          addAlert(\n            t`Execution environment \"${selectedItem}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n          closeAction();\n        }),\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { List, ListItem, Spinner } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users } = this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n          {users && !count && <p>{t`No users will be affected.`}</p>}\n          {!users && (\n            <p>\n              <Trans>\n                Checking for affected users... <Spinner size='sm' />\n              </Trans>\n            </p>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserType, UserAPI } from 'src/api';\nimport { mapErrorMessages } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nexport class DeprecatedTag extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {t`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, CubesIcon } from '@patternfly/react-icons';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { LoginLink } from 'src/components';\n\nexport class EmptyStateUnauthorized extends React.Component {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={\n          <>\n            {t`Contact your organization administrator for more information.`}\n            <br />\n            <br />\n            <LoginLink button />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Paths } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n    ];\n\n    const last_sync_task =\n      this.props.container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={this.props.container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: t`Execution Environments`,\n              },\n              { name: this.props.container.name },\n            ]}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={this.props.container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {this.props.container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab: this.props.tab }}\n              updateParams={(p) => {\n                if (this.props.tab !== p.tab) {\n                  this.props.updateState({ redirect: p.tab });\n                }\n              }}\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <Button\n            isDisabled={\n              this.state.name.length === 0 ||\n              (this.props.group && this.state.name === this.props.group.name)\n            }\n            key='create'\n            variant='primary'\n            onClick={() => onSave(this.state.name)}\n          >\n            {!this.props.group ? t`Create` : t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion } = this.props;\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport {\n  Pagination,\n  FormSelect,\n  FormSelectOption,\n  Toolbar,\n} from '@patternfly/react-core';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { PulpStatus, NamespaceType, ImportListType } from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  namespaces: NamespaceType[];\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n    };\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      namespaces,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderNamespacePicker(namespaces)}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => {\n              p['page'] = 1;\n              this.props.updateParams(p);\n            }}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            p['page'] = 1;\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        <Pagination\n          itemCount={numberOfResults}\n          perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n          page={params.page || 1}\n          onSetPage={(_, p) =>\n            updateParams(ParamHelper.setParam(params, 'page', p))\n          }\n          onPerPageSelect={(_, p) => {\n            updateParams({ ...params, page: 1, page_size: p });\n          }}\n          isCompact={true}\n        />\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private renderNamespacePicker(namespaces) {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <FormSelect\n            onChange={(val) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                val,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            value={this.props.params.namespace}\n            aria-label={t`Select namespace`}\n          >\n            {namespaces.map((ns) => (\n              <FormSelectOption key={ns.name} label={ns.name} value={ns.name} />\n            ))}\n          </FormSelect>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from 'src/api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { DateComponent, EmptyStateNoData, SortTable, ClipboardCopy } from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { CollectionCount } from 'src/components';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport class LoginLink extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { button, next } = this.props;\n    const { featureFlags } = this.context;\n    const className = button ? 'pf-c-button pf-m-primary' : '';\n\n    // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n    if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n      return (\n        <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>\n      );\n    } else {\n      return (\n        <Link\n          className={className}\n          to={formatPath(Paths.login, {}, { next })}\n        >{t`Login`}</Link>\n      );\n    }\n  }\n}\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport class Main extends React.Component<IProps> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='hub-c-card-ns-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              alt={t`${company} logo`}\n              fallbackToDefault\n              image={avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{t`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { validateURLHelper } from 'src/utilities';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  TextArea,\n  Alert,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\n\nimport {\n  NamespaceCard,\n  ObjectPermissionField,\n  AlertType,\n} from 'src/components';\nimport { NamespaceType } from 'src/api';\nimport { errorMessage, ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n  userId: string;\n\n  updateNamespace: (namespace) => void;\n}\n\ninterface IState {\n  newNamespaceGroup: string;\n  formErrors?: {\n    groups?: AlertType;\n  };\n}\n\nexport class NamespaceForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newNamespaceGroup: '',\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    const { formErrors } = this.state;\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='groups'\n          label={t`Namespace owners`}\n          className='namespace-owners'\n          helperTextInvalid={errorMessages['groups']}\n          validated={this.toError(\n            !isNaN(Number(this.state.newNamespaceGroup)) &&\n              !('groups' in errorMessages),\n          )}\n        >\n          <br />\n          {formErrors?.groups ? (\n            <Alert title={formErrors.groups.title} variant='danger' isInline>\n              {formErrors.groups.description}\n            </Alert>\n          ) : (\n            <ObjectPermissionField\n              groups={namespace.groups}\n              availablePermissions={['change_namespace', 'upload_to_namespace']}\n              setGroups={(g) => {\n                const newNS = { ...namespace };\n                newNS.groups = g;\n                this.props.updateNamespace(newNS);\n              }}\n              onError={(err) => {\n                const { status, statusText } = err.response;\n                this.setState({\n                  formErrors: {\n                    ...this.state.formErrors,\n                    groups: {\n                      title: t`Groups list could not be displayed.`,\n                      description: errorMessage(status, statusText),\n                      variant: 'danger',\n                    },\n                  },\n                });\n              }}\n            ></ObjectPermissionField>\n          )}\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { NamespaceAPI, GroupObjectPermissionType } from 'src/api';\nimport { AlertType, HelperText, ObjectPermissionField } from 'src/components';\nimport { errorMessage, ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  newGroups: GroupObjectPermissionType[];\n  errorMessages: ErrorMessagesType;\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      newGroups: [],\n      errorMessages: {},\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: this.state.newGroups,\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          newGroups: [],\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newGroups, newNamespaceNameValid, formErrors } =\n      this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n          <FormGroup\n            label={t`Namespace owners`}\n            fieldId='groups'\n            helperTextInvalid={this.state.errorMessages['groups']}\n          >\n            {formErrors?.groups ? (\n              <Alert title={formErrors.groups.title} variant='danger' isInline>\n                {formErrors.groups.description}\n              </Alert>\n            ) : (\n              <ObjectPermissionField\n                availablePermissions={[\n                  'change_namespace',\n                  'upload_to_namespace',\n                ]}\n                groups={newGroups}\n                setGroups={(g) => this.setState({ newGroups: g })}\n                menuAppendTo='parent'\n                onError={(err) => {\n                  const { status, statusText } = err.response;\n                  this.setState({\n                    formErrors: {\n                      ...this.state.formErrors,\n                      groups: {\n                        title: t`Groups list could not be displayed.`,\n                        description: errorMessage(status, statusText),\n                        variant: 'danger',\n                      },\n                    },\n                  });\n                }}\n              />\n            )}\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\nimport { plural } from '@lingui/macro';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nexport class NumericLabel extends React.Component<IProps> {\n  render() {\n    const { number, newline, label } = this.props;\n\n    let numberElem = (\n      <span key='number'>{NumericLabel.roundNumber(number)} </span>\n    );\n    let labelElem = (\n      <span key='label' className='hub-numeric-label-label'>\n        {label}\n      </span>\n    );\n\n    if (newline) {\n      numberElem = <div>{numberElem}</div>;\n      labelElem = <div>{labelElem}</div>;\n    }\n\n    return (\n      <div>\n        {numberElem}\n        {labelElem}\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nexport class CollectionNumericLabel extends React.Component<ICNLProps> {\n  render() {\n    const { count, newline, type } = this.props;\n\n    const label =\n      {\n        module: plural(count, {\n          one: 'Module',\n          other: 'Modules',\n        }),\n        role: plural(count, {\n          one: 'Role',\n          other: 'Roles',\n        }),\n        plugin: plural(count, {\n          one: 'Plugin',\n          other: 'Plugins',\n        }),\n        dependency: plural(count, {\n          one: 'Dependency',\n          other: 'Dependencies',\n        }),\n      }[type] || type;\n\n    return <NumericLabel number={count} newline={newline} label={label} />;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\n\nimport { TrashIcon } from '@patternfly/react-icons';\n\nimport { GroupObjectPermissionType, GroupAPI } from 'src/api';\nimport {\n  AlertType,\n  APISearchTypeAhead,\n  PermissionChipSelector,\n} from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  groups: GroupObjectPermissionType[];\n  availablePermissions: string[];\n  setGroups: (groups: GroupObjectPermissionType[]) => void;\n  isDisabled?: boolean;\n  menuAppendTo?: 'parent' | 'inline';\n  onError?: (error: {\n    response: {\n      status: number;\n      statusText: string;\n    };\n  }) => void;\n}\n\ninterface IState {\n  searchGroups: { name: string; id: number | string }[];\n  formAlerts?: AlertType;\n}\n\nexport class ObjectPermissionField extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const { groups, availablePermissions } = this.props;\n\n    return (\n      <div>\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelect}\n          placeholderText={t`Select a group`}\n          menuAppendTo={this.props.menuAppendTo}\n          isDisabled={!!this.props.isDisabled}\n        />\n        <br />\n        <div>\n          {groups.map((group) => (\n            <Flex\n              style={{ marginTop: '16px' }}\n              alignItems={{ default: 'alignItemsCenter' }}\n              key={group.name}\n            >\n              <FlexItem style={{ minWidth: '200px' }}>{group.name}</FlexItem>\n              <FlexItem grow={{ default: 'grow' }} style={{ width: '90%' }}>\n                <PermissionChipSelector\n                  multilingual={true}\n                  availablePermissions={availablePermissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  selectedPermissions={group.object_permissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  setSelected={(perms) => this.setPermissions(perms, group)}\n                  menuAppendTo={this.props.menuAppendTo}\n                />\n              </FlexItem>\n              <FlexItem>\n                <TrashIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => this.removeGroup(group)}\n                />\n              </FlexItem>\n            </Flex>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  private removeGroup(group) {\n    const newGroups = [];\n    for (const g of this.props.groups) {\n      if (g.id !== group.id) {\n        newGroups.push(g);\n      }\n    }\n\n    this.props.setGroups(newGroups);\n\n    const newSearchGroups = [...this.state.searchGroups, group];\n    this.setState({ searchGroups: newSearchGroups });\n  }\n\n  private setPermissions(perms, group) {\n    const newGroups = [...this.props.groups];\n    const selectedGroup = newGroups.find((g) => g.id === group.id);\n    selectedGroup.object_permissions = perms.map((perm) =>\n      twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n    );\n\n    this.props.setGroups(newGroups);\n  }\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name })\n      .then((result) => {\n        const added = this.props.groups.map((group) => group.name);\n        const groups = result.data.data.filter(\n          (group) => !added.includes(group.name),\n        );\n        this.setState({ searchGroups: groups });\n      })\n      .catch((e) => this.props.onError(e.response));\n  };\n\n  private onSelect = (event, selection) => {\n    const newGroups = [...this.props.groups];\n\n    const addedGroup = this.state.searchGroups.find(\n      (g) => g.name === selection,\n    );\n\n    newGroups.push({\n      id: addedGroup.id as number,\n      name: addedGroup.name,\n      object_permissions: this.props.availablePermissions,\n    });\n\n    this.props.setGroups(newGroups);\n  };\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n  ToggleTemplate,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n        titles={{\n          ofWord: t`of`,\n          perPageSuffix: t`per page`,\n          items: null,\n        }}\n        toggleTemplate={(props) => <ToggleTemplate ofWord={t`of`} {...props} />}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { BaseHeader, Logo, Tabs, TabsType, Breadcrumbs } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions: string[];\n  selectedPermissions: string[];\n  setSelected: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n  multilingual?: boolean;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map((text) => (\n            <Label key={text}>\n              {this.props.multilingual ? i18n._(text) : text}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    let selections = [];\n    if (this.props.multilingual) {\n      selections = this.props.selectedPermissions.map((value) => ({\n        // orginal english value\n        value,\n        // translated\n        toString: () => i18n._(value),\n      }));\n    } else {\n      selections = this.props.selectedPermissions;\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        onClear={this.props.onClear ? this.props.onClear : this.clearSelection}\n        selections={selections}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option}>\n                {this.props.multilingual ? i18n._(option) : option}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return t`Select permissions`;\n    }\n    return this.props.selectedPermissions.length === 0 ? t`No permission` : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    // value contains orginal key in english\n    if (this.props.multilingual && selection.value) {\n      selection = selection.value;\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(event, selection);\n    } else {\n      const newPerms = new Set(this.props.selectedPermissions);\n      if (newPerms.has(selection)) {\n        newPerms.delete(selection);\n      } else {\n        newPerms.add(selection);\n      }\n\n      this.props.setSelected(Array.from(newPerms));\n    }\n  };\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n  inputText: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n  inputText: '',\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Controllers list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-pulp_created',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Tags could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, digest, tag } = this.state;\n    const url = getContainersURL();\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const imageUrl = `${url}/${tag ? `${image}:${tag}` : digest}`;\n          const href = `${host}/#/execution_environments/add?image=${encodeURIComponent(\n            imageUrl,\n          )}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    const docsLink =\n      'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank' rel='noreferrer'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that\n              Controller&apos;s console. Log in (if necessary) and follow the\n              steps to complete the configuration.\n            </Trans>\n            <br />\n            {!unsafeLinksSupported && (\n              <Trans>\n                <b>Note:</b> The following links may be blocked by your browser.\n                Copy and paste the external link manually.\n              </Trans>\n            )}\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  inputText={this.state.inputText}\n                  onChange={(text) => this.setState({ inputText: text })}\n                  updateParams={(controllerParams) => {\n                    controllerParams.page = 1;\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText, FileUpload } from 'src/components';\n\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  DownloadIcon,\n  ExclamationTriangleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet, isWriteOnly, ErrorMessagesType } from 'src/utilities';\n\nimport { validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const { remote } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n        'signed_only',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='link'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const { filenames } = this.state;\n    const { signatures_enabled } = this.context?.featureFlags || {};\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && signatures_enabled ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      filenames.requirements_file.name,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.client_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.ca_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, SortTable, ListItemActions } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { lastSynced, lastSyncStatus } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { user } = this.props;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length && user?.model_permissions?.change_remote && (\n        <DropdownItem key='edit' onClick={() => this.props.editRemote(remote)}>\n          {t`Edit`}\n        </DropdownItem>\n      ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { user } = this.props;\n    if (!user?.model_permissions?.change_remote) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return null;\n    }\n\n    const repoNames = Constants.REPOSITORYNAMES;\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              style={{ paddingLeft: 0 }}\n              variant='plain'\n              className='hub-input-group-text-no-wrap'\n            >\n              {t`Filter by repository`}\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoName(event.target.name);\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: event.target.name,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={(isExpanded) => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              {Object.keys(repoNames).map((option) => (\n                <SelectOption\n                  name={option}\n                  key={option}\n                  value={i18n._(repoNames[option])}\n                />\n              ))}\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoName(repoName) {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return i18n._(repo);\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport { isEqual, isEmpty, xorWith, cloneDeep } from 'lodash';\nimport {\n  AlertType,\n  APISearchTypeAhead,\n  ObjectPermissionField,\n  HelperText,\n} from 'src/components';\nimport {\n  ContainerDistributionAPI,\n  GroupObjectPermissionType,\n  ExecutionEnvironmentNamespaceAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport { Constants } from 'src/constants';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remotePulpId?: string;\n  addAlert?: (variant, title, description?) => void;\n  formError: { title: string; detail: string }[];\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n  originalSelectedGroups: GroupObjectPermissionType[];\n\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors?: {\n    registries?: AlertType;\n    groups?: AlertType;\n  };\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n      selectedGroups: [],\n      originalSelectedGroups: [],\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {\n        registries: null,\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              registries: {\n                title: t`Registries list could not be displayed.`,\n                description: errorMessage(status, statusText),\n                variant: 'danger',\n              },\n            },\n          });\n        });\n    }\n\n    if (!this.props.isNew) {\n      this.loadSelectedGroups();\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote, formError } =\n      this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`}\n                validated={this.validateName(name)}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => this.setState({ name: value })}\n                  validated={this.validateName(name)}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n              >\n                {formErrors?.registries ? (\n                  <Alert\n                    title={formErrors.registries.title}\n                    variant='danger'\n                    isInline\n                  >\n                    {formErrors.registries.description}\n                  </Alert>\n                ) : (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n          {formErrors?.groups ? (\n            <Alert title={formErrors.groups.title} variant='danger' isInline>\n              {formErrors.groups.description}\n            </Alert>\n          ) : (\n            <FormGroup\n              key='groups'\n              fieldId='groups'\n              label={t`Groups with access`}\n              className='hub-formgroup-groups'\n            >\n              <div className='pf-c-form__helper-text'>\n                {t`Adding groups provides access to all repositories in the\n                    \"${namespace}\" container namespace.`}\n              </div>\n              <ObjectPermissionField\n                groups={this.state.selectedGroups}\n                availablePermissions={Constants.CONTAINER_NAMESPACE_PERMISSIONS}\n                setGroups={(g) => this.setState({ selectedGroups: g })}\n                menuAppendTo='parent'\n                isDisabled={\n                  !this.props.permissions.includes(\n                    'container.change_containernamespace',\n                  )\n                }\n                onError={(err) => {\n                  const { status, statusText } = err.response;\n                  this.setState({\n                    formErrors: {\n                      ...this.state.formErrors,\n                      groups: {\n                        title: t`Groups list could not be displayed.`,\n                        description: errorMessage(status, statusText),\n                        variant: 'danger',\n                      },\n                    },\n                  });\n                }}\n              ></ObjectPermissionField>\n              {!!formError &&\n                formError.length > 0 &&\n                formError.map((error) => (\n                  <Alert\n                    title={error.title}\n                    variant='danger'\n                    isInline\n                    key={error.title}\n                  >\n                    {error.detail}\n                  </Alert>\n                ))}\n            </FormGroup>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n    const nameValid = name && this.validateName(name) === 'default';\n    return nameValid && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ pk, name }) => ({ id: pk, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private loadSelectedGroups() {\n    const { namespace } = this.props;\n    return ExecutionEnvironmentNamespaceAPI.get(namespace)\n      .then((result) =>\n        this.setState({\n          selectedGroups: cloneDeep(result.data.groups),\n          originalSelectedGroups: result.data.groups,\n        }),\n      )\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n              variant: 'danger',\n            },\n          },\n        });\n      });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      namespace,\n      remotePulpId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      selectedGroups,\n      originalSelectedGroups,\n      upstreamName: upstream_name,\n    } = this.state;\n\n    if (isRemote && isNew) {\n      return ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    }\n\n    return Promise.all([\n      // remote edit - upstream, tags, registry\n      isRemote &&\n        !isNew &&\n        ExecutionEnvironmentRemoteAPI.update(remotePulpId, {\n          name: originalName, // readonly but required\n          upstream_name,\n          registry,\n          include_tags,\n          exclude_tags,\n        }),\n      // remote edit or local edit - description, if changed\n      description !== originalDescription &&\n        ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      // remote edit or local edit - groups, if changed\n      !this.compareGroupsAndPerms(\n        selectedGroups.sort(),\n        originalSelectedGroups.sort(),\n      ) &&\n        ExecutionEnvironmentNamespaceAPI.update(namespace, {\n          groups: selectedGroups,\n        }),\n    ]);\n  }\n\n  //Compare groups and compare their permissions\n  private compareGroupsAndPerms(original, newOne) {\n    let same = true;\n    if (original.length === newOne.length) {\n      original.forEach((x, index) => {\n        if (\n          !isEmpty(\n            xorWith(\n              x.object_permissions.sort(),\n              newOne[index].object_permissions.sort(),\n              isEqual,\n            ),\n          )\n        ) {\n          same = false;\n        }\n      });\n    }\n    return isEmpty(xorWith(original, newOne, isEqual)) && same;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { AlertType } from 'src/components';\n\nimport {\n  Button,\n  Modal,\n  Spinner,\n  Label,\n  LabelGroup,\n  Form,\n  FormGroup,\n  TextInput,\n  InputGroup,\n  Alert,\n  AlertActionLink,\n} from '@patternfly/react-core';\n\nimport { TagIcon } from '@patternfly/react-icons';\n\nimport {\n  ContainerManifestType,\n  ExecutionEnvironmentAPI,\n  ContainerTagAPI,\n  ContainerRepositoryType,\n  TaskAPI,\n  PulpStatus,\n} from 'src/api';\n\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup id='remove-tag' defaultIsOpen={true}>\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.pulp_id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.pulp_id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    const { digest, grey, long } = this.props;\n\n    return (\n      <Tooltip content={digest}>\n        <Label color={grey ? 'grey' : 'blue'}>\n          {long ? digest : truncateSha(digest)}\n        </Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams(\n        ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n      ),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n    );\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n    );\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    const activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNodeArray;\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap: Record<string, LabelProps['variant']> = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: t`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: t`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: t`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: t`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type]}\n        color={labelProps.color}\n        icon={labelProps.icon}\n        className={this.props.className}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: t`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab.name}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps> {\n  render() {\n    return (\n      <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HTMLComment = ({ text, ...props }) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nHTMLComment.propTypes = { text: PropTypes.string };\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import * as React from 'react';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n  Alert,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { AlertType, APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport { BaseHeader, Main, Breadcrumbs, UserForm } from 'src/components';\nimport { UserType } from 'src/api';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: { name: string; url?: string }[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label={t`hidden value`}\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {t`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport class ClipboardCopy extends React.Component<IProps> {\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <PFClipboardCopy\n        hoverTip={t`Copy to clipboard`}\n        clickTip={t`Successfully copied to clipboard!`}\n        {...props}\n      >\n        {children}\n      </PFClipboardCopy>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  FileUpload as PFFileUpload,\n  FileUploadProps,\n} from '@patternfly/react-core';\n\nexport class FileUpload extends React.Component<FileUploadProps> {\n  render() {\n    return (\n      <PFFileUpload\n        browseButtonText={t`Browse...`}\n        clearButtonText={t`Clear`}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        {...this.props}\n      />\n    );\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n\n    return (\n      <td\n        style={{\n          paddingRight: '0px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {buttons?.length ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {kebabItems?.length ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { t, defineMessage } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      label: defineMessage({ message: `Collection Namespaces` }),\n      object_permissions: [\n        'galaxy.add_namespace', // model_permissions.add_namespace\n        'galaxy.change_namespace', // (model_permissions.change_namespace)\n        'galaxy.delete_namespace', // model_permissions.delete_namespace\n        'galaxy.upload_to_namespace', // (model_permissions.upload_to_namespace)\n      ],\n    },\n    {\n      name: 'collections',\n      label: defineMessage({ message: `Collections` }),\n      object_permissions: [\n        'ansible.modify_ansible_repo_content', // model_permissions.move_collection\n        'ansible.delete_collection', // model_permissions.delete_collection\n      ],\n    },\n    {\n      name: 'users',\n      label: defineMessage({ message: `Users` }),\n      object_permissions: [\n        'galaxy.view_user', // model_permissions.view_user\n        'galaxy.delete_user', // model_permissions.delete_user\n        'galaxy.add_user', // model_permissions.add_user\n        'galaxy.change_user', // model_permissions.change_user\n      ],\n    },\n    {\n      name: 'groups',\n      label: defineMessage({ message: `Groups` }),\n      object_permissions: [\n        'galaxy.view_group', // model_permissions.view_group\n        'galaxy.delete_group', // model_permissions.delete_group\n        'galaxy.add_group', // model_permissions.add_group\n        'galaxy.change_group', // model_permissions.change_group\n      ],\n    },\n    {\n      name: 'remotes',\n      label: defineMessage({ message: `Collection Remotes` }),\n      object_permissions: [\n        'ansible.change_collectionremote', // model_permissions.change_remote\n        'ansible.view_collectionremote',\n        // 'ansible.add_collectionremote', // (model_permissions.add_remote)\n        // 'ansible.delete_collectionremote', // (model_permissions.delete_remote)\n      ],\n    },\n    {\n      name: 'containers',\n      label: defineMessage({ message: `Containers` }),\n      object_permissions: [\n        // Turning off private container permissions since they aren't supported yet\n        // 'container.namespace_pull_containerdistribution',\n        // 'container.namespace_view_containerdistribution',\n\n        // 'container.add_containerrepository', // (model_permissions.add_containerrepository)\n        // 'container.change_containerrepository', // (model_permissions.change_containerrepository)\n        'container.delete_containerrepository', // model_permissions.delete_containerrepository\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.namespace_push_containerdistribution',\n\n        'container.add_containernamespace', // (model_permissions.add_containernamespace)\n        'container.change_containernamespace', // (model_permissions.change_containernamespace)\n        // 'container.delete_containernamespace', // (model_permissions.delete_containernamespace)\n      ],\n    },\n    {\n      name: 'registries',\n      label: defineMessage({ message: `Remote Registries` }),\n      object_permissions: [\n        'galaxy.add_containerregistryremote', // model_permissions.add_containerregistry\n        'galaxy.change_containerregistryremote', // model_permissions.change_containerregistry\n        'galaxy.delete_containerregistryremote', // model_permissions.delete_containerregistry\n      ],\n    },\n    {\n      name: 'task_management',\n      label: defineMessage({ message: `Task Management` }),\n      object_permissions: [\n        'core.change_task',\n        'core.delete_task',\n        'core.view_task',\n      ],\n    },\n\n    // These aren't currently used. Removing them to reduce confusion in the UI\n    // {\n    //   name: 'distribution',\n    //   label: '...',\n    //   object_permissions: [\n    //     'ansible.view_ansibledistribution', // (model_permissions.view_distribution)\n    //     'ansible.add_ansibledistribution', // (model_permissions.add_distribution)\n    //     'ansible.change_ansibledistribution', // (model_permissions.change_distribution)\n    //     'ansible.delete_ansibledistribution', // (model_permissions.delete_distribution)\n    //   ],\n    // },\n    // {\n    //   name: 'synclists',\n    //   label: '...',\n    //   object_permissions: [\n    //     'galaxy.delete_synclist',\n    //     'galaxy.change_synclist',\n    //     'galaxy.view_synclist',\n    //     'galaxy.add_synclist',\n    //   ],\n    // },\n    // {\n    //   name: 'container_distribution',\n    //   label: '...',\n    //   object_permissions: [\n    //     'container.add_containerdistribution', // (model_permissions.add_containerdistribution)\n    //     'container.change_containerdistribution', // (model_permissions.change_containerdistribution)\n    //     'container.delete_containerdistribution', // (model_permissions.delete_containerdistribution)\n    //   ],\n    // },\n  ];\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static HUMAN_PERMISSIONS = {\n    'ansible.add_ansibledistribution': t`Add Ansible distribution`,\n    'ansible.add_collectionremote': t`Add collection remote`,\n    'ansible.change_ansibledistribution': t`Change Ansible distribution`,\n    'ansible.change_collectionremote': t`Change collection remote`,\n    'ansible.delete_ansibledistribution': t`Delete Ansible distribution`,\n    'ansible.delete_collection': t`Delete collection`,\n    'ansible.delete_collectionremote': t`Delete collection remote`,\n    'ansible.modify_ansible_repo_content': t`Modify Ansible repo content`,\n    'ansible.view_ansibledistribution': t`View Ansible distribution`,\n    'ansible.view_collectionremote': t`View collection remote`,\n    'container.add_containerdistribution': t`Add container distribution`,\n    'container.add_containernamespace': t`Create new containers`,\n    'container.add_containerrepository': t`Add container repository`,\n    'container.change_containerdistribution': t`Change container distribution`,\n    'container.change_containernamespace': t`Change container namespace permissions`,\n    'container.change_containerrepository': t`Change container repository`,\n    'container.delete_containerdistribution': t`Delete container distribution`,\n    'container.delete_containernamespace': t`Delete container namespace`,\n    'container.delete_containerrepository': t`Delete container repository`,\n    'container.namespace_change_containerdistribution': t`Change containers`,\n    'container.namespace_modify_content_containerpushrepository': t`Change image tags`,\n    'container.namespace_pull_containerdistribution': t`Pull private containers`,\n    'container.namespace_push_containerdistribution': t`Push to existing containers`,\n    'container.namespace_view_containerdistribution': t`View private containers`,\n    'core.change_task': t`Change task`,\n    'core.delete_task': t`Delete task`,\n    'core.view_task': t`View all tasks`,\n    'galaxy.add_containerregistryremote': t`Add remote registry`,\n    'galaxy.add_group': t`Add group`,\n    'galaxy.add_namespace': t`Add namespace`,\n    'galaxy.add_synclist': t`Add synclist`,\n    'galaxy.add_user': t`Add user`,\n    'galaxy.change_containerregistryremote': t`Change remote registry`,\n    'galaxy.change_group': t`Change group`,\n    'galaxy.change_namespace': t`Change namespace`,\n    'galaxy.change_synclist': t`Change synclist`,\n    'galaxy.change_user': t`Change user`,\n    'galaxy.delete_containerregistryremote': t`Delete remote registry`,\n    'galaxy.delete_group': t`Delete group`,\n    'galaxy.delete_namespace': t`Delete namespace`,\n    'galaxy.delete_synclist': t`Delete synclist`,\n    'galaxy.delete_user': t`Delete user`,\n    'galaxy.upload_to_namespace': t`Upload to namespace`,\n    'galaxy.view_group': t`View group`,\n    'galaxy.view_synclist': t`View synclist`,\n    'galaxy.view_user': t`View user`,\n  };\n\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: t`Change namespace`,\n    upload_to_namespace: t`Upload to namespace`,\n    add_containernamespace: t`Create new containers`,\n    namespace_pull_containerdistribution: t`Pull private containers`,\n    namespace_change_containerdistribution: t`Update container information`,\n    namespace_view_containerdistribution: t`View private containers`,\n    namespace_modify_content_containerpushrepository: t`Change image tags`,\n    change_containernamespace: t`Change container namespace permissions`,\n    namespace_push_containerdistribution: t`Push images to existing containers`,\n    view_containernamespace: t`View container's namespace`,\n    delete_containernamespace: t`Delete container's namespace`,\n    namespace_delete_containerdistribution: t`Delete container's distribution`,\n    namespace_view_containerpushrepository: t`View container's repository`,\n    namespace_add_containerdistribution: t`Push new containers`,\n    change_containerdistribution: t`Change distribution`,\n    delete_containerdistribution: t`Delete distribution`,\n    push_containerdistribution: t`Push distribution`,\n    pull_containerdistribution: t`Pull distribution`,\n    view_containerdistribution: t`View distribution`,\n  };\n\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n}\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType, SettingsType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(\n  path: Paths,\n  data,\n  params?: Record<string, string | boolean>,\n) {\n  let url = path as string;\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    return `${url}?${ParamHelper.getQueryString(params)}`;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  executionEnvironmentsRegistries = '/registries',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\nexport function getContainersURL() {\n  return window.location.href.split('://')[1].split('/ui')[0];\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: object) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find((key) => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  const splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\n\nexport function waitForTask(task, bailAfter = 10) {\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, 5000)).then(() =>\n        waitForTask(task, bailAfter - 1),\n      );\n    }\n  });\n}\n","import { t } from '@lingui/macro';\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","export const canSign = ({ featureFlags }, namespace) => {\n  const { can_create_signatures } = featureFlags || {};\n  const permissions = namespace?.related_fields?.my_permissions || [];\n  return (\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams(params);\n  }\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","reject","err","undefined","ImportMessageCodes","PulpStatus","NamespaceAPI","API","ImportAPI","ActiveUserAPI","identity","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","RemoteAPI","distribution","_id","_obj","ApplicationInfoAPI","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","PulpAPI","PULP_API_BASE_PATH","ContainerTagAPI","repositoryID","tag","ContainerDistributionAPI","ExecutionEnvironmentNamespaceAPI","ControllerAPI","TaskManagementAPI","changedParams","GenericPulpAPI","SettingsAPI","SignCollectionAPI","CertificateUploadAPI","repository","signed_collection","Repositories","registry","init","middleware","ReducerRegistry","promise","EditNamespace","lazy","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","CollectionDependencies","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","TaskListView","TaskDetail","CertificationDashboard","Repository","Routes","Suspense","fallback","LoadingPageWithHeader","Switch","Route","Paths","component","Redirect","push","to","propTypes","childProps","PropTypes","location","pathname","DEFAULT_REPO","App","props","user","setState","activeUser","alerts","matchPath","state","selectedRepo","settings","identifyApp","document","title","APPLICATION_NAME","appNav","on","event","domEvent","basename","replace","href","history","navId","promises","all","results","match","isRepoURL","value","setUser","setActiveUser","setAlerts","Alert","isInline","variant","Component","withRouter","connect","availableLanguages","locale","messages","localStorage","test_l10n","forEach","key","Array","isArray","i18n","plurals","moment","activate","navigator","languages","lang","release","pathName","split","shift","store","getStore","APISearchTypeAhead","loadResults","onClear","evt","textInput","target","getOptions","isOpen","selection","isPlaceholder","onSelect","multiple","selected","selections","group","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","options","option","SelectOption","length","React","AlertList","closeAlert","style","position","right","top","zIndex","display","flexDirection","alert","i","marginBottom","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","cx","Title","headingLevel","size","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","Link","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","getCertification","SignatureBadge","isCompact","signState","formatPath","Text","TextVariants","CardBody","Tooltip","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","CollectionNumericLabel","newline","CollectionContentList","toShow","summary","showing","keywords","c","keywordMatch","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","renderCommunityWarningMessage","EmptyStateCustom","icon","ExclamationTriangleIcon","AppContext","CollectionCount","collectionCount","loading","getCollectionCount","Spinner","collections","statusText","addAlert","errorMessage","DateComponent","date","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","numberOfAffected","affectedUnsigned","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","useContext","featureFlags","display_signatures","Label","color","text","UploadSingCertificateModal","useState","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","page_size","modalPagination","errorAlert","isOpenSignAllModal","signing_service","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","redirect","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","getUsedbyDependencies","activeTab","find","created","created_at","urlKeys","latestVersion","can_upload_signatures","isLatestVersion","signedString","collectionName","canSign","canSignNS","dropdownItems","model_permissions","delete_collection","DropdownItem","openDeleteModalWithConfirm","deprecate","checkUploadPrivilleges","Boolean","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","total_versions","unsigned_versions","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","toString","DeleteModal","spinner","cancelAction","closeModal","deleteAction","deleteCollectionVersion","paddingBottom","Checkbox","isChecked","RepoSelector","loadingVariant","renderSelectVersions","StatefulDropdown","items","renderTabs","rel","include_related","related_fields","my_permissions","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","concat","pulp_href","reload","warning","DownloadSignatureGridItem","show","setShow","signatures","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","downloadLinkRef","installCommand","tags","Tag","isFilled","license","ClipboardCopy","isReadOnly","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","inputText","prevProps","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","alignItems","handleControlClick","ariaLabel","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","ListVariant","dependency","splitDependencyName","separateVersion","EmptyStateNoData","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","newParams","selectedFilter","selectedID","currentTarget","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","trim","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingTop","borderRadius","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","HelperText","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","renderMessage","level","message","hideCollectionName","collectionHead","approvalStatus","rlist","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","selectImport","importList","namespaces","numberOfResults","renderNamespacePicker","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","ns","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","artifact","sha256","loaded","total","join","msg","cancel","tab","renderTab","Bullseye","height","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","console","log","renderRow","cliConfig","getRepoUrl","base_path","pulp_last_updated","isCode","next","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","newNamespaceGroup","formErrors","groups","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","isNaN","Number","ObjectPermissionField","availablePermissions","setGroups","g","newNS","updateNamespace","getLinksErrorText","renderLinkGroup","addLink","update","last","validateName","updateLink","validateUrl","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","newGroups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","roundNumber","labelElem","n","Math","floor","role","plugin","name__contains","added","searchGroups","addedGroup","object_permissions","loadGroups","Flex","default","FlexItem","minWidth","grow","PermissionChipSelector","multilingual","perm","twoWayMapper","selectedPermissions","setSelected","perms","setPermissions","cursor","removeGroup","newSearchGroups","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","titles","ofWord","perPageSuffix","toggleTemplate","ToggleTemplate","String","PartnerHeader","filters","Tabs","newPerms","Set","has","add","from","isViewOnly","typeAheadAriaLabel","clearSelection","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","getRemoteType","requiredFields","disabledFields","allowEditName","showModal","isValid","saveRemote","renderForm","signatures_enabled","docsAnsibleLink","fileOnChange","helperTextIcon","helperTextInvalidIcon","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","isInteger","host","fieldName","newFields","is_set","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","change_remote","editRemote","updated_at","lastSynced","lastSyncStatus","ListItemActions","kebabItems","configButton","syncButton","syncRemote","distributions","selectExpanded","repoNames","InputGroupText","newRepo","getRepoName","setRepo","repoName","ResourcesForm","resources","updateResources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","SortTable","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","Dropdown","toggle","renderToggle","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","content_name","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","preventDefault","onSave","UserForm","newUser","updateUser","updateUserFieldByName","passwordConfirm","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","hoverTip","clickTip","clearButtonText","textAlign","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","change_containernamespace","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","published","community","completed","running","namespaceBreadcrumb","total_count","origin","getContainersURL","mapper","values","writeOnlyFields","el","newObj","sha","splitSha","entity","bailAfter","statusCode","outsideError","protocol","URL","can_create_signatures","permissions","paramString","numericTypes","URLSearchParams","appendParam","param","encodeURIComponent","callback","search","getQueryString","getReduced","deleteParam","UUIDRegEx","section"],"sourceRoot":""}