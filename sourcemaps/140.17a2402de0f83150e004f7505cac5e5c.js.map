{"version":3,"file":"js/140.c71e78d4bb436d4740cc.js","mappings":"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","sources":["webpack:///./src/containers/search/search.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { Button, DataList, DropdownItem, Switch } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  MySyncListAPI,\n  SyncListType,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  CardListSwitcher,\n  CollectionCard,\n  CollectionFilter,\n  CollectionListItem,\n  DeleteCollectionModal,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageSpinner,\n  Pagination,\n  StatefulDropdown,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './search.scss';\n\ninterface IState {\n  collections: CollectionVersionSearch[];\n  numberOfResults: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n    namespace?: string;\n  };\n  loading: boolean;\n  synclist: SyncListType;\n  alerts: AlertType[];\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  redirect: string;\n  noDependencies: boolean;\n  deleteCollection: CollectionVersionSearch;\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\nclass Search extends React.Component<RouteProps, IState> {\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = Constants.CARD_DEFAULT_PAGE_SIZE;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem(\n        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n      );\n    }\n\n    this.state = {\n      collections: [],\n      params: params,\n      numberOfResults: 0,\n      loading: true,\n      synclist: undefined,\n      alerts: [],\n      updateCollection: null,\n      showImportModal: false,\n      redirect: null,\n      noDependencies: false,\n      deleteCollection: null,\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  private load() {\n    this.queryCollections();\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      this.getSynclist();\n    }\n  }\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />;\n    }\n\n    const {\n      loading,\n      collections,\n      params,\n      numberOfResults,\n      showImportModal,\n      updateCollection,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n    } = this.state;\n    const noData =\n      collections.length === 0 &&\n      !filterIsSet(params, [\n        'keywords',\n        'tags',\n        'is_signed',\n        'repository_name',\n        'namespace',\n      ]);\n\n    const updateParams = (p) =>\n      this.updateParams(p, () => this.queryCollections());\n\n    return (\n      <div className='search-page'>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        <BaseHeader className='header' title={t`Collections`}>\n          {!noData && (\n            <div className='hub-toolbar-wrapper'>\n              <div className='toolbar'>\n                <CollectionFilter\n                  ignoredParams={['page', 'page_size', 'sort', 'view_type']}\n                  params={params}\n                  updateParams={updateParams}\n                />\n\n                <div className='hub-pagination-container'>\n                  <div className='card-list-switcher'>\n                    <CardListSwitcher\n                      size='sm'\n                      params={params}\n                      updateParams={(p) =>\n                        this.updateParams(p, () =>\n                          // Note, we have to use this.state.params instead\n                          // of params in the callback because the callback\n                          // executes before the page can re-run render\n                          // which means params doesn't contain the most\n                          // up to date state\n                          localStorage.setItem(\n                            Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n                            this.state.params.view_type,\n                          ),\n                        )\n                      }\n                    />\n                  </div>\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={numberOfResults}\n                    perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                    isTop\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        {loading ? (\n          <LoadingPageSpinner />\n        ) : noData ? (\n          <EmptyStateNoData\n            title={t`No collections yet`}\n            description={t`Collections will appear once uploaded`}\n          />\n        ) : (\n          <React.Fragment>\n            <section className='collection-container'>\n              {this.renderCollections(collections, params, updateParams)}\n            </section>\n            <section className='footer'>\n              <Pagination\n                params={params}\n                updateParams={(p) =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                count={numberOfResults}\n              />\n            </section>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private renderCollections(collections, params, updateParams) {\n    if (collections.length === 0) {\n      return (\n        <EmptyStateFilter\n          clearAllFilters={() => {\n            ParamHelper.clearAllFilters({\n              params,\n              ignoredParams: ['page', 'page_size', 'sort', 'view_type'],\n              updateParams,\n            });\n          }}\n        />\n      );\n    }\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections);\n    }\n  }\n\n  private renderCards(collections) {\n    return (\n      <div className='hub-cards'>\n        {collections.map((c, i) => {\n          return (\n            <CollectionCard\n              className='card'\n              key={i}\n              {...c}\n              footer={this.renderSyncToogle(\n                c.collection_version.name,\n                c.collection_version.namespace,\n              )}\n              menu={this.renderMenu(false, c)}\n              displaySignatures={this.context.featureFlags.display_signatures}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  private handleControlClick(collection) {\n    const { name } = collection.collection_version;\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${name}\" has been successfully deprecated.`\n            : t`The collection \"${name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          this.load();\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${name}\" could not be deprecated.`\n                : t`Collection \"${name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private renderMenu(list, collection) {\n    const { hasPermission } = this.context;\n    const menuItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies: null,\n        onClick: () =>\n          DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n            addAlert: (alert) => this.addAlert(alert),\n            setState: (state) => this.setState(state),\n            collection,\n          }),\n      }),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.handleControlClick(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      !list && hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.checkUploadPrivilleges(collection)}\n          key='upload new version'\n        >\n          {t`Upload new version`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const displayMenu = menuItems.length > 0;\n\n    if (list) {\n      return {\n        uploadButton: hasPermission('galaxy.upload_to_namespace') ? (\n          <Button\n            onClick={() => this.checkUploadPrivilleges(collection)}\n            variant='secondary'\n          >\n            {t`Upload new version`}\n          </Button>\n        ) : null,\n        dropdownMenu: displayMenu ? (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        ) : null,\n      };\n    }\n\n    return (\n      <span className={cx(!displayMenu && 'hidden-menu-space')}>\n        {displayMenu && (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        )}\n      </span>\n    );\n  }\n\n  private renderSyncToogle(name: string, namespace: string): React.ReactNode {\n    const { synclist } = this.state;\n\n    if (!synclist) {\n      return null;\n    }\n\n    return (\n      <Switch\n        id={namespace + '.' + name}\n        className='sync-toggle'\n        label={t`Sync`}\n        isChecked={this.isCollectionSynced(name, namespace)}\n        onChange={() => this.toggleCollectionSync(name, namespace)}\n      />\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private toggleCollectionSync(name: string, namespace: string) {\n    const synclist = { ...this.state.synclist };\n\n    const colIndex = synclist.collections.findIndex(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    if (colIndex < 0) {\n      synclist.collections.push({ name: name, namespace: namespace });\n    } else {\n      synclist.collections.splice(colIndex, 1);\n    }\n\n    MySyncListAPI.update(synclist.id, synclist).then((response) => {\n      this.setState({ synclist: response.data });\n      MySyncListAPI.curate(synclist.id).then(() => null);\n    });\n  }\n\n  private isCollectionSynced(name: string, namespace: string): boolean {\n    const { synclist } = this.state;\n    const found = synclist.collections.find(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    return synclist.policy === 'include' ? !!found : !found;\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='hub-list'>\n          <DataList className='data-list' aria-label={t`List of Collections`}>\n            {collections.map((c, i) => (\n              <CollectionListItem\n                key={i}\n                collection={c}\n                displaySignatures={this.context.featureFlags.display_signatures}\n                showNamespace\n                synclistSwitch={this.renderSyncToogle(\n                  c.collection_version.name,\n                  c.collection_version.namespace,\n                )}\n                {...this.renderMenu(true, c)}\n              />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private getSynclist() {\n    MySyncListAPI.list().then((result) => {\n      // ignore results if more than 1 is returned\n      // TODO: should we throw an error for this or just ignore it?\n      if (result.data.meta.count === 1) {\n        this.setState({ synclist: result.data.data[0] });\n      } else {\n        console.error(\n          `my-synclist returned ${result.data.meta.count} synclists`,\n        );\n      }\n    });\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, ['view_type']),\n        is_deprecated: false,\n        repository_label: '!hide_from_search',\n        is_highest: true,\n      }).then((result) => {\n        this.setState({\n          collections: result.data.data,\n          numberOfResults: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(Search);\n\nSearch.contextType = AppContext;\n"],"names":["Search","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","params","ParamHelper","location","search","Constants","localStorage","getItem","state","collections","numberOfResults","loading","synclist","undefined","alerts","updateCollection","showImportModal","redirect","noDependencies","deleteCollection","confirmDelete","isDeletionPending","_createClass","key","value","this","load","queryCollections","DEPLOYMENT_MODE","getSynclist","alert","setState","concat","_toConsumableArray","get","closeAlertMixin","_this2","React","Navigate","to","_this$state","noData","length","filterIsSet","updateParams","p","className","AlertList","closeAlert","i","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","collection","addAlert","ImportModal","isOpen","onUploadSuccess","formatPath","Paths","namespace","collection_version","setOpen","warn","toggleImportModal","BaseHeader","title","i18n","CollectionFilter","ignoredParams","CardListSwitcher","size","setItem","view_type","Pagination","count","perPageOptions","isTop","LoadingPageSpinner","EmptyStateNoData","description","renderCollections","warning","variant","EmptyStateFilter","clearAllFilters","renderList","renderCards","_this3","map","c","CollectionCard","_extends","footer","renderSyncToogle","name","menu","renderMenu","displaySignatures","context","featureFlags","display_signatures","_this4","CollectionAPI","then","res","taskId","parsePulpIDFromURL","data","task","waitForTask","deprecated","err","_err$response","response","status","statusText","errorMessage","list","_this5","hasPermission","menuItems","canDeleteCollection","onClick","DropdownItem","handleControlClick","is_deprecated","checkUploadPrivilleges","filter","Boolean","displayMenu","uploadButton","Button","dropdownMenu","StatefulDropdown","items","ariaLabel","cx","_this6","Switch","id","label","isChecked","isCollectionSynced","onChange","toggleCollectionSync","_this7","MyNamespaceAPI","include_related","related_fields","my_permissions","includes","_this8","_objectSpread","colIndex","findIndex","el","push","splice","MySyncListAPI","found","find","policy","_this9","DataList","CollectionListItem","showNamespace","synclistSwitch","_this10","result","meta","console","error","_this11","CollectionVersionAPI","repository_label","is_highest","withRouter","contextType","AppContext"],"sourceRoot":""}