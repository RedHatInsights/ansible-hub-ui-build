{"version":3,"file":"js/7545.98c134acfd312e97f698.js","mappings":"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","sources":["webpack:///./src/containers/ansible-repository/edit.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  AnsibleDistributionAPI,\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n} from 'src/api';\nimport { AnsibleRepositoryForm, Page } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  canAddAnsibleRepository,\n  canEditAnsibleRepository,\n} from 'src/permissions';\nimport { parsePulpIDFromURL, taskAlert } from 'src/utilities';\n\nconst initialRepository: AnsibleRepositoryType = {\n  name: '',\n  description: '',\n  retain_repo_versions: 1,\n  pulp_labels: {},\n  remote: null,\n};\n\nconst AnsibleRepositoryEdit = Page<AnsibleRepositoryType>({\n  breadcrumbs: ({ name }) =>\n    [\n      { url: formatPath(Paths.ansibleRepositories), name: t`Repositories` },\n      name && {\n        url: formatPath(Paths.ansibleRepositoryDetail, { name }),\n        name,\n      },\n      name ? { name: t`Edit` } : { name: t`Add` },\n    ].filter(Boolean),\n\n  condition: (context, item?) =>\n    canAddAnsibleRepository(context) || canEditAnsibleRepository(context, item),\n  displayName: 'AnsibleRepositoryEdit',\n  errorTitle: t`Repository could not be displayed.`,\n  query: ({ name }) => {\n    return AnsibleRepositoryAPI.list({ name })\n      .then(({ data: { results } }) => results[0])\n      .then((repository) => {\n        return AnsibleRepositoryAPI.myPermissions(\n          parsePulpIDFromURL(repository.pulp_href),\n        )\n          .then(({ data: { permissions } }) => permissions)\n          .catch((e) => {\n            console.error(e);\n            return [];\n          })\n          .then((my_permissions) => ({ ...repository, my_permissions }));\n      });\n  },\n\n  title: ({ name }) => name || t`Add new repository`,\n  transformParams: ({ name, ...rest }) => ({\n    ...rest,\n    name: name !== '_' ? name : null,\n  }),\n\n  render: (item, { navigate, queueAlert, state, setState }) => {\n    if (!state.repositoryToEdit) {\n      const repositoryToEdit = {\n        ...initialRepository,\n        ...item,\n      };\n      setState({ repositoryToEdit, errorMessages: {} });\n    }\n\n    const { repositoryToEdit, errorMessages } = state;\n    if (!repositoryToEdit) {\n      return null;\n    }\n\n    const saveRepository = ({\n      createDistribution,\n      hideFromSearch,\n      pipeline,\n    }) => {\n      const { repositoryToEdit } = state;\n\n      const data = { ...repositoryToEdit };\n\n      // prevent \"This field may not be blank.\" for nullable fields\n      Object.keys(data).forEach((k) => {\n        if (data[k] === '') {\n          data[k] = null;\n        }\n      });\n\n      if (item) {\n        delete data.last_sync_task;\n        delete data.last_synced_metadata_time;\n        delete data.latest_version_href;\n        delete data.pulp_created;\n        delete data.pulp_href;\n        delete data.versions_href;\n      }\n\n      delete data.my_permissions;\n\n      data.pulp_labels ||= {};\n      if (hideFromSearch) {\n        data.pulp_labels.hide_from_search = '';\n      } else {\n        delete data.pulp_labels.hide_from_search;\n      }\n      if (pipeline) {\n        data.pulp_labels.pipeline = pipeline;\n      } else {\n        delete data.pulp_labels.pipeline;\n      }\n\n      let promise = !item\n        ? AnsibleRepositoryAPI.create(data).then(({ data: newData }) => {\n            queueAlert({\n              variant: 'success',\n              title: t`Successfully created repository ${data.name}`,\n            });\n\n            return newData.pulp_href;\n          })\n        : AnsibleRepositoryAPI.update(\n            parsePulpIDFromURL(item.pulp_href),\n            data,\n          ).then(({ data: task }) => {\n            queueAlert(\n              taskAlert(task, t`Update started for repository ${data.name}`),\n            );\n\n            return item.pulp_href;\n          });\n\n      if (createDistribution) {\n        // only alphanumerics, slashes, underscores and dashes are allowed in base_path, transform anything else to _\n        const basePathTransform = (name) =>\n          name.replaceAll(/[^-a-zA-Z0-9_/]/g, '_');\n        let distributionName = data.name;\n\n        promise = promise\n          .then((pulp_href) =>\n            AnsibleDistributionAPI.create({\n              name: distributionName,\n              base_path: basePathTransform(distributionName),\n              repository: pulp_href,\n            }).catch(() => {\n              // if distribution already exists, try a numeric suffix to name & base_path\n              distributionName =\n                data.name + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n              return AnsibleDistributionAPI.create({\n                name: distributionName,\n                base_path: basePathTransform(distributionName),\n                repository: pulp_href,\n              });\n            }),\n          )\n          .then(({ data: task }) =>\n            queueAlert(\n              taskAlert(\n                task,\n                t`Creation started for distribution ${distributionName}`,\n              ),\n            ),\n          );\n      }\n\n      promise\n        .then(() => {\n          setState({\n            errorMessages: {},\n            repositoryToEdit: undefined,\n          });\n\n          navigate(\n            formatPath(Paths.ansibleRepositoryDetail, {\n              name: data.name,\n            }),\n          );\n        })\n        .catch(({ response: { data } }) =>\n          setState({\n            errorMessages: {\n              __nofield: data.non_field_errors || data.detail,\n              ...data,\n            },\n          }),\n        );\n    };\n\n    const closeModal = () => {\n      setState({ errorMessages: {}, repositoryToEdit: undefined });\n      navigate(\n        item\n          ? formatPath(Paths.ansibleRepositoryDetail, {\n              name: item.name,\n            })\n          : formatPath(Paths.ansibleRepositories),\n      );\n    };\n\n    return (\n      <AnsibleRepositoryForm\n        allowEditName={!item}\n        errorMessages={errorMessages}\n        onCancel={closeModal}\n        onSave={saveRepository}\n        repository={repositoryToEdit}\n        updateRepository={(r) => setState({ repositoryToEdit: r })}\n      />\n    );\n  },\n});\n\nexport default AnsibleRepositoryEdit;\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository'); under feature flag\nexport const canViewAnsibleRepositories = ({ user, featureFlags }) =>\n  user && featureFlags?.display_repositories;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["initialRepository","name","description","retain_repo_versions","pulp_labels","remote","Page","breadcrumbs","_ref","url","formatPath","Paths","i18n","filter","Boolean","condition","context","item","canAddAnsibleRepository","canEditAnsibleRepository","displayName","errorTitle","query","_ref2","AnsibleRepositoryAPI","then","_ref3","data","results","repository","parsePulpIDFromURL","pulp_href","_ref4","permissions","e","console","error","my_permissions","_objectSpread","title","_ref5","transformParams","_ref6","_objectWithoutProperties","_excluded","render","_ref7","navigate","queueAlert","state","setState","repositoryToEdit","errorMessages","React","AnsibleRepositoryForm","allowEditName","onCancel","undefined","onSave","_ref8","createDistribution","hideFromSearch","pipeline","Object","keys","forEach","k","last_sync_task","last_synced_metadata_time","latest_version_href","pulp_created","versions_href","hide_from_search","promise","_ref10","task","taskAlert","_ref9","newData","variant","basePathTransform","replaceAll","distributionName","AnsibleDistributionAPI","base_path","Math","floor","random","Number","MAX_SAFE_INTEGER","_ref11","_ref12","response","__nofield","non_field_errors","detail","updateRepository","r","has_model_perms","permission","hasPermission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canAddAnsibleRemote","canDeleteAnsibleRemote","canEditAnsibleRemote","canViewAnsibleRemotes","canEditAnsibleRemoteAccess","canDeleteAnsibleRepository","canSyncAnsibleRepository","canViewAnsibleRepositories","featureFlags","display_repositories","canEditAnsibleRepositoryAccess","canRevertAnsibleRepositoryVersion"],"sourceRoot":""}