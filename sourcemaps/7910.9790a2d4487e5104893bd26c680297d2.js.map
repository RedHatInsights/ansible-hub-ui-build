{"version":3,"file":"js/7910.a4de9588ddb7f03fcfb7.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-dependencies.tsx"],"sourcesContent":["import {\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { repositoryBasePath } from 'src/utilities';\n\nexport interface IBaseCollectionState {\n  actuallyCollection?: CollectionDetailType;\n  alerts?: AlertType[];\n  collection?: CollectionVersionSearch;\n  collections?: CollectionVersionSearch[];\n  collectionsCount?: number;\n  content?: CollectionVersionContentType;\n  distroBasePath?: string;\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n}\n\n// Caches the collection data when matching, prevents redundant fetches between collection detail tabs\nconst cache = {\n  repository: null,\n  namespace: null,\n  name: null,\n  version: null,\n\n  actuallyCollection: null,\n  collection: null,\n  collections: [],\n  collectionsCount: 0,\n  content: null,\n};\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  setCollection,\n  stateParams,\n}) {\n  const { version } = stateParams;\n  const { collection: name, namespace, repo } = matchParams;\n\n  // try loading from cache\n  if (\n    !forceReload &&\n    cache.repository === repo &&\n    cache.namespace === namespace &&\n    cache.name === name &&\n    cache.version === version\n  ) {\n    setCollection(\n      cache.collections,\n      cache.collection,\n      cache.content,\n      cache.collectionsCount,\n      cache.actuallyCollection,\n    );\n    return;\n  }\n\n  const requestParams = {\n    ...(repo ? { repository_name: repo } : {}),\n    namespace,\n    name,\n  };\n\n  const currentVersion = (\n    version\n      ? CollectionVersionAPI.list({ ...requestParams, version })\n      : CollectionVersionAPI.list({ ...requestParams, is_highest: true })\n  ).then(({ data }) => data.data[0]);\n\n  const content = currentVersion\n    .then((collection) =>\n      CollectionAPI.getContent(\n        namespace,\n        name,\n        collection.collection_version.version,\n      ),\n    )\n    .then(({ data: { results } }) => results[0])\n    .catch(() => navigate(formatPath(Paths.notFound)));\n\n  // Note: this only provides the first page - containing the latest version, and all items for the version *selector*,\n  // but the version *modal* is using a separate call, in CollectionHeader updatePaginationParams\n  const versions = CollectionVersionAPI.list({\n    ...requestParams,\n    order_by: '-version',\n    page_size: 10,\n  })\n    .then(({ data }) => data)\n    .catch(() => ({ data: [], meta: { count: 0 } }));\n\n  const actuallyCollection = repositoryBasePath(repo)\n    .then((basePath) => CollectionAPI.getDetail(basePath, namespace, name))\n    .then(({ data }) => data);\n\n  return Promise.all([\n    versions,\n    currentVersion,\n    content,\n    actuallyCollection,\n  ]).then(\n    ([\n      {\n        data: collections,\n        meta: { count: collectionsCount },\n      },\n      collection,\n      content,\n      actuallyCollection,\n    ]) => {\n      setCollection(\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      );\n\n      cache.repository = repo;\n      cache.namespace = namespace;\n      cache.name = name;\n      cache.version = version;\n\n      cache.actuallyCollection = actuallyCollection;\n      cache.collection = collection;\n      cache.collections = collections;\n      cache.collectionsCount = collectionsCount;\n      cache.content = content;\n    },\n  );\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionUsedByDependencies,\n  CollectionVersion,\n  CollectionVersionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  CollectionDependenciesList,\n  CollectionHeader,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper, errorMessage } from 'src/utilities';\nimport { IBaseCollectionState, loadCollection } from './base';\nimport './collection-dependencies.scss';\n\ninterface IState extends IBaseCollectionState {\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n}\n\nclass CollectionDependencies extends React.Component<RouteProps, IState> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n  private cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      actuallyCollection: null,\n      alerts: [],\n      collection: null,\n      collections: [],\n      collectionsCount: 0,\n      content: null,\n      dependencies_repos: [],\n      params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      actuallyCollection,\n      alerts,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n    } = this.state;\n\n    if (collections.length <= 0) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const { collection_version: version, repository } = collection;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        url: formatPath(Paths.namespaceDetail, {\n          namespace: version.namespace,\n        }),\n        name: version.namespace,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: version.namespace,\n          collection: version.name,\n          repo: repository.name,\n        }),\n        name: version.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(version.dependencies).length;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          activeTab='dependencies'\n          actuallyCollection={actuallyCollection}\n          breadcrumbs={breadcrumbs}\n          collection={collection}\n          collections={collections}\n          collectionsCount={collectionsCount}\n          content={content}\n          params={headerParams}\n          reload={() => this.loadData(true)}\n          repo={repository.name}\n          updateParams={(p) => {\n            this.updateParams(this.combineParams(this.state.params, p), () =>\n              this.loadData(true),\n            );\n          }}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              <p>{t`This collections requires the following collections for use`}</p>\n\n              {noDependencies ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <CollectionDependenciesList\n                  collection={this.state.collection}\n                  dependencies_repos={this.state.dependencies_repos}\n                />\n              )}\n\n              <p>{t`This collection is being used by`}</p>\n            </div>\n            <CollectionUsedbyDependenciesList\n              usedByDependencies={usedByDependencies}\n              itemCount={usedByDependenciesCount}\n              params={dependenciesParams}\n              usedByDependenciesLoading={usedByDependenciesLoading}\n              updateParams={(p) =>\n                this.updateParams(\n                  this.combineParams(this.state.params, p),\n                  () => this.loadUsedByDependencies(),\n                )\n              }\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies = this.state.collection.collection_version.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace: namespace,\n        version_range: version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        const [collection] = result.data.data;\n\n        dependency_repo.repo = collection.repository.name;\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      if (this.cancelToken) {\n        this.cancelToken.cancel('request-canceled');\n      }\n\n      this.cancelToken = CollectionAPI.getCancelToken();\n\n      const { name, namespace } = this.state.collection.collection_version;\n\n      // We have to use CollectionAPI here for used by dependencies\n      // because cross repo collection search doesn't allow `name__icontains` filter\n      CollectionAPI.getUsedDependenciesByCollection(\n        namespace,\n        name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n        this.cancelToken,\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch(({ response, message }) => {\n          if (message !== 'request-canceled') {\n            const { status, statusText } = response;\n            this.setState({\n              usedByDependenciesLoading: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Dependent collections could not be displayed.`,\n                  description: errorMessage(status, statusText),\n                },\n              ],\n            });\n          }\n        })\n        .finally(() => {\n          this.cancelToken = undefined;\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      setCollection: (\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      ) =>\n        this.setState(\n          {\n            collections,\n            collection,\n            content,\n            collectionsCount,\n            actuallyCollection,\n          },\n          callback,\n        ),\n      stateParams: this.state.params.version\n        ? { version: this.state.params.version }\n        : {},\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private combineParams(...params) {\n    return params.reduce((acc, cur) => ({ ...acc, ...cur }));\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n\nCollectionDependencies.contextType = AppContext;\n"],"names":["cache","repository","namespace","name","version","actuallyCollection","collection","collections","collectionsCount","content","loadCollection","_ref","forceReload","matchParams","navigate","setCollection","stateParams","repo","requestParams","_objectSpread","repository_name","currentVersion","CollectionVersionAPI","list","is_highest","then","_ref2","data","CollectionAPI","getContent","collection_version","_ref3","results","formatPath","Paths","notFound","versions","order_by","page_size","_ref4","meta","count","repositoryBasePath","basePath","getDetail","_ref5","Promise","all","_ref6","_ref7","_slicedToArray","_ref7$","CollectionDependencies","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","params","ParamHelper","parseParamString","location","search","state","alerts","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","_createClass","key","value","this","loadData","_this2","_this$state","length","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","namespaceDetail","collectionByRepo","i18n","_","id","headerParams","getReduced","ignoredParams","dependenciesParams","noDependencies","Object","keys","dependencies","AlertList","closeAlert","i","CollectionHeader","activeTab","reload","updateParams","p","combineParams","Main","className","EmptyStateNoData","title","description","CollectionDependenciesList","CollectionUsedbyDependenciesList","itemCount","loadUsedByDependencies","_this3","arguments","undefined","loadCollectionsDependenciesRepos","callback","_this4","promises","forEach","dependency","_dependency$split","split","_dependency$split2","dependency_repo","version_range","path","push","promise","loadDependencyRepo","setState","result","_this5","cancelToken","cancel","getCancelToken","_this5$state$collecti","getUsedDependenciesByCollection","response","message","status","statusText","concat","_toConsumableArray","variant","errorMessage","_this6","routeParams","get","updateParamsMixin","_len","Array","_key","reduce","acc","cur","closeAlertMixin","v","match","withRouter","contextType","AppContext"],"sourceRoot":""}