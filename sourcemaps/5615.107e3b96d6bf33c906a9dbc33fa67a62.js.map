{"version":3,"file":"js/5615.63a4389067a89a884e4f.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-detail.tsx"],"sourcesContent":["import {\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { repositoryBasePath } from 'src/utilities';\n\nexport interface IBaseCollectionState {\n  actuallyCollection?: CollectionDetailType;\n  alerts?: AlertType[];\n  collection?: CollectionVersionSearch;\n  collections?: CollectionVersionSearch[];\n  collectionsCount?: number;\n  content?: CollectionVersionContentType;\n  distroBasePath?: string;\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n}\n\n// Caches the collection data when matching, prevents redundant fetches between collection detail tabs\nconst cache = {\n  repository: null,\n  namespace: null,\n  name: null,\n  version: null,\n\n  actuallyCollection: null,\n  collection: null,\n  collections: [],\n  collectionsCount: 0,\n  content: null,\n};\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  setCollection,\n  stateParams,\n}) {\n  const { version } = stateParams;\n  const { collection: name, namespace, repo } = matchParams;\n\n  // try loading from cache\n  if (\n    !forceReload &&\n    cache.repository === repo &&\n    cache.namespace === namespace &&\n    cache.name === name &&\n    cache.version === version\n  ) {\n    setCollection(\n      cache.collections,\n      cache.collection,\n      cache.content,\n      cache.collectionsCount,\n      cache.actuallyCollection,\n    );\n    return;\n  }\n\n  const requestParams = {\n    ...(repo ? { repository_name: repo } : {}),\n    namespace,\n    name,\n  };\n\n  const currentVersion = (\n    version\n      ? CollectionVersionAPI.list({ ...requestParams, version })\n      : CollectionVersionAPI.list({ ...requestParams, is_highest: true })\n  ).then(({ data }) => data.data[0]);\n\n  const content = currentVersion\n    .then((collection) =>\n      CollectionAPI.getContent(\n        namespace,\n        name,\n        collection.collection_version.version,\n      ),\n    )\n    .then(({ data: { results } }) => results[0])\n    .catch(() => navigate(formatPath(Paths.notFound)));\n\n  // Note: this only provides the first page - containing the latest version, and all items for the version *selector*,\n  // but the version *modal* is using a separate call, in CollectionHeader updatePaginationParams\n  const versions = CollectionVersionAPI.list({\n    ...requestParams,\n    order_by: '-version',\n    page_size: 10,\n  })\n    .then(({ data }) => data)\n    .catch(() => ({ data: [], meta: { count: 0 } }));\n\n  const actuallyCollection = repositoryBasePath(repo)\n    .then((basePath) => CollectionAPI.getDetail(basePath, namespace, name))\n    .then(({ data }) => data);\n\n  return Promise.all([\n    versions,\n    currentVersion,\n    content,\n    actuallyCollection,\n  ]).then(\n    ([\n      {\n        data: collections,\n        meta: { count: collectionsCount },\n      },\n      collection,\n      content,\n      actuallyCollection,\n    ]) => {\n      setCollection(\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      );\n\n      cache.repository = repo;\n      cache.namespace = namespace;\n      cache.name = name;\n      cache.version = version;\n\n      cache.actuallyCollection = actuallyCollection;\n      cache.collection = collection;\n      cache.collections = collections;\n      cache.collectionsCount = collectionsCount;\n      cache.content = content;\n    },\n  );\n}\n","import { isEqual } from 'lodash';\nimport React, { Component } from 'react';\nimport {\n  AlertList,\n  CollectionHeader,\n  CollectionInfo,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { ParamHelper, RouteProps, withRouter } from 'src/utilities';\nimport { IBaseCollectionState, loadCollection } from './base';\n\n// renders collection level information\nclass CollectionDetail extends Component<RouteProps, IBaseCollectionState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      actuallyCollection: null,\n      alerts: [],\n      collection: null,\n      collections: [],\n      collectionsCount: 0,\n      content: null,\n      distroBasePath: null,\n      params,\n    };\n  }\n\n  componentDidMount() {\n    this.loadCollections(true);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.location, this.props.location)) {\n      this.loadCollections(false);\n    }\n  }\n\n  render() {\n    const {\n      actuallyCollection,\n      alerts,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n    } = this.state;\n\n    if (collections.length <= 0) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const { collection_version: version } = collection;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        url: formatPath(Paths.namespaceDetail, {\n          namespace: version.namespace,\n        }),\n        name: version.namespace,\n      },\n      {\n        name: version.name,\n      },\n    ];\n\n    return (\n      <>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          activeTab='install'\n          actuallyCollection={actuallyCollection}\n          breadcrumbs={breadcrumbs}\n          collection={collection}\n          collections={collections}\n          collectionsCount={collectionsCount}\n          content={content}\n          params={params}\n          reload={() => this.loadCollections(true)}\n          repo={this.props.routeParams.repo}\n          updateParams={(p) =>\n            this.updateParams(p, () => this.loadCollections(true))\n          }\n        />\n        <Main>\n          <section className='body'>\n            <CollectionInfo\n              {...collection}\n              content={content}\n              updateParams={(p) => this.updateParams(p)}\n              params={this.state.params}\n              addAlert={(variant, title, description) =>\n                this.setState({\n                  alerts: [\n                    ...this.state.alerts,\n                    {\n                      variant,\n                      title,\n                      description,\n                    },\n                  ],\n                })\n              }\n            />\n          </section>\n        </Main>\n      </>\n    );\n  }\n\n  private loadCollections(forceReload) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      setCollection: (\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      ) =>\n        this.setState({\n          collections,\n          collection,\n          content,\n          collectionsCount,\n          actuallyCollection,\n        }),\n      stateParams: this.state.params,\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n\nexport default withRouter(CollectionDetail);\n"],"names":["cache","repository","namespace","name","version","actuallyCollection","collection","collections","collectionsCount","content","loadCollection","_ref","forceReload","matchParams","navigate","setCollection","stateParams","repo","requestParams","_objectSpread","repository_name","currentVersion","CollectionVersionAPI","list","is_highest","then","_ref2","data","CollectionAPI","getContent","collection_version","_ref3","results","formatPath","Paths","notFound","versions","order_by","page_size","_ref4","meta","count","repositoryBasePath","basePath","getDetail","_ref5","Promise","all","_ref6","_ref7","_slicedToArray","_ref7$","CollectionDetail","_Component","props","_this","_classCallCheck","_callSuper","params","ParamHelper","parseParamString","location","search","state","alerts","distroBasePath","_inherits","_createClass","key","value","this","loadCollections","prevProps","isEqual","_this2","_this$state","length","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","namespaceDetail","AlertList","closeAlert","i","CollectionHeader","activeTab","reload","routeParams","updateParams","p","Main","className","CollectionInfo","_extends","addAlert","variant","title","description","setState","concat","_toConsumableArray","_this3","get","updateParamsMixin","closeAlertMixin","Component","_defineProperty","AppContext","withRouter"],"sourceRoot":""}