{"version":3,"file":"js/7429.95e4119cb76120d9e397.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Checkbox,\n  DropdownItem,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionFilter,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  Pagination,\n  PartnerHeader,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RouteProps,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoURL,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\nimport './namespace-detail.scss';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface IState {\n  alerts: AlertType[];\n  canSign: boolean;\n  collections: CollectionVersionSearch[];\n  confirmDelete: boolean;\n  deleteAll: boolean;\n  deleteCollection: CollectionVersionSearch;\n  filteredCount: number;\n  group: GroupType;\n  user: UserType;\n  isDeletionPending: boolean;\n  isNamespacePending: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  namespace: NamespaceType;\n  params: {\n    group?: string;\n    keywords?: string;\n    namespace?: string;\n    page?: number;\n    page_size?: number;\n    repository_name?: string;\n    sort?: string;\n    tab?: string;\n    user?: string;\n  };\n  redirect: string;\n  showControls: boolean;\n  showUserRemoveModal?: UserType;\n  showUserSelectWizard?: { user?: UserType; roles?: RoleType[] };\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showImportModal: boolean;\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  unfilteredCount: number;\n  updateCollection: CollectionVersionSearch;\n  warning: string;\n}\n\nexport class NamespaceDetail extends React.Component<RouteProps, IState> {\n  nonAPIParams = ['tab', 'group', 'user'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    params.namespace = props.routeParams.namespace;\n    if (props.routeParams.repo && !params.repository_name) {\n      params.repository_name = props.routeParams.repo;\n    }\n\n    this.state = {\n      alerts: [],\n      canSign: false,\n      collections: [],\n      confirmDelete: false,\n      deleteAll: true,\n      deleteCollection: null,\n      filteredCount: 0,\n      group: null,\n      user: null,\n      isDeletionPending: false,\n      isNamespacePending: false,\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      namespace: null,\n      params,\n      redirect: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showImportModal: false,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      unfilteredCount: 0,\n      updateCollection: null,\n      warning: '',\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = ParamHelper.parseParamString(this.props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    if (prevProps.location.search !== this.props.location.search) {\n      params.namespace = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params.group, this.state.namespace.groups),\n        user: this.filterUser(params.user, this.state.namespace.users),\n      });\n    }\n\n    if (\n      prevProps.routeParams.repo !== this.props.routeParams.repo &&\n      this.props.routeParams.repo &&\n      (!params.repository_name ||\n        params.repository_name === prevProps.routeParams.repo)\n    ) {\n      params.repository_name = this.props.routeParams.repo;\n      this.setState({ params });\n    }\n  }\n\n  filterUser(username, users) {\n    return username\n      ? users.find((u) => u.name === username || u.username === username)\n      : null;\n  }\n\n  filterGroup(name, groups) {\n    return name ? groups.find((g) => g.name === name) : null;\n  }\n\n  private updateRoles({\n    users = null,\n    groups = null,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      users: users || this.state.namespace.users,\n      groups: groups || this.state.namespace.groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets users/groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  render() {\n    const {\n      alerts,\n      canSign,\n      collections,\n      confirmDelete,\n      deleteCollection,\n      filteredCount,\n      isDeletionPending,\n      isNamespacePending,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      namespace,\n      params,\n      redirect,\n      showControls,\n      showImportModal,\n      updateCollection,\n      warning,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'access', name: t`Access` },\n    ].filter(Boolean);\n\n    const tab = params.tab || 'collections';\n    const { user, group } = params;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access' && (group || user)\n        ? {\n            url: formatPath(\n              Paths.namespaceDetail,\n              { namespace: namespace.name },\n              { tab },\n            ),\n            name: t`Access`,\n          }\n        : null,\n      tab === 'access' && group ? { name: t`Group ${group}` } : null,\n      tab === 'access' && user ? { name: t`User ${user}` } : null,\n      tab === 'access' && !user && !group ? { name: t`Access` } : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoURL('published');\n\n    const noData =\n      filteredCount === 0 &&\n      !filterIsSet(params, [\n        'is_signed',\n        'keywords',\n        'repository_name',\n        'tags',\n      ]);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'user',\n      'view_type',\n    ];\n\n    const { hasPermission } = this.context;\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || hasPermission('galaxy.change_namespace');\n\n    // remove ?user/group (access tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n    delete tabParams.user;\n\n    const repository = params.repository_name || null;\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    return (\n      <>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection?.collection_version}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          />\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          filters={\n            tab === 'collections' ? (\n              <div>\n                <div className='hub-toolbar hub-toolbar-left'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={filteredCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        />\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >{t`Upload collection`}</Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={filteredCount}\n                  displaySignatures={\n                    this.context.featureFlags.display_signatures\n                  }\n                  collectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <section className='body'>\n              <AccessTab\n                showUserRemoveModal={this.state.showUserRemoveModal}\n                showUserSelectWizard={this.state.showUserSelectWizard}\n                showGroupRemoveModal={this.state.showGroupRemoveModal}\n                showGroupSelectWizard={this.state.showGroupSelectWizard}\n                showRoleRemoveModal={this.state.showRoleRemoveModal}\n                showRoleSelectWizard={this.state.showRoleSelectWizard}\n                canEditOwners={canEditOwners}\n                group={this.state.group}\n                groups={namespace.groups}\n                user={this.state.user}\n                users={namespace.users}\n                name={namespace.name}\n                pulpObjectType='pulp_ansible/namespaces'\n                selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n                updateProps={(prop) => {\n                  this.setState(prop);\n                }}\n                addUser={(user, roles) => {\n                  const { users, name } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newUsers = [...users, newUser];\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showUserSelectWizard: null },\n                  });\n                }}\n                removeUser={(user) => {\n                  const { name, users } = namespace;\n                  const newUsers = users.filter((u) => u !== user);\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showUserRemoveModal: null },\n                  });\n                }}\n                addGroup={(group, roles) => {\n                  const { groups, name } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newGroups = [...groups, newGroup];\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showGroupSelectWizard: null },\n                  });\n                }}\n                removeGroup={(group) => {\n                  const { name, groups } = namespace;\n                  const newGroups = groups.filter((g) => g !== group);\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showGroupRemoveModal: null },\n                  });\n                }}\n                addUserRole={(user, roles) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: [\n                      ...user.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeUserRole={(role, user) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: user.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                addRole={(group, roles) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: [\n                      ...group.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeRole={(role, group) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: group.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                urlPrefix={formatPath(Paths.namespaceDetail, {\n                  namespace: namespace.name,\n                })}\n              />\n            </section>\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => this.signAllCertificates(namespace, repository)}\n            onCancel={() => this.setState({ isOpenSignModal: false })}\n          />\n        )}\n      </>\n    );\n  }\n\n  private handleCollectionAction(pulp_href, action) {\n    const collection = this.state.collections.find(\n      (c) => c.collection_version.pulp_href === pulp_href,\n    );\n    const { name } = collection.collection_version;\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(collection)\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.is_deprecated\n                ? t`Collection \"${name}\" has been successfully undeprecated.`\n                : t`Collection \"${name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType, repository: string) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository_name: repository,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        // FIXME: use taskAlert\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              id: 'loading-signing',\n              variant: 'success',\n              title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n            },\n          ],\n          isOpenSignModal: false,\n        });\n\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.loadCollections();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n          isOpenSignModal: false,\n        });\n      });\n  }\n\n  private loadAllCollections(params) {\n    return CollectionVersionAPI.list({\n      ...params,\n      is_highest: true,\n      namespace: this.props.routeParams.namespace,\n      repository_label: '!hide_from_search',\n    });\n  }\n\n  private loadCollections() {\n    return this.loadAllCollections(\n      ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        filteredCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      this.loadCollections(),\n      this.loadAllCollections({\n        page: 1,\n        page_size: 1,\n      }),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then(\n        ([\n          _collections,\n          {\n            data: {\n              meta: { count: unfilteredCount },\n            },\n          },\n          { data: namespace },\n          myNamespace,\n        ]) => {\n          this.setState({\n            canSign: canSignNamespace(this.context, myNamespace?.data),\n            group: this.filterGroup(this.state.params.group, namespace.groups),\n            user: this.filterUser(this.state.params.user, namespace.users),\n            namespace: {\n              ...namespace,\n              // transform to use username, don't break when missing\n              users: namespace.users\n                ? namespace.users.map(({ name, object_roles }) => ({\n                    username: name,\n                    object_roles,\n                  }))\n                : [],\n            },\n            showControls: !!myNamespace,\n            unfilteredCount,\n          });\n        },\n      )\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections, unfilteredCount } = this.state;\n    const { can_upload_signatures } = this.context.featureFlags;\n    const { ai_deny_index } = this.context.featureFlags;\n    const { hasPermission } = this.context;\n    const repository = this.state.params.repository_name || null;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='edit'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      hasPermission('galaxy.delete_namespace') &&\n        (unfilteredCount === 0 ? (\n          <DropdownItem\n            key='delete'\n            onClick={() => this.setState({ isOpenNamespaceModal: true })}\n          >{t`Delete namespace`}</DropdownItem>\n        ) : (\n          <Tooltip\n            key='delete'\n            isVisible={false}\n            content={\n              <Trans>\n                Cannot delete namespace until <br />\n                collections&apos; dependencies have <br />\n                been deleted\n              </Trans>\n            }\n            position='left'\n          >\n            <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n          </Tooltip>\n        )),\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign &&\n        !can_upload_signatures &&\n        (repository ? (\n          <DropdownItem\n            key='sign-collections'\n            data-cy='sign-all-collections-button'\n            onClick={() => this.setState({ isOpenSignModal: true })}\n          >\n            {t`Sign all collections in ${repository}`}\n          </DropdownItem>\n        ) : (\n          <DropdownItem\n            key='sign-collections'\n            isDisabled\n            description={t`Please select a repository filter`}\n          >\n            {t`Sign all collections`}\n          </DropdownItem>\n        )),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Ansible Lightspeed settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls' />;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button\n            onClick={() => this.setState({ showImportModal: true })}\n          >{t`Upload collection`}</Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb().url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionVersionSearch) {\n    const { hasPermission } = this.context;\n    const hasObjectPermission = (permission, namespace) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n    const { showControls } = this.state;\n    const { display_repositories, ai_deny_index } = this.context.featureFlags;\n    const canDeleteCommunityCollection =\n      ai_deny_index &&\n      hasObjectPermission('galaxy.change_namespace', this.state.namespace);\n\n    if (!showControls) {\n      return;\n    }\n\n    return {\n      uploadButton: (\n        <Button\n          onClick={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'upload',\n            )\n          }\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n      ),\n      dropdownMenu: (\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection:\n                hasPermission('ansible.delete_collection') ||\n                canDeleteCommunityCollection,\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                  deleteAll: true,\n                }),\n              deleteAll: true,\n              display_repositories: display_repositories,\n            }),\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection:\n                hasPermission('ansible.delete_collection') ||\n                canDeleteCommunityCollection,\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                  deleteAll: false,\n                }),\n              deleteAll: false,\n              display_repositories: display_repositories,\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(\n                  collection.collection_version.pulp_href,\n                  'deprecate',\n                )\n              }\n              key='deprecate'\n            >\n              {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      ),\n    };\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","url","confirmDelete","context","queueAlert","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","alerts","concat","_toConsumableArray","i18n","_","description","errorMessage","params","ParamHelper","parseParamString","location","search","routeParams","repo","repository_name","canSign","collections","deleteAll","deleteCollection","filteredCount","group","user","isDeletionPending","isOpenSignModal","isOpenWisdomModal","showControls","showGroupRemoveModal","showGroupSelectWizard","showImportModal","showRoleRemoveModal","showRoleSelectWizard","unfilteredCount","updateCollection","warning","_createClass","key","value","this","load","setAlerts","prevProps","filterGroup","groups","filterUser","users","username","find","u","g","_ref","_this2","_ref$users","_ref$groups","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","update","_objectSpread","addAlert","_ref2","_ref2$response","_this$state$namespace","_deleteCollection$rep","_this3","_this$state","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","formatPath","Paths","namespaceDetail","repositoryUrl","getRepoURL","noData","filterIsSet","updateParams","loadCollections","ignoredParams","hasPermission","canEditOwners","related_fields","my_permissions","includes","tabParams","repository","deleteFromRepo","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","collection","collection_version","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","className","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","Alert","actionClose","AlertActionCloseButton","onClose","PartnerHeader","p","pageControls","renderPageControls","filters","CollectionFilter","Pagination","count","isTop","Main","EmptyStateNoData","button","Button","onClick","CollectionList","itemCount","displaySignatures","featureFlags","display_signatures","collectionControls","renderCollectionControls","href","target","rel","ExternalLinkAltIcon","ClipboardCopy","isReadOnly","renderResources","AccessTab","showUserRemoveModal","showUserSelectWizard","pulpObjectType","selectRolesMessage","updateProps","prop","addUser","roles","newUser","object_roles","map","_ref3","newUsers","updateRoles","removeUser","addGroup","newGroup","_ref4","newGroups","removeGroup","addUserRole","_ref5","removeUserRole","role","addRole","_ref6","removeRole","urlPrefix","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","pulp_href","action","_this4","c","CollectionAPI","setDeprecation","result","taskId","parsePulpIDFromURL","data","task","waitForTask","is_deprecated","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","sign","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","task_id","error","x","CollectionVersionAPI","list","is_highest","repository_label","_this6","loadAllCollections","getReduced","nonAPIParams","meta","_this7","Promise","all","page","page_size","get","include_related","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_ref7","_ref8","_slicedToArray","myNamespace","canSignNamespace","_ref9","notFound","updateParamsMixin","nonQueryStringParams","_this8","_this$state2","can_upload_signatures","ai_deny_index","dropdownItems","DropdownItem","component","Link","editNamespace","Tooltip","isVisible","content","position","StatefulDropdown","items","newState","closeAlertMixin","_namespace$related_fi","_namespace$related_fi2","_this9","_this$context$feature","display_repositories","canDeleteCommunityCollection","uploadButton","handleCollectionAction","dropdownMenu","deleteMenuOption","canDeleteCollection","noDependencies","tryOpenDeleteModalWithConfirm","ariaLabel","contextType","AppContext","withRouter"],"sourceRoot":""}