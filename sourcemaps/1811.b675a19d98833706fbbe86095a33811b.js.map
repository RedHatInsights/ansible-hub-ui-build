{"version":3,"file":"js/1811.271c69c0fe8dc4e4c68e.js","mappings":"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","sources":["webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/actions/ansible-repository-collection-version-add.tsx","webpack:///./src/actions/ansible-repository-collection-version-remove.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { Button, DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: string;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => React.ReactNode | null;\n  disabled: (item, actionContext) => string | null;\n  dropdownItem: (item, actionContext) => React.ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title,\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={title}>\n          <Button variant={buttonVariant} isDisabled>\n            {title}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={title}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {title}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={title}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {title}\n        </DropdownItem>\n      ) : (\n        <DropdownItem key={title} onClick={() => onClick(item, actionContext)}>\n          {title}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: t`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: t`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: t`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: t`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { getRepoUrl } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: t`Copy CLI configuration`,\n  onClick: (item, { addAlert }) => {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${item.name}_repo`,\n      '',\n      `[galaxy_server.${item.name}_repo]`,\n      `url=${getRepoUrl()}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n      description: <pre>{cliConfig}</pre>,\n    });\n  },\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: t`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n  disabled: ({ name }) => {\n    if (Constants.PROTECTED_REPOSITORIES.includes(name)) {\n      return t`Protected repositories cannot be deleted.`;\n    }\n\n    return null;\n  },\n});\n\nfunction deleteRepository({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => setState({ deleteModalOpen: null }),\n        addAlert,\n      ),\n    );\n}\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: t`Sync`,\n  onClick: ({ name, pulp_href }, { addAlert, query }) => {\n    const pulpId = parsePulpIDFromURL(pulp_href);\n    AnsibleRepositoryAPI.sync(pulpId)\n      .then(({ data }) => {\n        addAlert(\n          taskAlert(data.task, t`Sync started for repository \"${name}\".`),\n        );\n\n        query();\n      })\n      .catch(\n        handleHttpError(\n          t`Failed to sync repository \"${name}\"`,\n          () => null,\n          addAlert,\n        ),\n      );\n  },\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    return null;\n  },\n});\n","import { Trans, t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm'></Spinner>}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: t`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Radio } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertList, AlertType, DetailList, closeAlert } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst add = (\n  { repositoryHref, repositoryName },\n  { namespace, name, version, pulp_href: collectionVersionHref },\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  return AnsibleRepositoryAPI.addContent(pulpId, collectionVersionHref)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Started adding ${namespace}.${name} v${version} to repository \"${repositoryName}\".`,\n        ),\n      );\n      setState((ms) => ({ ...ms, addCollectionVersionModal: null }));\n      query({});\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to add ${namespace}.${name} v${version} to repository \"${repositoryName}\".`,\n        () => setState((ms) => ({ ...ms, addCollectionVersionModal: null })),\n        addAlert,\n      ),\n    );\n};\n\nconst AddCollectionVersionModal = ({\n  addAction,\n  closeAction,\n}: {\n  addAction: (selected) => void;\n  closeAction: () => void;\n}) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selected, setSelected] = useState(null);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    return CollectionVersionAPI.list({\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({});\n\n  const renderTableRow = (item: CollectionVersionSearch, index: number) => {\n    const {\n      collection_version: { name, namespace, version, description },\n    } = item;\n\n    return (\n      <tr onClick={() => setSelected(item)} key={index}>\n        <td>\n          <Radio\n            aria-label={`${namespace}.${name} v${version}`}\n            id={`collection-${index}`}\n            isChecked={selected === item}\n            name={`collection-${index}`}\n          />\n        </td>\n        <td>\n          {namespace}.{name} v{version}\n        </td>\n        <td>{description}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() => addAction(selected)}\n          variant='primary'\n          isDisabled={!selected}\n        >\n          {t`Select`}\n        </Button>,\n        <Button key='cancel' onClick={closeAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select a collection`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <DetailList<CollectionVersionSearch>\n          actionContext={{\n            addAlert,\n            state: modalState,\n            setState: setModalState,\n            query,\n            hasPermission: () => {\n              throw 'unused';\n            },\n          }}\n          defaultPageSize={10}\n          defaultSort={'name'}\n          errorTitle={t`Collection versions could not be displayed.`}\n          filterConfig={[\n            {\n              id: 'keywords',\n              title: t`Keywords`,\n            },\n            {\n              id: 'namespace',\n              title: t`Namespace`,\n            },\n          ]}\n          noDataDescription={t`Collection versions will appear once a collection is uploaded.`}\n          noDataTitle={t`No collection versions yet`}\n          query={query}\n          renderTableRow={renderTableRow}\n          sortHeaders={[\n            {\n              title: '',\n              type: 'none',\n              id: 'radio',\n            },\n            {\n              title: t`Collection`,\n              type: 'none',\n              id: 'col1',\n            },\n            {\n              title: t`Description`,\n              type: 'none',\n              id: 'col2',\n            },\n          ]}\n          title={t`Collection versions`}\n        />\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionAddAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Add collection`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.addCollectionVersionModal ? (\n      <AddCollectionVersionModal\n        addAction={(collection) =>\n          add(state.addCollectionVersionModal, collection.collection_version, {\n            addAlert,\n            setState,\n            query,\n          })\n        }\n        closeAction={() =>\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }))\n        }\n      />\n    ) : null,\n  onClick: (\n    _item,\n    {\n      state: {\n        repository: { name: repositoryName, pulp_href: repositoryHref },\n      },\n      setState,\n    },\n  ) =>\n    setState((ms) => ({\n      ...ms,\n      addCollectionVersionModal: {\n        repositoryHref,\n        repositoryName,\n      },\n    })),\n});\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst remove = (\n  {\n    collection: { namespace, name, version },\n    collectionVersionHref,\n    repositoryHref,\n    repositoryName,\n  },\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  return AnsibleRepositoryAPI.removeContent(pulpId, collectionVersionHref)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Removal of ${namespace}.${name} v${version} from repository \"${repositoryName}\" started.`,\n        ),\n      );\n      setState({ removeCollectionVersionModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove ${namespace}.${name} v${version} from repository \"${repositoryName}\".`,\n        () => setState({ removeCollectionVersionModal: null }),\n        addAlert,\n      ),\n    );\n};\n\nconst RemoveCollectionVersionModal = ({\n  name,\n  namespace,\n  repositoryName,\n  version,\n  closeAction,\n  deleteAction,\n}: {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  namespace: string;\n  repositoryName: string;\n  version: string;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Remove collection version?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to remove the collection version{' '}\n          <b>\n            {namespace}.{name} v{version}\n          </b>{' '}\n          from the <b>{repositoryName}</b> repository?\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionRemoveAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Remove`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.removeCollectionVersionModal ? (\n      <RemoveCollectionVersionModal\n        closeAction={() => setState({ removeCollectionVersionModal: null })}\n        deleteAction={() =>\n          remove(state.removeCollectionVersionModal, {\n            addAlert,\n            setState,\n            query,\n          })\n        }\n        name={state.removeCollectionVersionModal.collection.name}\n        namespace={state.removeCollectionVersionModal.collection.namespace}\n        repositoryName={state.removeCollectionVersionModal.repositoryName}\n        version={state.removeCollectionVersionModal.collection.version}\n      />\n    ) : null,\n  onClick: (\n    {\n      collection_version: {\n        namespace,\n        name,\n        version,\n        pulp_href: collectionVersionHref,\n      },\n      repository: { name: repositoryName, pulp_href: repositoryHref },\n    },\n    { setState },\n  ) =>\n    setState({\n      removeCollectionVersionModal: {\n        collection: { namespace, name, version },\n        repositoryName,\n        repositoryHref,\n        collectionVersionHref,\n      },\n    }),\n});\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags?: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository')\nexport const canViewAnsibleRepositories = isLoggedIn;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","i18n","navigate","formatPath","Paths","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","query","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","handleHttpError","deleteRemote","_ref2","_ref3","id","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","ansibleRepositoryCopyAction","cliConfig","concat","getRepoUrl","join","navigator","clipboard","writeText","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","AnsibleRepositoryAPI","_ref7","deleteRepository","Constants","ansibleRepositoryEditAction","canEditAnsibleRepository","ansibleRepositorySyncAction","canSyncAnsibleRepository","_item","hasPermission","remote","last_sync_task","includes","RevertModal","version","cancelAction","revertAction","_useState","useState","_useState2","_slicedToArray","pending","setPending","Modal","actions","Spinner","size","isOpen","onClose","titleIconVariant","Trans","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","repositoryName","number","revert","_ref8","isLatest","AddCollectionVersionModal","addAction","alerts","setAlerts","_useState3","_useState4","selected","setSelected","newParams","_objectSpread","params","ordering","sort","CollectionVersionAPI","_ref7$data","count","meta","results","_useState5","_useState6","modalState","setModalState","className","DetailList","alert","_toConsumableArray","defaultPageSize","defaultSort","errorTitle","filterConfig","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","Radio","isChecked","sortHeaders","type","AlertList","closeAlert","i","ansibleRepositoryCollectionVersionAddAction","addCollectionVersionModal","collection","repositoryHref","collectionVersionHref","ms","add","_ref9","_ref9$state$repositor","repository","RemoveCollectionVersionModal","DeleteModal","spinner","Text","values","components","ansibleRepositoryCollectionVersionRemoveAction","removeCollectionVersionModal","_ref$collection","remove","_ref6$collection_vers","_ref6$repository","has_model_perms","permission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canViewAnsibleRemotes","canEditAnsibleRemoteAccess","canViewAnsibleRepositories","is_anonymous","canEditAnsibleRepositoryAccess"],"sourceRoot":""}