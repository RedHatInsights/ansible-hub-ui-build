{"version":3,"file":"js/429.1673928222393.cb257c68122c397e9a4a.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-detail.scss';\n\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\n\nimport { Link, Navigate } from 'react-router-dom';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  DropdownItem,\n  Tooltip,\n  Text,\n  Checkbox,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport ReactMarkdown from 'react-markdown';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  NamespaceAPI,\n  MyNamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n  GroupType,\n  RoleType,\n} from 'src/api';\n\nimport {\n  CollectionFilter,\n  CollectionList,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  OwnersTab,\n  Pagination,\n  PartnerHeader,\n  EmptyStateNoData,\n  RepoSelector,\n  StatefulDropdown,\n  ClipboardCopy,\n  AlertList,\n  closeAlertMixin,\n  DeleteModal,\n  AlertType,\n  SignAllCertificatesModal,\n  DeleteCollectionModal,\n} from 'src/components';\n\nimport {\n  ParamHelper,\n  getRepoUrl,\n  filterIsSet,\n  errorMessage,\n  waitForTask,\n  canSign as canSignNS,\n  DeleteCollectionUtils,\n} from 'src/utilities';\n\nimport { Constants } from 'src/constants';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IState {\n  canSign: boolean;\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n    group?: number;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n  showControls: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isNamespaceEmpty: boolean;\n  confirmDelete: boolean;\n  isNamespacePending: boolean;\n  alerts: AlertType[];\n  deleteCollection: CollectionListType;\n  isDeletionPending: boolean;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  group: GroupType;\n}\n\ninterface IProps extends RouteProps {\n  selectedRepo: string;\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab', 'group'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.routeParams.namespace;\n\n    this.state = {\n      canSign: false,\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isNamespaceEmpty: false,\n      confirmDelete: false,\n      isNamespacePending: false,\n      alerts: [],\n      deleteCollection: null,\n      isDeletionPending: false,\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      group: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = ParamHelper.parseParamString(this.props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      params['namespace'] = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params['group'], this.state.namespace.groups),\n      });\n    }\n  }\n\n  filterGroup(groupId, groups) {\n    return groupId ? groups.find(({ id }) => Number(groupId) === id) : null;\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateUpdate }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  render() {\n    const {\n      canSign,\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showControls,\n      showImportModal,\n      warning,\n      updateCollection,\n      isOpenNamespaceModal,\n      confirmDelete,\n      isNamespacePending,\n      alerts,\n      deleteCollection,\n      isDeletionPending,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'owners', name: t`Namespace owners` },\n    ].filter(Boolean);\n\n    const tab = params['tab'] || 'collections';\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        name: namespace.name,\n        url:\n          tab === 'owners'\n            ? formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'owners'\n        ? {\n            name: t`Namespace owners`,\n            url: params.group\n              ? formatPath(\n                  Paths.namespaceByRepo,\n                  {\n                    repo: this.context.selectedRepo,\n                    namespace: namespace.name,\n                  },\n                  { tab: 'owners' },\n                )\n              : null,\n          }\n        : null,\n      tab === 'owners' && params.group\n        ? { name: t`Group ${params.group}` }\n        : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoUrl('inbound-' + namespace.name);\n\n    const noData = itemCount === 0 && !filterIsSet(params, ['keywords']);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'view_type',\n    ];\n\n    const { hasPermission } = this.context;\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || hasPermission('galaxy.change_namespace');\n\n    // remove ?group (owners tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                selectedRepo: this.context.selectedRepo,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          contextSelector={\n            <RepoSelector\n              path={this.props.routePath}\n              pathParams={{ namespace: namespace.name }}\n              selectedRepo={this.context.selectedRepo}\n            />\n          }\n          filters={\n            tab === 'collections' ? (\n              <div className='hub-toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        ></PartnerHeader>\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      {t`Upload collection`}\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  showControls={this.state.showControls}\n                  repo={this.context.selectedRepo}\n                  renderCollectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'owners' ? (\n            <OwnersTab\n              showGroupRemoveModal={this.state.showGroupRemoveModal}\n              showGroupSelectWizard={this.state.showGroupSelectWizard}\n              showRoleRemoveModal={this.state.showRoleRemoveModal}\n              showRoleSelectWizard={this.state.showRoleSelectWizard}\n              canEditOwners={canEditOwners}\n              group={this.state.group}\n              groups={namespace.groups}\n              name={namespace.name}\n              pulpObjectType='pulp_ansible/namespaces'\n              selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n              updateProps={(prop) => {\n                this.setState(prop);\n              }}\n              addGroup={(group, roles) => {\n                const { groups, name } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: roles.map(({ name }) => name),\n                };\n                const newGroups = [...groups, newGroup];\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                  stateUpdate: { showGroupSelectWizard: null },\n                });\n              }}\n              removeGroup={(group) => {\n                const { name, groups } = namespace;\n                const newGroups = groups.filter((g) => g !== group);\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                  stateUpdate: { showGroupRemoveModal: null },\n                });\n              }}\n              addRole={(group, roles) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: [\n                    ...group.object_roles,\n                    ...roles.map(({ name }) => name),\n                  ],\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleSelectWizard: null },\n                });\n              }}\n              removeRole={(role, group) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: group.object_roles.filter(\n                    (name) => name !== role,\n                  ),\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleRemoveModal: null },\n                });\n              }}\n              urlPrefix={formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: namespace.name,\n              })}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => {\n              this.signAllCertificates(namespace);\n            }}\n            onCancel={() => {\n              this.setState({ isOpenSignModal: false });\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find((x) => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${collection.name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(\n          collection,\n          !collection.deprecated,\n          this.context.selectedRepo,\n        )\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.deprecated\n                ? t`Collection \"${collection.name}\" has been successfully undeprecated.`\n                : t`Collection \"${collection.name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.load();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  }\n\n  private loadCollections() {\n    CollectionAPI.list(\n      {\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      },\n      this.context.selectedRepo,\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        },\n        this.context.selectedRepo,\n      ),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // TODO this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then((val) => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n          canSign: canSignNS(this.context, val[2]?.data),\n          group: this.filterGroup(\n            this.state.params['group'],\n            val[1].data['groups'],\n          ),\n        });\n\n        this.loadAllRepos(val[0].data.meta.count);\n      })\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private loadAllRepos(currentRepoCount) {\n    // get collections in namespace from each repo\n    // except the one we already have\n    const repoPromises = Object.keys(Constants.REPOSITORYNAMES)\n      .filter((repo) => repo !== this.context.selectedRepo)\n      .map((repo) =>\n        CollectionAPI.list(\n          { namespace: this.props.routeParams.namespace },\n          repo,\n        ),\n      );\n\n    Promise.all(repoPromises)\n      .then((results) =>\n        this.setState({\n          isNamespaceEmpty:\n            results.every((val) => val.data.meta.count === 0) &&\n            currentRepoCount === 0,\n        }),\n      )\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Collection repositories could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections } = this.state;\n    const { can_upload_signatures } = this.context?.featureFlags || {};\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='1'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      hasPermission('galaxy.delete_namespace') && (\n        <React.Fragment key={'2'}>\n          {this.state.isNamespaceEmpty ? (\n            <DropdownItem\n              onClick={() => this.setState({ isOpenNamespaceModal: true })}\n            >\n              {t`Delete namespace`}\n            </DropdownItem>\n          ) : (\n            <Tooltip\n              isVisible={false}\n              content={\n                <Trans>\n                  Cannot delete namespace until <br />\n                  collections&apos; dependencies have <br />\n                  been deleted\n                </Trans>\n              }\n              position='left'\n            >\n              <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n            </Tooltip>\n          )}\n        </React.Fragment>\n      ),\n      <DropdownItem\n        key='3'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-collections'\n          data-cy='sign-all-collections-button'\n          onClick={() => this.setState({ isOpenSignModal: true })}\n        >\n          {t`Sign all collections`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls'></div>;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            {t`Upload collection`}\n          </Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb.url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.setAlerts([\n            ...this.context.alerts,\n            {\n              variant: 'success',\n              title: (\n                <Trans>\n                  Namespace &quot;{name}&quot; has been successfully deleted.\n                </Trans>\n              ),\n            },\n          ]);\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    const { hasPermission } = this.context;\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.handleCollectionAction(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection: hasPermission('ansible.delete_collection'),\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                }),\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(collection.id, 'deprecate')\n              }\n              key='deprecate'\n            >\n              {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      </div>\n    );\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","props","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","confirmDelete","context","setAlerts","alerts","variant","title","e","response","status","statusText","isOpenNamespaceModal","description","errorMessage","params","ParamHelper","location","search","routeParams","canSign","collections","itemCount","showImportModal","warning","updateCollection","showControls","isOpenSignModal","isNamespaceEmpty","deleteCollection","isDeletionPending","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","group","this","load","prevProps","filterGroup","groups","groupId","find","id","Number","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","addAlert","Navigate","to","tabs","resources","filter","Boolean","tab","breadcrumbs","url","formatPath","Paths","repo","selectedRepo","repositoryUrl","getRepoUrl","noData","filterIsSet","updateParams","loadCollections","ignoredParams","hasPermission","canEditOwners","related_fields","my_permissions","includes","tabParams","closeAlert","i","isOpen","onUploadSuccess","setOpen","warn","toggleImportModal","collection","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","spinner","closeModal","deleteNamespace","isDisabled","Text","className","Checkbox","isChecked","onChange","val","label","Alert","actionClose","AlertActionCloseButton","onClose","p","pageControls","renderPageControls","contextSelector","path","routePath","pathParams","filters","count","isTop","button","Button","onClick","renderCollectionControls","href","target","rel","isReadOnly","renderResources","pulpObjectType","selectRolesMessage","updateProps","prop","addGroup","roles","newGroup","object_roles","map","newGroups","updateGroups","removeGroup","g","addRole","removeRole","role","urlPrefix","onSubmit","signAllCertificates","onCancel","action","x","CollectionAPI","deprecated","result","taskId","parsePulpIDFromURL","data","task","waitForTask","errorAlert","SignCollectionAPI","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","distro_base_path","task_id","error","nonAPIParams","meta","Promise","all","include_related","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","canSignNS","loadAllRepos","currentRepoCount","repoPromises","Object","keys","Constants","results","every","err","nonQueryStringParams","can_upload_signatures","featureFlags","dropdownItems","DropdownItem","key","component","Link","Tooltip","isVisible","content","position","length","items","newState","closeAlertMixin","style","display","alignItems","handleCollectionAction","canDeleteCollection","noDependencies","ariaLabel","React","contextType","AppContext","withRouter"],"sourceRoot":""}