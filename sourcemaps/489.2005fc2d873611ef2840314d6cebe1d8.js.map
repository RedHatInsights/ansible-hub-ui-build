{"version":3,"file":"js/489.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-collection-version-add.tsx","webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/ansible-repository-collection-version-remove.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { type MessageDescriptor, i18n } from '@lingui/core';\nimport { Button } from '@patternfly/react-core';\nimport { DropdownItem } from '@patternfly/react-core/deprecated';\nimport React, { type ReactNode } from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({ addAlert, listQuery, query, setState, state }) => ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | ReactNode | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: MessageDescriptor;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => ReactNode | null;\n  disabled: (item, actionContext) => string | ReactNode | null;\n  dropdownItem: (item, actionContext) => ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title: i18n._(title),\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={i18n._(title)}>\n          <Button variant={buttonVariant} isDisabled>\n            {i18n._(title)}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={i18n._(title)}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      ) : (\n        <DropdownItem\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: msg`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport {\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n  waitForTaskUrl,\n} from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: msg`Delete`,\n  modal: ({ addAlert, listQuery, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, listQuery })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, listQuery }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n      setState({ deleteModalOpen: null });\n      return waitForTaskUrl(data.task);\n    })\n    .then(() => listQuery())\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: msg`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: msg`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: msg`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { msg, plural, t } from '@lingui/macro';\nimport { Button, Checkbox, Modal } from '@patternfly/react-core';\nimport { Td, Tr } from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  type AnsibleRepositoryType,\n  CollectionVersionAPI,\n  type CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  type AlertType,\n  DetailList,\n  closeAlert,\n} from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst add = (\n  { repositoryHref, repositoryName },\n  collections,\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  const collectionVersionHrefs = collections.map(\n    (c) => c.collection_version.pulp_href,\n  );\n  return AnsibleRepositoryAPI.addContent(pulpId, collectionVersionHrefs)\n    .then(({ data }) => {\n      collections.map(\n        ({ collection_version: { name, namespace, version }, repository }) => {\n          addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repositoryName}\".`,\n            ),\n          );\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }));\n          query({});\n        },\n      );\n    })\n    .catch(\n      handleHttpError(\n        plural(collections.length, {\n          one: `Failed to add collection to repository \"${repositoryName}\".`,\n          other: `Failed to add collections to repository \"${repositoryName}\".`,\n        }),\n        () => setState((ms) => ({ ...ms, addCollectionVersionModal: null })),\n        addAlert,\n      ),\n    );\n};\n\nfunction pushToOrFilterOutCollections(\n  selectedCollection: CollectionVersionSearch,\n  collections: CollectionVersionSearch[],\n): CollectionVersionSearch[] {\n  // check if collection is already selected\n  const selectedItem = collections.find(\n    ({ collection_version: cv, repository }) =>\n      cv.pulp_href === selectedCollection.collection_version.pulp_href &&\n      repository.pulp_href === selectedCollection.repository.pulp_href,\n  );\n\n  // if collection is not selected, add it to selected items\n  if (!selectedItem) {\n    return [...collections, selectedCollection];\n  }\n\n  // unselect collection\n  return collections.filter(\n    ({ collection_version: cv, repository }) =>\n      cv.pulp_href !== selectedCollection.collection_version.pulp_href ||\n      repository.pulp_href !== selectedCollection.repository.pulp_href,\n  );\n}\n\nconst AddCollectionVersionModal = ({\n  addAction,\n  closeAction,\n  sourceRepository,\n}: {\n  addAction: (selected) => void;\n  closeAction: () => void;\n  sourceRepository: AnsibleRepositoryType;\n}) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selected, setSelected] = useState<CollectionVersionSearch[]>([]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  // @ts-expect-error: TS2525: Initializer provides no value for this binding element and the binding element has no default value.\n  const query = ({ params } = {}) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    return CollectionVersionAPI.list({\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({});\n\n  const renderTableRow = (item: CollectionVersionSearch, index: number) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const isCollectionInRepo =\n      sourceRepository.pulp_href === repository.pulp_href;\n\n    return (\n      <Tr\n        onClick={() =>\n          setSelected(pushToOrFilterOutCollections(item, selected))\n        }\n        key={index}\n      >\n        <Td>\n          <Checkbox\n            aria-label={`${namespace}.${name} v${version}`}\n            id={`collection-${index}`}\n            isChecked={isCollectionInRepo || selected.includes(item)}\n            name={`collection-${index}`}\n            isDisabled={isCollectionInRepo}\n          />\n        </Td>\n        <Td>\n          {namespace}.{name} v{version}\n        </Td>\n        <Td>{description}</Td>\n        <Td>{repository.name}</Td>\n      </Tr>\n    );\n  };\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() => addAction(selected)}\n          variant='primary'\n          isDisabled={!selected.length}\n        >\n          {t`Select`}\n        </Button>,\n        <Button key='cancel' onClick={closeAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen\n      onClose={closeAction}\n      title={t`Select a collection`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <DetailList<CollectionVersionSearch>\n          actionContext={{\n            addAlert,\n            state: modalState,\n            setState: setModalState,\n            query,\n            hasPermission: () => {\n              throw 'unused';\n            },\n          }}\n          defaultPageSize={10}\n          defaultSort={'name'}\n          errorTitle={t`Collection versions could not be displayed.`}\n          filterConfig={[\n            {\n              id: 'keywords',\n              title: t`Keywords`,\n            },\n            {\n              id: 'namespace',\n              title: t`Namespace`,\n            },\n            {\n              id: 'repository_name',\n              title: t`Repository`,\n            },\n          ]}\n          noDataDescription={t`Collection versions will appear once a collection is uploaded.`}\n          noDataTitle={t`No collection versions yet`}\n          query={query}\n          renderTableRow={renderTableRow}\n          sortHeaders={[\n            {\n              title: '',\n              type: 'none',\n              id: 'radio',\n            },\n            {\n              title: t`Collection`,\n              type: 'none',\n              id: 'col1',\n            },\n            {\n              title: t`Description`,\n              type: 'none',\n              id: 'col2',\n            },\n            {\n              title: t`Repository`,\n              type: 'none',\n              id: 'col3',\n            },\n          ]}\n          title={t`Collection versions`}\n        />\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionAddAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Add collection`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.addCollectionVersionModal ? (\n      <AddCollectionVersionModal\n        addAction={(collections: CollectionVersionSearch[]) => {\n          add(state.addCollectionVersionModal, collections, {\n            addAlert,\n            setState,\n            query,\n          });\n        }}\n        closeAction={() =>\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }))\n        }\n        sourceRepository={state.repository}\n      />\n    ) : null,\n  onClick: (\n    _item,\n    {\n      state: {\n        repository: { name: repositoryName, pulp_href: repositoryHref },\n      },\n      setState,\n    },\n  ) =>\n    setState((ms) => ({\n      ...ms,\n      addCollectionVersionModal: {\n        repositoryHref,\n        repositoryName,\n      },\n    })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { getRepoURL, repositoryBasePath } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: msg`Copy CLI configuration`,\n  onClick: async (item, { addAlert }) => {\n    let distroBasePath = null;\n\n    if (!item.distroBasePath) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`Loading distribution...`,\n        variant: 'info',\n      });\n\n      distroBasePath = await repositoryBasePath(\n        item.name,\n        item.pulp_href,\n      ).catch(() => null);\n    } else {\n      distroBasePath = item.distroBasePath;\n    }\n\n    if (!distroBasePath) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`There are no distributions associated with this repository.`,\n        variant: 'danger',\n      });\n      return;\n    }\n\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distroBasePath}`,\n      '',\n      `[galaxy_server.${distroBasePath}]`,\n      `url=${getRepoURL(distroBasePath)}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      description: <pre>{cliConfig}</pre>,\n      id: 'copy-cli-config',\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n    });\n  },\n  disabled: (item) => {\n    // disabled check only available on detail screen\n    if ('distroBasePath' in item && !item.distroBasePath) {\n      return t`There are no distributions associated with this repository.`;\n    }\n\n    return null;\n  },\n});\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst remove = (\n  {\n    collection: { namespace, name, version },\n    collectionVersionHref,\n    repositoryHref,\n    repositoryName,\n  },\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  return AnsibleRepositoryAPI.removeContent(pulpId, collectionVersionHref)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Removal of ${namespace}.${name} v${version} from repository \"${repositoryName}\" started.`,\n        ),\n      );\n      setState({ removeCollectionVersionModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove ${namespace}.${name} v${version} from repository \"${repositoryName}\".`,\n        () => setState({ removeCollectionVersionModal: null }),\n        addAlert,\n      ),\n    );\n};\n\nconst RemoveCollectionVersionModal = ({\n  name,\n  namespace,\n  repositoryName,\n  version,\n  closeAction,\n  deleteAction,\n}: {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  namespace: string;\n  repositoryName: string;\n  version: string;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      isRemove\n      title={t`Remove collection version?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to remove the collection version{' '}\n          <b>\n            {namespace}.{name} v{version}\n          </b>{' '}\n          from the <b>{repositoryName}</b> repository?\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionRemoveAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Remove`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.removeCollectionVersionModal ? (\n      <RemoveCollectionVersionModal\n        closeAction={() => setState({ removeCollectionVersionModal: null })}\n        deleteAction={() =>\n          remove(state.removeCollectionVersionModal, {\n            addAlert,\n            setState,\n            query,\n          })\n        }\n        name={state.removeCollectionVersionModal.collection.name}\n        namespace={state.removeCollectionVersionModal.collection.namespace}\n        repositoryName={state.removeCollectionVersionModal.repositoryName}\n        version={state.removeCollectionVersionModal.collection.version}\n      />\n    ) : null,\n  onClick: (\n    {\n      collection_version: {\n        namespace,\n        name,\n        version,\n        pulp_href: collectionVersionHref,\n      },\n      repository: { name: repositoryName, pulp_href: repositoryHref },\n    },\n    { setState },\n  ) =>\n    setState({\n      removeCollectionVersionModal: {\n        collection: { namespace, name, version },\n        repositoryName,\n        repositoryHref,\n        collectionVersionHref,\n      },\n    }),\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: msg`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport {\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n  waitForTaskUrl,\n} from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: msg`Delete`,\n  modal: ({ addAlert, listQuery, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, {\n            addAlert,\n            listQuery,\n            setState,\n          })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: {\n        pulpId: id || parsePulpIDFromURL(pulp_href),\n        name,\n        pulp_href,\n      },\n    }),\n  disabled: ({ name }) => {\n    if (\n      [\n        'rh-certified',\n        'validated',\n        'community',\n        'published',\n        'staging',\n        'rejected',\n      ].includes(name)\n    ) {\n      return t`Protected repositories cannot be deleted.`;\n    }\n\n    return null;\n  },\n});\n\nasync function deleteRepository(\n  { name, pulp_href, pulpId },\n  { addAlert, setState, listQuery },\n) {\n  // TODO: handle more pages\n  const distributionsToDelete = await AnsibleDistributionAPI.list({\n    repository: pulp_href,\n    page: 1,\n    page_size: 100,\n  })\n    .then(({ data: { results } }) => results || [])\n    .catch((e) => {\n      handleHttpError(\n        t`Failed to list distributions, removing only the repository.`,\n        () => null,\n        addAlert,\n      )(e);\n      return [];\n    });\n\n  const deleteRepo = AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n      return waitForTaskUrl(data.task);\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => setState({ deleteModalOpen: null }),\n        addAlert,\n      ),\n    );\n\n  const deleteDistribution = ({ name, pulp_href }) => {\n    const distribution_id = parsePulpIDFromURL(pulp_href);\n    return AnsibleDistributionAPI.delete(distribution_id)\n      .then(({ data }) => {\n        addAlert(\n          taskAlert(data.task, t`Removal started for distribution ${name}`),\n        );\n        return waitForTaskUrl(data.task);\n      })\n      .catch(\n        handleHttpError(\n          t`Failed to remove distribution ${name}`,\n          () => null,\n          addAlert,\n        ),\n      );\n  };\n\n  return Promise.all([\n    deleteRepo,\n    ...distributionsToDelete.map(deleteDistribution),\n  ]).then(() => {\n    setState({ deleteModalOpen: null });\n    listQuery();\n  });\n}\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Button, FormGroup, Modal, Switch } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { HelpButton, Spinner } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst SyncModal = ({\n  closeAction,\n  syncAction,\n  name,\n}: {\n  closeAction: () => null;\n  syncAction: (syncParams) => Promise<void>;\n  name: string;\n}) => {\n  const [pending, setPending] = useState(false);\n  const [syncParams, setSyncParams] = useState({\n    mirror: true,\n    optimize: true,\n  });\n\n  useEffect(() => {\n    setPending(false);\n    setSyncParams({ mirror: true, optimize: true });\n  }, [name]);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='sync-button' key='sync'>\n          <Button\n            key='sync'\n            onClick={() => {\n              setPending(true);\n              syncAction(syncParams)\n                .then(closeAction)\n                .finally(() => setPending(false));\n            }}\n            variant='primary'\n            isDisabled={pending}\n          >\n            {t`Sync`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='close' onClick={closeAction} variant='link'>\n          {t`Close`}\n        </Button>,\n      ]}\n      isOpen\n      onClose={closeAction}\n      title={t`Sync repository \"${name}\"`}\n      variant='medium'\n    >\n      <FormGroup\n        label={t`Mirror`}\n        labelIcon={\n          <HelpButton\n            content={t`If selected, all content that is not present in the remote repository will be removed from the local repository; otherwise, sync will add missing content.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.mirror}\n          onChange={(_event, mirror) =>\n            setSyncParams({ ...syncParams, mirror })\n          }\n          label={t`Content not present in remote repository will be removed from the local repository`}\n          labelOff={t`Sync will only add missing content`}\n        />\n      </FormGroup>\n      <br />\n      <FormGroup\n        label={t`Optimize`}\n        labelIcon={\n          <HelpButton\n            content={t`Only perform the sync if changes are reported by the remote server. To force a sync to happen, deselect this option.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.optimize}\n          onChange={(_event, optimize) =>\n            setSyncParams({ ...syncParams, optimize })\n          }\n          label={t`Only perform the sync if changes are reported by the remote server.`}\n          labelOff={t`Force a sync to happen.`}\n        />\n      </FormGroup>\n      <br />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: msg`Sync`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.syncModalOpen ? (\n      <SyncModal\n        closeAction={() => setState({ syncModalOpen: null })}\n        syncAction={(syncParams) =>\n          syncRepository(state.syncModalOpen, { addAlert, query }, syncParams)\n        }\n        name={state.syncModalOpen.name}\n      />\n    ) : null,\n  onClick: ({ name, pulp_href }, { setState }) =>\n    setState({\n      syncModalOpen: { name, pulp_href },\n    }),\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    // Remote checks only available on detail screen; list will have remote: string, so no .url\n    if (remote && remote.url === 'https://galaxy.ansible.com/api/') {\n      const name = remote.name;\n      const url = formatPath(Paths.ansibleRemoteEdit, { name });\n\n      if (!remote.requirements_file) {\n        return (\n          <Trans>\n            YAML requirements are required to sync from Galaxy. You can{' '}\n            <Link to={url}>edit the {name} remote</Link> to add requirements.\n          </Trans>\n        );\n      }\n\n      if (remote.signed_only) {\n        return (\n          <Trans>\n            Community content will never be synced if the remote is set to only\n            sync signed content. You can{' '}\n            <Link to={url}>edit the {name} remote</Link> to change it.\n          </Trans>\n        );\n      }\n    }\n\n    return null;\n  },\n});\n\nfunction syncRepository({ name, pulp_href }, { addAlert, query }, syncParams) {\n  const pulpId = parsePulpIDFromURL(pulp_href);\n  return AnsibleRepositoryAPI.sync(pulpId, syncParams || { mirror: true })\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Sync started for repository \"${name}\".`));\n\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to sync repository \"${name}\"`,\n        () => null,\n        addAlert,\n      ),\n    );\n}\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Button, Modal } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Spinner } from 'src/components';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: msg`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import {\n  type FeatureFlagsType,\n  type SettingsType,\n  type UserType,\n} from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository'); under feature flag\nexport const canViewAnsibleRepositories = ({ user, featureFlags }) =>\n  user && featureFlags?.display_repositories;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","i18n","_","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","id","navigate","formatPath","Paths","ansibleRemoteEdit","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","listQuery","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","values","waitForTaskUrl","handleHttpError","deleteRemote","_ref2","_ref3","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","_onClick","AddCollectionVersionModal","_ref7","addAction","sourceRepository","_useState","useState","_useState2","_slicedToArray","alerts","setAlerts","_useState3","_useState4","selected","setSelected","query","newParams","_objectSpread","arguments","length","undefined","params","ordering","sort","CollectionVersionAPI","list","_ref9","_ref9$data","count","meta","results","_useState5","_useState6","modalState","setModalState","Modal","actions","isOpen","onClose","className","DetailList","alert","concat","_toConsumableArray","hasPermission","defaultPageSize","defaultSort","errorTitle","filterConfig","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","version","repository","isCollectionInRepo","Tr","selectedCollection","collections","find","cv","filter","Td","Checkbox","isChecked","includes","sortHeaders","type","AlertList","closeAlert","i","ansibleRepositoryCollectionVersionAddAction","canEditAnsibleRepository","_ref10","addCollectionVersionModal","repositoryHref","repositoryName","collectionVersionHrefs","map","c","AnsibleRepositoryAPI","addContent","_ref4$collection_vers","ms","add","_item","_ref11","_ref11$state$reposito","RemoveCollectionVersionModal","pending","setPending","DeleteModal","spinner","cancelAction","isRemove","Text","Trans","components","ansibleRepositoryCollectionVersionRemoveAction","removeCollectionVersionModal","_ref$collection","collection","collectionVersionHref","removeContent","remove","_ref6$collection_vers","_ref6$repository","ansibleRepositoryCopyAction","_asyncToGenerator","_regeneratorRuntime","_callee","distroBasePath","cliConfig","_context","prev","next","repositoryBasePath","sent","abrupt","getRepoURL","join","navigator","clipboard","writeText","stop","_x","_x2","apply","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryEdit","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","_deleteRepository","deleteRepository","distributionsToDelete","deleteRepo","deleteDistribution","AnsibleDistributionAPI","page","page_size","e","_ref8","distribution_id","Promise","all","ansibleRepositoryEditAction","SyncModal","syncAction","mirror","optimize","syncParams","setSyncParams","useEffect","Spinner","size","FormGroup","label","labelIcon","HelpButton","Switch","onChange","_event","labelOff","ansibleRepositorySyncAction","canSyncAnsibleRepository","syncModalOpen","sync","syncRepository","remote","last_sync_task","url","Link","to","signed_only","RevertModal","revertAction","titleIconVariant","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","number","revert","isLatest","has_model_perms","permission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canViewAnsibleRemotes","canEditAnsibleRemoteAccess","canViewAnsibleRepositories","featureFlags","display_repositories","canEditAnsibleRepositoryAccess"],"sourceRoot":""}