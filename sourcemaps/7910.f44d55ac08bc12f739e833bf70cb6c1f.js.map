{"version":3,"file":"js/7910.62b248dda9147a02e8c2.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-dependencies.tsx"],"sourcesContent":["import {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collections?: CollectionVersionSearch[];\n  collectionsCount?: number;\n  collection?: CollectionVersionSearch;\n  content?: CollectionVersionContentType;\n  alerts?: AlertType[];\n  distroBasePath?: string;\n}\n\n// Caches the collection data when matching, prevents redundant fetches between collection detail tabs\nconst cache = {\n  repository: null,\n  namespace: null,\n  name: null,\n  version: null,\n\n  collections: [],\n  collectionsCount: 0,\n  collection: null,\n  content: null,\n};\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  setCollection,\n  stateParams,\n}) {\n  const { version } = stateParams;\n  const { collection: name, namespace, repo } = matchParams;\n\n  // try loading from cache\n  if (\n    !forceReload &&\n    cache.repository === repo &&\n    cache.namespace === namespace &&\n    cache.name === name &&\n    cache.version === version\n  ) {\n    setCollection(\n      cache.collections,\n      cache.collection,\n      cache.content,\n      cache.collectionsCount,\n    );\n    return;\n  }\n\n  const requestParams = {\n    ...(repo ? { repository_name: repo } : {}),\n    namespace,\n    name,\n  };\n\n  const currentVersion = (\n    version\n      ? CollectionVersionAPI.list({ ...requestParams, version })\n      : CollectionVersionAPI.list({ ...requestParams, is_highest: true })\n  ).then(({ data }) => data.data[0]);\n\n  const content = currentVersion\n    .then((collection) =>\n      CollectionAPI.getContent(\n        namespace,\n        name,\n        collection.collection_version.version,\n      ),\n    )\n    .then(({ data: { results } }) => results[0])\n    .catch(() => navigate(formatPath(Paths.notFound)));\n\n  // Note: this only provides the first page - containing the latest version, and all items for the version *selector*,\n  // but the version *modal* is using a separate call, in CollectionHeader updatePaginationParams\n  const versions = CollectionVersionAPI.list({\n    ...requestParams,\n    order_by: '-version',\n    page_size: 10,\n  })\n    .then(({ data }) => data)\n    .catch(() => ({ data: [], meta: { count: 0 } }));\n\n  return Promise.all([versions, currentVersion, content]).then(\n    ([\n      {\n        data: collections,\n        meta: { count: collectionsCount },\n      },\n      collection,\n      content,\n    ]) => {\n      setCollection(collections, collection, content, collectionsCount);\n\n      cache.repository = repo;\n      cache.namespace = namespace;\n      cache.name = name;\n      cache.version = version;\n\n      cache.collections = collections;\n      cache.collectionsCount = collectionsCount;\n      cache.collection = collection;\n      cache.content = content;\n    },\n  );\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionUsedByDependencies,\n  CollectionVersion,\n  CollectionVersionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  CollectionDependenciesList,\n  CollectionHeader,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport { IBaseCollectionState, loadCollection } from './base';\nimport './collection-dependencies.scss';\n\ninterface IState extends IBaseCollectionState {\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n}\n\nclass CollectionDependencies extends React.Component<RouteProps, IState> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n  private cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      collections: [],\n      collectionsCount: 0,\n      collection: null,\n      content: null,\n      dependencies_repos: [],\n      params: params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      collections,\n      collectionsCount,\n      collection,\n      content,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n      alerts,\n    } = this.state;\n\n    if (collections.length <= 0) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const { collection_version: version, repository } = collection;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceDetail, {\n          namespace: version.namespace,\n        }),\n        name: version.namespace,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: version.namespace,\n          collection: version.name,\n          repo: repository.name,\n        }),\n        name: version.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(version.dependencies).length;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collections={collections}\n          collectionsCount={collectionsCount}\n          collection={collection}\n          content={content}\n          params={headerParams}\n          updateParams={(p) => {\n            this.updateParams(this.combineParams(this.state.params, p), () =>\n              this.loadData(true),\n            );\n          }}\n          breadcrumbs={breadcrumbs}\n          activeTab='dependencies'\n          repo={repository.name}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              {noDependencies &&\n              !usedByDependenciesCount &&\n              !filterIsSet(params, ['name__icontains']) ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <>\n                  <p>{t`This collections requires the following collections for use`}</p>\n                  {noDependencies ? (\n                    <EmptyStateNoData\n                      title={t`No dependencies`}\n                      description={t`Collection does not have any dependencies.`}\n                    />\n                  ) : (\n                    <CollectionDependenciesList\n                      collection={this.state.collection}\n                      dependencies_repos={this.state.dependencies_repos}\n                    />\n                  )}\n                  <p>{t`This collection is being used by`}</p>\n                  <CollectionUsedbyDependenciesList\n                    usedByDependencies={usedByDependencies}\n                    itemCount={usedByDependenciesCount}\n                    params={dependenciesParams}\n                    usedByDependenciesLoading={usedByDependenciesLoading}\n                    updateParams={(p) =>\n                      this.updateParams(\n                        this.combineParams(this.state.params, p),\n                        () => this.loadUsedByDependencies(),\n                      )\n                    }\n                  />\n                </>\n              )}\n            </div>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies = this.state.collection.collection_version.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace: namespace,\n        version_range: version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        const [collection] = result.data.data;\n\n        dependency_repo.repo = collection.repository.name;\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      if (this.cancelToken) {\n        this.cancelToken.cancel('request-canceled');\n      }\n\n      this.cancelToken = CollectionAPI.getCancelToken();\n\n      const { name, namespace } = this.state.collection.collection_version;\n\n      // We have to use CollectionAPI here for used by dependencies\n      // because cross repo collection search doesn't allow `name__icontains` filter\n      CollectionAPI.getUsedDependenciesByCollection(\n        namespace,\n        name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n        this.cancelToken,\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch(({ response, message }) => {\n          // console.log(response, message);\n          if (message !== 'request-canceled') {\n            const { status, statusText } = response;\n            this.setState({\n              usedByDependenciesLoading: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Dependent collections could not be displayed.`,\n                  description: errorMessage(status, statusText),\n                },\n              ],\n            });\n          }\n        })\n        .finally(() => {\n          this.cancelToken = undefined;\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      setCollection: (collections, collection, content, collectionsCount) =>\n        this.setState(\n          { collections, collection, content, collectionsCount },\n          callback,\n        ),\n      stateParams: this.state.params.version\n        ? { version: this.state.params.version }\n        : {},\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private combineParams(...params) {\n    return params.reduce((acc, cur) => ({ ...acc, ...cur }));\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n\nCollectionDependencies.contextType = AppContext;\n"],"names":["cache","repository","namespace","name","version","collections","collectionsCount","collection","content","loadCollection","_ref","forceReload","matchParams","navigate","setCollection","stateParams","repo","requestParams","_objectSpread","repository_name","currentVersion","CollectionVersionAPI","is_highest","then","_ref2","data","CollectionAPI","collection_version","_ref3","results","formatPath","Paths","versions","order_by","page_size","_ref4","meta","count","Promise","all","_ref5","_ref6","_slicedToArray","_ref6$","CollectionDependencies","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","params","ParamHelper","location","search","state","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","alerts","_createClass","key","value","this","loadData","_this2","_this$state","length","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","i18n","headerParams","ignoredParams","dependenciesParams","noDependencies","Object","keys","dependencies","AlertList","closeAlert","i","CollectionHeader","reload","updateParams","p","combineParams","activeTab","Main","className","filterIsSet","EmptyStateNoData","title","description","CollectionDependenciesList","CollectionUsedbyDependenciesList","itemCount","loadUsedByDependencies","_this3","arguments","undefined","loadCollectionsDependenciesRepos","callback","_this4","promises","forEach","dependency","_dependency$split","split","_dependency$split2","dependency_repo","version_range","path","push","promise","loadDependencyRepo","setState","result","_this5","cancelToken","cancel","_this5$state$collecti","response","message","status","statusText","concat","_toConsumableArray","variant","errorMessage","_this6","routeParams","get","_len","Array","_key","reduce","acc","cur","closeAlertMixin","v","match","withRouter","contextType","AppContext"],"sourceRoot":""}