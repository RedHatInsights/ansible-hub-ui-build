{"version":3,"file":"js/1811.ae08de8c62f4913af6d2.js","mappings":"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","sources":["webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/actions/ansible-repository-collection-version-add.tsx","webpack:///./src/actions/ansible-repository-collection-version-remove.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { getRepoURL } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: msg`Copy CLI configuration`,\n  onClick: async (item, { addAlert }) => {\n    let distribution = null;\n    if (!item.distributions) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`Loading distribution...`,\n        variant: 'info',\n      });\n\n      distribution = (\n        await AnsibleDistributionAPI.list({\n          repository: item.pulp_href,\n        })\n      )?.data?.results?.[0];\n    } else {\n      distribution = item.distributions?.[0];\n    }\n\n    if (!distribution) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`There are no distributions associated with this repository.`,\n        variant: 'danger',\n      });\n      return;\n    }\n\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.base_path}`,\n      '',\n      `[galaxy_server.${distribution.base_path}]`,\n      `url=${getRepoURL(distribution.base_path)}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      description: <pre>{cliConfig}</pre>,\n      id: 'copy-cli-config',\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n    });\n  },\n  disabled: ({ distributions }) => {\n    if (distributions && !distributions.length) {\n      return t`There are no distributions associated with this repository.`;\n    }\n\n    return null;\n  },\n});\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport { Button, DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: MessageDescriptor;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => React.ReactNode | null;\n  disabled: (item, actionContext) => string | null;\n  dropdownItem: (item, actionContext) => React.ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title: i18n._(title),\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={i18n._(title)}>\n          <Button variant={buttonVariant} isDisabled>\n            {i18n._(title)}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={i18n._(title)}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      ) : (\n        <DropdownItem\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: msg`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport {\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n  waitForTaskUrl,\n} from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: msg`Delete`,\n  modal: ({ addAlert, listQuery, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, listQuery })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, listQuery }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n      setState({ deleteModalOpen: null });\n      return waitForTaskUrl(data.task);\n    })\n    .then(() => listQuery())\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: msg`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: msg`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: msg`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: msg`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport {\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n  waitForTaskUrl,\n} from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: msg`Delete`,\n  modal: ({ addAlert, listQuery, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, {\n            addAlert,\n            listQuery,\n            setState,\n          })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: {\n        pulpId: id || parsePulpIDFromURL(pulp_href),\n        name,\n        pulp_href,\n      },\n    }),\n  disabled: ({ name }) => {\n    if (Constants.PROTECTED_REPOSITORIES.includes(name)) {\n      return t`Protected repositories cannot be deleted.`;\n    }\n\n    return null;\n  },\n});\n\nasync function deleteRepository(\n  { name, pulp_href, pulpId },\n  { addAlert, setState, listQuery },\n) {\n  const distributionsToDelete = await AnsibleDistributionAPI.list({\n    repository: pulp_href,\n  })\n    .then(({ data: { results } }) => results || [])\n    .catch((e) => {\n      handleHttpError(\n        t`Failed to list distributions, removing only the repository.`,\n        () => null,\n        addAlert,\n      )(e);\n      return [];\n    });\n\n  const deleteRepo = AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n      return waitForTaskUrl(data.task);\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => setState({ deleteModalOpen: null }),\n        addAlert,\n      ),\n    );\n\n  const deleteDistribution = ({ name, pulp_href }) => {\n    const distribution_id = parsePulpIDFromURL(pulp_href);\n    return AnsibleDistributionAPI.delete(distribution_id)\n      .then(({ data }) => {\n        addAlert(\n          taskAlert(data.task, t`Removal started for distribution ${name}`),\n        );\n        return waitForTaskUrl(data.task);\n      })\n      .catch(\n        handleHttpError(\n          t`Failed to remove distribution ${name}`,\n          () => null,\n          addAlert,\n        ),\n      );\n  };\n\n  return Promise.all([\n    deleteRepo,\n    ...distributionsToDelete.map(deleteDistribution),\n  ]).then(() => {\n    setState({ deleteModalOpen: null });\n    listQuery();\n  });\n}\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { msg, t } from '@lingui/macro';\nimport {\n  Button,\n  FormGroup,\n  Modal,\n  Spinner,\n  Switch,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst SyncModal = ({\n  closeAction,\n  syncAction,\n  name,\n}: {\n  closeAction: () => null;\n  syncAction: (syncParams) => Promise<void>;\n  name: string;\n}) => {\n  const [pending, setPending] = useState(false);\n  const [syncParams, setSyncParams] = useState({\n    mirror: true,\n    optimize: true,\n  });\n\n  useEffect(() => {\n    setPending(false);\n    setSyncParams({ mirror: true, optimize: true });\n  }, [name]);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='sync-button' key='sync'>\n          <Button\n            key='sync'\n            onClick={() => {\n              setPending(true);\n              syncAction(syncParams)\n                .then(closeAction)\n                .finally(() => setPending(false));\n            }}\n            variant='primary'\n            isDisabled={pending}\n          >\n            {t`Sync`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='close' onClick={closeAction} variant='link'>\n          {t`Close`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Sync repository \"${name}\"`}\n      variant='medium'\n    >\n      <FormGroup\n        label={t`Mirror`}\n        labelIcon={\n          <HelperText\n            content={t`If selected, all content that is not present in the remote repository will be removed from the local repository; otherwise, sync will add missing content.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.mirror}\n          onChange={(mirror) => setSyncParams({ ...syncParams, mirror })}\n          label={t`Content not present in remote repository will be removed from the local repository`}\n          labelOff={t`Sync will only add missing content`}\n        />\n      </FormGroup>\n      <br />\n      <FormGroup\n        label={t`Optimize`}\n        labelIcon={\n          <HelperText\n            content={t`Only perform the sync if no changes are reported by the remote server. To force a sync to happen, deselect this option.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.optimize}\n          onChange={(optimize) => setSyncParams({ ...syncParams, optimize })}\n          label={t`Only perform the sync if no changes are reported by the remote server.`}\n          labelOff={t`Force a sync to happen.`}\n        />\n      </FormGroup>\n      <br />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: msg`Sync`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.syncModalOpen ? (\n      <SyncModal\n        closeAction={() => setState({ syncModalOpen: null })}\n        syncAction={(syncParams) =>\n          syncRepository(state.syncModalOpen, { addAlert, query }, syncParams)\n        }\n        name={state.syncModalOpen.name}\n      />\n    ) : null,\n  onClick: ({ name, pulp_href }, { setState }) =>\n    setState({\n      syncModalOpen: { name, pulp_href },\n    }),\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    return null;\n  },\n});\n\nfunction syncRepository({ name, pulp_href }, { addAlert, query }, syncParams) {\n  const pulpId = parsePulpIDFromURL(pulp_href);\n  return AnsibleRepositoryAPI.sync(pulpId, syncParams || { mirror: true })\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Sync started for repository \"${name}\".`));\n\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to sync repository \"${name}\"`,\n        () => null,\n        addAlert,\n      ),\n    );\n}\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: msg`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import { msg, plural, t } from '@lingui/macro';\nimport { Button, Checkbox, Modal } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertList, AlertType, DetailList, closeAlert } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport {\n  RepositoriesUtils,\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n} from 'src/utilities';\nimport { Action } from './action';\n\nconst add = (\n  { repositoryHref, repositoryName },\n  collections,\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  const collectionVersionHrefs = collections.map(\n    (c) => c.collection_version.pulp_href,\n  );\n  return AnsibleRepositoryAPI.addContent(pulpId, collectionVersionHrefs)\n    .then(({ data }) => {\n      collections.map(\n        ({ collection_version: { name, namespace, version }, repository }) => {\n          addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repositoryName}\".`,\n            ),\n          );\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }));\n          query({});\n        },\n      );\n    })\n    .catch(\n      handleHttpError(\n        plural(collections.length, {\n          one: `Failed to add collection to repository \"${repositoryName}\".`,\n          other: `Failed to add collections to repository \"${repositoryName}\".`,\n        }),\n        () => setState((ms) => ({ ...ms, addCollectionVersionModal: null })),\n        addAlert,\n      ),\n    );\n};\n\nconst AddCollectionVersionModal = ({\n  addAction,\n  closeAction,\n  sourceRepository,\n}: {\n  addAction: (selected) => void;\n  closeAction: () => void;\n  sourceRepository: AnsibleRepositoryType;\n}) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selected, setSelected] = useState<CollectionVersionSearch[]>([]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    return CollectionVersionAPI.list({\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({});\n\n  const renderTableRow = (item: CollectionVersionSearch, index: number) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const isCollectionInRepo =\n      sourceRepository.pulp_href === repository.pulp_href;\n\n    return (\n      <tr\n        onClick={() =>\n          setSelected(\n            RepositoriesUtils.pushToOrFilterOutCollections(item, selected),\n          )\n        }\n        key={index}\n      >\n        <td>\n          <Checkbox\n            aria-label={`${namespace}.${name} v${version}`}\n            id={`collection-${index}`}\n            isChecked={isCollectionInRepo || selected.includes(item)}\n            name={`collection-${index}`}\n            isDisabled={isCollectionInRepo}\n          />\n        </td>\n        <td>\n          {namespace}.{name} v{version}\n        </td>\n        <td>{description}</td>\n        <td>{repository.name}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() => addAction(selected)}\n          variant='primary'\n          isDisabled={!selected}\n        >\n          {t`Select`}\n        </Button>,\n        <Button key='cancel' onClick={closeAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select a collection`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <DetailList<CollectionVersionSearch>\n          actionContext={{\n            addAlert,\n            state: modalState,\n            setState: setModalState,\n            query,\n            hasPermission: () => {\n              throw 'unused';\n            },\n          }}\n          defaultPageSize={10}\n          defaultSort={'name'}\n          errorTitle={t`Collection versions could not be displayed.`}\n          filterConfig={[\n            {\n              id: 'keywords',\n              title: t`Keywords`,\n            },\n            {\n              id: 'namespace',\n              title: t`Namespace`,\n            },\n            {\n              id: 'repository_name',\n              title: t`Repository`,\n            },\n          ]}\n          noDataDescription={t`Collection versions will appear once a collection is uploaded.`}\n          noDataTitle={t`No collection versions yet`}\n          query={query}\n          renderTableRow={renderTableRow}\n          sortHeaders={[\n            {\n              title: '',\n              type: 'none',\n              id: 'radio',\n            },\n            {\n              title: t`Collection`,\n              type: 'none',\n              id: 'col1',\n            },\n            {\n              title: t`Description`,\n              type: 'none',\n              id: 'col2',\n            },\n            {\n              title: t`Repository`,\n              type: 'none',\n              id: 'col3',\n            },\n          ]}\n          title={t`Collection versions`}\n        />\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionAddAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Add collection`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.addCollectionVersionModal ? (\n      <AddCollectionVersionModal\n        addAction={(collections: CollectionVersionSearch[]) => {\n          add(state.addCollectionVersionModal, collections, {\n            addAlert,\n            setState,\n            query,\n          });\n        }}\n        closeAction={() =>\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }))\n        }\n        sourceRepository={state.repository}\n      />\n    ) : null,\n  onClick: (\n    _item,\n    {\n      state: {\n        repository: { name: repositoryName, pulp_href: repositoryHref },\n      },\n      setState,\n    },\n  ) =>\n    setState((ms) => ({\n      ...ms,\n      addCollectionVersionModal: {\n        repositoryHref,\n        repositoryName,\n      },\n    })),\n});\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst remove = (\n  {\n    collection: { namespace, name, version },\n    collectionVersionHref,\n    repositoryHref,\n    repositoryName,\n  },\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  return AnsibleRepositoryAPI.removeContent(pulpId, collectionVersionHref)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Removal of ${namespace}.${name} v${version} from repository \"${repositoryName}\" started.`,\n        ),\n      );\n      setState({ removeCollectionVersionModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove ${namespace}.${name} v${version} from repository \"${repositoryName}\".`,\n        () => setState({ removeCollectionVersionModal: null }),\n        addAlert,\n      ),\n    );\n};\n\nconst RemoveCollectionVersionModal = ({\n  name,\n  namespace,\n  repositoryName,\n  version,\n  closeAction,\n  deleteAction,\n}: {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  namespace: string;\n  repositoryName: string;\n  version: string;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      isRemove\n      title={t`Remove collection version?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to remove the collection version{' '}\n          <b>\n            {namespace}.{name} v{version}\n          </b>{' '}\n          from the <b>{repositoryName}</b> repository?\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionRemoveAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Remove`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.removeCollectionVersionModal ? (\n      <RemoveCollectionVersionModal\n        closeAction={() => setState({ removeCollectionVersionModal: null })}\n        deleteAction={() =>\n          remove(state.removeCollectionVersionModal, {\n            addAlert,\n            setState,\n            query,\n          })\n        }\n        name={state.removeCollectionVersionModal.collection.name}\n        namespace={state.removeCollectionVersionModal.collection.namespace}\n        repositoryName={state.removeCollectionVersionModal.repositoryName}\n        version={state.removeCollectionVersionModal.collection.version}\n      />\n    ) : null,\n  onClick: (\n    {\n      collection_version: {\n        namespace,\n        name,\n        version,\n        pulp_href: collectionVersionHref,\n      },\n      repository: { name: repositoryName, pulp_href: repositoryHref },\n    },\n    { setState },\n  ) =>\n    setState({\n      removeCollectionVersionModal: {\n        collection: { namespace, name, version },\n        repositoryName,\n        repositoryHref,\n        collectionVersionHref,\n      },\n    }),\n});\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository'); under feature flag\nexport const canViewAnsibleRepositories = ({ user, featureFlags }) =>\n  user && featureFlags?.display_repositories;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["_onClick","Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","i18n","_","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","id","navigate","formatPath","Paths","ansibleRemoteEdit","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","listQuery","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","values","waitForTaskUrl","handleHttpError","deleteRemote","_ref2","_ref3","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","ansibleRepositoryCopyAction","_asyncToGenerator","_regeneratorRuntime","_callee","distribution","_yield$AnsibleDistrib","_item$distributions","cliConfig","_context","prev","next","distributions","AnsibleDistributionAPI","list","repository","t3","sent","t2","t1","t0","results","t4","abrupt","concat","base_path","getRepoURL","join","navigator","clipboard","writeText","stop","_x","_x2","apply","arguments","length","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryEdit","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","_deleteRepository","deleteRepository","Constants","PROTECTED_REPOSITORIES","includes","distributionsToDelete","deleteRepo","deleteDistribution","_ref7","e","AnsibleRepositoryAPI","_ref8","_ref9","distribution_id","_ref10","Promise","all","_toConsumableArray","map","ansibleRepositoryEditAction","canEditAnsibleRepository","SyncModal","syncAction","_useState","useState","_useState2","_slicedToArray","pending","setPending","_useState3","mirror","optimize","_useState4","syncParams","setSyncParams","useEffect","Modal","actions","Spinner","size","isOpen","onClose","FormGroup","label","labelIcon","HelperText","Switch","isChecked","onChange","_objectSpread","labelOff","ansibleRepositorySyncAction","canSyncAnsibleRepository","query","syncModalOpen","sync","syncRepository","_item","hasPermission","remote","last_sync_task","RevertModal","version","cancelAction","revertAction","titleIconVariant","Trans","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","repositoryName","number","revert","isLatest","AddCollectionVersionModal","addAction","sourceRepository","alerts","setAlerts","selected","setSelected","newParams","params","ordering","sort","CollectionVersionAPI","_ref7$data","count","meta","_useState5","_useState6","modalState","setModalState","className","DetailList","alert","defaultPageSize","defaultSort","errorTitle","filterConfig","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","isCollectionInRepo","RepositoriesUtils","pushToOrFilterOutCollections","Checkbox","sortHeaders","type","AlertList","closeAlert","i","ansibleRepositoryCollectionVersionAddAction","addCollectionVersionModal","collections","repositoryHref","collectionVersionHrefs","c","addContent","_ref4$collection_vers","ms","add","_ref9$state$repositor","RemoveCollectionVersionModal","DeleteModal","spinner","isRemove","Text","components","ansibleRepositoryCollectionVersionRemoveAction","removeCollectionVersionModal","_ref$collection","collection","collectionVersionHref","removeContent","remove","_ref6$collection_vers","_ref6$repository","has_model_perms","permission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canViewAnsibleRemotes","canEditAnsibleRemoteAccess","canViewAnsibleRepositories","featureFlags","display_repositories","canEditAnsibleRepositoryAccess"],"sourceRoot":""}