{"version":3,"file":"js/collection_detail.1672627796636.407beec777f923446a21.js","mappings":"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","sources":["webpack:///./node_modules/lodash/isEqual.js","webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-content.tsx","webpack:///./src/containers/collection-detail/collection-dependencies.tsx","webpack:///./src/containers/collection-detail/collection-detail.tsx","webpack:///./node_modules/react-router-hash-link/dist/react-router-hash-link.esm.js","webpack:///./src/containers/collection-detail/collection-docs.tsx","webpack:///./src/containers/collection-detail/collection-import-log.tsx"],"sourcesContent":["var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collection: CollectionDetailType;\n  alerts?: AlertType[];\n}\n\nexport function loadCollection(\n  repo,\n  forceReload = false,\n  callback = () => null,\n) {\n  CollectionAPI.getCached(\n    this.props.match.params['namespace'],\n    this.props.match.params['collection'],\n    repo,\n    { ...this.state.params, include_related: 'my_permissions' },\n    forceReload,\n  )\n    .then((result) => {\n      return CollectionAPI.list(\n        {\n          name: this.props.match.params['collection'],\n        },\n        this.context.selectedRepo,\n      ).then((collections) => {\n        result.deprecated = collections.data.data[0].deprecated;\n        this.setState({ collection: result }, callback);\n      });\n    })\n    .catch(() => {\n      this.props.history.push(Paths.notFound);\n    });\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport {\n  CollectionHeader,\n  CollectionContentList,\n  LoadingPageWithHeader,\n  Main,\n} from 'src/components';\nimport { loadCollection, IBaseCollectionState } from './base';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\n// renders list of contents in a collection\nclass CollectionContent extends React.Component<\n  RouteComponentProps,\n  IBaseCollectionState\n> {\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      collection: undefined,\n      params: params,\n    };\n  }\n\n  componentDidMount() {\n    this.load(false);\n  }\n\n  load(forceReload) {\n    this.loadCollection(this.context.selectedRepo, forceReload);\n  }\n\n  render() {\n    const { collection, params } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Content` },\n    ];\n\n    return (\n      <React.Fragment>\n        <CollectionHeader\n          reload={() => this.load(true)}\n          collection={collection}\n          params={params}\n          updateParams={(params) =>\n            this.updateParams(params, () =>\n              this.loadCollection(this.context.selectedRepo, true),\n            )\n          }\n          breadcrumbs={breadcrumbs}\n          activeTab='contents'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <CollectionContentList\n              contents={collection.latest_version.metadata.contents}\n              collection={collection.name}\n              namespace={collection.namespace.name}\n              params={params}\n              updateParams={(p) => this.updateParams(p)}\n            ></CollectionContentList>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  get loadCollection() {\n    return loadCollection;\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(CollectionContent);\n\nCollectionContent.contextType = AppContext;\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionUsedByDependencies,\n  CollectionVersionAPI,\n  CollectionVersion,\n} from 'src/api';\nimport {\n  CollectionHeader,\n  LoadingPageWithHeader,\n  Main,\n  CollectionDependenciesList,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  AlertType,\n  AlertList,\n  closeAlertMixin,\n} from 'src/components';\n\nimport { errorMessage, filterIsSet, ParamHelper } from 'src/utilities';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport './collection-dependencies.scss';\n\ninterface IState {\n  collection: CollectionDetailType;\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n  alerts: AlertType[];\n}\n\nclass CollectionDependencies extends React.Component<\n  RouteComponentProps,\n  IState\n> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n  private cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      collection: undefined,\n      dependencies_repos: [],\n      params: params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n      alerts,\n    } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(\n      collection.latest_version.metadata.dependencies,\n    ).length;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collection={collection}\n          params={headerParams}\n          updateParams={(p) => {\n            this.updateParams(this.combineParams(this.state.params, p), () =>\n              this.loadData(true),\n            );\n          }}\n          breadcrumbs={breadcrumbs}\n          activeTab='dependencies'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              {noDependencies &&\n              !usedByDependenciesCount &&\n              !filterIsSet(params, ['name__icontains']) ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <>\n                  <p>{t`This collections requires the following collections for use`}</p>\n                  {noDependencies ? (\n                    <EmptyStateNoData\n                      title={t`No dependencies`}\n                      description={t`Collection does not have any dependencies.`}\n                    />\n                  ) : (\n                    <CollectionDependenciesList\n                      collection={this.state.collection}\n                      dependencies_repos={this.state.dependencies_repos}\n                    />\n                  )}\n                  <p>{t`This collection is being used by`}</p>\n                  <CollectionUsedbyDependenciesList\n                    repo={this.context.selectedRepo}\n                    usedByDependencies={usedByDependencies}\n                    itemCount={usedByDependenciesCount}\n                    params={dependenciesParams}\n                    usedByDependenciesLoading={usedByDependenciesLoading}\n                    updateParams={(p) =>\n                      this.updateParams(\n                        this.combineParams(this.state.params, p),\n                        () => this.loadUsedByDependencies(),\n                      )\n                    }\n                  />\n                </>\n              )}\n            </div>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies =\n      this.state.collection.latest_version.metadata.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace: namespace,\n        version_range: version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        dependency_repo.repo = result.data.data[0].repository_list[0];\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      if (this.cancelToken) {\n        this.cancelToken.cancel('request-canceled');\n      }\n\n      this.cancelToken = CollectionAPI.getCancelToken();\n\n      CollectionAPI.getUsedDependenciesByCollection(\n        this.state.collection.namespace.name,\n        this.state.collection.name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n        this.cancelToken,\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch((err) => {\n          const { status, statusText } = err.response;\n          if (err?.message !== 'request-canceled') {\n            this.setState({\n              usedByDependenciesLoading: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Dependent collections could not be displayed.`,\n                  description: errorMessage(status, statusText),\n                },\n              ],\n            });\n          }\n        })\n        .finally(() => {\n          this.cancelToken = undefined;\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    CollectionAPI.getCached(\n      this.props.match.params['namespace'],\n      this.props.match.params['collection'],\n      this.context.selectedRepo,\n      this.state.params.version ? { version: this.state.params.version } : {},\n      forceReload,\n    )\n      .then((result) => {\n        this.setState({ collection: result }, callback);\n      })\n      .catch(() => {\n        this.props.history.push(Paths.notFound);\n      });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private combineParams(...params) {\n    return params.reduce((acc, cur) => ({ ...acc, ...cur }));\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n\nCollectionDependencies.contextType = AppContext;\n","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { isEqual } from 'lodash';\n\nimport {\n  CollectionHeader,\n  CollectionInfo,\n  LoadingPageWithHeader,\n  Main,\n  AlertList,\n  closeAlertMixin,\n} from 'src/components';\nimport { loadCollection, IBaseCollectionState } from './base';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\n// renders collection level information\nclass CollectionDetail extends React.Component<\n  RouteComponentProps,\n  IBaseCollectionState\n> {\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      collection: undefined,\n      params: params,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.load(true);\n  }\n\n  load(forceReload) {\n    this.loadCollection(this.context.selectedRepo, forceReload);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.location, this.props.location)) {\n      this.loadCollection(this.context.selectedRepo);\n    }\n  }\n\n  render() {\n    const { collection, params, alerts } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        name: collection.name,\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        <CollectionHeader\n          reload={() => this.load(true)}\n          collection={collection}\n          params={params}\n          updateParams={(p) =>\n            this.updateParams(p, () =>\n              this.loadCollection(this.context.selectedRepo, true),\n            )\n          }\n          breadcrumbs={breadcrumbs}\n          activeTab='install'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <CollectionInfo\n              {...collection}\n              updateParams={(p) => this.updateParams(p)}\n              params={this.state.params}\n              addAlert={(variant, title, description) =>\n                this.setState({\n                  alerts: [\n                    ...this.state.alerts,\n                    {\n                      variant,\n                      title,\n                      description,\n                    },\n                  ],\n                })\n              }\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  get loadCollection() {\n    return loadCollection;\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n\nexport default withRouter(CollectionDetail);\n\nCollectionDetail.contextType = AppContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar hashFragment = '';\r\nvar observer = null;\r\nvar asyncTimerId = null;\r\nvar scrollFunction = null;\r\nfunction reset() {\r\n    hashFragment = '';\r\n    if (observer !== null)\r\n        observer.disconnect();\r\n    if (asyncTimerId !== null) {\r\n        window.clearTimeout(asyncTimerId);\r\n        asyncTimerId = null;\r\n    }\r\n}\r\nfunction isInteractiveElement(element) {\r\n    var formTags = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA'];\r\n    var linkTags = ['A', 'AREA'];\r\n    return ((formTags.includes(element.tagName) && !element.hasAttribute('disabled')) ||\r\n        (linkTags.includes(element.tagName) && element.hasAttribute('href')));\r\n}\r\nfunction getElAndScroll() {\r\n    var element = null;\r\n    if (hashFragment === '#') {\r\n        // use document.body instead of document.documentElement because of a bug in smoothscroll-polyfill in safari\r\n        // see https://github.com/iamdustan/smoothscroll/issues/138\r\n        // while smoothscroll-polyfill is not included, it is the recommended way to implement smoothscroll\r\n        // in browsers that don't natively support el.scrollIntoView({ behavior: 'smooth' })\r\n        element = document.body;\r\n    }\r\n    else {\r\n        // check for element with matching id before assume '#top' is the top of the document\r\n        // see https://html.spec.whatwg.org/multipage/browsing-the-web.html#target-element\r\n        var id = hashFragment.replace('#', '');\r\n        element = document.getElementById(id);\r\n        if (element === null && hashFragment === '#top') {\r\n            // see above comment for why document.body instead of document.documentElement\r\n            element = document.body;\r\n        }\r\n    }\r\n    if (element !== null) {\r\n        scrollFunction(element);\r\n        // update focus to where the page is scrolled to\r\n        // unfortunately this doesn't work in safari (desktop and iOS) when blur() is called\r\n        var originalTabIndex = element.getAttribute('tabindex');\r\n        if (originalTabIndex === null && !isInteractiveElement(element)) {\r\n            element.setAttribute('tabindex', -1);\r\n        }\r\n        element.focus({ preventScroll: true });\r\n        if (originalTabIndex === null && !isInteractiveElement(element)) {\r\n            // for some reason calling blur() in safari resets the focus region to where it was previously,\r\n            // if blur() is not called it works in safari, but then are stuck with default focus styles\r\n            // on an element that otherwise might never had focus styles applied, so not an option\r\n            element.blur();\r\n            element.removeAttribute('tabindex');\r\n        }\r\n        reset();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction hashLinkScroll(timeout) {\r\n    // Push onto callback queue so it runs after the DOM is updated\r\n    window.setTimeout(function () {\r\n        if (getElAndScroll() === false) {\r\n            if (observer === null) {\r\n                observer = new MutationObserver(getElAndScroll);\r\n            }\r\n            observer.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                subtree: true,\r\n            });\r\n            // if the element doesn't show up in specified timeout or 10 seconds, stop checking\r\n            asyncTimerId = window.setTimeout(function () {\r\n                reset();\r\n            }, timeout || 10000);\r\n        }\r\n    }, 0);\r\n}\r\nfunction genericHashLink(As) {\r\n    return React.forwardRef(function (props, ref) {\r\n        var linkHash = '';\r\n        if (typeof props.to === 'string' && props.to.includes('#')) {\r\n            linkHash = \"#\" + props.to.split('#').slice(1).join('#');\r\n        }\r\n        else if (typeof props.to === 'object' &&\r\n            typeof props.to.hash === 'string') {\r\n            linkHash = props.to.hash;\r\n        }\r\n        var passDownProps = {};\r\n        if (As === NavLink) {\r\n            passDownProps.isActive = function (match, location) {\r\n                return match && match.isExact && location.hash === linkHash;\r\n            };\r\n        }\r\n        function handleClick(e) {\r\n            reset();\r\n            hashFragment = props.elementId ? \"#\" + props.elementId : linkHash;\r\n            if (props.onClick)\r\n                props.onClick(e);\r\n            if (hashFragment !== '' &&\r\n                // ignore non-vanilla click events, same as react-router\r\n                // below logic adapted from react-router: https://github.com/ReactTraining/react-router/blob/fc91700e08df8147bd2bb1be19a299cbb14dbcaa/packages/react-router-dom/modules/Link.js#L43-L48\r\n                !e.defaultPrevented && // onClick prevented default\r\n                e.button === 0 && // ignore everything but left clicks\r\n                (!props.target || props.target === '_self') && // let browser handle \"target=_blank\" etc\r\n                !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) // ignore clicks with modifier keys\r\n            ) {\r\n                scrollFunction =\r\n                    props.scroll ||\r\n                        (function (el) {\r\n                            return props.smooth\r\n                                ? el.scrollIntoView({ behavior: 'smooth' })\r\n                                : el.scrollIntoView();\r\n                        });\r\n                hashLinkScroll(props.timeout);\r\n            }\r\n        }\r\n        var filteredProps = __rest(props, [\"scroll\", \"smooth\", \"timeout\", \"elementId\"]);\r\n        return (React.createElement(As, __assign({}, passDownProps, filteredProps, { onClick: handleClick, ref: ref }), props.children));\r\n    });\r\n}\r\nvar HashLink = genericHashLink(Link);\r\nvar NavHashLink = genericHashLink(NavLink);\r\nif (process.env.NODE_ENV !== 'production') {\r\n    HashLink.displayName = 'HashLink';\r\n    NavHashLink.displayName = 'NavHashLink';\r\n    var propTypes = {\r\n        onClick: PropTypes.func,\r\n        children: PropTypes.node,\r\n        scroll: PropTypes.func,\r\n        timeout: PropTypes.number,\r\n        elementId: PropTypes.string,\r\n        to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    };\r\n    HashLink.propTypes = propTypes;\r\n    NavHashLink.propTypes = propTypes;\r\n}\n\nexport { HashLink, NavHashLink, genericHashLink };\n//# sourceMappingURL=react-router-hash-link.esm.js.map\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-detail.scss';\n\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\n\nimport { Alert } from '@patternfly/react-core';\n\nimport {\n  CollectionHeader,\n  EmptyStateCustom,\n  LoadingPageWithHeader,\n  Main,\n  RenderPluginDoc,\n  TableOfContents,\n} from 'src/components';\n\nimport { loadCollection, IBaseCollectionState } from './base';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  ExclamationTriangleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\n// renders markdown files in collection docs/ directory\nclass CollectionDocs extends React.Component<\n  RouteComponentProps,\n  IBaseCollectionState\n> {\n  docsRef: React.RefObject<HTMLDivElement>;\n  searchBarRef: React.RefObject<HTMLInputElement>;\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      collection: undefined,\n      params: params,\n    };\n    this.docsRef = React.createRef();\n    this.searchBarRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.load(false);\n  }\n\n  private load(forceUpdate) {\n    this.loadCollection(this.context.selectedRepo, forceUpdate);\n  }\n\n  render() {\n    const { params, collection } = this.state;\n    const urlFields = this.props.match.params;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    // If the parser can't find anything that matches the URL, neither of\n    // these variables should be set\n    let displayHTML: string;\n    let pluginData;\n\n    const contentType = urlFields['type'] || 'docs';\n    const contentName = urlFields['name'] || urlFields['page'] || null;\n\n    if (contentType === 'docs' && contentName) {\n      if (collection.latest_version.docs_blob.documentation_files) {\n        const file =\n          collection.latest_version.docs_blob.documentation_files.find(\n            (x) => sanitizeDocsUrls(x.name) === urlFields['page'],\n          );\n\n        if (file) {\n          displayHTML = file.html;\n        }\n      }\n    } else if (contentName) {\n      // check if contents exists\n      if (collection.latest_version.docs_blob.contents) {\n        const content = collection.latest_version.docs_blob.contents.find(\n          (x) =>\n            x.content_type === contentType && x.content_name === contentName,\n        );\n\n        if (content) {\n          if (contentType === 'role') {\n            displayHTML = content['readme_html'];\n          } else {\n            pluginData = content;\n          }\n        }\n      }\n    } else {\n      if (collection.latest_version.docs_blob.collection_readme) {\n        displayHTML =\n          collection.latest_version.docs_blob.collection_readme.html;\n      }\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Documentation` },\n    ];\n\n    // scroll to top of page\n\n    // if (\n    //   this.docsRef.current &&\n    //   this.searchBarRef.current !== window.document.activeElement\n    // ) {\n    //   this.docsRef.current.scrollIntoView();\n    // }\n\n    return (\n      <React.Fragment>\n        <CollectionHeader\n          reload={() => this.load(true)}\n          collection={collection}\n          params={params}\n          updateParams={(p) =>\n            this.updateParams(p, () =>\n              this.loadCollection(this.context.selectedRepo, true),\n            )\n          }\n          breadcrumbs={breadcrumbs}\n          activeTab='documentation'\n          className='header'\n          repo={this.context.selectedRepo}\n        />\n        <Main className='main'>\n          <section className='docs-container'>\n            <TableOfContents\n              className='sidebar'\n              namespace={collection.namespace.name}\n              collection={collection.name}\n              docs_blob={collection.latest_version.docs_blob}\n              selectedName={contentName}\n              selectedType={contentType}\n              params={params}\n              updateParams={(p) => this.updateParams(p)}\n              searchBarRef={this.searchBarRef}\n            ></TableOfContents>\n\n            <div className='body docs pf-c-content' ref={this.docsRef}>\n              {displayHTML || pluginData ? (\n                // if neither variable is set, render not found\n                displayHTML ? (\n                  // if displayHTML is set, render it\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: displayHTML,\n                    }}\n                  ></div>\n                ) : (\n                  // if plugin data is set render it\n                  <RenderPluginDoc\n                    plugin={pluginData}\n                    renderModuleLink={(moduleName) =>\n                      this.renderModuleLink(\n                        moduleName,\n                        collection,\n                        params,\n                        collection.latest_version.metadata.contents,\n                      )\n                    }\n                    renderDocLink={(name, href) =>\n                      this.renderDocLink(name, href, collection, params)\n                    }\n                    renderTableOfContentsLink={(title, section) => (\n                      <HashLink to={'#' + section}>{title}</HashLink>\n                    )}\n                    renderWarning={(text) => (\n                      <Alert isInline variant='warning' title={text} />\n                    )}\n                  />\n                )\n              ) : this.context.selectedRepo === 'community' &&\n                !collection.latest_version.docs_blob.contents ? (\n                this.renderCommunityWarningMessage()\n              ) : (\n                this.renderNotFound(collection.name)\n              )}\n            </div>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private renderDocLink(name, href, collection, params) {\n    if (!!href && href.startsWith('http')) {\n      return (\n        <a href={href} target='_blank' rel='noreferrer'>\n          {name}\n        </a>\n      );\n    } else if (href) {\n      // TODO: right now this will break if people put\n      // ../ at the front of their urls. Need to find a\n      // way to document this\n      return (\n        <Link\n          to={formatPath(\n            Paths.collectionDocsPageByRepo,\n            {\n              namespace: collection.namespace.name,\n              collection: collection.name,\n              page: sanitizeDocsUrls(href),\n              repo: this.context.selectedRepo,\n            },\n            params,\n          )}\n        >\n          {name}\n        </Link>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderModuleLink(moduleName, collection, params, allContent) {\n    const module = allContent.find(\n      (x) => x.content_type === 'module' && x.name === moduleName,\n    );\n\n    if (module) {\n      return (\n        <Link\n          to={formatPath(\n            Paths.collectionContentDocsByRepo,\n            {\n              namespace: collection.namespace.name,\n              collection: collection.name,\n              type: 'module',\n              name: moduleName,\n              repo: this.context.selectedRepo,\n            },\n            params,\n          )}\n        >\n          {moduleName}\n        </Link>\n      );\n    } else {\n      return moduleName;\n    }\n  }\n\n  private renderNotFound(collectionName) {\n    return (\n      <EmptyStateCustom\n        title={t`Not found`}\n        description={t`The file is not available for this version of ${collectionName}`}\n        icon={ExclamationCircleIcon}\n      />\n    );\n  }\n\n  private renderCommunityWarningMessage() {\n    return (\n      <EmptyStateCustom\n        title={t`Warning`}\n        description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n        icon={ExclamationTriangleIcon}\n      />\n    );\n  }\n\n  get loadCollection() {\n    return loadCollection;\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(CollectionDocs);\n\nCollectionDocs.contextType = AppContext;\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { ImportAPI, ImportDetailType, ImportListType } from 'src/api';\nimport {\n  CollectionHeader,\n  LoadingPageWithHeader,\n  ImportConsole,\n  Main,\n} from 'src/components';\n\nimport { loadCollection, IBaseCollectionState } from './base';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IState extends IBaseCollectionState {\n  loadingImports: boolean;\n  selectedImportDetail: ImportDetailType;\n  selectedImport: ImportListType;\n  apiError: string;\n}\n\nclass CollectionImportLog extends React.Component<RouteComponentProps, IState> {\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      collection: undefined,\n      params: params,\n      loadingImports: true,\n      selectedImportDetail: undefined,\n      selectedImport: undefined,\n      apiError: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      loadingImports,\n      selectedImportDetail,\n      selectedImport,\n      apiError,\n    } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Import log` },\n    ];\n\n    return (\n      <React.Fragment>\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collection={collection}\n          params={params}\n          updateParams={(params) =>\n            this.updateParams(params, () => this.loadData(true))\n          }\n          breadcrumbs={breadcrumbs}\n          activeTab='import-log'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <ImportConsole\n              empty={false}\n              loading={loadingImports}\n              task={selectedImportDetail}\n              followMessages={false}\n              setFollowMessages={() => null}\n              selectedImport={selectedImport}\n              apiError={apiError}\n              hideCollectionName={true}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    const failMsg = t`Could not load import log`;\n    this.setState({ loadingImports: true }, () => {\n      this.loadCollection(this.context.selectedRepo, forceReload, () => {\n        ImportAPI.list({\n          namespace: this.state.collection.namespace.name,\n          name: this.state.collection.name,\n          version: this.state.collection.latest_version.version,\n          sort: '-created',\n        })\n          .then((importListResult) => {\n            const importObj = importListResult.data.data[0];\n            ImportAPI.get(importObj.id)\n              .then((importDetailResult) => {\n                this.setState({\n                  apiError: undefined,\n                  loadingImports: false,\n                  selectedImport: importObj,\n                  selectedImportDetail: importDetailResult.data,\n                });\n              })\n              .catch(() => {\n                this.setState({\n                  apiError: failMsg,\n                  loadingImports: false,\n                });\n              });\n          })\n          .catch(() => {\n            this.setState({\n              apiError: failMsg,\n              loadingImports: false,\n            });\n          });\n      });\n    });\n  }\n\n  get loadCollection() {\n    return loadCollection;\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(CollectionImportLog);\n\nCollectionImportLog.contextType = AppContext;\n"],"names":["baseIsEqual","module","exports","value","other","loadCollection","repo","forceReload","callback","CollectionAPI","this","props","match","params","state","include_related","then","result","name","context","selectedRepo","collections","deprecated","data","setState","collection","history","push","Paths","CollectionContent","ParamHelper","location","search","undefined","load","breadcrumbs","namespaceBreadcrumb","url","formatPath","namespace","reload","updateParams","activeTab","className","contents","latest_version","metadata","p","React","withRouter","contextType","AppContext","CollectionDependencies","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","alerts","loadData","headerParams","ignoredParams","dependenciesParams","noDependencies","Object","keys","dependencies","length","closeAlert","i","combineParams","filterIsSet","title","description","itemCount","loadUsedByDependencies","loadCollectionsDependenciesRepos","promises","forEach","dependency","split","dependency_repo","version_range","path","promise","loadDependencyRepo","Promise","all","CollectionVersionAPI","page_size","repository_list","cancelToken","cancel","meta","count","err","response","status","statusText","message","variant","errorMessage","version","reduce","acc","cur","closeAlertMixin","v","CollectionDetail","prevProps","addAlert","__assign","assign","t","s","n","arguments","prototype","hasOwnProperty","call","apply","hashFragment","observer","asyncTimerId","scrollFunction","disconnect","window","clearTimeout","isInteractiveElement","element","includes","tagName","hasAttribute","getElAndScroll","document","body","id","replace","getElementById","originalTabIndex","getAttribute","setAttribute","focus","preventScroll","blur","removeAttribute","genericHashLink","As","ref","linkHash","to","slice","join","hash","passDownProps","NavLink","isActive","isExact","filteredProps","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","onClick","timeout","elementId","defaultPrevented","button","target","metaKey","altKey","ctrlKey","shiftKey","scroll","el","smooth","scrollIntoView","behavior","setTimeout","MutationObserver","observe","attributes","childList","subtree","children","HashLink","Link","CollectionDocs","docsRef","searchBarRef","forceUpdate","displayHTML","pluginData","urlFields","contentType","contentName","docs_blob","documentation_files","file","find","x","sanitizeDocsUrls","html","content","content_type","content_name","collection_readme","selectedName","selectedType","dangerouslySetInnerHTML","__html","plugin","renderModuleLink","moduleName","renderDocLink","href","renderTableOfContentsLink","section","renderWarning","text","Alert","isInline","renderNotFound","renderCommunityWarningMessage","startsWith","rel","page","allContent","type","collectionName","icon","ExclamationCircleIcon","ExclamationTriangleIcon","CollectionImportLog","loadingImports","selectedImportDetail","selectedImport","apiError","empty","loading","task","followMessages","setFollowMessages","hideCollectionName","failMsg","ImportAPI","sort","importListResult","importObj","importDetailResult"],"sourceRoot":""}