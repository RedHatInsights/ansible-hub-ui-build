{"version":3,"file":"js/6176.1193a952b7c3fe8249f0.js","mappings":"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","sources":["webpack:///./src/containers/ansible-remote/tab-access.tsx","webpack:///./src/containers/ansible-remote/tab-details.tsx","webpack:///./src/containers/ansible-remote/detail.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRemoteAPI,\n  AnsibleRemoteType,\n  GroupAPI,\n  GroupType,\n  RoleType,\n  UserAPI,\n} from 'src/api';\nimport { AccessTab } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemoteAccess } from 'src/permissions';\nimport { assignRoles, errorMessage, parsePulpIDFromURL } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: {\n    addAlert: (alert) => void;\n    featureFlags;\n    hasPermission;\n    state: { params };\n    user;\n  };\n}\n\nexport const RemoteAccessTab = ({\n  item,\n  actionContext: {\n    addAlert,\n    featureFlags,\n    hasPermission,\n    state: { params },\n    user,\n  },\n}: TabProps) => {\n  const id = item?.pulp_href && parsePulpIDFromURL(item.pulp_href);\n  const [name, setName] = useState<string>(item?.name);\n  const [groups, setGroups] = useState<GroupType[]>(null); // loading\n  const [users, setUsers] = useState<UserType[]>(null); // loading\n  const [canEditOwners, setCanEditOwners] = useState<boolean>(false);\n  const [selectedGroup, setSelectedGroup] = useState<GroupType>(null);\n  const [selectedUser, setSelectedUser] = useState<UserType>(null);\n  const [showUserRemoveModal, setShowUserRemoveModal] =\n    useState<UserType>(null);\n  const [showUserSelectWizard, setShowUserSelectWizard] = useState<{\n    user?: UserType;\n    roles?: RoleType[];\n  }>(null);\n  const [showGroupRemoveModal, setShowGroupRemoveModal] =\n    useState<GroupType>(null);\n  const [showGroupSelectWizard, setShowGroupSelectWizard] = useState<{\n    group?: GroupType;\n    roles?: RoleType[];\n  }>(null);\n  const [showRoleRemoveModal, setShowRoleRemoveModal] = useState<string>(null);\n  const [showRoleSelectWizard, setShowRoleSelectWizard] = useState<{\n    roles?: RoleType[];\n  }>(null);\n\n  const query = () => {\n    setUsers(null);\n    setGroups(null);\n\n    AnsibleRemoteAPI.myPermissions(id)\n      .then(({ data: { permissions } }) => {\n        setCanEditOwners(\n          canEditAnsibleRemoteAccess({\n            hasPermission,\n            hasObjectPermission: (p: string): boolean =>\n              permissions.includes(p),\n            user,\n            featureFlags,\n          }),\n        );\n        // TODO handle pagination\n        AnsibleRemoteAPI.listRoles(id, { page_size: 100 })\n          .then(({ data: { roles } }) => {\n            const { users, groups } = assignRoles(roles);\n\n            setName(name);\n            setUsers(users as UserType[]);\n            setGroups(groups as GroupType[]);\n          })\n          .catch(() => {\n            setUsers([]);\n            setGroups([]);\n          });\n      })\n      .catch(() => {\n        setUsers([]);\n        setGroups([]);\n        setCanEditOwners(false);\n      });\n  };\n\n  const updateRoles = ({ roles, alertSuccess, alertFailure, stateUpdate }) => {\n    Promise.all(roles)\n      .then(() => {\n        addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        query();\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        updateProps(stateUpdate);\n      });\n  };\n\n  const addUser = (user, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        users: [user.username],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`User \"${user.username}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" could not be added to \"${name}\".`,\n      stateUpdate: { showUserSelectWizard: null },\n    });\n  };\n\n  const removeUser = (user) => {\n    const roles = user.object_roles.map((role) =>\n      AnsibleRemoteAPI.removeRole(id, {\n        role,\n        users: [user.username],\n      }),\n    );\n    updateRoles({\n      roles,\n      alertSuccess: t`User \"${user.username}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showUserRemoveModal: null },\n    });\n  };\n\n  const addGroup = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n      stateUpdate: { showGroupSelectWizard: null },\n    });\n  };\n\n  const removeGroup = (group) => {\n    const roles = group.object_roles.map((role) =>\n      AnsibleRemoteAPI.removeRole(id, {\n        role,\n        groups: [group.name],\n      }),\n    );\n    updateRoles({\n      roles,\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showGroupRemoveModal: null },\n    });\n  };\n\n  const addUserRole = (user, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        users: [user.username],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n\n  const removeUserRole = (role, user) => {\n    const removedRole = AnsibleRemoteAPI.removeRole(id, {\n      role,\n      users: [user.username],\n    });\n    updateRoles({\n      roles: [removedRole],\n      alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const addRole = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n\n  const removeRole = (role, group) => {\n    const removedRole = AnsibleRemoteAPI.removeRole(id, {\n      role,\n      groups: [group.name],\n    });\n    updateRoles({\n      roles: [removedRole],\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const updateProps = (props) => {\n    Object.entries(props).forEach(([k, v]) => {\n      switch (k) {\n        case 'showUserRemoveModal':\n          setShowUserRemoveModal(v as UserType);\n          break;\n        case 'showUserSelectWizard':\n          setShowUserSelectWizard(v as { user?: UserType; roles?: RoleType[] });\n          break;\n        case 'showGroupRemoveModal':\n          setShowGroupRemoveModal(v as GroupType);\n          break;\n        case 'showGroupSelectWizard':\n          setShowGroupSelectWizard(\n            v as { group?: GroupType; roles?: RoleType[] },\n          );\n          break;\n        case 'showRoleRemoveModal':\n          setShowRoleRemoveModal(v as string);\n          break;\n        case 'showRoleSelectWizard':\n          setShowRoleSelectWizard(v as { roles?: RoleType[] });\n          break;\n        default:\n          console.error('updateProps', k, v);\n      }\n    });\n  };\n\n  useEffect(query, [item.pulp_href]);\n\n  useEffect(() => {\n    if (!users) {\n      return;\n    }\n\n    if (!params?.user) {\n      setSelectedUser(null);\n      return;\n    }\n\n    UserAPI.list({ username: params.user }).then(({ data: { data } }) => {\n      setSelectedUser(users.find((u) => u.username === data[0].username));\n    });\n  }, [params?.user, users]);\n\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n\n    if (!params?.group) {\n      setSelectedGroup(null);\n      return;\n    }\n\n    GroupAPI.list({ name: params.group }).then(({ data: { data } }) => {\n      setSelectedGroup(groups.find((g) => g.name === data[0].name));\n    });\n  }, [params?.group, groups]);\n\n  return (\n    <AccessTab\n      addGroup={addGroup}\n      addRole={addRole}\n      addUser={addUser}\n      addUserRole={addUserRole}\n      canEditOwners={canEditOwners}\n      group={selectedGroup}\n      groups={groups}\n      name={name}\n      pulpObjectType='remotes/ansible/collection'\n      removeGroup={removeGroup}\n      removeRole={removeRole}\n      removeUser={removeUser}\n      removeUserRole={removeUserRole}\n      selectRolesMessage={t`The selected roles will be added to this specific Ansible remote.`}\n      showGroupRemoveModal={showGroupRemoveModal}\n      showGroupSelectWizard={showGroupSelectWizard}\n      showRoleRemoveModal={showRoleRemoveModal}\n      showRoleSelectWizard={showRoleSelectWizard}\n      showUserRemoveModal={showUserRemoveModal}\n      showUserSelectWizard={showUserSelectWizard}\n      updateProps={updateProps}\n      user={selectedUser}\n      users={users}\n      urlPrefix={formatPath(Paths.ansibleRemoteDetail, {\n        name,\n      })}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AnsibleRemoteType } from 'src/api';\nimport { CopyURL, Details, LazyRepositories } from 'src/components';\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: object;\n}\n\nconst PFCodeBlock = ({ code }: { code: string }) => {\n  const [copied, setCopied] = React.useState(false);\n\n  const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n  };\n\n  const onClick = (event, text) => {\n    clipboardCopyFunc(event, text);\n    setCopied(true);\n  };\n\n  const actions = (\n    <React.Fragment>\n      <CodeBlockAction>\n        <ClipboardCopyButton\n          id='basic-copy-button'\n          textId='code-content'\n          aria-label='Copy to clipboard'\n          onClick={(e) => onClick(e, code)}\n          exitDelay={copied ? 1500 : 600}\n          maxWidth='110px'\n          variant='plain'\n          onTooltipHidden={() => setCopied(false)}\n        >\n          {copied ? t`Successfully copied to clipboard` : t`Copy to clipboard`}\n        </ClipboardCopyButton>\n      </CodeBlockAction>\n    </React.Fragment>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id='code-content'>{code}</CodeBlockCode>\n    </CodeBlock>\n  );\n};\n\nconst MaybeCode = ({ code }: { code: string }) =>\n  code ? <PFCodeBlock code={code} /> : <>{t`None`}</>;\n\nexport const DetailsTab = ({ item }: TabProps) => (\n  <Details\n    fields={[\n      { label: t`Remote name`, value: item?.name },\n      {\n        label: t`URL`,\n        value: <CopyURL url={item?.url} fallback />,\n      },\n      {\n        label: t`Proxy URL`,\n        value: <CopyURL url={item?.proxy_url} fallback />,\n      },\n      {\n        label: t`TLS validation`,\n        value: item?.tls_validation ? t`Enabled` : t`Disabled`,\n      },\n      { label: t`Client certificate`, value: item?.client_cert || t`None` },\n      { label: t`CA certificate`, value: item?.ca_cert || t`None` },\n      {\n        label: t`Download concurrency`,\n        value: item?.download_concurrency ?? t`None`,\n      },\n      { label: t`Rate limit`, value: item?.rate_limit ?? t`None` },\n      {\n        label: t`Repositories`,\n        value: <LazyRepositories remoteHref={item?.pulp_href} />,\n      },\n      {\n        label: t`YAML requirements`,\n        value: <MaybeCode code={item?.requirements_file} />,\n      },\n    ]}\n  />\n);\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  ansibleRemoteDeleteAction,\n  ansibleRemoteDownloadCAAction,\n  ansibleRemoteDownloadClientAction,\n  ansibleRemoteDownloadRequirementsAction,\n  ansibleRemoteEditAction,\n} from 'src/actions';\nimport { AnsibleRemoteAPI, AnsibleRemoteType } from 'src/api';\nimport { PageWithTabs } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRemotes } from 'src/permissions';\nimport { parsePulpIDFromURL } from 'src/utilities';\nimport { RemoteAccessTab } from './tab-access';\nimport { DetailsTab } from './tab-details';\n\nconst tabs = [\n  { id: 'details', name: msg`Details` },\n  { id: 'access', name: msg`Access` },\n];\n\nconst AnsibleRemoteDetail = PageWithTabs<AnsibleRemoteType>({\n  breadcrumbs: ({ name, tab, params: { user, group } }) =>\n    [\n      { url: formatPath(Paths.ansibleRemotes), name: t`Remotes` },\n      { url: formatPath(Paths.ansibleRemoteDetail, { name }), name },\n      tab.id === 'access' && (group || user)\n        ? {\n            url: formatPath(\n              Paths.ansibleRepositoryDetail,\n              { name },\n              { tab: tab.id },\n            ),\n            name: tab.name,\n          }\n        : null,\n      tab.id === 'access' && group ? { name: t`Group ${group}` } : null,\n      tab.id === 'access' && user ? { name: t`User ${user}` } : null,\n      tab.id === 'access' && !user && !group ? { name: tab.name } : null,\n    ].filter(Boolean),\n  condition: canViewAnsibleRemotes,\n  displayName: 'AnsibleRemoteDetail',\n  errorTitle: msg`Remote could not be displayed.`,\n  headerActions: [\n    ansibleRemoteEditAction,\n    ansibleRemoteDownloadRequirementsAction,\n    ansibleRemoteDownloadClientAction,\n    ansibleRemoteDownloadCAAction,\n    ansibleRemoteDeleteAction,\n  ],\n  listUrl: formatPath(Paths.ansibleRemotes),\n  query: ({ name }) => {\n    return AnsibleRemoteAPI.list({ name })\n      .then(({ data: { results } }) => results[0])\n      .then((remote) => {\n        // using the list api, so an empty array is really a 404\n        if (!remote) {\n          return Promise.reject({ response: { status: 404 } });\n        }\n\n        return AnsibleRemoteAPI.myPermissions(\n          parsePulpIDFromURL(remote.pulp_href),\n        )\n          .then(({ data: { permissions } }) => permissions)\n          .catch((e) => {\n            console.error(e);\n            return [];\n          })\n          .then((my_permissions) => ({ ...remote, my_permissions }));\n      });\n  },\n  renderTab: (tab, item, actionContext) =>\n    ({\n      details: <DetailsTab item={item} actionContext={actionContext} />,\n      access: <RemoteAccessTab item={item} actionContext={actionContext} />,\n    })[tab],\n  tabs,\n  tabUpdateParams: (p) => {\n    delete p.group;\n    delete p.user;\n    return p;\n  },\n});\n\nexport default AnsibleRemoteDetail;\n"],"names":["RemoteAccessTab","_ref","item","_ref$actionContext","actionContext","addAlert","featureFlags","hasPermission","params","state","user","id","pulp_href","parsePulpIDFromURL","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","_useState4","groups","setGroups","_useState5","_useState6","users","setUsers","_useState7","_useState8","canEditOwners","setCanEditOwners","_useState9","_useState10","selectedGroup","setSelectedGroup","_useState11","_useState12","selectedUser","setSelectedUser","_useState13","_useState14","showUserRemoveModal","setShowUserRemoveModal","_useState15","_useState16","showUserSelectWizard","setShowUserSelectWizard","_useState17","_useState18","showGroupRemoveModal","setShowGroupRemoveModal","_useState19","_useState20","showGroupSelectWizard","setShowGroupSelectWizard","_useState21","_useState22","showRoleRemoveModal","setShowRoleRemoveModal","_useState23","_useState24","showRoleSelectWizard","setShowRoleSelectWizard","query","AnsibleRemoteAPI","myPermissions","then","_ref2","permissions","data","canEditAnsibleRemoteAccess","hasObjectPermission","p","includes","listRoles","page_size","_ref3","roles","_assignRoles","assignRoles","updateRoles","_ref4","alertSuccess","alertFailure","stateUpdate","Promise","all","title","variant","_ref5","_ref5$response","response","status","statusText","description","errorMessage","updateProps","props","Object","entries","forEach","_ref6","_ref7","k","v","console","error","useEffect","UserAPI","list","username","_ref8","find","u","group","GroupAPI","_ref9","g","React","AccessTab","addGroup","rolePromises","map","role","addRole","i18n","_","values","addUser","addUserRole","pulpObjectType","removeGroup","object_roles","removeRole","removedRole","removeUser","removeUserRole","selectRolesMessage","urlPrefix","formatPath","Paths","ansibleRemoteDetail","PFCodeBlock","code","_React$useState","_React$useState2","copied","setCopied","actions","CodeBlockAction","ClipboardCopyButton","textId","onClick","e","event","text","navigator","clipboard","writeText","toString","clipboardCopyFunc","exitDelay","maxWidth","onTooltipHidden","CodeBlock","CodeBlockCode","MaybeCode","DetailsTab","_item$download_concur","_item$rate_limit","Details","fields","label","value","CopyURL","url","fallback","proxy_url","tls_validation","client_cert","ca_cert","download_concurrency","rate_limit","LazyRepositories","remoteHref","requirements_file","PageWithTabs","breadcrumbs","tab","_ref$params","ansibleRemotes","ansibleRepositoryDetail","filter","Boolean","condition","canViewAnsibleRemotes","displayName","errorTitle","headerActions","ansibleRemoteEditAction","ansibleRemoteDownloadRequirementsAction","ansibleRemoteDownloadClientAction","ansibleRemoteDownloadCAAction","ansibleRemoteDeleteAction","listUrl","results","remote","my_permissions","_objectSpread","reject","renderTab","details","access","tabs","tabUpdateParams"],"sourceRoot":""}