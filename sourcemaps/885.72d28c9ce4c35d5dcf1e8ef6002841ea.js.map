{"version":3,"file":"js/885.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/containers/search/search.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { Button, DataList, Switch } from '@patternfly/react-core';\nimport React, { Component, type ReactNode } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  type CollectionVersionSearch,\n  MyNamespaceAPI,\n  MySyncListAPI,\n  type SyncListType,\n} from 'src/api';\nimport {\n  AlertList,\n  type AlertType,\n  BaseHeader,\n  CollectionCard,\n  CollectionDropdown,\n  CollectionListItem,\n  CollectionNextPageCard,\n  DeleteCollectionModal,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  HubListToolbar,\n  HubPagination,\n  ImportModal,\n  LoadingSpinner,\n  closeAlert,\n  collectionFilter,\n} from 'src/components';\nimport { AppContext, type IAppContextType } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  type RouteProps,\n  errorMessage,\n  filterIsSet,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\nimport './search.scss';\n\ninterface IState {\n  collections: CollectionVersionSearch[];\n  count: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n    namespace?: string;\n  };\n  loading: boolean;\n  synclist: SyncListType;\n  alerts: AlertType[];\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  redirect: string;\n  noDependencies: boolean;\n  deleteCollection: CollectionVersionSearch;\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n  deleteAll: boolean;\n}\n\nclass Search extends Component<RouteProps, IState> {\n  static contextType = AppContext;\n\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = 10;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem('search_view_type');\n    }\n\n    if (!params['sort']) {\n      params['sort'] = 'name';\n    }\n\n    this.state = {\n      collections: [],\n      params,\n      count: 0,\n      loading: true,\n      synclist: undefined,\n      alerts: [],\n      updateCollection: null,\n      showImportModal: false,\n      redirect: null,\n      noDependencies: false,\n      deleteCollection: null,\n      confirmDelete: false,\n      isDeletionPending: false,\n      deleteAll: true,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  private load() {\n    this.queryCollections();\n\n    if (IS_INSIGHTS) {\n      this.getSynclist();\n    }\n  }\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />;\n    }\n\n    const {\n      alerts,\n      collections,\n      confirmDelete,\n      count,\n      deleteCollection,\n      isDeletionPending,\n      loading,\n      params,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const noData =\n      collections.length === 0 &&\n      !filterIsSet(params, [\n        'keywords',\n        'tags',\n        'is_signed',\n        'repository_name',\n        'namespace',\n      ]);\n\n    const updateParams = (p) =>\n      this.updateParams(p, () => this.queryCollections());\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    const ignoredParams = ['page', 'page_size', 'sort', 'view_type'];\n\n    return (\n      <div className='search-page'>\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) =>\n            closeAlert(i, {\n              alerts,\n              setAlerts: (alerts) => this.setState({ alerts }),\n            })\n          }\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        <BaseHeader className='hub-header-bordered' title={t`Collections`} />\n        {!noData && (\n          <HubListToolbar\n            count={count}\n            ignoredParams={ignoredParams}\n            params={params}\n            switcher='search_view_type'\n            updateParams={updateParams}\n            {...collectionFilter({\n              featureFlags: (this.context as IAppContextType).featureFlags,\n              ignoredParams,\n            })}\n          />\n        )}\n        {loading ? (\n          <LoadingSpinner />\n        ) : noData ? (\n          <EmptyStateNoData\n            title={t`No collections yet`}\n            description={t`Collections will appear once uploaded`}\n          />\n        ) : (\n          <>\n            <section className='collection-container'>\n              {this.renderCollections(collections, {\n                count,\n                params,\n                updateParams,\n              })}\n            </section>\n            <section className='footer'>\n              <HubPagination\n                params={params}\n                updateParams={updateParams}\n                count={count}\n              />\n            </section>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private renderCollections(collections, { count, params, updateParams }) {\n    if (collections.length === 0) {\n      return (\n        <EmptyStateFilter\n          clearAllFilters={() => {\n            ParamHelper.clearAllFilters({\n              params,\n              ignoredParams: ['page', 'page_size', 'sort', 'view_type'],\n              updateParams,\n            });\n          }}\n        />\n      );\n    }\n\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections, {\n        count,\n        params,\n        updateParams,\n      });\n    }\n  }\n\n  private renderCards(collections, { count, params, updateParams }) {\n    return (\n      <div className='hub-cards'>\n        {collections.map((c, i) => {\n          return (\n            <CollectionCard\n              key={i}\n              {...c}\n              footer={this.renderSyncToogle(\n                c.collection_version.name,\n                c.collection_version.namespace,\n              )}\n              menu={this.renderMenu(false, c)}\n              displaySignatures={\n                (this.context as IAppContextType).featureFlags\n                  .display_signatures\n              }\n            />\n          );\n        })}\n        {count > params.page_size * (params.page ?? 1) ? (\n          <CollectionNextPageCard\n            onClick={() =>\n              updateParams({ ...params, page: (params.page ?? 1) + 1 })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  private handleControlClick(collection) {\n    const { name } = collection.collection_version;\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${name}\" has been successfully deprecated.`\n            : t`The collection \"${name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title,\n                variant: 'success',\n              },\n            ],\n          });\n          this.load();\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${name}\" could not be deprecated.`\n                : t`Collection \"${name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private renderMenu(list, collection) {\n    const { hasPermission } = this.context as IAppContextType;\n    const canUpload = hasPermission('galaxy.upload_to_namespace');\n\n    const deleteFn = (deleteAll) => ({\n      addAlert: (alert) => this.addAlert(alert),\n      collection,\n      openModal: () =>\n        this.setState({\n          deleteCollection: collection,\n          confirmDelete: false,\n          deleteAll,\n        }),\n    });\n\n    const dropdownMenu = (\n      <CollectionDropdown\n        collection={collection}\n        data-cy='collection-kebab'\n        onDelete={deleteFn(true)}\n        onDeprecate={() => this.handleControlClick(collection)}\n        onRemove={deleteFn(false)}\n        onUploadVersion={\n          list ? null : () => this.checkUploadPrivilleges(collection)\n        }\n        wrapper={\n          list\n            ? null\n            : ({ any, children }) =>\n                any ? (\n                  <span>{children}</span>\n                ) : (\n                  <span className='hidden-menu-space' />\n                )\n        }\n      />\n    );\n\n    if (list) {\n      return {\n        uploadButton: canUpload ? (\n          <Button\n            onClick={() => this.checkUploadPrivilleges(collection)}\n            variant='secondary'\n          >\n            {t`Upload new version`}\n          </Button>\n        ) : null,\n        dropdownMenu,\n      };\n    }\n\n    return dropdownMenu;\n  }\n\n  private renderSyncToogle(name: string, namespace: string): ReactNode {\n    const { synclist } = this.state;\n\n    if (!synclist) {\n      return null;\n    }\n\n    return (\n      <Switch\n        id={namespace + '.' + name}\n        className='sync-toggle'\n        label={t`Sync`}\n        isChecked={this.isCollectionSynced(name, namespace)}\n        onChange={() => this.toggleCollectionSync(name, namespace)}\n      />\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private toggleCollectionSync(name: string, namespace: string) {\n    const synclist = { ...this.state.synclist };\n\n    const colIndex = synclist.collections.findIndex(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    if (colIndex < 0) {\n      synclist.collections.push({ name: name, namespace: namespace });\n    } else {\n      synclist.collections.splice(colIndex, 1);\n    }\n\n    MySyncListAPI.update(synclist.id, synclist).then((response) => {\n      this.setState({ synclist: response.data });\n      MySyncListAPI.curate(synclist.id).then(() => null);\n    });\n  }\n\n  private isCollectionSynced(name: string, namespace: string): boolean {\n    const { synclist } = this.state;\n    const found = synclist.collections.find(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    return synclist.policy === 'include' ? !!found : !found;\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='hub-list'>\n          <DataList className='data-list' aria-label={t`List of Collections`}>\n            {collections.map((c, i) => (\n              <CollectionListItem\n                key={i}\n                collection={c}\n                displaySignatures={\n                  (this.context as IAppContextType).featureFlags\n                    .display_signatures\n                }\n                showNamespace\n                synclistSwitch={this.renderSyncToogle(\n                  c.collection_version.name,\n                  c.collection_version.namespace,\n                )}\n                {...this.renderMenu(true, c)}\n              />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private getSynclist() {\n    MySyncListAPI.list().then((result) => {\n      // ignore results if more than 1 is returned\n      // TODO: should we throw an error for this or just ignore it?\n      if (result.data.meta.count === 1) {\n        this.setState({ synclist: result.data.data[0] });\n      } else {\n        console.error(\n          `my-synclist returned ${result.data.meta.count} synclists`,\n        );\n      }\n    });\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, ['view_type']),\n        is_deprecated: false,\n        repository_label: '!hide_from_search',\n        is_highest: true,\n      }).then((result) => {\n        this.setState({\n          collections: result.data.data,\n          count: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private updateParams(params, callback = null) {\n    ParamHelper.updateParams({\n      params,\n      navigate: (to) => this.props.navigate(to),\n      setState: (state) => this.setState(state, callback),\n    });\n  }\n}\n\nexport default withRouter(Search);\n"],"names":["Search","_Component","props","_this","_classCallCheck","_callSuper","params","ParamHelper","parseParamString","location","search","localStorage","getItem","state","collections","count","loading","synclist","undefined","alerts","updateCollection","showImportModal","redirect","noDependencies","deleteCollection","confirmDelete","isDeletionPending","deleteAll","_inherits","_createClass","key","value","this","load","queryCollections","getSynclist","alert","setState","concat","_toConsumableArray","_deleteCollection$rep","_this2","React","Navigate","to","_this$state","noData","length","filterIsSet","updateParams","p","deleteFromRepo","repository","name","ignoredParams","className","AlertList","closeAlert","i","setAlerts","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","collection","addAlert","ImportModal","isOpen","onUploadSuccess","formatPath","Paths","myImports","namespace","collection_version","setOpen","warn","toggleImportModal","BaseHeader","title","i18n","_","id","HubListToolbar","_extends","switcher","collectionFilter","featureFlags","context","LoadingSpinner","EmptyStateNoData","description","renderCollections","HubPagination","warning","variant","_ref","EmptyStateFilter","clearAllFilters","view_type","renderList","renderCards","_ref2","_params$page","_this3","map","c","CollectionCard","footer","renderSyncToogle","menu","renderMenu","displaySignatures","display_signatures","page_size","page","CollectionNextPageCard","onClick","_params$page2","_objectSpread","_this4","CollectionAPI","setDeprecation","then","res","taskId","parsePulpIDFromURL","data","task","waitForTask","deprecated","values","err","_err$response","response","status","statusText","errorMessage","list","_this5","canUpload","hasPermission","deleteFn","openModal","dropdownMenu","CollectionDropdown","onDelete","onDeprecate","handleControlClick","onRemove","onUploadVersion","checkUploadPrivilleges","wrapper","_ref4","any","children","uploadButton","Button","_this6","Switch","label","isChecked","isCollectionSynced","onChange","toggleCollectionSync","_this7","MyNamespaceAPI","get","include_related","related_fields","my_permissions","includes","_this8","colIndex","findIndex","el","push","splice","MySyncListAPI","update","curate","found","find","policy","_this9","DataList","CollectionListItem","showNamespace","synclistSwitch","_this10","result","meta","console","error","_this11","CollectionVersionAPI","getReduced","is_deprecated","repository_label","is_highest","_this12","callback","arguments","navigate","Component","_defineProperty","AppContext","withRouter"],"sourceRoot":""}