{"version":3,"file":"js/140.3a040d001c1dbabc6f94.js","mappings":"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","sources":["webpack:///./src/containers/search/search.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { Button, DataList, DropdownItem, Switch } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  MySyncListAPI,\n  SyncListType,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  CardListSwitcher,\n  CollectionCard,\n  CollectionFilter,\n  CollectionListItem,\n  DeleteCollectionModal,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageSpinner,\n  Pagination,\n  StatefulDropdown,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './search.scss';\n\ninterface IState {\n  collections: CollectionVersionSearch[];\n  numberOfResults: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n    namespace?: string;\n  };\n  loading: boolean;\n  synclist: SyncListType;\n  alerts: AlertType[];\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  redirect: string;\n  noDependencies: boolean;\n  deleteCollection: CollectionVersionSearch;\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\nclass Search extends React.Component<RouteProps, IState> {\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = Constants.CARD_DEFAULT_PAGE_SIZE;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem(\n        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n      );\n    }\n\n    this.state = {\n      collections: [],\n      params: params,\n      numberOfResults: 0,\n      loading: true,\n      synclist: undefined,\n      alerts: [],\n      updateCollection: null,\n      showImportModal: false,\n      redirect: null,\n      noDependencies: false,\n      deleteCollection: null,\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  private load() {\n    this.queryCollections();\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      this.getSynclist();\n    }\n  }\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />;\n    }\n\n    const {\n      loading,\n      collections,\n      params,\n      numberOfResults,\n      showImportModal,\n      updateCollection,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n    } = this.state;\n    const noData =\n      collections.length === 0 &&\n      !filterIsSet(params, [\n        'keywords',\n        'tags',\n        'is_signed',\n        'repository_name',\n        'namespace',\n      ]);\n\n    const updateParams = (p) =>\n      this.updateParams(p, () => this.queryCollections());\n\n    return (\n      <div className='search-page'>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        <BaseHeader className='header' title={t`Collections`}>\n          {!noData && (\n            <div className='hub-toolbar-wrapper'>\n              <div className='toolbar'>\n                <CollectionFilter\n                  ignoredParams={['page', 'page_size', 'sort', 'view_type']}\n                  params={params}\n                  updateParams={updateParams}\n                />\n\n                <div className='hub-pagination-container'>\n                  <div className='card-list-switcher'>\n                    <CardListSwitcher\n                      size='sm'\n                      params={params}\n                      updateParams={(p) =>\n                        this.updateParams(p, () =>\n                          // Note, we have to use this.state.params instead\n                          // of params in the callback because the callback\n                          // executes before the page can re-run render\n                          // which means params doesn't contain the most\n                          // up to date state\n                          localStorage.setItem(\n                            Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n                            this.state.params.view_type,\n                          ),\n                        )\n                      }\n                    />\n                  </div>\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={numberOfResults}\n                    perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                    isTop\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        {loading ? (\n          <LoadingPageSpinner />\n        ) : noData ? (\n          <EmptyStateNoData\n            title={t`No collections yet`}\n            description={t`Collections will appear once uploaded`}\n          />\n        ) : (\n          <React.Fragment>\n            <section className='collection-container'>\n              {this.renderCollections(collections, params, updateParams)}\n            </section>\n            <section className='footer'>\n              <Pagination\n                params={params}\n                updateParams={(p) =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                count={numberOfResults}\n              />\n            </section>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private renderCollections(collections, params, updateParams) {\n    if (collections.length === 0) {\n      return (\n        <EmptyStateFilter\n          clearAllFilters={() => {\n            ParamHelper.clearAllFilters({\n              params,\n              ignoredParams: ['page', 'page_size', 'sort', 'view_type'],\n              updateParams,\n            });\n          }}\n        />\n      );\n    }\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections);\n    }\n  }\n\n  private renderCards(collections) {\n    return (\n      <div className='hub-cards'>\n        {collections.map((c, i) => {\n          return (\n            <CollectionCard\n              className='card'\n              key={i}\n              {...c}\n              footer={this.renderSyncToogle(\n                c.collection_version.name,\n                c.collection_version.namespace,\n              )}\n              menu={this.renderMenu(false, c)}\n              displaySignatures={this.context.featureFlags.display_signatures}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  private handleControlClick(collection) {\n    const { name } = collection.collection_version;\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${name}\" has been successfully deprecated.`\n            : t`The collection \"${name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          this.load();\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${name}\" could not be deprecated.`\n                : t`Collection \"${name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private renderMenu(list, collection) {\n    const { hasPermission } = this.context;\n    const menuItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies: null,\n        onClick: () =>\n          DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n            addAlert: (alert) => this.addAlert(alert),\n            setState: (state) => this.setState(state),\n            collection,\n          }),\n      }),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.handleControlClick(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      !list && hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.checkUploadPrivilleges(collection)}\n          key='upload new version'\n        >\n          {t`Upload new version`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const displayMenu = menuItems.length > 0;\n\n    if (list) {\n      return {\n        uploadButton: hasPermission('galaxy.upload_to_namespace') ? (\n          <Button\n            onClick={() => this.checkUploadPrivilleges(collection)}\n            variant='secondary'\n          >\n            {t`Upload new version`}\n          </Button>\n        ) : null,\n        dropdownMenu: displayMenu ? (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        ) : null,\n      };\n    }\n\n    return (\n      <span className={cx(!displayMenu && 'hidden-menu-space')}>\n        {displayMenu && (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        )}\n      </span>\n    );\n  }\n\n  private renderSyncToogle(name: string, namespace: string): React.ReactNode {\n    const { synclist } = this.state;\n\n    if (!synclist) {\n      return null;\n    }\n\n    return (\n      <Switch\n        id={namespace + '.' + name}\n        className='sync-toggle'\n        label={t`Sync`}\n        isChecked={this.isCollectionSynced(name, namespace)}\n        onChange={() => this.toggleCollectionSync(name, namespace)}\n      />\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private toggleCollectionSync(name: string, namespace: string) {\n    const synclist = { ...this.state.synclist };\n\n    const colIndex = synclist.collections.findIndex(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    if (colIndex < 0) {\n      synclist.collections.push({ name: name, namespace: namespace });\n    } else {\n      synclist.collections.splice(colIndex, 1);\n    }\n\n    MySyncListAPI.update(synclist.id, synclist).then((response) => {\n      this.setState({ synclist: response.data });\n      MySyncListAPI.curate(synclist.id).then(() => null);\n    });\n  }\n\n  private isCollectionSynced(name: string, namespace: string): boolean {\n    const { synclist } = this.state;\n    const found = synclist.collections.find(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    return synclist.policy === 'include' ? !!found : !found;\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='hub-list'>\n          <DataList className='data-list' aria-label={t`List of Collections`}>\n            {collections.map((c, i) => (\n              <CollectionListItem\n                key={i}\n                collection={c}\n                displaySignatures={this.context.featureFlags.display_signatures}\n                showNamespace\n                synclistSwitch={this.renderSyncToogle(\n                  c.collection_version.name,\n                  c.collection_version.namespace,\n                )}\n                {...this.renderMenu(true, c)}\n              />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private getSynclist() {\n    MySyncListAPI.list().then((result) => {\n      // ignore results if more than 1 is returned\n      // TODO: should we throw an error for this or just ignore it?\n      if (result.data.meta.count === 1) {\n        this.setState({ synclist: result.data.data[0] });\n      } else {\n        console.error(\n          `my-synclist returned ${result.data.meta.count} synclists`,\n        );\n      }\n    });\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, ['view_type']),\n        is_deprecated: false,\n        repository_label: '!hide_from_search',\n        is_highest: true,\n      }).then((result) => {\n        this.setState({\n          collections: result.data.data,\n          numberOfResults: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(Search);\n\nSearch.contextType = AppContext;\n"],"names":["Search","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","params","ParamHelper","parseParamString","location","search","Constants","CARD_DEFAULT_PAGE_SIZE","localStorage","getItem","SEARCH_VIEW_TYPE_LOCAL_KEY","state","collections","numberOfResults","loading","synclist","undefined","alerts","updateCollection","showImportModal","redirect","noDependencies","deleteCollection","confirmDelete","isDeletionPending","_createClass","key","value","this","load","queryCollections","DEPLOYMENT_MODE","INSIGHTS_DEPLOYMENT_MODE","getSynclist","alert","setState","concat","_toConsumableArray","get","closeAlertMixin","_this2","React","Navigate","to","_this$state","noData","length","filterIsSet","updateParams","p","className","AlertList","closeAlert","i","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","collection","addAlert","ImportModal","isOpen","onUploadSuccess","formatPath","Paths","myImports","namespace","collection_version","setOpen","warn","toggleImportModal","BaseHeader","title","i18n","_","id","CollectionFilter","ignoredParams","CardListSwitcher","size","setItem","view_type","Pagination","count","perPageOptions","CARD_DEFAULT_PAGINATION_OPTIONS","isTop","LoadingPageSpinner","EmptyStateNoData","description","renderCollections","warning","variant","EmptyStateFilter","clearAllFilters","renderList","renderCards","_this3","map","c","CollectionCard","_extends","footer","renderSyncToogle","name","menu","renderMenu","displaySignatures","context","featureFlags","display_signatures","_this4","CollectionAPI","setDeprecation","then","res","taskId","parsePulpIDFromURL","data","task","waitForTask","deprecated","values","err","_err$response","response","status","statusText","errorMessage","list","_this5","hasPermission","menuItems","deleteMenuOption","canDeleteCollection","onClick","tryOpenDeleteModalWithConfirm","DropdownItem","handleControlClick","is_deprecated","checkUploadPrivilleges","filter","Boolean","displayMenu","uploadButton","Button","dropdownMenu","StatefulDropdown","items","ariaLabel","cx","_this6","Switch","label","isChecked","isCollectionSynced","onChange","toggleCollectionSync","_this7","MyNamespaceAPI","include_related","related_fields","my_permissions","includes","_this8","_objectSpread","colIndex","findIndex","el","push","splice","MySyncListAPI","update","curate","found","find","policy","_this9","DataList","CollectionListItem","showNamespace","synclistSwitch","_this10","result","meta","console","error","_this11","CollectionVersionAPI","getReduced","repository_label","is_highest","updateParamsMixin","withRouter","contextType","AppContext"],"sourceRoot":""}