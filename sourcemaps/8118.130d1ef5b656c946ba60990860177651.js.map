{"version":3,"file":"js/8118.321a2502051df1716dde.js","mappings":"0xCAyBO,IAAMA,EAAsB,SAAHC,GAShB,IARdC,EAAID,EAAJC,KAAIC,EAAAF,EACJG,cACEC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAaJ,EAAbI,cACSC,EAAML,EAAfM,MAASD,OACTE,EAAIP,EAAJO,KAGIC,GAAKT,aAAI,EAAJA,EAAMU,aAAaC,EAAAA,EAAAA,IAAmBX,EAAKU,WACtDE,GAAwBC,EAAAA,EAAAA,UAAiBb,aAAI,EAAJA,EAAMc,MAAKC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA7CE,EAAIC,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BL,EAAAA,EAAAA,UAAsB,MAAKM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAhDE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0CT,EAAAA,EAAAA,WAAkB,GAAMU,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA3DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA0Cb,EAAAA,EAAAA,UAAoB,MAAKc,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA5DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GACEjB,EAAAA,EAAAA,UAAoB,MAAKkB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GADpBE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAEpDG,GAA0DrB,EAAAA,EAAAA,UAGvD,MAAKsB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAHDE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GAItDG,GAAsDzB,EAAAA,EAAAA,UAAiB,MAAK0B,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAArEE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,GAAwD7B,EAAAA,EAAAA,UAErD,MAAK8B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAFDE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAI9CG,EAAQ,WACZzB,EAAU,MACV0B,EAAAA,GAAqBC,cAAcvC,GAChCwC,MAAK,SAAAC,GAA+B,IAApBC,EAAWD,EAAnBE,KAAQD,YACf1B,GACE4B,EAAAA,EAAAA,IAA+B,CAC7BhD,cAAAA,EACAiD,oBAAqB,SAACC,GAAS,OAC7BJ,EAAYK,SAASD,EAAE,EACzB/C,KAAAA,EACAJ,aAAAA,KAGJ2C,EAAAA,GAAqBU,UAAUhD,GAC5BwC,MAAK,SAAAS,GAAyB,IAEOC,EAFrBC,EAAKF,EAAbN,KAAQQ,MACTC,EAAa,GAAGC,EAAAC,EACSH,GAAK,IAApC,IAAAE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAC,MAAsC,KACXC,EADWC,EAAAT,EAAAU,MAAzBjD,EAAMgD,EAANhD,OAAQkD,EAAIF,EAAJE,KAAIC,EAAAR,EACJ3C,GAAM,QAAAoD,EAAA,WAAE,IAAhB1D,EAAIqD,EAAAE,MACPI,EAAaZ,EAAWa,WAAU,SAACC,GAAC,OAAKA,EAAE7D,OAASA,CAAI,KAC3C,GAAf2D,EACFZ,EAAWe,KAAK,CAAE9D,KAAAA,EAAM+D,aAAc,CAACP,KAEvCT,EAAWY,GAAYI,aAAaD,KAAKN,EAE7C,EAPA,IAAAC,EAAAP,MAAAG,EAAAI,EAAAN,KAAAC,MAAAM,GAOC,OAAAM,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CACH,CAAC,OAAAF,GAAAhB,EAAAiB,EAAAD,EAAA,SAAAhB,EAAAkB,GAAA,CAED/D,EAAQH,GACRO,EAAUwC,EACZ,IAAE,OACK,WACLxC,EAAU,GACZ,GACJ,IAAE,OACK,WACLA,EAAU,IACVI,GAAiB,EACnB,GACJ,EAEMwD,EAAmB,SAAHC,GAKhB,IAJJtB,EAAKsB,EAALtB,MACAuB,EAAYD,EAAZC,aACAC,EAAYF,EAAZE,aACAC,EAAWH,EAAXG,YAEAC,QAAQC,IAAI3B,GACTX,MAAK,WACJ9C,EAAS,CACPqF,MAAOL,EACPM,QAAS,YAEX3C,GACF,IAAE,OACK,SAAA4C,GAA0C,IAAAC,EAAAD,EAAvCE,SAAYC,EAAMF,EAANE,OAAQC,EAAUH,EAAVG,WAC5B3F,EAAS,CACPqF,MAAOJ,EACPK,QAAS,SACTM,aAAaC,EAAAA,EAAAA,IAAaH,EAAQC,IAEtC,IAAE,SACO,WACPG,EAAYZ,EACd,GACJ,EA0DMY,EAAc,SAACC,GACnBC,OAAOC,QAAQF,GAAOG,SAAQ,SAAAC,GAAY,IAAAC,GAAAvF,EAAAA,EAAAA,GAAAsF,EAAA,GAAVE,EAACD,EAAA,GAAEE,EAACF,EAAA,GAClC,OAAQC,GACN,IAAK,uBACHvE,EAAwBwE,GACxB,MACF,IAAK,wBACHpE,EACEoE,GAEF,MACF,IAAK,sBACHhE,EAAuBgE,GACvB,MACF,IAAK,uBACH5D,EAAwB4D,GACxB,MACF,QACEC,QAAQC,MAAM,cAAeH,EAAGC,GAEtC,GACF,EAkBA,OAhBAG,EAAAA,EAAAA,WAAU9D,EAAO,CAAC9C,EAAKU,aACvBkG,EAAAA,EAAAA,YAAU,WACHxF,IAIAd,SAAAA,EAAQuG,MAKbC,EAAAA,GAASC,KAAK,CAAEjG,KAAMR,EAAOuG,QAAS5D,MAAK,SAAA+D,GAAwB,IAAb5D,EAAI4D,EAAZ5D,KAAQA,KACpDvB,EAAiBT,EAAO6F,MAAK,SAACtC,GAAC,OAAKA,EAAE7D,OAASsC,EAAK,GAAGtC,IAAI,IAC7D,IANEe,EAAiB,MAOrB,GAAG,CAACvB,aAAM,EAANA,EAAQuG,MAAOzF,IAGjB8F,IAAAA,cAACC,EAAAA,GAAS,CACRC,SAjGa,SAACP,EAAOjD,GACvB,IAAMyD,EAAezD,EAAM0D,KAAI,SAAChD,GAAI,OAClCvB,EAAAA,GAAqBwE,QAAQ9G,EAAI,CAC/B6D,KAAMA,EAAKxD,KACXM,OAAQ,CAACyF,EAAM/F,OACf,IAEJmE,EAAiB,CACfrB,MAAOyD,EACPlC,aAAcqC,EAAAA,GAAAC,EAAA,0DAAWZ,EAAM/F,KAAIA,KAAqCA,IACxEsE,aAAcoC,EAAAA,GAAAC,EAAA,iDAAWZ,EAAM/F,KAAIA,KAA4BA,IAC/DuE,YAAa,CAAEjD,sBAAuB,OAE1C,EAqFImF,QArEY,SAACV,EAAOjD,GACtB,IAAMyD,EAAezD,EAAM0D,KAAI,SAAChD,GAAI,OAClCvB,EAAAA,GAAqBwE,QAAQ9G,EAAI,CAC/B6D,KAAMA,EAAKxD,KACXM,OAAQ,CAACyF,EAAM/F,OACf,IAEJmE,EAAiB,CACfrB,MAAOyD,EACPlC,aAAcqC,EAAAA,GAAAC,EAAA,yDAAWZ,EAAM/F,KAAIA,KAAoCA,IACvEsE,aAAcoC,EAAAA,GAAAC,EAAA,wDAAWZ,EAAM/F,KAAIA,KAAmCA,IACtEuE,YAAa,CAAEzC,qBAAsB,OAEzC,EAyDIpB,cAAeA,EACfqF,MAAOjF,EACPR,OAAQA,EACRN,KAAMA,EACN4G,eAAe,+BACfC,YAzFgB,SAACd,GACnB,IAAMjD,EAAQiD,EAAMhC,aAAayC,KAAI,SAAChD,GAAI,OACxCvB,EAAAA,GAAqB6E,WAAWnH,EAAI,CAClC6D,KAAAA,EACAlD,OAAQ,CAACyF,EAAM/F,OACf,IAEJmE,EAAiB,CACfrB,MAAAA,EACAuB,aAAcqC,EAAAA,GAAAC,EAAA,8DAAWZ,EAAM/F,KAAIA,KAAyCA,IAC5EsE,aAAcoC,EAAAA,GAAAC,EAAA,qDAAWZ,EAAM/F,KAAIA,KAAgCA,IACnEuE,YAAa,CAAErD,qBAAsB,OAEzC,EA6EI4F,WA9De,SAACtD,EAAMuC,GACxB,IAAMgB,EAAc9E,EAAAA,GAAqB6E,WAAWnH,EAAI,CACtD6D,KAAAA,EACAlD,OAAQ,CAACyF,EAAM/F,QAEjBmE,EAAiB,CACfrB,MAAO,CAACiE,GACR1C,aAAcqC,EAAAA,GAAAC,EAAA,yDAAWZ,EAAM/F,KAAIA,KAAoCA,IACvEsE,aAAcoC,EAAAA,GAAAC,EAAA,wDAAWZ,EAAM/F,KAAIA,KAAmCA,IACtEuE,YAAa,CAAE7C,oBAAqB,OAExC,EAoDIsF,mBAAoBN,EAAAA,GAAAC,EAAA,yEACpBzF,qBAAsBA,EACtBI,sBAAuBA,EACvBI,oBAAqBA,EACrBI,qBAAsBA,EACtBqD,YAAaA,EACb8B,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAMC,wBAAyB,CACnDpH,KAAAA,KAIR,E,glBCjNO,IAAMqH,EAAwB,SAAHpI,GAGlB,IAFdC,EAAID,EAAJC,KAAIC,EAAAF,EACJG,cAAiBC,EAAQF,EAARE,SAAUE,EAAaJ,EAAbI,cAErByC,EAAQ,SAAHI,GAAmB,IACtBkF,EAASC,EAAA,GADMnF,EAAN5C,QAEf8H,EAAUE,SAAWF,EAAUG,YACxBH,EAAUG,KAEjB,IAAMC,GAAa7H,EAAAA,EAAAA,IAAmBX,EAAKU,WAC3C,OAAO+H,EAAAA,GAAqB1B,KAAIsB,EAAC,CAC/BG,WAAAA,GACGJ,IACFnF,MACD,SAAAS,GAAA,IAAAgF,EAAAhF,EACEN,KAEM,MAED,CACLA,KAAM,CAAEuF,MAJOD,EAAbE,KAAQD,MAIKE,QAHAH,EAAbtF,MAIH,GAEL,EAEAxC,GAAoCC,EAAAA,EAAAA,UAAS,CAAE2H,WAAYxI,IAAOe,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3DkI,EAAU/H,EAAA,GAAEgI,EAAahI,EAAA,GA2ChC,OA1CA6F,EAAAA,EAAAA,YAAU,kBAAMmC,GAAc,SAACC,GAAE,OAAAX,EAAAA,EAAA,GAAWW,GAAE,IAAER,WAAYxI,GAAI,GAAI,GAAE,CAACA,IA2CrEkH,IAAAA,cAAC+B,EAAAA,GAAU,CACT/I,cAAe,CACbC,SAAAA,EACAI,MAAOuI,EACPI,SAAUH,EACVjG,MAAAA,EACAzC,cAAAA,EACAiD,oBAAqB,SAACC,GAAS,IAAA4F,EAAAC,EAAA,OAC7BpJ,SAAoB,QAAhBmJ,EAAJnJ,EAAMqJ,sBAAc,IAAAF,GAAU,QAAVC,EAApBD,EAAsB3F,gBAAQ,IAAA4F,OAA1B,EAAJA,EAAAE,KAAAH,EAAiC5F,EAAE,GAEvCgG,gBAAiB,GACjBC,YAAa,OACbC,WAAYjC,EAAAA,GAAAC,EAAA,+CACZiC,aAAc,CACZ,CACEjJ,GAAI,WACJ+E,MAAOgC,EAAAA,GAAAC,EAAA,aAET,CACEhH,GAAI,YACJ+E,MAAOgC,EAAAA,GAAAC,EAAA,eAGXkC,cAAe,CAACC,EAAAA,IAChBC,gBAAiB,CAACC,EAAAA,IAClBC,aAAcH,EAAAA,GAA4CI,OAC1DC,kBAAmBzC,EAAAA,GAAAC,EAAA,oEACnByC,YAAa1C,EAAAA,GAAAC,EAAA,8BACb3E,MAAOA,EACPqH,eAtEmB,SACrBnK,EACAoK,EACAlK,EACA2J,GAEA,IAAAQ,EAGIrK,EAFFsK,mBAAsBxJ,EAAIuJ,EAAJvJ,KAAMyJ,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QAASzE,EAAWsE,EAAXtE,YAChDyC,EACExI,EADFwI,WAGIiC,EAAaZ,EAAgBvC,KAAI,SAACoD,GAAM,OAC5CA,EAAOC,aAAa3K,EAAME,EAAc,IAG1C,OACEgH,IAAAA,cAAA,MAAI0D,IAAKR,GACPlD,IAAAA,cAAA,UACEA,IAAAA,cAAC2D,EAAAA,KAAI,CACHC,IAAI9C,EAAAA,EAAAA,IACFC,EAAAA,GAAM8C,iBACN,CACEC,KAAMxC,EAAW1H,KACjByJ,UAAAA,EACAU,WAAYnK,GAEd,CACE0J,QAAAA,KAIHD,EAAU,IAAEzJ,EAAK,KAAG0J,IAGzBtD,IAAAA,cAAA,UAAKnB,GACLmB,IAAAA,cAACgE,EAAAA,GAAe,CAACT,WAAYA,IAGnC,EAiCIU,YAAa,CACX,CACE3F,MAAOgC,EAAAA,GAAAC,EAAA,cACP2D,KAAM,OACN3K,GAAI,QAEN,CACE+E,MAAOgC,EAAAA,GAAAC,EAAA,eACP2D,KAAM,OACN3K,GAAI,SAGR+E,MAAOgC,EAAAA,GAAAC,EAAA,wBAGb,ECnHa4D,EAAa,SAAHtL,GAA2B,IAAAuL,EAAAC,EAArBvL,EAAID,EAAJC,KAC3BY,GAA4BC,EAAAA,EAAAA,UAA4B,MAAKE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAtD4K,EAAMzK,EAAA,GAAE0K,EAAS1K,EAAA,GAWxB,OATA6F,EAAAA,EAAAA,YAAU,WACR,IAAM8E,EAAK1L,EAAKwL,SAAU7K,EAAAA,EAAAA,IAAmBX,EAAKwL,QAC9CE,EACFC,EAAAA,GAAiBC,IAAIF,GAAIzI,MAAK,SAAAC,GAAA,IAAGE,EAAIF,EAAJE,KAAI,OAAOqI,EAAUrI,EAAK,IAE3DqI,EAAU,KAEd,GAAG,CAACzL,EAAKwL,SAGPtE,IAAAA,cAAC2E,EAAAA,GAAO,CACNC,OAAQ,CACN,CAAEC,MAAOvE,EAAAA,GAAAC,EAAA,mBAAoBpD,MAAOrE,aAAI,EAAJA,EAAMc,MAC1C,CAAEiL,MAAOvE,EAAAA,GAAAC,EAAA,eAAgBpD,OAAOrE,aAAI,EAAJA,EAAM+F,cAAeyB,EAAAA,GAAAC,EAAA,SACrD,CACEsE,MAAOvE,EAAAA,GAAAC,EAAA,0BACPpD,MAAiC,QAA5BiH,EAAEtL,aAAI,EAAJA,EAAMgM,4BAAoB,IAAAV,EAAAA,EAAI9D,EAAAA,GAAAC,EAAA,QAEvC,CACEsE,MAAOvE,EAAAA,GAAAC,EAAA,gBACPpD,MAAO6C,IAAAA,cAAC+E,EAAAA,GAAoB,CAACC,cAAelM,EAAKkM,iBAEnD,CACEH,MAAOvE,EAAAA,GAAAC,EAAA,kBACPpD,MAAyB,QAAlBkH,EAAAvL,EAAKkM,qBAAa,IAAAX,GAAlBA,EAAoBY,OACzBjF,IAAAA,cAACkF,EAAAA,GAAO,CAACC,KAAKC,EAAAA,EAAAA,IAAWtM,EAAKkM,cAAc,GAAGK,aAE/C,OAGJ,CACER,MAAOvE,EAAAA,GAAAC,EAAA,UACPpD,MAAO6C,IAAAA,cAACsF,EAAAA,GAAU,CAACC,OAAQzM,aAAI,EAAJA,EAAM0M,eAEnC,CACEX,MAAOvE,EAAAA,GAAAC,EAAA,WACPpD,MAAOrE,SAAAA,EAAI,QAAYwH,EAAAA,GAAAC,EAAA,OAASD,EAAAA,GAAAC,EAAA,OAElC,CACEsE,MAAOvE,EAAAA,GAAAC,EAAA,UACPpD,MAAOmH,EACLtE,IAAAA,cAAC2D,EAAAA,KAAI,CACHC,IAAI9C,EAAAA,EAAAA,IAAWC,EAAAA,GAAM0E,oBAAqB,CAAE7L,KAAM0K,EAAO1K,QAExD0K,EAAO1K,MAGV0G,EAAAA,GAAAC,EAAA,WAMZ,E,6pBClDA,IAMMmF,EAAiB,SAAH7M,GAUd,IATJ8M,EAAI9M,EAAJ8M,KACA1M,EAAQJ,EAARI,SACAE,EAAaN,EAAbM,cACAyM,EAAc/M,EAAd+M,eAOAlM,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAAEE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/BL,EAAKQ,EAAA,GAAEmI,EAAQnI,EAAA,GACtB,IAAK8L,EACH,OAAO,KAGT,IAAME,EAtBO,SAACF,GAAI,OAClB,aAAAG,IAAAC,EAAAA,EAAAA,GAAAC,EAAAF,GAAA,I,IAAAG,G,EAAAD,E,gaAAA,SAAAA,IAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA,KAAAH,GAAA,QAAAI,EAAAC,UAAApB,OAAAqB,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAEgD,OAFhDN,EAAAD,EAAA7D,KAAAqE,MAAAR,EAAA,OAAAS,OAAAJ,KAAAK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAV,GAAA,eACgB,IAAIS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAV,GAAA,UACRP,EAAKkB,QAAQC,mCAAoB,KAAGZ,CAAA,QAAAa,EAAAA,EAAAA,GAAAf,EAAA,CAF5C,CAAegB,EAAAA,IAGf,CAkBQC,CAAOtB,GACb/J,EAAQ,SAAHI,GAAA,IAAM5C,EAAM4C,EAAN5C,OAAM,OAAOyM,EAAIhG,KAAKzG,EAAO,EA6B9C,OACE4G,IAAAA,cAAC+B,EAAAA,GAAU,CACT/I,cAAe,CACbC,SAAAA,EACAI,MAAAA,EACA2I,SAAAA,EACApG,MAAAA,EACAzC,cAAAA,GAEFkJ,gBAAiB,GACjBC,YAAa,OACbC,WAAYjC,EAAAA,GAAAC,EAAA,+CACZwC,kBAAmBzC,EAAAA,GAAAC,EAAA,sDACnByC,YAAa1C,EAAAA,GAAAC,EAAA,8BACb3E,MAAOA,EACPqH,eA3CmB,SAAHzG,GAAA,IAAA0K,EAAA1K,EAClB2K,SACEC,gBAAmB/D,EAAS6D,EAAT7D,UAAWzJ,EAAIsN,EAAJtN,KAAM0J,EAAO4D,EAAP5D,QAEtCzE,EAAWrC,EAAXqC,YAAW,OAEXmB,IAAAA,cAAA,UACEA,IAAAA,cAAA,UACEA,IAAAA,cAAC2D,EAAAA,KAAI,CACHC,IAAI9C,EAAAA,EAAAA,IACFC,EAAAA,GAAM8C,iBACN,CACEC,KAAM8B,EACNvC,UAAAA,EACAU,WAAYnK,GAEd,CACE0J,QAAAA,KAIHD,EAAU,IAAEzJ,EAAK,KAAG0J,IAGzBtD,IAAAA,cAAA,UAAKnB,GACF,EAmBHoF,YAAa,CACX,CACE3F,MAAOgC,EAAAA,GAAAC,EAAA,cACP2D,KAAM,OACN3K,GAAI,QAEN,CACE+E,MAAOgC,EAAAA,GAAAC,EAAA,eACP2D,KAAM,OACN3K,GAAI,SAGR+E,MAAOgC,EAAAA,GAAAC,EAAA,wBAGb,EAEM8G,EAAiB,SAAHrJ,GAAmC,IAA7B9B,EAAI8B,EAAJ9B,KACxB,OAAK+C,OAAOqI,KAAKpL,GAAM+I,OAKrBjF,IAAAA,cAAA,SAAOuH,UAAU,cACfvH,IAAAA,cAAA,UACEA,IAAAA,cAAA,UAAKM,EAAAA,GAAAC,EAAA,UACLP,IAAAA,cAAA,UAAKM,EAAAA,GAAAC,EAAA,eAENtB,OAAOC,QAAQhD,GAAMkE,KAAI,SAAA5B,GAAA,IAAAY,GAAAtF,EAAAA,EAAAA,GAAA0E,EAAA,GAAEc,EAACF,EAAA,GAAEG,EAACH,EAAA,UAC9BY,IAAAA,cAAA,MAAI0D,IAAKpE,GACPU,IAAAA,cAAA,UAAKT,EAAS,OACdS,IAAAA,cAAA,UAAKV,GACF,KAbFU,IAAAA,cAAAA,IAAAA,SAAA,KAAGM,EAAAA,GAAAC,EAAA,QAiBd,EAEMiH,EAAc,SAAHnI,GAMX,IALJuG,EAAcvG,EAAduG,eACA1J,EAAImD,EAAJnD,KAKA,IAAKA,EACH,OAAO8D,IAAAA,cAAAA,IAAAA,SAAA,KAAGM,EAAAA,GAAAC,EAAA,SAGZ,IAAMkH,EAASvL,EAAKwL,MAAM,KAAKC,IAAI,GACnC,OACE3H,IAAAA,cAAC2D,EAAAA,KAAI,CACHC,IAAI9C,EAAAA,EAAAA,IACFC,EAAAA,GAAMC,wBACN,CACEpH,KAAMgM,GAER,CACEgC,kBAAmBH,EACnBI,IAAK,yBAIRJ,EAGP,EAEaK,EAAwB,SAAHhI,GAGlB,IAAAiI,EAAAC,EAAAC,EAFdnP,EAAIgH,EAAJhH,KAAIoP,EAAApI,EACJ9G,cAAiBC,EAAQiP,EAARjP,SAAUI,EAAK6O,EAAL7O,MAAOF,EAAa+O,EAAb/O,cAAeiD,EAAmB8L,EAAnB9L,oBAE3C+L,GAAS1O,EAAAA,EAAAA,IAAmBX,EAAKU,WACjC4O,EAActP,EAAKuP,oBACnBzC,EAAiB9M,EAAKc,KACtB0O,EAAY,SAAHC,GAAA,IAAMnP,EAAMmP,EAANnP,OAAM,OACzByC,EAAAA,GAAqB2M,aAAaL,EAAQ/O,EAAO,EAGnDY,GAAoCL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzC4H,EAAU3H,EAAA,GAAE4H,EAAa5H,EAAA,GAChCG,GAA8BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAArCkJ,EAAOjJ,EAAA,GAAEoO,EAAUpO,EAAA,GA6D1B,OA3DAqF,EAAAA,EAAAA,YAAU,WALU,IAAHgJ,EAAMjB,EAMjBpO,EAAMD,OAAOwO,mBANFc,EAOD,CAAEjB,OAAQpO,EAAMD,OAAOwO,mBAPhBH,EAAMiB,EAANjB,OACrB5L,EAAAA,GAAqB2M,aAAaL,EAAQ,CAAEV,OAAAA,KAMc1L,MACtD,SAAA4M,GAAc,IAAAC,EAAX1M,EAAIyM,EAAJzM,KACIA,SAAa,QAAT0M,EAAJ1M,EAAMyF,eAAO,IAAAiH,GAAbA,EAAgB,IACnB3P,EAAS,CACPsF,QAAS,SACTD,MAAOgC,EAAAA,GAAAC,EAAA,uCAGXkI,EAAWvM,EAAKyF,QAAQ,GAC1B,IAGF8G,EAAW,KAEf,GAAG,CAACpP,EAAMD,OAAOwO,oBA2CVvO,EAAMD,OAAOwO,kBAClBtE,EACEtD,IAAAA,cAAAA,IAAAA,SAAA,KACEA,IAAAA,cAAC2E,EAAAA,GAAO,CACNC,OAAQ,CACN,CAAEC,MAAOvE,EAAAA,GAAAC,EAAA,kBAAmBpD,MAAOmG,EAAQmE,QAC3C,CACE5C,MAAOvE,EAAAA,GAAAC,EAAA,gBACPpD,MAAO6C,IAAAA,cAAC6I,EAAAA,GAAa,CAACC,KAAMxF,EAAQyF,gBAEtC,CACElE,MAAOvE,EAAAA,GAAAC,EAAA,iBACPpD,MAAO6C,IAAAA,cAACqH,EAAc,CAACnL,KAA6B,QAAzB6L,EAAEzE,EAAQ0F,uBAAe,IAAAjB,OAAA,EAAvBA,EAAyBkB,SAExD,CACEpE,MAAOvE,EAAAA,GAAAC,EAAA,mBACPpD,MAAO6C,IAAAA,cAACqH,EAAc,CAACnL,KAA6B,QAAzB8L,EAAE1E,EAAQ0F,uBAAe,IAAAhB,OAAA,EAAvBA,EAAyBkB,WAExD,CACErE,MAAOvE,EAAAA,GAAAC,EAAA,mBACPpD,MAAO6C,IAAAA,cAACqH,EAAc,CAACnL,KAA6B,QAAzB+L,EAAE3E,EAAQ0F,uBAAe,IAAAf,OAAA,EAAvBA,EAAyBkB,WAExD,CACEtE,MAAOvE,EAAAA,GAAAC,EAAA,gBACPpD,MACE6C,IAAAA,cAACwH,EAAW,CACV5B,eAAgBA,EAChB1J,KAAMoH,EAAQ8F,mBAMxBpJ,IAAAA,cAAA,OACEuH,UAAU,0BACV8B,MAAO,CAAEC,QAAS,QAASC,OAAQ,kBAErCvJ,IAAAA,cAAC0F,GAAc8D,EAAAA,EAAAA,GAAA,GACTlG,EAAQ0F,gBAAgBG,QAAQ,8BAA6B,CACjEvD,eAAgBA,MAIpB5F,IAAAA,cAACyJ,EAAAA,QAAO,CAACC,KAAK,OAGhB1J,IAAAA,cAAC+B,EAAAA,GAAU,CACT/I,cAAe,CACbC,SAAAA,EACAI,MAAOuI,EACPI,SAAUH,EACVjG,MAAO0M,EACPnP,cAAAA,EACAiD,oBAAAA,GAEFiG,gBAAiB,GACjBC,YAAa,gBACbC,WAAYjC,EAAAA,GAAAC,EAAA,+CACZiC,aAAc,KACdG,gBAAiB,CAACgH,EAAAA,GAClB9G,aAAc,KACdE,kBAAmBzC,EAAAA,GAAAC,EAAA,oEACnByC,YAAa1C,EAAAA,GAAAC,EAAA,8BACb3E,MAAO0M,EACPrF,eAzGmB,SACrBnK,EACAoK,EACAlK,EACA2J,GAEA,IAAQ8E,EAAoC3O,EAApC2O,OAAQsB,EAA4BjQ,EAA5BiQ,aAAcvP,EAAcV,EAAdU,UAExBoQ,EAAWxB,IAAgB5O,EAE3B+J,EAAaZ,EAAgBvC,KAAI,SAACoD,GAAM,OAC5CA,EAAOC,aAAYtC,EAAAA,EAAC,CAAC,EAAIrI,GAAI,IAAE8Q,SAAAA,EAAUhE,eAAAA,IAAkB5M,EAAc,IAG3E,OACEgH,IAAAA,cAAA,MAAI0D,IAAKR,GACPlD,IAAAA,cAAA,UACEA,IAAAA,cAAC2D,EAAAA,KAAI,CACHC,IAAI9C,EAAAA,EAAAA,IACFC,EAAAA,GAAMC,wBACN,CACEpH,KAAMgM,GAER,CACEgC,kBAAmBH,EACnBI,IAAK,yBAIRJ,GAEFmC,EAAW,IAAMtJ,EAAAA,GAAAC,EAAA,YAAc,MAElCP,IAAAA,cAAA,UACEA,IAAAA,cAAC6I,EAAAA,GAAa,CAACC,KAAMC,KAEvB/I,IAAAA,cAACgE,EAAAA,GAAe,CAACT,WAAYA,IAGnC,EAmEIU,YAAa,CACX,CACE3F,MAAOgC,EAAAA,GAAAC,EAAA,kBACP2D,KAAM,UACN3K,GAAI,UAEN,CACE+E,MAAOgC,EAAAA,GAAAC,EAAA,gBACP2D,KAAM,UACN3K,GAAI,iBAGR+E,MAAOgC,EAAAA,GAAAC,EAAA,wBAGb,E,qkBCxSA,IAAMsJ,EAAO,CACX,CAAEtQ,GAAI,UAAWK,KAAM0G,EAAAA,GAAAC,EAAA,YACvB,CAAEhH,GAAI,SAAUK,KAAM0G,EAAAA,GAAAC,EAAA,WACtB,CAAEhH,GAAI,sBAAuBK,KAAM0G,EAAAA,GAAAC,EAAA,wBACnC,CAAEhH,GAAI,sBAAuBK,KAAM0G,EAAAA,GAAAC,EAAA,cA+FrC,SA5FgCuJ,EAAAA,EAAAA,IAAoC,CAClEC,YAAa,SAAAlR,GAAA,IAAGe,EAAIf,EAAJe,KAAMiO,EAAGhP,EAAHgP,IAAGmC,EAAAnR,EAAEO,OAAUwO,EAAiBoC,EAAjBpC,kBAAmBjI,EAAKqK,EAALrK,MAAK,MAC3D,CACE,CAAEwF,KAAKrE,EAAAA,EAAAA,IAAWC,EAAAA,GAAMkJ,qBAAsBrQ,KAAM0G,EAAAA,GAAAC,EAAA,iBACpD,CAAE4E,KAAKrE,EAAAA,EAAAA,IAAWC,EAAAA,GAAMC,wBAAyB,CAAEpH,KAAAA,IAASA,KAAAA,GAChD,wBAAXiO,EAAItO,IAAgCqO,GACzB,WAAXC,EAAItO,IAAmBoG,EACpB,CACEwF,KAAKrE,EAAAA,EAAAA,IACHC,EAAAA,GAAMC,wBACN,CAAEpH,KAAAA,GACF,CAAEiO,IAAKA,EAAItO,KAEbK,KAAMiO,EAAIjO,MAEZ,KACO,wBAAXiO,EAAItO,IAAgCqO,EAChC,CAAEhO,KAAM0G,EAAAA,GAAAC,EAAA,+BAAAqH,kBAAYA,KACT,WAAXC,EAAItO,IAAmBoG,EACvB,CAAE/F,KAAM0G,EAAAA,GAAAC,EAAA,iBAAAZ,MAAUA,KAClB,CAAE/F,KAAMiO,EAAIjO,OAChBsQ,OAAOC,QAAQ,EACnBC,UAAWC,EAAAA,GACXC,YAAa,0BACb/H,WAAYjC,EAAAA,GAAAC,EAAA,sCACZkC,cAAe,CACb8H,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAEFC,cAAe,SAAC7R,GAAI,OAClBkH,IAAAA,cAAAA,IAAAA,SAAA,MACGlH,aAAI,EAAJA,EAAM8R,iBACL5K,IAAAA,cAAA,KAAGuH,UAAU,mBACXvH,IAAAA,cAAA6K,EAAAA,GAAA,CAAAtR,GAAA,iCAAAuR,OAAA,IAAmCC,EAAAA,EAAAA,IAAWjS,MAAe,KAC5DkS,EAAAA,EAAAA,IAAelS,IAGnB,EAEL8C,MAAO,SAAAI,GAAc,IAAXpC,EAAIoC,EAAJpC,KACR,OAAOiC,EAAAA,GAAqBgE,KAAK,CAAEjG,KAAAA,IAChCmC,MAAK,SAAAS,GAAkB,OAAAA,EAAfN,KAAQyF,QAAwB,EAAE,IAC1C5F,MAAK,SAACuF,GAEL,IAAKA,EACH,OAAOlD,QAAQ6M,OAAO,CAAEvM,SAAU,CAAEC,OAAQ,OAG9C,IAAMf,EAAM,SAACC,GAEX,OADA2B,QAAQC,MAAM5B,GACP,EACT,EAEA,OAAOO,QAAQC,IAAI,CACjB6M,EAAAA,GAAuBrL,KAAK,CAC1ByB,WAAYA,EAAW9H,YAEtBuC,MAAK,SAAAiC,GAAkB,OAAAA,EAAf9B,KAAQyF,OAAuB,IAAC,MAClC/D,GACT/B,EAAAA,GAAqBC,eACnBrC,EAAAA,EAAAA,IAAmB6H,EAAW9H,YAE7BuC,MAAK,SAAAyC,GAAsB,OAAAA,EAAnBtC,KAAQD,WAA+B,IAAC,MAC1C2B,KACR7B,MAAK,SAAAqD,GAAA,IAAAC,GAAAvF,EAAAA,EAAAA,GAAAsF,EAAA,GAAE4F,EAAa3F,EAAA,GAAE8C,EAAc9C,EAAA,UAAA8B,EAAAA,EAAA,GAClCG,GAAU,IACb0D,cAAAA,EACA7C,eAAAA,GAAc,GAElB,GACJ,EACAgJ,UAAW,SAACtD,EAAK/O,EAAME,GAAa,MACjC,CACCoS,QAASpL,IAAAA,cAACmE,EAAU,CAACrL,KAAMA,EAAME,cAAeA,IAChDqS,OAAQrL,IAAAA,cAACpH,EAAmB,CAACE,KAAMA,EAAME,cAAeA,IACxD,sBACEgH,IAAAA,cAACiB,EAAqB,CAACnI,KAAMA,EAAME,cAAeA,IAEpD,sBACEgH,IAAAA,cAAC8H,EAAqB,CAAChP,KAAMA,EAAME,cAAeA,KAEpD6O,EAAI,EACRgC,KAAAA,EACAyB,gBAAiB,SAACjP,GAGhB,cAFOA,EAAEuL,yBACFvL,EAAEsD,MACFtD,CACT,G","sources":["webpack:///./src/containers/ansible-repository/tab-access.tsx","webpack:///./src/containers/ansible-repository/tab-collection-versions.tsx","webpack:///./src/containers/ansible-repository/tab-details.tsx","webpack:///./src/containers/ansible-repository/tab-repository-versions.tsx","webpack:///./src/containers/ansible-repository/detail.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  GroupAPI,\n  GroupType,\n  RoleType,\n} from 'src/api';\nimport { AccessTab } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepositoryAccess } from 'src/permissions';\nimport { errorMessage, parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    featureFlags;\n    hasPermission;\n    state: { params };\n    user;\n  };\n}\n\nexport const RepositoryAccessTab = ({\n  item,\n  actionContext: {\n    addAlert,\n    featureFlags,\n    hasPermission,\n    state: { params },\n    user,\n  },\n}: TabProps) => {\n  const id = item?.pulp_href && parsePulpIDFromURL(item.pulp_href);\n  const [name, setName] = useState<string>(item?.name);\n  const [groups, setGroups] = useState<GroupType[]>(null); // loading\n  const [canEditOwners, setCanEditOwners] = useState<boolean>(false);\n  const [selectedGroup, setSelectedGroup] = useState<GroupType>(null);\n  const [showGroupRemoveModal, setShowGroupRemoveModal] =\n    useState<GroupType>(null);\n  const [showGroupSelectWizard, setShowGroupSelectWizard] = useState<{\n    group?: GroupType;\n    roles?: RoleType[];\n  }>(null);\n  const [showRoleRemoveModal, setShowRoleRemoveModal] = useState<string>(null);\n  const [showRoleSelectWizard, setShowRoleSelectWizard] = useState<{\n    roles?: RoleType[];\n  }>(null);\n\n  const query = () => {\n    setGroups(null);\n    AnsibleRepositoryAPI.myPermissions(id)\n      .then(({ data: { permissions } }) => {\n        setCanEditOwners(\n          canEditAnsibleRepositoryAccess({\n            hasPermission,\n            hasObjectPermission: (p: string): boolean =>\n              permissions.includes(p),\n            user,\n            featureFlags,\n          }),\n        );\n        AnsibleRepositoryAPI.listRoles(id)\n          .then(({ data: { roles } }) => {\n            const groupRoles = [];\n            for (const { groups, role } of roles) {\n              for (const name of groups) {\n                const groupIndex = groupRoles.findIndex((g) => g.name === name);\n                if (groupIndex == -1) {\n                  groupRoles.push({ name, object_roles: [role] });\n                } else {\n                  groupRoles[groupIndex].object_roles.push(role);\n                }\n              }\n            }\n\n            setName(name);\n            setGroups(groupRoles);\n          })\n          .catch(() => {\n            setGroups([]);\n          });\n      })\n      .catch(() => {\n        setGroups([]);\n        setCanEditOwners(false);\n      });\n  };\n\n  const updateGroupRoles = ({\n    roles,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) => {\n    Promise.all(roles)\n      .then(() => {\n        addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        query();\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        updateProps(stateUpdate);\n      });\n  };\n\n  const addGroup = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n      stateUpdate: { showGroupSelectWizard: null },\n    });\n  };\n\n  const removeGroup = (group) => {\n    const roles = group.object_roles.map((role) =>\n      AnsibleRepositoryAPI.removeRole(id, {\n        role,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles,\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showGroupRemoveModal: null },\n    });\n  };\n  const addRole = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRepositoryAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n  const removeRole = (role, group) => {\n    const removedRole = AnsibleRepositoryAPI.removeRole(id, {\n      role,\n      groups: [group.name],\n    });\n    updateGroupRoles({\n      roles: [removedRole],\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const updateProps = (props) => {\n    Object.entries(props).forEach(([k, v]) => {\n      switch (k) {\n        case 'showGroupRemoveModal':\n          setShowGroupRemoveModal(v as GroupType);\n          break;\n        case 'showGroupSelectWizard':\n          setShowGroupSelectWizard(\n            v as { group?: GroupType; roles?: RoleType[] },\n          );\n          break;\n        case 'showRoleRemoveModal':\n          setShowRoleRemoveModal(v as string);\n          break;\n        case 'showRoleSelectWizard':\n          setShowRoleSelectWizard(v as { roles?: RoleType[] });\n          break;\n        default:\n          console.error('updateProps', k, v);\n      }\n    });\n  };\n\n  useEffect(query, [item.pulp_href]);\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n\n    if (!params?.group) {\n      setSelectedGroup(null);\n      return;\n    }\n\n    GroupAPI.list({ name: params.group }).then(({ data: { data } }) => {\n      setSelectedGroup(groups.find((g) => g.name === data[0].name));\n    });\n  }, [params?.group, groups]);\n\n  return (\n    <AccessTab\n      addGroup={addGroup}\n      addRole={addRole}\n      canEditOwners={canEditOwners}\n      group={selectedGroup}\n      groups={groups}\n      name={name}\n      pulpObjectType='repositories/ansible/ansible'\n      removeGroup={removeGroup}\n      removeRole={removeRole}\n      selectRolesMessage={t`The selected roles will be added to this specific Ansible repository.`}\n      showGroupRemoveModal={showGroupRemoveModal}\n      showGroupSelectWizard={showGroupSelectWizard}\n      showRoleRemoveModal={showRoleRemoveModal}\n      showRoleSelectWizard={showRoleSelectWizard}\n      updateProps={updateProps}\n      urlPrefix={formatPath(Paths.ansibleRepositoryDetail, {\n        name,\n      })}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ansibleRepositoryCollectionVersionAddAction,\n  ansibleRepositoryCollectionVersionRemoveAction,\n} from 'src/actions';\nimport {\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { DetailList, ListItemActions } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission;\n  };\n}\n\nexport const CollectionVersionsTab = ({\n  item,\n  actionContext: { addAlert, hasPermission },\n}: TabProps) => {\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    const repository = parsePulpIDFromURL(item.pulp_href);\n    return CollectionVersionAPI.list({\n      repository,\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({ repository: item });\n  useEffect(() => setModalState((ms) => ({ ...ms, repository: item })), [item]);\n\n  const renderTableRow = (\n    item: CollectionVersionSearch,\n    index: number,\n    actionContext,\n    listItemActions,\n  ) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem(item, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link\n            to={formatPath(\n              Paths.collectionByRepo,\n              {\n                repo: repository.name,\n                namespace,\n                collection: name,\n              },\n              {\n                version,\n              },\n            )}\n          >\n            {namespace}.{name} v{version}\n          </Link>\n        </td>\n        <td>{description}</td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  };\n\n  return (\n    <DetailList<CollectionVersionSearch>\n      actionContext={{\n        addAlert,\n        state: modalState,\n        setState: setModalState,\n        query,\n        hasPermission,\n        hasObjectPermission: (p: string): boolean =>\n          item?.my_permissions?.includes?.(p),\n      }}\n      defaultPageSize={10}\n      defaultSort={'name'}\n      errorTitle={t`Collection versions could not be displayed.`}\n      filterConfig={[\n        {\n          id: 'keywords',\n          title: t`Keywords`,\n        },\n        {\n          id: 'namespace',\n          title: t`Namespace`,\n        },\n      ]}\n      headerActions={[ansibleRepositoryCollectionVersionAddAction]}\n      listItemActions={[ansibleRepositoryCollectionVersionRemoveAction]}\n      noDataButton={ansibleRepositoryCollectionVersionAddAction.button}\n      noDataDescription={t`Collection versions will appear once the collection is modified.`}\n      noDataTitle={t`No collection versions yet`}\n      query={query}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Collection`,\n          type: 'none',\n          id: 'col1',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'col2',\n        },\n      ]}\n      title={t`Collection versions`}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  AnsibleRemoteAPI,\n  AnsibleRemoteType,\n  AnsibleRepositoryType,\n} from 'src/api';\nimport {\n  CopyURL,\n  Details,\n  NonLazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { getRepoURL, parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType & {\n    distributions: { name: string; base_path: string }[];\n  };\n  actionContext: { addAlert: (alert) => void; state: { params } };\n}\n\nexport const DetailsTab = ({ item }: TabProps) => {\n  const [remote, setRemote] = useState<AnsibleRemoteType>(null);\n\n  useEffect(() => {\n    const pk = item.remote && parsePulpIDFromURL(item.remote);\n    if (pk) {\n      AnsibleRemoteAPI.get(pk).then(({ data }) => setRemote(data));\n    } else {\n      setRemote(null);\n    }\n  }, [item.remote]);\n\n  return (\n    <Details\n      fields={[\n        { label: t`Repository name`, value: item?.name },\n        { label: t`Description`, value: item?.description || t`None` },\n        {\n          label: t`Retained version count`,\n          value: item?.retain_repo_versions ?? t`All`,\n        },\n        {\n          label: t`Distribution`,\n          value: <NonLazyDistributions distributions={item.distributions} />,\n        },\n        {\n          label: t`Repository URL`,\n          value: item.distributions?.length ? (\n            <CopyURL url={getRepoURL(item.distributions[0].base_path)} />\n          ) : (\n            '---'\n          ),\n        },\n        {\n          label: t`Labels`,\n          value: <PulpLabels labels={item?.pulp_labels} />,\n        },\n        {\n          label: t`Private`,\n          value: item?.private ? t`Yes` : t`No`,\n        },\n        {\n          label: t`Remote`,\n          value: remote ? (\n            <Link\n              to={formatPath(Paths.ansibleRemoteDetail, { name: remote.name })}\n            >\n              {remote.name}\n            </Link>\n          ) : (\n            t`None`\n          ),\n        },\n      ]}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ansibleRepositoryVersionRevertAction } from 'src/actions';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  AnsibleRepositoryVersionType,\n  PulpAPI,\n} from 'src/api';\nimport {\n  DateComponent,\n  DetailList,\n  Details,\n  ListItemActions,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRepositoryType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission: (string) => boolean;\n    hasObjectPermission: (string) => boolean;\n  };\n}\n\nconst AnyAPI = (href) =>\n  new (class extends PulpAPI {\n    useOrdering = true;\n    apiPath = href.replace(PULP_API_BASE_PATH, '');\n  })();\n\nconst VersionContent = ({\n  href,\n  addAlert,\n  hasPermission,\n  repositoryName,\n}: {\n  href: string;\n  addAlert: (alert) => void;\n  hasPermission: (string) => boolean;\n  repositoryName: string;\n}) => {\n  const [state, setState] = useState({});\n  if (!href) {\n    return null;\n  }\n\n  const API = AnyAPI(href);\n  const query = ({ params }) => API.list(params);\n  const renderTableRow = ({\n    manifest: {\n      collection_info: { namespace, name, version },\n    },\n    description,\n  }) => (\n    <tr>\n      <td>\n        <Link\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              repo: repositoryName,\n              namespace,\n              collection: name,\n            },\n            {\n              version,\n            },\n          )}\n        >\n          {namespace}.{name} v{version}\n        </Link>\n      </td>\n      <td>{description}</td>\n    </tr>\n  );\n\n  return (\n    <DetailList<{ manifest; description; pulp_href }>\n      actionContext={{\n        addAlert,\n        state,\n        setState,\n        query,\n        hasPermission,\n      }}\n      defaultPageSize={10}\n      defaultSort={'name'}\n      errorTitle={t`Collection versions could not be displayed.`}\n      noDataDescription={t`No collection versions in this repository version.`}\n      noDataTitle={t`No collection versions yet`}\n      query={query}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Collection`,\n          type: 'none',\n          id: 'col1',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'col2',\n        },\n      ]}\n      title={t`Collection versions`}\n    />\n  );\n};\n\nconst ContentSummary = ({ data }: { data: object }) => {\n  if (!Object.keys(data).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <table className='pf-c-table'>\n      <tr>\n        <th>{t`Count`}</th>\n        <th>{t`Pulp type`}</th>\n      </tr>\n      {Object.entries(data).map(([k, v]) => (\n        <tr key={k}>\n          <td>{v['count']}</td>\n          <th>{k}</th>\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nconst BaseVersion = ({\n  repositoryName,\n  data,\n}: {\n  repositoryName: string;\n  data?: string;\n}) => {\n  if (!data) {\n    return <>{t`None`}</>;\n  }\n\n  const number = data.split('/').at(-2);\n  return (\n    <Link\n      to={formatPath(\n        Paths.ansibleRepositoryDetail,\n        {\n          name: repositoryName,\n        },\n        {\n          repositoryVersion: number,\n          tab: 'repository-versions',\n        },\n      )}\n    >\n      {number}\n    </Link>\n  );\n};\n\nexport const RepositoryVersionsTab = ({\n  item,\n  actionContext: { addAlert, state, hasPermission, hasObjectPermission },\n}: TabProps) => {\n  const pulpId = parsePulpIDFromURL(item.pulp_href);\n  const latest_href = item.latest_version_href;\n  const repositoryName = item.name;\n  const queryList = ({ params }) =>\n    AnsibleRepositoryAPI.listVersions(pulpId, params);\n  const queryDetail = ({ number }) =>\n    AnsibleRepositoryAPI.listVersions(pulpId, { number });\n  const [modalState, setModalState] = useState({});\n  const [version, setVersion] = useState(null);\n\n  useEffect(() => {\n    if (state.params.repositoryVersion) {\n      queryDetail({ number: state.params.repositoryVersion }).then(\n        ({ data }) => {\n          if (!data?.results?.[0]) {\n            addAlert({\n              variant: 'danger',\n              title: t`Failed to find repository version`,\n            });\n          }\n          setVersion(data.results[0]);\n        },\n      );\n    } else {\n      setVersion(null);\n    }\n  }, [state.params.repositoryVersion]);\n\n  const renderTableRow = (\n    item: AnsibleRepositoryVersionType,\n    index: number,\n    actionContext,\n    listItemActions,\n  ) => {\n    const { number, pulp_created, pulp_href } = item;\n\n    const isLatest = latest_href === pulp_href;\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem({ ...item, isLatest, repositoryName }, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link\n            to={formatPath(\n              Paths.ansibleRepositoryDetail,\n              {\n                name: repositoryName,\n              },\n              {\n                repositoryVersion: number,\n                tab: 'repository-versions',\n              },\n            )}\n          >\n            {number}\n          </Link>\n          {isLatest ? ' ' + t`(latest)` : null}\n        </td>\n        <td>\n          <DateComponent date={pulp_created} />\n        </td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  };\n\n  return state.params.repositoryVersion ? (\n    version ? (\n      <>\n        <Details\n          fields={[\n            { label: t`Version number`, value: version.number },\n            {\n              label: t`Created date`,\n              value: <DateComponent date={version.pulp_created} />,\n            },\n            {\n              label: t`Content added`,\n              value: <ContentSummary data={version.content_summary?.added} />,\n            },\n            {\n              label: t`Content removed`,\n              value: <ContentSummary data={version.content_summary?.removed} />,\n            },\n            {\n              label: t`Current content`,\n              value: <ContentSummary data={version.content_summary?.present} />,\n            },\n            {\n              label: t`Base version`,\n              value: (\n                <BaseVersion\n                  repositoryName={repositoryName}\n                  data={version.base_version}\n                />\n              ),\n            },\n          ]}\n        />\n        <div\n          className='pf-c-page__main-section'\n          style={{ padding: '8px 0', margin: '24px -16px 0' }}\n        />\n        <VersionContent\n          {...version.content_summary.present['ansible.collection_version']}\n          repositoryName={repositoryName}\n        />\n      </>\n    ) : (\n      <Spinner size='md' />\n    )\n  ) : (\n    <DetailList<AnsibleRepositoryVersionType>\n      actionContext={{\n        addAlert,\n        state: modalState,\n        setState: setModalState,\n        query: queryList,\n        hasPermission,\n        hasObjectPermission, // needs item=repository, not repository version\n      }}\n      defaultPageSize={10}\n      defaultSort={'-pulp_created'}\n      errorTitle={t`Repository versions could not be displayed.`}\n      filterConfig={null}\n      listItemActions={[ansibleRepositoryVersionRevertAction]}\n      noDataButton={null}\n      noDataDescription={t`Repository versions will appear once the repository is modified.`}\n      noDataTitle={t`No repository versions yet`}\n      query={queryList}\n      renderTableRow={renderTableRow}\n      sortHeaders={[\n        {\n          title: t`Version number`,\n          type: 'numeric',\n          id: 'number',\n        },\n        {\n          title: t`Created date`,\n          type: 'numeric',\n          id: 'pulp_created',\n        },\n      ]}\n      title={t`Repository versions`}\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  ansibleRepositoryCopyAction,\n  ansibleRepositoryDeleteAction,\n  ansibleRepositoryEditAction,\n  ansibleRepositorySyncAction,\n} from 'src/actions';\nimport {\n  AnsibleDistributionAPI,\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n} from 'src/api';\nimport { PageWithTabs } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRepositories } from 'src/permissions';\nimport { parsePulpIDFromURL } from 'src/utilities';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\nimport { RepositoryAccessTab } from './tab-access';\nimport { CollectionVersionsTab } from './tab-collection-versions';\nimport { DetailsTab } from './tab-details';\nimport { RepositoryVersionsTab } from './tab-repository-versions';\n\nconst tabs = [\n  { id: 'details', name: t`Details` },\n  { id: 'access', name: t`Access` },\n  { id: 'collection-versions', name: t`Collection versions` },\n  { id: 'repository-versions', name: t`Versions` },\n];\n\nconst AnsibleRepositoryDetail = PageWithTabs<AnsibleRepositoryType>({\n  breadcrumbs: ({ name, tab, params: { repositoryVersion, group } }) =>\n    [\n      { url: formatPath(Paths.ansibleRepositories), name: t`Repositories` },\n      { url: formatPath(Paths.ansibleRepositoryDetail, { name }), name },\n      (tab.id === 'repository-versions' && repositoryVersion) ||\n      (tab.id === 'access' && group)\n        ? {\n            url: formatPath(\n              Paths.ansibleRepositoryDetail,\n              { name },\n              { tab: tab.id },\n            ),\n            name: tab.name,\n          }\n        : null,\n      tab.id === 'repository-versions' && repositoryVersion\n        ? { name: t`Version ${repositoryVersion}` }\n        : tab.id === 'access' && group\n        ? { name: t`Group ${group}` }\n        : { name: tab.name },\n    ].filter(Boolean),\n  condition: canViewAnsibleRepositories,\n  displayName: 'AnsibleRepositoryDetail',\n  errorTitle: t`Repository could not be displayed.`,\n  headerActions: [\n    ansibleRepositoryEditAction,\n    ansibleRepositorySyncAction,\n    ansibleRepositoryCopyAction,\n    ansibleRepositoryDeleteAction,\n  ],\n  headerDetails: (item) => (\n    <>\n      {item?.last_sync_task && (\n        <p className='hub-m-truncated'>\n          <Trans>Last updated from registry {lastSynced(item)}</Trans>{' '}\n          {lastSyncStatus(item)}\n        </p>\n      )}\n    </>\n  ),\n  query: ({ name }) => {\n    return AnsibleRepositoryAPI.list({ name })\n      .then(({ data: { results } }) => results[0])\n      .then((repository) => {\n        // using the list api, so an empty array is really a 404\n        if (!repository) {\n          return Promise.reject({ response: { status: 404 } });\n        }\n\n        const err = (e) => {\n          console.error(e);\n          return [];\n        };\n\n        return Promise.all([\n          AnsibleDistributionAPI.list({\n            repository: repository.pulp_href,\n          })\n            .then(({ data: { results } }) => results)\n            .catch(err),\n          AnsibleRepositoryAPI.myPermissions(\n            parsePulpIDFromURL(repository.pulp_href),\n          )\n            .then(({ data: { permissions } }) => permissions)\n            .catch(err),\n        ]).then(([distributions, my_permissions]) => ({\n          ...repository,\n          distributions,\n          my_permissions,\n        }));\n      });\n  },\n  renderTab: (tab, item, actionContext) =>\n    ({\n      details: <DetailsTab item={item} actionContext={actionContext} />,\n      access: <RepositoryAccessTab item={item} actionContext={actionContext} />,\n      'collection-versions': (\n        <CollectionVersionsTab item={item} actionContext={actionContext} />\n      ),\n      'repository-versions': (\n        <RepositoryVersionsTab item={item} actionContext={actionContext} />\n      ),\n    }[tab]),\n  tabs,\n  tabUpdateParams: (p) => {\n    delete p.repositoryVersion;\n    delete p.group;\n    return p;\n  },\n});\n\nexport default AnsibleRepositoryDetail;\n"],"names":["RepositoryAccessTab","_ref","item","_ref$actionContext","actionContext","addAlert","featureFlags","hasPermission","params","state","user","id","pulp_href","parsePulpIDFromURL","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","_useState4","groups","setGroups","_useState5","_useState6","canEditOwners","setCanEditOwners","_useState7","_useState8","selectedGroup","setSelectedGroup","_useState9","_useState10","showGroupRemoveModal","setShowGroupRemoveModal","_useState11","_useState12","showGroupSelectWizard","setShowGroupSelectWizard","_useState13","_useState14","showRoleRemoveModal","setShowRoleRemoveModal","_useState15","_useState16","showRoleSelectWizard","setShowRoleSelectWizard","query","AnsibleRepositoryAPI","myPermissions","then","_ref2","permissions","data","canEditAnsibleRepositoryAccess","hasObjectPermission","p","includes","listRoles","_ref3","_step","roles","groupRoles","_iterator","_createForOfIteratorHelper","s","n","done","_step2","_step$value","value","role","_iterator2","_loop","groupIndex","findIndex","g","push","object_roles","err","e","f","updateGroupRoles","_ref4","alertSuccess","alertFailure","stateUpdate","Promise","all","title","variant","_ref5","_ref5$response","response","status","statusText","description","errorMessage","updateProps","props","Object","entries","forEach","_ref6","_ref7","k","v","console","error","useEffect","group","GroupAPI","list","_ref8","find","React","AccessTab","addGroup","rolePromises","map","addRole","i18n","_","pulpObjectType","removeGroup","removeRole","removedRole","selectRolesMessage","urlPrefix","formatPath","Paths","ansibleRepositoryDetail","CollectionVersionsTab","newParams","_objectSpread","ordering","sort","repository","CollectionVersionAPI","_ref3$data","count","meta","results","modalState","setModalState","ms","DetailList","setState","_item$my_permissions","_item$my_permissions$","my_permissions","call","defaultPageSize","defaultSort","errorTitle","filterConfig","headerActions","ansibleRepositoryCollectionVersionAddAction","listItemActions","ansibleRepositoryCollectionVersionRemoveAction","noDataButton","button","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","version","kebabItems","action","dropdownItem","key","Link","to","collectionByRepo","repo","collection","ListItemActions","sortHeaders","type","DetailsTab","_item$retain_repo_ver","_item$distributions","remote","setRemote","pk","AnsibleRemoteAPI","get","Details","fields","label","retain_repo_versions","NonLazyDistributions","distributions","length","CopyURL","url","getRepoURL","base_path","PulpLabels","labels","pulp_labels","ansibleRemoteDetail","VersionContent","href","repositoryName","API","_PulpAPI","_inherits","_class2","_super","_this","_classCallCheck","_len","arguments","args","Array","_key","apply","concat","_defineProperty","_assertThisInitialized","replace","PULP_API_BASE_PATH","_createClass","PulpAPI","AnyAPI","_ref3$manifest$collec","manifest","collection_info","ContentSummary","keys","className","BaseVersion","number","split","at","repositoryVersion","tab","RepositoryVersionsTab","_version$content_summ","_version$content_summ2","_version$content_summ3","_ref8$actionContext","pulpId","latest_href","latest_version_href","queryList","_ref9","listVersions","setVersion","_ref10","_ref11","_data$results","DateComponent","date","pulp_created","content_summary","added","removed","present","base_version","style","padding","margin","_extends","Spinner","size","ansibleRepositoryVersionRevertAction","isLatest","tabs","PageWithTabs","breadcrumbs","_ref$params","ansibleRepositories","filter","Boolean","condition","canViewAnsibleRepositories","displayName","ansibleRepositoryEditAction","ansibleRepositorySyncAction","ansibleRepositoryCopyAction","ansibleRepositoryDeleteAction","headerDetails","last_sync_task","Trans","values","lastSynced","lastSyncStatus","reject","AnsibleDistributionAPI","renderTab","details","access","tabUpdateParams"],"sourceRoot":""}