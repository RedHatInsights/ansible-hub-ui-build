{"version":3,"file":"js/1811.9f12153b2824069fb754.js","mappings":"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","sources":["webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/actions/ansible-repository-collection-version-add.tsx","webpack:///./src/actions/ansible-repository-collection-version-remove.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { getRepoURL } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: t`Copy CLI configuration`,\n  onClick: async (item, { addAlert }) => {\n    let distribution = null;\n    if (!item.distributions) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`Loading distribution...`,\n        variant: 'info',\n      });\n\n      distribution = (\n        await AnsibleDistributionAPI.list({\n          repository: item.pulp_href,\n        })\n      )?.data?.results?.[0];\n    } else {\n      distribution = item.distributions?.[0];\n    }\n\n    if (!distribution) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`There are no distributions associated with this repository.`,\n        variant: 'danger',\n      });\n      return;\n    }\n\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.base_path}`,\n      '',\n      `[galaxy_server.${distribution.base_path}]`,\n      `url=${getRepoURL(distribution.base_path)}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      description: <pre>{cliConfig}</pre>,\n      id: 'copy-cli-config',\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n    });\n  },\n  disabled: ({ distributions }) => {\n    if (distributions && !distributions.length) {\n      return t`There are no distributions associated with this repository.`;\n    }\n\n    return null;\n  },\n});\n","import { Button, DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: string;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => React.ReactNode | null;\n  disabled: (item, actionContext) => string | null;\n  dropdownItem: (item, actionContext) => React.ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title,\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={title}>\n          <Button variant={buttonVariant} isDisabled>\n            {title}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={title}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {title}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={title}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {title}\n        </DropdownItem>\n      ) : (\n        <DropdownItem key={title} onClick={() => onClick(item, actionContext)}>\n          {title}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: t`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: t`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: t`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: t`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: t`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: {\n        pulpId: id || parsePulpIDFromURL(pulp_href),\n        name,\n        pulp_href,\n      },\n    }),\n  disabled: ({ name }) => {\n    if (Constants.PROTECTED_REPOSITORIES.includes(name)) {\n      return t`Protected repositories cannot be deleted.`;\n    }\n\n    return null;\n  },\n});\n\nasync function deleteRepository(\n  { name, pulp_href, pulpId },\n  { addAlert, setState, query },\n) {\n  const distributionsToDelete = await AnsibleDistributionAPI.list({\n    repository: pulp_href,\n  })\n    .then(({ data: { results } }) => results || [])\n    .catch((e) => {\n      handleHttpError(\n        t`Failed to list distributions, removing only the repository.`,\n        () => null,\n        addAlert,\n      )(e);\n      return [];\n    });\n\n  const deleteRepo = AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => setState({ deleteModalOpen: null }),\n        addAlert,\n      ),\n    );\n\n  const deleteDistribution = ({ name, pulp_href }) => {\n    const distribution_id = parsePulpIDFromURL(pulp_href);\n    return AnsibleDistributionAPI.delete(distribution_id)\n      .then(({ data }) =>\n        addAlert(\n          taskAlert(data.task, t`Removal started for distribution ${name}`),\n        ),\n      )\n      .catch(\n        handleHttpError(\n          t`Failed to remove distribution ${name}`,\n          () => null,\n          addAlert,\n        ),\n      );\n  };\n\n  return Promise.all([\n    deleteRepo,\n    ...distributionsToDelete.map(deleteDistribution),\n  ]).then(() => {\n    setState({ deleteModalOpen: null });\n    query();\n  });\n}\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: t`Sync`,\n  onClick: ({ name, pulp_href }, { addAlert, query }) => {\n    const pulpId = parsePulpIDFromURL(pulp_href);\n    AnsibleRepositoryAPI.sync(pulpId, { mirror: true })\n      .then(({ data }) => {\n        addAlert(\n          taskAlert(data.task, t`Sync started for repository \"${name}\".`),\n        );\n\n        query();\n      })\n      .catch(\n        handleHttpError(\n          t`Failed to sync repository \"${name}\"`,\n          () => null,\n          addAlert,\n        ),\n      );\n  },\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    return null;\n  },\n});\n","import { Trans, t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: t`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import { plural, t } from '@lingui/macro';\nimport { Button, Checkbox, Modal } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertList, AlertType, DetailList, closeAlert } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport {\n  RepositoriesUtils,\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n} from 'src/utilities';\nimport { Action } from './action';\n\nconst add = (\n  { repositoryHref, repositoryName },\n  collections,\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  const collectionVersionHrefs = collections.map(\n    (c) => c.collection_version.pulp_href,\n  );\n  return AnsibleRepositoryAPI.addContent(pulpId, collectionVersionHrefs)\n    .then(({ data }) => {\n      collections.map(\n        ({ collection_version: { name, namespace, version }, repository }) => {\n          addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repositoryName}\".`,\n            ),\n          );\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }));\n          query({});\n        },\n      );\n    })\n    .catch(\n      handleHttpError(\n        plural(collections.length, {\n          one: `Failed to add collection to repository \"${repositoryName}\".`,\n          other: `Failed to add collections to repository \"${repositoryName}\".`,\n        }),\n        () => setState((ms) => ({ ...ms, addCollectionVersionModal: null })),\n        addAlert,\n      ),\n    );\n};\n\nconst AddCollectionVersionModal = ({\n  addAction,\n  closeAction,\n  sourceRepository,\n}: {\n  addAction: (selected) => void;\n  closeAction: () => void;\n  sourceRepository: AnsibleRepositoryType;\n}) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selected, setSelected] = useState<CollectionVersionSearch[]>([]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    return CollectionVersionAPI.list({\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({});\n\n  const renderTableRow = (item: CollectionVersionSearch, index: number) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const isCollectionInRepo =\n      sourceRepository.pulp_href === repository.pulp_href;\n\n    return (\n      <tr\n        onClick={() =>\n          setSelected(\n            RepositoriesUtils.pushToOrFilterOutCollections(item, selected),\n          )\n        }\n        key={index}\n      >\n        <td>\n          <Checkbox\n            aria-label={`${namespace}.${name} v${version}`}\n            id={`collection-${index}`}\n            isChecked={isCollectionInRepo || selected.includes(item)}\n            name={`collection-${index}`}\n            isDisabled={isCollectionInRepo}\n          />\n        </td>\n        <td>\n          {namespace}.{name} v{version}\n        </td>\n        <td>{description}</td>\n        <td>{repository.name}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() => addAction(selected)}\n          variant='primary'\n          isDisabled={!selected}\n        >\n          {t`Select`}\n        </Button>,\n        <Button key='cancel' onClick={closeAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select a collection`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <DetailList<CollectionVersionSearch>\n          actionContext={{\n            addAlert,\n            state: modalState,\n            setState: setModalState,\n            query,\n            hasPermission: () => {\n              throw 'unused';\n            },\n          }}\n          defaultPageSize={10}\n          defaultSort={'name'}\n          errorTitle={t`Collection versions could not be displayed.`}\n          filterConfig={[\n            {\n              id: 'keywords',\n              title: t`Keywords`,\n            },\n            {\n              id: 'namespace',\n              title: t`Namespace`,\n            },\n            {\n              id: 'repository_name',\n              title: t`Repository`,\n            },\n          ]}\n          noDataDescription={t`Collection versions will appear once a collection is uploaded.`}\n          noDataTitle={t`No collection versions yet`}\n          query={query}\n          renderTableRow={renderTableRow}\n          sortHeaders={[\n            {\n              title: '',\n              type: 'none',\n              id: 'radio',\n            },\n            {\n              title: t`Collection`,\n              type: 'none',\n              id: 'col1',\n            },\n            {\n              title: t`Description`,\n              type: 'none',\n              id: 'col2',\n            },\n            {\n              title: t`Repository`,\n              type: 'none',\n              id: 'col3',\n            },\n          ]}\n          title={t`Collection versions`}\n        />\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionAddAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Add collection`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.addCollectionVersionModal ? (\n      <AddCollectionVersionModal\n        addAction={(collections: CollectionVersionSearch[]) => {\n          add(state.addCollectionVersionModal, collections, {\n            addAlert,\n            setState,\n            query,\n          });\n        }}\n        closeAction={() =>\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }))\n        }\n        sourceRepository={state.repository}\n      />\n    ) : null,\n  onClick: (\n    _item,\n    {\n      state: {\n        repository: { name: repositoryName, pulp_href: repositoryHref },\n      },\n      setState,\n    },\n  ) =>\n    setState((ms) => ({\n      ...ms,\n      addCollectionVersionModal: {\n        repositoryHref,\n        repositoryName,\n      },\n    })),\n});\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst remove = (\n  {\n    collection: { namespace, name, version },\n    collectionVersionHref,\n    repositoryHref,\n    repositoryName,\n  },\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  return AnsibleRepositoryAPI.removeContent(pulpId, collectionVersionHref)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Removal of ${namespace}.${name} v${version} from repository \"${repositoryName}\" started.`,\n        ),\n      );\n      setState({ removeCollectionVersionModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove ${namespace}.${name} v${version} from repository \"${repositoryName}\".`,\n        () => setState({ removeCollectionVersionModal: null }),\n        addAlert,\n      ),\n    );\n};\n\nconst RemoveCollectionVersionModal = ({\n  name,\n  namespace,\n  repositoryName,\n  version,\n  closeAction,\n  deleteAction,\n}: {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  namespace: string;\n  repositoryName: string;\n  version: string;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      isRemove\n      title={t`Remove collection version?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to remove the collection version{' '}\n          <b>\n            {namespace}.{name} v{version}\n          </b>{' '}\n          from the <b>{repositoryName}</b> repository?\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionRemoveAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Remove`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.removeCollectionVersionModal ? (\n      <RemoveCollectionVersionModal\n        closeAction={() => setState({ removeCollectionVersionModal: null })}\n        deleteAction={() =>\n          remove(state.removeCollectionVersionModal, {\n            addAlert,\n            setState,\n            query,\n          })\n        }\n        name={state.removeCollectionVersionModal.collection.name}\n        namespace={state.removeCollectionVersionModal.collection.namespace}\n        repositoryName={state.removeCollectionVersionModal.repositoryName}\n        version={state.removeCollectionVersionModal.collection.version}\n      />\n    ) : null,\n  onClick: (\n    {\n      collection_version: {\n        namespace,\n        name,\n        version,\n        pulp_href: collectionVersionHref,\n      },\n      repository: { name: repositoryName, pulp_href: repositoryHref },\n    },\n    { setState },\n  ) =>\n    setState({\n      removeCollectionVersionModal: {\n        collection: { namespace, name, version },\n        repositoryName,\n        repositoryHref,\n        collectionVersionHref,\n      },\n    }),\n});\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository'); under feature flag\nexport const canViewAnsibleRepositories = ({ user, featureFlags }) =>\n  user && featureFlags?.display_repositories;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["_onClick","Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","i18n","navigate","formatPath","Paths","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","query","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","handleHttpError","deleteRemote","_ref2","_ref3","id","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","ansibleRepositoryCopyAction","_asyncToGenerator","_regeneratorRuntime","_callee","distribution","_yield$AnsibleDistrib","_yield$AnsibleDistrib2","_yield$AnsibleDistrib3","_item$distributions","cliConfig","_context","prev","next","distributions","AnsibleDistributionAPI","repository","t1","sent","t0","t2","results","abrupt","concat","base_path","getRepoURL","join","navigator","clipboard","writeText","stop","_x","_x2","apply","arguments","length","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","_deleteRepository","deleteRepository","Constants","distributionsToDelete","deleteRepo","deleteDistribution","_ref7","e","AnsibleRepositoryAPI","_ref8","_ref9","distribution_id","_ref10","Promise","all","_toConsumableArray","map","ansibleRepositoryEditAction","canEditAnsibleRepository","ansibleRepositorySyncAction","canSyncAnsibleRepository","mirror","_item","hasPermission","remote","last_sync_task","includes","RevertModal","version","cancelAction","revertAction","_useState","useState","_useState2","_slicedToArray","pending","setPending","Modal","actions","Spinner","size","isOpen","onClose","titleIconVariant","Trans","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","repositoryName","number","revert","isLatest","AddCollectionVersionModal","addAction","sourceRepository","alerts","setAlerts","_useState3","_useState4","selected","setSelected","newParams","_objectSpread","params","ordering","sort","CollectionVersionAPI","_ref7$data","count","meta","_useState5","_useState6","modalState","setModalState","className","DetailList","alert","defaultPageSize","defaultSort","errorTitle","filterConfig","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","isCollectionInRepo","RepositoriesUtils","Checkbox","isChecked","sortHeaders","type","AlertList","closeAlert","i","ansibleRepositoryCollectionVersionAddAction","addCollectionVersionModal","collections","repositoryHref","collectionVersionHrefs","c","_ref4$collection_vers","ms","add","_ref9$state$repositor","RemoveCollectionVersionModal","DeleteModal","spinner","isRemove","Text","values","components","ansibleRepositoryCollectionVersionRemoveAction","removeCollectionVersionModal","_ref$collection","collection","collectionVersionHref","remove","_ref6$collection_vers","_ref6$repository","has_model_perms","permission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canViewAnsibleRemotes","canEditAnsibleRemoteAccess","canViewAnsibleRepositories","featureFlags","display_repositories","canEditAnsibleRepositoryAccess"],"sourceRoot":""}