{"version":3,"file":"js/1811.06e57453db231379f146.js","mappings":"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","sources":["webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-collection-version-add.tsx","webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/ansible-repository-collection-version-remove.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { MessageDescriptor, i18n } from '@lingui/core';\nimport { Button, DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: MessageDescriptor;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => React.ReactNode | null;\n  disabled: (item, actionContext) => string | null;\n  dropdownItem: (item, actionContext) => React.ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title: i18n._(title),\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={i18n._(title)}>\n          <Button variant={buttonVariant} isDisabled>\n            {i18n._(title)}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={i18n._(title)}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      ) : (\n        <DropdownItem\n          key={i18n._(title)}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {i18n._(title)}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: msg`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport {\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n  waitForTaskUrl,\n} from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: msg`Delete`,\n  modal: ({ addAlert, listQuery, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, listQuery })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, listQuery }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n      setState({ deleteModalOpen: null });\n      return waitForTaskUrl(data.task);\n    })\n    .then(() => listQuery())\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: msg`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: msg`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { msg } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: msg`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { msg, plural, t } from '@lingui/macro';\nimport { Button, Checkbox, Modal } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertList, AlertType, DetailList, closeAlert } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst add = (\n  { repositoryHref, repositoryName },\n  collections,\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  const collectionVersionHrefs = collections.map(\n    (c) => c.collection_version.pulp_href,\n  );\n  return AnsibleRepositoryAPI.addContent(pulpId, collectionVersionHrefs)\n    .then(({ data }) => {\n      collections.map(\n        ({ collection_version: { name, namespace, version }, repository }) => {\n          addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repositoryName}\".`,\n            ),\n          );\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }));\n          query({});\n        },\n      );\n    })\n    .catch(\n      handleHttpError(\n        plural(collections.length, {\n          one: `Failed to add collection to repository \"${repositoryName}\".`,\n          other: `Failed to add collections to repository \"${repositoryName}\".`,\n        }),\n        () => setState((ms) => ({ ...ms, addCollectionVersionModal: null })),\n        addAlert,\n      ),\n    );\n};\n\nfunction pushToOrFilterOutCollections(\n  selectedCollection: CollectionVersionSearch,\n  collections: CollectionVersionSearch[],\n): CollectionVersionSearch[] {\n  // check if collection is already selected\n  const selectedItem = collections.find(\n    ({ collection_version: cv, repository }) =>\n      cv.pulp_href === selectedCollection.collection_version.pulp_href &&\n      repository.pulp_href === selectedCollection.repository.pulp_href,\n  );\n\n  // if collection is not selected, add it to selected items\n  if (!selectedItem) {\n    return [...collections, selectedCollection];\n  }\n\n  // unselect collection\n  return collections.filter(\n    ({ collection_version: cv, repository }) =>\n      cv.pulp_href !== selectedCollection.collection_version.pulp_href ||\n      repository.pulp_href !== selectedCollection.repository.pulp_href,\n  );\n}\n\nconst AddCollectionVersionModal = ({\n  addAction,\n  closeAction,\n  sourceRepository,\n}: {\n  addAction: (selected) => void;\n  closeAction: () => void;\n  sourceRepository: AnsibleRepositoryType;\n}) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selected, setSelected] = useState<CollectionVersionSearch[]>([]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const query = ({ params }) => {\n    const newParams = { ...params };\n    newParams.ordering = newParams.sort;\n    delete newParams.sort;\n\n    return CollectionVersionAPI.list({\n      ...newParams,\n    }).then(\n      ({\n        data: {\n          meta: { count },\n          data: results,\n        },\n      }) => ({\n        data: { count, results },\n      }),\n    );\n  };\n\n  const [modalState, setModalState] = useState({});\n\n  const renderTableRow = (item: CollectionVersionSearch, index: number) => {\n    const {\n      collection_version: { name, namespace, version, description },\n      repository,\n    } = item;\n\n    const isCollectionInRepo =\n      sourceRepository.pulp_href === repository.pulp_href;\n\n    return (\n      <tr\n        onClick={() =>\n          setSelected(pushToOrFilterOutCollections(item, selected))\n        }\n        key={index}\n      >\n        <td>\n          <Checkbox\n            aria-label={`${namespace}.${name} v${version}`}\n            id={`collection-${index}`}\n            isChecked={isCollectionInRepo || selected.includes(item)}\n            name={`collection-${index}`}\n            isDisabled={isCollectionInRepo}\n          />\n        </td>\n        <td>\n          {namespace}.{name} v{version}\n        </td>\n        <td>{description}</td>\n        <td>{repository.name}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() => addAction(selected)}\n          variant='primary'\n          isDisabled={!selected.length}\n        >\n          {t`Select`}\n        </Button>,\n        <Button key='cancel' onClick={closeAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select a collection`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <DetailList<CollectionVersionSearch>\n          actionContext={{\n            addAlert,\n            state: modalState,\n            setState: setModalState,\n            query,\n            hasPermission: () => {\n              throw 'unused';\n            },\n          }}\n          defaultPageSize={10}\n          defaultSort={'name'}\n          errorTitle={t`Collection versions could not be displayed.`}\n          filterConfig={[\n            {\n              id: 'keywords',\n              title: t`Keywords`,\n            },\n            {\n              id: 'namespace',\n              title: t`Namespace`,\n            },\n            {\n              id: 'repository_name',\n              title: t`Repository`,\n            },\n          ]}\n          noDataDescription={t`Collection versions will appear once a collection is uploaded.`}\n          noDataTitle={t`No collection versions yet`}\n          query={query}\n          renderTableRow={renderTableRow}\n          sortHeaders={[\n            {\n              title: '',\n              type: 'none',\n              id: 'radio',\n            },\n            {\n              title: t`Collection`,\n              type: 'none',\n              id: 'col1',\n            },\n            {\n              title: t`Description`,\n              type: 'none',\n              id: 'col2',\n            },\n            {\n              title: t`Repository`,\n              type: 'none',\n              id: 'col3',\n            },\n          ]}\n          title={t`Collection versions`}\n        />\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionAddAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Add collection`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.addCollectionVersionModal ? (\n      <AddCollectionVersionModal\n        addAction={(collections: CollectionVersionSearch[]) => {\n          add(state.addCollectionVersionModal, collections, {\n            addAlert,\n            setState,\n            query,\n          });\n        }}\n        closeAction={() =>\n          setState((ms) => ({ ...ms, addCollectionVersionModal: null }))\n        }\n        sourceRepository={state.repository}\n      />\n    ) : null,\n  onClick: (\n    _item,\n    {\n      state: {\n        repository: { name: repositoryName, pulp_href: repositoryHref },\n      },\n      setState,\n    },\n  ) =>\n    setState((ms) => ({\n      ...ms,\n      addCollectionVersionModal: {\n        repositoryHref,\n        repositoryName,\n      },\n    })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { getRepoURL, repositoryBasePath } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: msg`Copy CLI configuration`,\n  onClick: async (item, { addAlert }) => {\n    let distroBasePath = null;\n\n    if (!item.distroBasePath) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`Loading distribution...`,\n        variant: 'info',\n      });\n\n      distroBasePath = await repositoryBasePath(\n        item.name,\n        item.pulp_href,\n      ).catch(() => null);\n    } else {\n      distroBasePath = item.distroBasePath;\n    }\n\n    if (!distroBasePath) {\n      addAlert({\n        id: 'copy-cli-config',\n        title: t`There are no distributions associated with this repository.`,\n        variant: 'danger',\n      });\n      return;\n    }\n\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distroBasePath}`,\n      '',\n      `[galaxy_server.${distroBasePath}]`,\n      `url=${getRepoURL(distroBasePath)}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      description: <pre>{cliConfig}</pre>,\n      id: 'copy-cli-config',\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n    });\n  },\n  disabled: (item) => {\n    // disabled check only available on detail screen\n    if ('distroBasePath' in item && !item.distroBasePath) {\n      return t`There are no distributions associated with this repository.`;\n    }\n\n    return null;\n  },\n});\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst remove = (\n  {\n    collection: { namespace, name, version },\n    collectionVersionHref,\n    repositoryHref,\n    repositoryName,\n  },\n  { addAlert, setState, query },\n) => {\n  const pulpId = parsePulpIDFromURL(repositoryHref);\n  return AnsibleRepositoryAPI.removeContent(pulpId, collectionVersionHref)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Removal of ${namespace}.${name} v${version} from repository \"${repositoryName}\" started.`,\n        ),\n      );\n      setState({ removeCollectionVersionModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove ${namespace}.${name} v${version} from repository \"${repositoryName}\".`,\n        () => setState({ removeCollectionVersionModal: null }),\n        addAlert,\n      ),\n    );\n};\n\nconst RemoveCollectionVersionModal = ({\n  name,\n  namespace,\n  repositoryName,\n  version,\n  closeAction,\n  deleteAction,\n}: {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  namespace: string;\n  repositoryName: string;\n  version: string;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      isRemove\n      title={t`Remove collection version?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to remove the collection version{' '}\n          <b>\n            {namespace}.{name} v{version}\n          </b>{' '}\n          from the <b>{repositoryName}</b> repository?\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n\nexport const ansibleRepositoryCollectionVersionRemoveAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Remove`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.removeCollectionVersionModal ? (\n      <RemoveCollectionVersionModal\n        closeAction={() => setState({ removeCollectionVersionModal: null })}\n        deleteAction={() =>\n          remove(state.removeCollectionVersionModal, {\n            addAlert,\n            setState,\n            query,\n          })\n        }\n        name={state.removeCollectionVersionModal.collection.name}\n        namespace={state.removeCollectionVersionModal.collection.namespace}\n        repositoryName={state.removeCollectionVersionModal.repositoryName}\n        version={state.removeCollectionVersionModal.collection.version}\n      />\n    ) : null,\n  onClick: (\n    {\n      collection_version: {\n        namespace,\n        name,\n        version,\n        pulp_href: collectionVersionHref,\n      },\n      repository: { name: repositoryName, pulp_href: repositoryHref },\n    },\n    { setState },\n  ) =>\n    setState({\n      removeCollectionVersionModal: {\n        collection: { namespace, name, version },\n        repositoryName,\n        repositoryHref,\n        collectionVersionHref,\n      },\n    }),\n});\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: msg`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport {\n  handleHttpError,\n  parsePulpIDFromURL,\n  taskAlert,\n  waitForTaskUrl,\n} from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: msg`Delete`,\n  modal: ({ addAlert, listQuery, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, {\n            addAlert,\n            listQuery,\n            setState,\n          })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: {\n        pulpId: id || parsePulpIDFromURL(pulp_href),\n        name,\n        pulp_href,\n      },\n    }),\n  disabled: ({ name }) => {\n    if (Constants.PROTECTED_REPOSITORIES.includes(name)) {\n      return t`Protected repositories cannot be deleted.`;\n    }\n\n    return null;\n  },\n});\n\nasync function deleteRepository(\n  { name, pulp_href, pulpId },\n  { addAlert, setState, listQuery },\n) {\n  // TODO: handle more pages\n  const distributionsToDelete = await AnsibleDistributionAPI.list({\n    repository: pulp_href,\n    page: 1,\n    page_size: 100,\n  })\n    .then(({ data: { results } }) => results || [])\n    .catch((e) => {\n      handleHttpError(\n        t`Failed to list distributions, removing only the repository.`,\n        () => null,\n        addAlert,\n      )(e);\n      return [];\n    });\n\n  const deleteRepo = AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n      return waitForTaskUrl(data.task);\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => setState({ deleteModalOpen: null }),\n        addAlert,\n      ),\n    );\n\n  const deleteDistribution = ({ name, pulp_href }) => {\n    const distribution_id = parsePulpIDFromURL(pulp_href);\n    return AnsibleDistributionAPI.delete(distribution_id)\n      .then(({ data }) => {\n        addAlert(\n          taskAlert(data.task, t`Removal started for distribution ${name}`),\n        );\n        return waitForTaskUrl(data.task);\n      })\n      .catch(\n        handleHttpError(\n          t`Failed to remove distribution ${name}`,\n          () => null,\n          addAlert,\n        ),\n      );\n  };\n\n  return Promise.all([\n    deleteRepo,\n    ...distributionsToDelete.map(deleteDistribution),\n  ]).then(() => {\n    setState({ deleteModalOpen: null });\n    listQuery();\n  });\n}\n","import { msg } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: msg`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { msg, t } from '@lingui/macro';\nimport {\n  Button,\n  FormGroup,\n  Modal,\n  Spinner,\n  Switch,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst SyncModal = ({\n  closeAction,\n  syncAction,\n  name,\n}: {\n  closeAction: () => null;\n  syncAction: (syncParams) => Promise<void>;\n  name: string;\n}) => {\n  const [pending, setPending] = useState(false);\n  const [syncParams, setSyncParams] = useState({\n    mirror: true,\n    optimize: true,\n  });\n\n  useEffect(() => {\n    setPending(false);\n    setSyncParams({ mirror: true, optimize: true });\n  }, [name]);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='sync-button' key='sync'>\n          <Button\n            key='sync'\n            onClick={() => {\n              setPending(true);\n              syncAction(syncParams)\n                .then(closeAction)\n                .finally(() => setPending(false));\n            }}\n            variant='primary'\n            isDisabled={pending}\n          >\n            {t`Sync`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='close' onClick={closeAction} variant='link'>\n          {t`Close`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Sync repository \"${name}\"`}\n      variant='medium'\n    >\n      <FormGroup\n        label={t`Mirror`}\n        labelIcon={\n          <HelperText\n            content={t`If selected, all content that is not present in the remote repository will be removed from the local repository; otherwise, sync will add missing content.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.mirror}\n          onChange={(mirror) => setSyncParams({ ...syncParams, mirror })}\n          label={t`Content not present in remote repository will be removed from the local repository`}\n          labelOff={t`Sync will only add missing content`}\n        />\n      </FormGroup>\n      <br />\n      <FormGroup\n        label={t`Optimize`}\n        labelIcon={\n          <HelperText\n            content={t`Only perform the sync if no changes are reported by the remote server. To force a sync to happen, deselect this option.`}\n          />\n        }\n      >\n        <Switch\n          isChecked={syncParams.optimize}\n          onChange={(optimize) => setSyncParams({ ...syncParams, optimize })}\n          label={t`Only perform the sync if no changes are reported by the remote server.`}\n          labelOff={t`Force a sync to happen.`}\n        />\n      </FormGroup>\n      <br />\n    </Modal>\n  );\n};\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: msg`Sync`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.syncModalOpen ? (\n      <SyncModal\n        closeAction={() => setState({ syncModalOpen: null })}\n        syncAction={(syncParams) =>\n          syncRepository(state.syncModalOpen, { addAlert, query }, syncParams)\n        }\n        name={state.syncModalOpen.name}\n      />\n    ) : null,\n  onClick: ({ name, pulp_href }, { setState }) =>\n    setState({\n      syncModalOpen: { name, pulp_href },\n    }),\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    return null;\n  },\n});\n\nfunction syncRepository({ name, pulp_href }, { addAlert, query }, syncParams) {\n  const pulpId = parsePulpIDFromURL(pulp_href);\n  return AnsibleRepositoryAPI.sync(pulpId, syncParams || { mirror: true })\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Sync started for repository \"${name}\".`));\n\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to sync repository \"${name}\"`,\n        () => null,\n        addAlert,\n      ),\n    );\n}\n","import { Trans, msg, t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: msg`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository'); under feature flag\nexport const canViewAnsibleRepositories = ({ user, featureFlags }) =>\n  user && featureFlags?.display_repositories;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","i18n","_","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","id","navigate","formatPath","Paths","ansibleRemoteEdit","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","listQuery","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","values","waitForTaskUrl","handleHttpError","deleteRemote","_ref2","_ref3","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","_onClick","AddCollectionVersionModal","_ref7","addAction","sourceRepository","_useState","useState","_useState2","_slicedToArray","alerts","setAlerts","_useState3","_useState4","selected","setSelected","query","_ref8","newParams","_objectSpread","params","ordering","sort","CollectionVersionAPI","list","_ref9","_ref9$data","count","meta","results","_useState5","_useState6","modalState","setModalState","Modal","actions","length","isOpen","onClose","className","DetailList","alert","concat","_toConsumableArray","hasPermission","defaultPageSize","defaultSort","errorTitle","filterConfig","noDataDescription","noDataTitle","renderTableRow","index","_item$collection_vers","collection_version","namespace","version","repository","isCollectionInRepo","selectedCollection","collections","find","cv","filter","Checkbox","isChecked","includes","sortHeaders","type","AlertList","closeAlert","i","ansibleRepositoryCollectionVersionAddAction","canEditAnsibleRepository","_ref10","addCollectionVersionModal","repositoryHref","repositoryName","collectionVersionHrefs","map","c","AnsibleRepositoryAPI","addContent","_ref4$collection_vers","ms","add","_item","_ref11","_ref11$state$reposito","RemoveCollectionVersionModal","pending","setPending","DeleteModal","spinner","cancelAction","isRemove","Text","Trans","components","ansibleRepositoryCollectionVersionRemoveAction","removeCollectionVersionModal","_ref$collection","collection","collectionVersionHref","removeContent","remove","_ref6$collection_vers","_ref6$repository","ansibleRepositoryCopyAction","_asyncToGenerator","_regeneratorRuntime","_callee","distroBasePath","cliConfig","_context","prev","next","repositoryBasePath","sent","abrupt","getRepoURL","join","navigator","clipboard","writeText","stop","_x","_x2","apply","arguments","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryEdit","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","_deleteRepository","deleteRepository","Constants","PROTECTED_REPOSITORIES","distributionsToDelete","deleteRepo","deleteDistribution","AnsibleDistributionAPI","page","page_size","e","distribution_id","Promise","all","ansibleRepositoryEditAction","SyncModal","syncAction","mirror","optimize","syncParams","setSyncParams","useEffect","Spinner","size","FormGroup","label","labelIcon","HelperText","Switch","onChange","labelOff","ansibleRepositorySyncAction","canSyncAnsibleRepository","syncModalOpen","sync","syncRepository","remote","last_sync_task","RevertModal","revertAction","titleIconVariant","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","number","revert","isLatest","has_model_perms","permission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canViewAnsibleRemotes","canEditAnsibleRemoteAccess","canViewAnsibleRepositories","featureFlags","display_repositories","canEditAnsibleRepositoryAccess"],"sourceRoot":""}