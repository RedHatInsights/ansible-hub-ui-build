{"version":3,"file":"js/3689.a3f090873e68cc9ae899.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/role.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/repositories.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/copy-url.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/components/approve-modal/approve-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/repositories.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t5541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t1870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t7853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t2620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t6379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import axios from 'axios';\nimport {\n  AnsibleDistributionAPI,\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\n// return correct distro\nexport function findDistroBasePathByRepo(distributions, repository) {\n  if (distributions.length === 0) {\n    // if distribution doesn't exist, use repository name\n    return repository.name;\n  }\n\n  // try to look for match by name, if not, just use the first distro\n  const distro = distributions.find(\n    (distro) => distro.name === repository.name,\n  );\n\n  return distro ? distro.base_path : distributions[0].base_path;\n}\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionVersionSearch,\n  ): Promise<{ data: { task: string } }> {\n    const {\n      collection_version: { namespace, name },\n      repository,\n      is_deprecated,\n    } = collection;\n    return new Promise((resolve, reject) => {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      })\n        .then((result) => {\n          const basePath = findDistroBasePathByRepo(\n            result.data.results,\n            repository,\n          );\n\n          const path = `v3/plugin/ansible/content/${basePath}/collections/index/`;\n          this.patch(\n            `${namespace}/${name}`,\n            {\n              deprecated: !is_deprecated,\n            },\n            path,\n          )\n            .then((res) => resolve(res))\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post('v3/artifacts/collections/', formData, config);\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      })\n        .then((result) => {\n          const basePath = findDistroBasePathByRepo(\n            result.data.results,\n            repository,\n          );\n\n          this.http\n            .get(\n              `v3/plugin/ansible/content/${basePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n            )\n            .then((result) => {\n              resolve(result.data['download_url']);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  async deleteCollectionVersion(collection: CollectionVersionSearch) {\n    const distros = await AnsibleDistributionAPI.list({\n      repository: collection.repository.pulp_href,\n    });\n\n    const distroBasePath = findDistroBasePathByRepo(\n      distros.data.results,\n      collection.repository,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${collection.collection_version.namespace}/${collection.collection_version.name}/versions/${collection.collection_version.version}/`,\n    );\n  }\n\n  async deleteCollection(collection: CollectionVersionSearch) {\n    const distros = await AnsibleDistributionAPI.list({\n      repository: collection.repository.pulp_href,\n    });\n\n    const distroBasePath = findDistroBasePathByRepo(\n      distros.data.results,\n      collection.repository,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${collection.collection_version.namespace}/${collection.collection_version.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getSignatures(distroBasePath, namespace, name, version) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import axios from 'axios';\nimport { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  move(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  copy(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      `${this.apiPath}?dependency=${namespace}.${collection}`,\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // list(params?)\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { RemoteType } from '.';\nimport { HubAPI } from './hub';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { t } from '@lingui/macro';\nimport {\n  AnsibleDistributionAPI,\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository?: CollectionVersionSearch['repository'];\n  repository_name?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  async sign({ repository, repository_name: name, ...args }: SignProps) {\n    if (!repository && name) {\n      repository = (await AnsibleRepositoryAPI.list({ name }))?.data\n        ?.results?.[0];\n\n      if (!repository) {\n        return Promise.reject({\n          response: { status: t`Failed to find repository ${name}` },\n        });\n      }\n    }\n\n    const distribution = (\n      await AnsibleDistributionAPI.list({\n        repository: repository?.pulp_href,\n      })\n    )?.data?.results?.[0];\n\n    if (!distribution) {\n      const name = repository.name;\n      return Promise.reject({\n        response: {\n          status: t`Failed to find a distribution for repository ${name}`,\n        },\n      });\n    }\n\n    const updatedData = {\n      distro_base_path: distribution.base_path,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from remote.ts\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(uuid, params?) {\n    return this.list(params, this.getPath(null) + uuid + '/versions/');\n  }\n\n  // delete(uuid)\n\n  sync(id, body = {}) {\n    return this.http.post(this.apiPath + id + '/sync/', body);\n  }\n\n  revert(id, version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(id, collection_version_hrefs) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      add_content_units: collection_version_hrefs,\n    });\n  }\n\n  removeContent(id, collection_version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n\n  list(params?) {\n    return super.list(params, this.apiPath);\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/copy_collection_version/`,\n      params,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/move_collection_version/`,\n      params,\n    );\n  }\n\n  modify(\n    pulp_id: string,\n    add_content_units: string[],\n    remove_content_units: string[],\n    base_version: string,\n  ) {\n    const params = {\n      add_content_units,\n      remove_content_units,\n      base_version,\n    };\n\n    return this.http.post(this.apiPath + `${pulp_id}/modify/`, params);\n  }\n}\n\nexport const Repositories = new API();\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top: '80px',\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distributions) => {\n    if (distributions?.find?.(({ name }) => name === repository.name)) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n      ? 'approved'\n      : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n            onLoad={onDistributionsLoad}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <div data-cy='pipeline'>\n          <Select\n            variant='single'\n            isOpen={selectOpen}\n            onToggle={() => setSelectOpen(!selectOpen)}\n            onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n            selections={selectOptions[selectedPipeline]}\n          >\n            {Object.entries(selectOptions).map(([k, v]) => (\n              <SelectOption key={k} value={v} />\n            ))}\n          </Select>\n        </div>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          <div data-cy='remote'>\n            {remotes ? (\n              <APISearchTypeAhead\n                loadResults={loadRemotes}\n                onClear={() =>\n                  updateRepository({ ...repository, remote: null })\n                }\n                onSelect={(_event, value) =>\n                  updateRepository({\n                    ...repository,\n                    remote: remotes.find(({ name }) => name === value)\n                      ?.pulp_href,\n                  })\n                }\n                placeholderText={t`Select a remote`}\n                results={remotes}\n                selections={\n                  selectedRemote\n                    ? [\n                        {\n                          name: selectedRemote.name,\n                          id: selectedRemote.pulp_href,\n                        },\n                      ]\n                    : []\n                }\n              />\n            ) : null}\n            {remotesError ? (\n              <span\n                style={{\n                  color: 'var(--pf-global--danger-color--200)',\n                }}\n              >\n                {t`Failed to load remotes: ${remotesError}`}\n              </span>\n            ) : null}\n            {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n          </div>\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector || null}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  className,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace?.company || collection_version.namespace;\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          {featureFlags.display_repositories ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Badge isRead>\n                  <Link\n                    to={formatPath(Paths.ansibleRepositoryDetail, {\n                      name: repository.name,\n                    })}\n                  >\n                    {repository.name === Constants.CERTIFIED_REPO\n                      ? t`Certified`\n                      : repository.name}\n                  </Link>\n                </Badge>\n              </Text>\n            </TextContent>\n          ) : null}\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import * as moment from 'moment';\nimport * as React from 'react';\nimport { Tooltip } from 'src/components';\n\ninterface IProps {\n  date: string;\n}\n\nexport const DateComponent = (props: IProps) => {\n  const { date } = props;\n\n  return (\n    date && (\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one.`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  DeleteCollectionModal,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { DeleteCollectionUtils, errorMessage } from 'src/utilities';\nimport {\n  canSignNamespace,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\nimport './header.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  collectionsCount: number;\n  collection: CollectionVersionSearch;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalCollections: CollectionVersionSearch[];\n  modalPagination: {\n    page: number;\n    page_size: number;\n  };\n  deleteCollection: CollectionVersionSearch;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n  namespace: NamespaceType;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalCollections: null,\n      modalPagination: {\n        page: 1,\n        page_size: Constants.DEFAULT_PAGINATION_OPTIONS[0],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n      namespace: null,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n\n    this.setState({ modalCollections: this.props.collections });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collections !== prevProps.collections) {\n      this.setState({ modalCollections: this.props.collections });\n    }\n  }\n\n  render() {\n    const {\n      collections,\n      collectionsCount,\n      collection,\n      content,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalCollections,\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.collection_version.pulp_created;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context.featureFlags;\n\n    const signedString = () => {\n      if (!display_signatures) {\n        return '';\n      }\n\n      return collection.is_signed ? t`(signed)` : t`(unsigned)`;\n    };\n\n    const isLatestVersion = (v) => {\n      return `${moment(v.pulp_created).fromNow()} ${signedString()}\n      ${\n        v.version === collections[0].collection_version.version\n          ? t`(latest)`\n          : ''\n      }`;\n    };\n\n    const { collection_version, namespace_metadata: namespace } = collection;\n    const { name: collectionName, version } = collection_version;\n\n    const company = namespace?.company || collection_version.namespace;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version)}\n        >\n          {t`Delete version ${version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${version}`}\n        </DropdownItem>\n      ),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.deprecate(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={modalPagination}\n                updateParams={this.updatePaginationParams}\n                count={collectionsCount}\n              />\n            </div>\n            {modalCollections ? (\n              modalCollections.map(({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {t`updated ${isLatestVersion(collection_version)}`}\n                </ListItem>\n              ))\n            ) : (\n              <Spinner />\n            )}\n          </List>\n          <Pagination\n            params={modalPagination}\n            updateParams={this.updatePaginationParams}\n            count={collectionsCount}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection_version.name}\n          logo={\n            namespace?.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector selectedRepo={collection.repository.name} />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    collections.length < collectionsCount\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {collections\n                    .map((c) => c.collection_version)\n                    .map((v) => (\n                      <SelectOption\n                        key={v.version}\n                        value={`v${v.version}`}\n                        onClick={() =>\n                          updateParams(\n                            ParamHelper.setParam(\n                              params,\n                              'version',\n                              v.version.toString(),\n                            ),\n                          )\n                        }\n                      >\n                        <Trans>\n                          {v.version} updated {isLatestVersion(v)}\n                        </Trans>\n                      </SelectOption>\n                    ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              {display_signatures ? (\n                <SignatureBadge\n                  isCompact\n                  signState={collection.is_signed ? 'signed' : 'unsigned'}\n                />\n              ) : null}\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'distributions',\n        title: t`Distributions`,\n        link: formatPath(\n          Paths.collectionDistributionsByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    const modalPagination = {\n      page,\n      page_size,\n    };\n\n    this.setState({ modalPagination, modalCollections: null });\n\n    const { namespace, name } = this.props.collection.collection_version;\n    const repository = this.props.collection.repository;\n    const requestParams = {\n      ...(repository ? { repository_name: repository.name } : {}),\n      namespace,\n      name,\n    };\n\n    // loadCollections provides initial data, pagination needs extra requests\n    CollectionVersionAPI.list({\n      ...requestParams,\n      order_by: '-version',\n      ...modalPagination,\n    })\n      .then(({ data }) => data)\n      .catch(() => ({ data: [] }))\n      .then(({ data: modalCollections }) =>\n        this.setState({ modalCollections }),\n      );\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    CollectionAPI.deleteCollectionVersion(deleteCollection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.collection_version.name;\n\n        waitForTask(taskId).then(() => {\n          const topVersion = (collections || []).filter(\n            ({ collection_version }) =>\n              collection_version.version !== collectionVersion,\n          );\n\n          if (topVersion.length) {\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].collection_version.version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.queueAlert({\n              variant: 'success',\n              title: (\n                <Trans>\n                  Collection &quot;{name} v{collectionVersion}&quot; has been\n                  successfully deleted.\n                </Trans>\n              ),\n            });\n            this.setState({\n              redirect: formatPath(Paths.namespaceDetail, {\n                namespace: deleteCollection.collection_version.namespace,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport {\n  AnsibleDistributionAPI,\n  CollectionAPI,\n  CollectionVersionSearch,\n  findDistroBasePathByRepo,\n} from 'src/api';\nimport 'src/api/response-types/collection';\nimport { useContext } from 'src/loaders/app-context';\nimport { LoadingPageSpinner } from '../loading/loading-page-spinner';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      }).then((result) => {\n        const distroBasePath = findDistroBasePathByRepo(\n          result.data.results,\n          repository,\n        );\n\n        const { namespace, name, version } = collectionVersion;\n\n        CollectionAPI.getSignatures(distroBasePath, namespace, name, version)\n          .then((res) => {\n            setSignatures(res.data.signatures);\n            setIsLoading(false);\n          })\n          .catch(({ code, message }) => {\n            addAlert(code, message);\n            setIsLoading(false);\n            setShow(false);\n          });\n      });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {context.user.is_anonymous &&\n            !context.settings\n              .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                <div>\n                  <Trans>\n                    To download this collection, configure your client to\n                    connect to one of this repositories{' '}\n                    <Link\n                      to={formatPath(Paths.collectionDistributionsByRepo, {\n                        repo: repository.name,\n                        namespace: collection_version.namespace,\n                        collection: collection_version.name,\n                      })}\n                    >\n                      distributions\n                    </Link>\n                    .\n                  </Trans>\n                </div>\n                <a ref={downloadLinkRef} style={{ display: 'none' }}></a>\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out'></div>\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Repositories } from 'src/api';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const [repositories, setRepositories] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  const loadRepos = () => {\n    Repositories.list({\n      name__icontains: inputText,\n      pulp_label_select: '!hide_from_search',\n    }).then((res) => {\n      const repos = res.data.results.map(({ name }) => ({\n        id: name,\n        title: name,\n      }));\n      setRepositories(repos);\n    });\n  };\n\n  useEffect(() => {\n    if (selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  useEffect(() => {\n    setInputText(props.params['repository_name'] || '');\n  }, [props.params.repository_name]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [inputText]);\n\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures } = context.featureFlags;\n  const displayTags = ignoredParams.includes('tags') === false;\n  const displayRepos = ignoredParams.includes('repository_name') === false;\n  const displayNamespaces = ignoredParams.includes('namespace') === false;\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n      options: repositories,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'multiple' as const,\n      options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n        id: tag,\n        title: tag,\n      })),\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n              selectFilter={(selected) => {\n                setSelectedFilter(selected);\n              }}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  is_signed: t`Sign state`,\n                  tags: t`Tags`,\n                  keywords: t`Keywords`,\n                  repository_name: t`Repository`,\n                  namespace: t`Namespace`,\n                }}\n                niceValues={{\n                  is_signed: {\n                    false: t`unsigned`,\n                    true: t`signed`,\n                  },\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  collectionControls: (collection) => {\n    dropdownMenu?: React.ReactNode | null;\n    synclistSwitch?: React.ReactNode | null;\n    uploadButton?: React.ReactNode | null;\n  };\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    collectionControls,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              key={i}\n              collection={c}\n              displaySignatures={displaySignatures}\n              showNamespace\n              {...collectionControls(c)}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  displaySignatures: boolean;\n  dropdownMenu?: React.ReactNode | null;\n  showNamespace?: boolean;\n  synclistSwitch?: React.ReactNode | null;\n  uploadButton?: React.ReactNode | null;\n}\n\nexport const CollectionListItem = ({\n  collection: {\n    collection_version,\n    namespace_metadata: namespace,\n    repository,\n    is_signed,\n    is_deprecated,\n  },\n  displaySignatures,\n  dropdownMenu,\n  showNamespace,\n  synclistSwitch,\n  uploadButton,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const cells = [];\n\n  const company = namespace?.company || collection_version.namespace;\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup {...chipGroupProps()}>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      <Flex\n        direction={{ default: 'column' }}\n        alignItems={{ default: 'alignItemsFlexEnd' }}\n      >\n        <Flex\n          direction={{ default: 'column' }}\n          alignItems={{ default: 'alignItemsFlexStart' }}\n        >\n          {synclistSwitch && <FlexItem>{synclistSwitch}</FlexItem>}\n          {uploadButton || dropdownMenu ? (\n            <FlexItem>\n              {uploadButton}\n              {dropdownMenu || <span className='hidden-menu-space'></span>}\n            </FlexItem>\n          ) : null}\n          <FlexItem>\n            <div>\n              <Trans>\n                Updated <DateComponent date={collection_version.pulp_created} />\n              </Trans>\n            </div>\n            <div>v{collection_version.version}</div>\n          </FlexItem>\n        </Flex>\n        <Flex\n          direction={{ default: 'row' }}\n          alignSelf={{ default: 'alignSelfFlexStart' }}\n        >\n          {featureFlags.display_repositories ? (\n            <FlexItem>\n              <Label variant='outline'>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name}\n                </Link>\n              </Label>\n            </FlexItem>\n          ) : null}\n          {displaySignatures ? (\n            <FlexItem>\n              <SignatureBadge\n                variant='outline'\n                signState={is_signed ? 'signed' : 'unsigned'}\n              />\n            </FlexItem>\n          ) : null}\n        </Flex>\n      </Flex>\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm'></Spinner>}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    // this is called again in repositories selector, but not in approval page (the same filter is here)...\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeAheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              this.submitFilter(value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeAheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n\n    // no tags => falsy\n    // 1 tag => \"foo\"\n    // 2+ tags => [\"foo\", \"bar\"]\n    // convert all to an array\n    if (!newParams) {\n      newParams = [];\n    }\n    if (!Array.isArray(newParams)) {\n      newParams = [newParams];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy\n      hoverTip={t`Copy`}\n      clickTip={t`Copied`}\n      variant='inline-compact'\n      isCode\n    >\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { AppContext } from 'src/loaders/app-context';\nimport { mapErrorMessages } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortHeaders,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-list-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      <EmptyStateIcon icon={icon} />\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const repoStatus = collection.repository.pulp_labels?.pipeline;\n      if (repoStatus === Constants.NOTCERTIFIED) {\n        approvalStatus = t`rejected`;\n      } else if (repoStatus === Constants.NEEDSREVIEW) {\n        approvalStatus = t`waiting for approval`;\n      } else if (repoStatus === Constants.APPROVED) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { errorMessage, filterIsSet } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent, EmptyStateFilter, EmptyStateNoData } from '..';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ntype ParamsType = { page?: number; page_size?: number };\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState = null },\n  listItemActions?,\n) => React.ReactNode;\ntype RenderModals = ({ addAlert, state, setState, query }) => React.ReactNode;\nexport type SortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T, ExtraState> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  didMount?: ({ context, addAlert }) => void;\n  displayName: string;\n  errorTitle: string;\n  extraState?: ExtraState;\n  filterConfig: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: string;\n}\n\nexport const ListPage = function <T, ExtraState = Record<string, never>>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // extra code to run on mount\n  didMount,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // extra initial state\n  extraState,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n}: ListPageParams<T, ExtraState>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        unauthorised: false,\n        ...extraState,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n\n      if (didMount) {\n        didMount({\n          context: this.context,\n          addAlert: (alert) => this.addAlert(alert),\n        });\n      }\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const knownFilters = (filterConfig || []).map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        (filterConfig || []).map(({ id, title }) => [id, title]),\n      );\n\n      const niceValues = {};\n      (filterConfig || [])\n        .filter((filter) => filter['options'] && filter['options'].length > 0)\n        .forEach((item) => {\n          const obj = (niceValues[item['id']] = {});\n          item['options'].forEach((option) => {\n            obj[option.id] = option.title;\n          });\n        });\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      return (\n        <React.Fragment>\n          <AlertList\n            alerts={alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          ></AlertList>\n          <BaseHeader title={title} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={noDataDescription}\n              title={noDataTitle}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-list-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) =>\n                                this.setState({ inputText })\n                              }\n                              updateParams={updateParams}\n                              params={params}\n                              filterConfig={filterConfig}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        updateParams(p);\n                        this.setState({ inputText: '' });\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                      niceValues={niceValues}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      return (\n        <table aria-label={title} className='hub-c-table-content pf-c-table'>\n          <SortTable\n            options={{ headers: sortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: errorTitle,\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface PageWithTabsParams<T, ExtraState> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  didMount?: ({ context, addAlert }) => void;\n  displayName: string;\n  errorTitle: string;\n  extraState?: ExtraState;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: string }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n  ExtraState = Record<string, never>,\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // extra code to run on mount\n  didMount,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // extra initial state\n  extraState,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T, ExtraState>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n        ...extraState,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n\n      if (didMount) {\n        didMount({\n          context: this.context,\n          addAlert: (alert) => this.addAlert(alert),\n        });\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const tab = tabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-list-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={tabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: errorTitle,\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface PageParams<T, ExtraState> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  didMount?: ({ context, addAlert }) => void;\n  displayName: string;\n  errorTitle: string;\n  extraState?: ExtraState;\n  headerActions?: ActionType[];\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n  ExtraState = Record<string, never>,\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // extra code to run on mount\n  didMount,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // extra initial state\n  extraState,\n  // displayed after filters\n  headerActions,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T, ExtraState>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        ...extraState,\n      };\n    }\n\n    componentDidMount() {\n      // condition check after query, for object permissions\n      this.query().then((item) => {\n        const actionContext = {\n          ...this.context,\n          hasObjectPermission: (permission) =>\n            item?.my_permissions?.includes?.(permission),\n        };\n        if (!condition(actionContext)) {\n          this.setState({ loading: false, unauthorised: true });\n        }\n\n        this.setState({ alerts: this.context.alerts || [] });\n        this.context.setAlerts([]);\n\n        if (didMount) {\n          didMount({\n            context: this.context,\n            addAlert: (alert) => this.addAlert(alert),\n          });\n        }\n      });\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList\n            alerts={alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          ></AlertList>\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-list-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return Promise.resolve(null);\n      }\n\n      return new Promise((resolve, reject) => {\n        this.setState({ loading: true }, () => {\n          query({ name })\n            .then((item) => {\n              this.setState({\n                item,\n                loading: false,\n              });\n              resolve(item);\n            })\n            .catch((e) => {\n              const { status, statusText } = e.response;\n              this.setState({\n                loading: false,\n                item: null,\n              });\n              this.addAlert({\n                title: errorTitle,\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n              reject();\n            });\n        });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelGroup } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const PulpLabels = ({\n  labels,\n}: {\n  labels: { [key: string]: string };\n}) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { errorMessage } from 'src/utilities';\n\nexport const NonLazyDistributions = ({\n  distributions,\n  emptyText,\n}: {\n  distributions: { name: string }[];\n  emptyText?: string;\n}) => (\n  <>\n    {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n      (emptyText ?? '---')}\n  </>\n);\n\nexport const LazyDistributions = ({\n  emptyText,\n  onLoad,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  onLoad?: (distributions) => void;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setError(null);\n      setLoading(false);\n      onLoad?.([]);\n      return;\n    }\n\n    setDistributions([]);\n    setError(null);\n    setLoading(true);\n\n    AnsibleDistributionAPI.list({ repository: repositoryHref })\n      .then(({ data }) => {\n        setDistributions(data.results);\n        setError(null);\n        setLoading(false);\n        onLoad?.(data.results);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions([]);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n        onLoad?.([]);\n      });\n  }, [repositoryHref]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <NonLazyDistributions distributions={distributions} emptyText={emptyText} />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  onLoad,\n  remoteHref,\n}: {\n  emptyText?: string;\n  onLoad?: (repositories) => void;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setError(null);\n      setLoading(false);\n      onLoad?.([]);\n      return;\n    }\n\n    setRepositories([]);\n    setError(null);\n    setLoading(true);\n\n    AnsibleRepositoryAPI.list({ remote: remoteHref })\n      .then(({ data }) => {\n        setRepositories(data.results);\n        setError(null);\n        setLoading(false);\n        onLoad?.(data.results);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories([]);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n        onLoad?.([]);\n      });\n  }, [remoteHref]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n    </>\n  );\n};\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  }[type] || type);\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport './header.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlert,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  inputText: '',\n};\n\nexport const PublishToControllerModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState(initialState.alerts);\n  const [controllers, setControllers] = useState(initialState.controllers);\n  const [controllerCount, setControllerCount] = useState(\n    initialState.controllerCount,\n  );\n  const [controllerParams, setControllerParams] = useState(\n    initialState.controllerParams,\n  );\n  const [digest, setDigest] = useState(initialState.digest);\n  const [digestByTag, setDigestByTag] = useState(initialState.digestByTag);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [tag, setTag] = useState(initialState.tag);\n  const [tagResults, setTagResults] = useState(initialState.tagResults);\n  const [tagSelection, setTagSelection] = useState(initialState.tagSelection);\n\n  const [inputText, setInputText] = useState(initialState.inputText);\n\n  useEffect(() => {\n    const { image, isOpen } = props;\n    if (isOpen) {\n      // load on open\n      fetchData(image);\n    } else {\n      // reset on close\n      setAlerts(initialState.alerts);\n      setControllers(initialState.controllers);\n      setControllerCount(initialState.controllerCount);\n      setControllerParams(initialState.controllerParams);\n      setDigest(initialState.digest);\n      setDigestByTag(initialState.digestByTag);\n      setLoading(initialState.loading);\n      setTag(initialState.tag);\n      setTagResults(initialState.tagResults);\n      setTagSelection(initialState.tagSelection);\n\n      setInputText(initialState.inputText);\n    }\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    fetchControllers();\n  }, [controllerParams]);\n\n  function fetchControllers() {\n    return ControllerAPI.list(controllerParams)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        setControllers(controllers);\n        setControllerCount(controllerCount);\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Controllers list could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        setDigestByTag(digestByTag);\n        setTagResults(tagResults);\n\n        return { digestByTag, tags };\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Tags could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchData(image) {\n    const controllers = fetchControllers();\n    const tagsPromises = fetchTags(image).then(({ tags, digestByTag }) => {\n      // tags and digestByTag must be passed this way from fetchTags, otherwise, closure\n      // will see old value of both variables set in fetchTags\n      // and additionaly, tags state is not needed at all because of that\n\n      // preselect tag if present\n      let { digest, tag } = props;\n      tag ||= tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= digestByTag[tag]; // set digest by tag unless in props\n\n      setDigest(digest);\n      setTag(tag);\n      setTagSelection(tag ? [{ id: tag, name: tag }] : []);\n    });\n\n    Promise.all([controllers, tagsPromises]).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function renderControllers() {\n    const { image, isOpen } = props;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  const { image, isOpen, onClose } = props;\n\n  // redirects to ./2.x (latest)\n  const docsLink =\n    'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/';\n\n  const noData =\n    controllers?.length === 0 &&\n    !filterIsSet(controllerParams, ['host__icontains']);\n\n  const notListedMessage = (\n    <>\n      {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n      {docsLink && (\n        <>\n          <a href={docsLink} target='_blank' rel='noreferrer'>\n            {t`Learn more`}\n          </a>{' '}\n          <ExternalLinkAltIcon />\n        </>\n      )}\n    </>\n  );\n\n  const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n  const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n  return (\n    <Modal\n      variant='large'\n      title={t`Use in Controller`}\n      isOpen={isOpen}\n      onClose={onClose}\n      actions={[\n        <Button key='close' variant='primary' onClick={onClose}>\n          {t`Close`}\n        </Button>,\n      ]}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      ></AlertList>\n      {loading && (\n        <div style={{ padding: '16px' }}>\n          <LoadingPageSpinner />\n        </div>\n      )}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          title={t`No Controllers available`}\n          description={notListedMessage}\n        />\n      ) : null}\n\n      {isOpen && !loading && !noData && controllers && (\n        <>\n          <DescriptionList isHorizontal>\n            <DescriptionListGroup>\n              <DescriptionListTerm>\n                {t`Execution Environment`}\n              </DescriptionListTerm>\n              <DescriptionListDescription>{image}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <Flex>\n                  <FlexItem>\n                    <APISearchTypeAhead\n                      loadResults={(name) => fetchTags(image, name)}\n                      onClear={() => {\n                        setTag(null);\n                        setTagSelection([]);\n                      }}\n                      onSelect={(event, value) => {\n                        const digest = digestByTag[value.toString()];\n                        setTag(digest && value.toString());\n                        setTagSelection([{ id: value, name: value }]);\n                        setDigest(digest);\n                      }}\n                      placeholderText={t`Select a tag`}\n                      results={tagResults}\n                      selections={tagSelection}\n                      toggleIcon={<TagIcon />}\n                    />\n                  </FlexItem>\n                  <FlexItem></FlexItem>\n                </Flex>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {digest && (\n              <>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    <ShaLabel grey long digest={digest} />\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              </>\n            )}\n          </DescriptionList>\n          <Spacer />\n          <Trans>\n            Click on the Controller URL that you want to use the above execution\n            environment in, and it will launch that Controller&apos;s console.\n            Log in (if necessary) and follow the steps to complete the\n            configuration.\n          </Trans>\n          <br />\n          {!unsafeLinksSupported && (\n            <Trans>\n              <b>Note:</b> The following links may be blocked by your browser.\n              Copy and paste the external link manually.\n            </Trans>\n          )}\n          <Spacer />\n\n          <Flex>\n            <FlexItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => setInputText(text)}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                params={controllerParams}\n                filterConfig={[\n                  {\n                    id: 'host__icontains',\n                    title: t`Controller name`,\n                  },\n                ]}\n              />\n            </FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n            <FlexItem>\n              <Pagination\n                params={controllerParams}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                count={controllerCount}\n                isTop\n              />\n            </FlexItem>\n          </Flex>\n\n          <AppliedFilters\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            params={controllerParams}\n            ignoredParams={['page_size', 'page']}\n            niceNames={{\n              host__icontains: t`Controller name`,\n            }}\n          />\n\n          <Spacer />\n          {renderControllers()}\n          <Spacer />\n\n          <Pagination\n            params={controllerParams}\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            count={controllerCount}\n            isTop\n          />\n          <Spacer />\n          <div>{notListedMessage}</div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import { dom, parse } from 'antsibull-docs';\nimport * as React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderPluginLink: (\n    pluginName: string,\n    pluginType: string,\n    text: React.ReactNode | undefined,\n  ) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  private formatPartError(part: dom.ErrorPart): React.ReactNode {\n    return <span className='error'>ERROR while parsing: {part.message}</span>;\n  }\n\n  private formatPartBold(part: dom.BoldPart): React.ReactNode {\n    return <b>{part.text}</b>;\n  }\n\n  private formatPartCode(part: dom.CodePart): React.ReactNode {\n    return <span className='inline-code'>{part.text}</span>;\n  }\n\n  private formatPartHorizontalLine(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    part: dom.HorizontalLinePart,\n  ): React.ReactNode {\n    return <hr />;\n  }\n\n  private formatPartItalic(part: dom.ItalicPart): React.ReactNode {\n    return <i>{part.text}</i>;\n  }\n\n  private formatPartLink(part: dom.LinkPart): React.ReactNode {\n    return this.props.renderDocLink(part.text, part.url);\n  }\n\n  private formatPartModule(part: dom.ModulePart): React.ReactNode {\n    return this.props.renderPluginLink(part.fqcn, 'module', undefined);\n  }\n\n  private formatPartRstRef(part: dom.RSTRefPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartURL(part: dom.URLPart): React.ReactNode {\n    return (\n      <a href={part.url} target='_blank' rel='noreferrer'>\n        {part.url}\n      </a>\n    );\n  }\n\n  private formatPartText(part: dom.TextPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartEnvVariable(part: dom.EnvVariablePart): React.ReactNode {\n    return <span className='inline-code'>{part.name}</span>;\n  }\n\n  private formatPartOptionNameReturnValue(\n    part: dom.OptionNamePart | dom.ReturnValuePart,\n  ): React.ReactNode {\n    const content =\n      part.value === undefined ? (\n        <span className='inline-code'>\n          <b>{part.name}</b>\n        </span>\n      ) : (\n        <span className='inline-code'>\n          {part.name}={part.value}\n        </span>\n      );\n    if (!part.plugin) {\n      return content;\n    }\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      content,\n    );\n  }\n\n  private formatPartOptionValue(part: dom.OptionValuePart): React.ReactNode {\n    return <span className='inline-code'>{part.value}</span>;\n  }\n\n  private formatPartPlugin(part: dom.PluginPart): React.ReactNode {\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      undefined,\n    );\n  }\n\n  private formatPart(part: dom.Part): React.ReactNode {\n    switch (part.type) {\n      case dom.PartType.ERROR:\n        return this.formatPartError(part as dom.ErrorPart);\n      case dom.PartType.BOLD:\n        return this.formatPartBold(part as dom.BoldPart);\n      case dom.PartType.CODE:\n        return this.formatPartCode(part as dom.CodePart);\n      case dom.PartType.HORIZONTAL_LINE:\n        return this.formatPartHorizontalLine(part as dom.HorizontalLinePart);\n      case dom.PartType.ITALIC:\n        return this.formatPartItalic(part as dom.ItalicPart);\n      case dom.PartType.LINK:\n        return this.formatPartLink(part as dom.LinkPart);\n      case dom.PartType.MODULE:\n        return this.formatPartModule(part as dom.ModulePart);\n      case dom.PartType.RST_REF:\n        return this.formatPartRstRef(part as dom.RSTRefPart);\n      case dom.PartType.URL:\n        return this.formatPartURL(part as dom.URLPart);\n      case dom.PartType.TEXT:\n        return this.formatPartText(part as dom.TextPart);\n      case dom.PartType.ENV_VARIABLE:\n        return this.formatPartEnvVariable(part as dom.EnvVariablePart);\n      case dom.PartType.OPTION_NAME:\n        return this.formatPartOptionNameReturnValue(part as dom.OptionNamePart);\n      case dom.PartType.OPTION_VALUE:\n        return this.formatPartOptionValue(part as dom.OptionValuePart);\n      case dom.PartType.PLUGIN:\n        return this.formatPartPlugin(part as dom.PluginPart);\n      case dom.PartType.RETURN_VALUE:\n        return this.formatPartOptionNameReturnValue(\n          part as dom.ReturnValuePart,\n        );\n    }\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    // TODO: pass current plugin's type and name, and (if role) the current entrypoint as well\n    const parsed = parse(text);\n\n    // Special case: result is a single paragraph consisting of a single text part\n    if (\n      parsed.length === 1 &&\n      parsed[0].length === 1 &&\n      parsed[0][0].type === dom.PartType.TEXT\n    ) {\n      return <span>{parsed[0][0].text}</span>;\n    }\n\n    const fragments = [];\n    for (const paragraph of parsed) {\n      for (const part of paragraph) {\n        fragments.push(this.formatPart(part));\n      }\n    }\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, _pluginName: string) {\n    const isDeprecated = doc.deprecated;\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(\n            requiredFields,\n            disabledFields,\n            <ActionGroup key='actions'>\n              {save}\n              {cancel}\n            </ActionGroup>,\n          )}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields, extra?) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  selectedRepo: string;\n}\n\nexport const RepoSelector = ({ selectedRepo }: IProps) => {\n  const { featureFlags } = useContext();\n\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!featureFlags.display_repositories) {\n    return null;\n  }\n\n  const repoName =\n    {\n      community: t`Community`,\n      published: t`Published`,\n      rejected: t`Rejected`,\n      'rh-certified': t`Red Hat Certified`,\n      staging: t`Staging`,\n      validated: t`Validated`,\n    }[selectedRepo] || selectedRepo;\n\n  return (\n    <div className='breadcrumb-container'>\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText style={{ paddingLeft: 0 }} variant='plain'>\n              {t`Repository`}\n            </InputGroupText>\n            <InputGroupText\n              variant='plain'\n              style={{\n                backgroundColor: 'var(--pf-global--disabled-color--300)',\n                color: 'var(--pf-global--Color--100)',\n                height: '36px',\n              }}\n            >\n              {repoName}\n            </InputGroupText>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  TextInputTypes,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport { APISearchTypeAhead, AlertType, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n  } = props;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <>\n              {(collections as CollectionVersionSearch[]).length === 1 ? (\n                <Trans>\n                  Deleting{' '}\n                  <b>\n                    {deleteCollection.collection_version.name} v\n                    {collectionVersion}\n                  </b>{' '}\n                  and its data will be lost and this will cause the entire\n                  collection to be deleted.\n                </Trans>\n              ) : (\n                <Trans>\n                  Deleting{' '}\n                  <b>\n                    {deleteCollection.collection_version.name} v\n                    {collectionVersion}\n                  </b>{' '}\n                  and its data will be lost.\n                </Trans>\n              )}\n            </>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b> and its\n              data will be lost.\n            </Trans>\n          )}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\nimport { DateComponent, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${role.github_user} logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          ></Logo>\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  DropdownItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo, StatefulDropdown } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n  openModal: (namespace) => void;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        ></Logo>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content' size={10}>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    const { ai_deny_index } = this.context.featureFlags;\n    const summary_fields = namespace.summary_fields;\n    const userOwnsLegacyNamespace = summary_fields?.owners?.filter(\n      (n) => n.username == this.context.user.username,\n    ).length;\n\n    const showWisdom =\n      ai_deny_index &&\n      (this.context.user.is_superuser || userOwnsLegacyNamespace);\n\n    const dropdownItems = [];\n\n    dropdownItems.push(\n      <DropdownItem onClick={() => this.props.openModal(namespace)}>\n        {t`Ansible Lightspeed settings`}\n      </DropdownItem>,\n    );\n\n    if (showWisdom) {\n      cells.push(\n        <DataListCell key='menu' alignRight={true}>\n          <div style={{ float: 'right' }}>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        </DataListCell>,\n      );\n    }\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n\nLegacyNamespaceListItem.contextType = AppContext;\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Ansible\n        Lightspeed?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following legacy namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Ansible Lightspeed?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Ansible Lightspeed information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Ansible Lightspeed`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Ansible Lightspeed`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Additional details`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Ansible Lightspeed settings`\n          : isInDenyIndex\n          ? t`Opt in to Ansible Lightspeed`\n          : t`Opt out of Ansible Lightspeed`\n      }\n      variant='small'\n      titleIconVariant={isInDenyIndex ? null : 'warning'}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            <Trans>\n              <p>\n                Red Hat is working on exciting new Ansible content development\n                capabilities within the context of{' '}\n                <a\n                  href='https://www.redhat.com/en/engage/project-wisdom'\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  Ansible Lightspeed\n                </a>{' '}\n                <ExternalLinkAltIcon /> to help other automators build Ansible\n                content.\n              </p>\n            </Trans>\n            <br />\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n          <br />\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          {props.reference}\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  CollectionVersion,\n  CollectionVersionAPI,\n  Repositories,\n  SigningServiceAPI,\n} from 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  SortTable,\n  closeAlert,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTaskUrl,\n} from 'src/utilities';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersion;\n  addAlert: (alert) => void;\n  allRepositories: Repository[];\n  finishAction: () => void;\n  stagingRepoNames: string[];\n  rejectedRepoName: string;\n}\n\nexport const ApproveModal = (props: IProps) => {\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<Repository[]>([]);\n  const [itemsCount, setItemsCount] = useState(0);\n  const [alerts, setAlerts] = useState([]);\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [fixedRepos, setFixedRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const context = useContext();\n\n  function approve() {\n    let error = '';\n\n    async function approveAsync() {\n      setLoading(true);\n\n      let reapprove = false;\n\n      let originRepoName = props.collectionVersion.repository_list.find(\n        (repo) =>\n          props.stagingRepoNames.includes(repo) ||\n          repo == props.rejectedRepoName,\n      );\n\n      // origin repo is not staging or rejected, so this is reapprove process, user can add collection to approved repos\n      if (!originRepoName) {\n        reapprove = true;\n        originRepoName = fixedRepos[0];\n      }\n\n      const reposToApprove = [];\n\n      // fill repos that are actualy needed to approve, some of them may already contain the collection, those dont need to be approved again\n      // this handles the possible inconsistent state\n      selectedRepos.forEach((repo) => {\n        if (!fixedRepos.includes(repo)) {\n          reposToApprove.push(repo);\n        }\n      });\n\n      const repositoriesRef = props.allRepositories\n        .filter((repo) => reposToApprove.includes(repo.name))\n        .map((repo) => repo.pulp_href);\n\n      error = t`Repository name ${originRepoName} not found.`;\n      const repoData = await Repositories.getRepository({\n        name: originRepoName,\n      });\n      if (repoData.data.results.length == 0) {\n        throw new Error();\n      }\n      error = '';\n\n      const pulp_id = parsePulpIDFromURL(repoData.data.results[0].pulp_href);\n\n      error = t`Collection with id ${props.collectionVersion.id} not found.`;\n      const collectionData = await CollectionVersionAPI.get(\n        props.collectionVersion.id,\n      );\n      error = '';\n\n      const autosign = context.settings.GALAXY_AUTO_SIGN_COLLECTIONS;\n      let signingService_href = null;\n\n      if (autosign) {\n        const signingServiceName =\n          context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n        });\n        if (signingList.data.results.length > 0) {\n          signingService_href = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      let promiseCopyOrMove = null;\n      if (reapprove) {\n        // reapprove takes first\n        promiseCopyOrMove = Repositories.copyCollectionVersion(\n          pulp_id,\n          [collectionData.data.pulp_href],\n          repositoriesRef,\n          signingService_href,\n        );\n      } else {\n        promiseCopyOrMove = Repositories.moveCollectionVersion(\n          pulp_id,\n          [collectionData.data.pulp_href],\n          repositoriesRef,\n          signingService_href,\n        );\n      }\n\n      const task = await promiseCopyOrMove;\n      await waitForTaskUrl(task['data'].task);\n\n      setLoading(false);\n      props.finishAction();\n      props.addAlert({\n        title: t`Certification status for collection \"${props.collectionVersion.namespace} ${props.collectionVersion.name} v${props.collectionVersion.version}\" has been successfully updated.`,\n        variant: 'success',\n        description: '',\n      });\n    }\n\n    approveAsync().catch(() => {\n      setLoading(false);\n\n      addAlert({\n        title: t`Failed to approve collection.`,\n        variant: 'danger',\n        description: error,\n      });\n    });\n  }\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function changeSelection(name) {\n    if (fixedRepos.includes(name)) {\n      return;\n    }\n\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      setSelectedRepos(selectedRepos.filter((element) => element != name));\n    } else {\n      // add\n      setSelectedRepos([...selectedRepos, name]);\n    }\n  }\n\n  function loadRepos() {\n    // modify params\n    const par = { ...params };\n    par['pulp_label_select'] = 'pipeline=approved';\n    par['ordering'] = par['sort'];\n    delete par['sort'];\n    setLoading(true);\n\n    Repositories.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  function renderLabels() {\n    const labels = (\n      <>\n        <LabelGroup>\n          {selectedRepos.map((name) => {\n            let label = null;\n            if (fixedRepos.includes(name)) {\n              label = <Label>{name}</Label>;\n            } else {\n              label = (\n                <Label onClose={() => changeSelection(name)}>{name}</Label>\n              );\n            }\n            return <>{label} </>;\n          })}\n        </LabelGroup>\n      </>\n    );\n\n    return (\n      <>\n        <Flex>\n          <FlexItem>\n            <b>{t`Selected`}</b>\n          </FlexItem>\n          <FlexItem>{labels}</FlexItem>\n        </Flex>\n      </>\n    );\n  }\n\n  useEffect(() => {\n    loadRepos();\n  }, [params]);\n\n  useEffect(() => {\n    const fixedReposLocal = [];\n    const selectedReposLocal = [];\n\n    // check for approval repos that are already in collection and select them in UI\n    // this is handling of situation when collection is in inconsistent state\n    props.collectionVersion.repository_list.forEach((repo) => {\n      const count = props.allRepositories.filter((r) => r.name == repo).length;\n      if (count > 0) {\n        fixedReposLocal.push(repo);\n        selectedReposLocal.push(repo);\n      }\n    });\n\n    setSelectedRepos(selectedReposLocal);\n    setFixedRepos(fixedReposLocal);\n  }, []);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectAll() {\n      setSelectedRepos(props.allRepositories.map((a) => a.name));\n      setIsSelectorChecked(true);\n    }\n\n    function selectPage() {\n      const newRepos = [...selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (!selectedRepos.includes(repo.name)) {\n          newRepos.push(repo.name);\n        }\n      });\n\n      setSelectedRepos(newRepos);\n      setIsSelectorChecked(true);\n    }\n\n    function deselectAll() {\n      setSelectedRepos(fixedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function deselectPage() {\n      const newSelectedRepos = selectedRepos.filter(\n        (repo) =>\n          fixedRepos.includes(repo) ||\n          !repositoryList.find((repo2) => repo2.name == repo),\n      );\n      setSelectedRepos(newSelectedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function onToggleCheckbox() {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={selectAll}\n        key='select-all'\n      >{t`Select all (${props.allRepositories.length} items)`}</DropdownItem>,\n      <DropdownSeparator key='separator' />,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${props.allRepositories.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    if (!props.collectionVersion) {\n      return;\n    }\n\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <CheckboxRow\n                rowIndex={i}\n                key={repo.name}\n                isSelected={selectedRepos.includes(repo.name)}\n                onSelect={() => {\n                  changeSelection(repo.name);\n                }}\n                isDisabled={fixedRepos.includes(repo.name)}\n                data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n              >\n                <td>\n                  <div>{repo.name}</div>\n                  <div>{repo.description}</div>\n                </td>\n              </CheckboxRow>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={approve}\n            variant='primary'\n            isDisabled={\n              selectedRepos.length - fixedRepos.length <= 0 || loading\n            }\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          {renderLabels()}\n          <div className='toolbar hub-toolbar'>\n            <Toolbar>\n              <ToolbarGroup>\n                <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n                <ToolbarItem>\n                  <CompoundFilter\n                    inputText={inputText}\n                    onChange={(text) => {\n                      setInputText(text);\n                    }}\n                    updateParams={(p) => setParams(p)}\n                    params={params}\n                    filterConfig={[\n                      {\n                        id: 'name__icontains',\n                        title: t`Repository`,\n                      },\n                    ]}\n                  />\n                </ToolbarItem>\n              </ToolbarGroup>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort']}\n              niceNames={{\n                name__icontains: t`Name`,\n              }}\n            />\n          </div>\n\n          {loading ? <Spinner /> : renderTable()}\n\n          <div className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n            />\n          </div>\n        </section>\n\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { defineMessage, t } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static APPROVED = 'approved';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': t`Manage ansible repositories.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': t`Manage collection remotes.`,\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nconst language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: '/', component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import * as React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\", \"/beta/\" or \"/preview/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/preview/', '/')\n          .replace('/beta/', '/')\n          .replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n  url = url.replaceAll('//', '/');\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  landingPage = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: formatPath(Paths[NAMESPACE_TERM]),\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoURL(distribution_base_path, view_published = false) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  // repo/distro \"published\" is special; not related to repo pipeline type\n  if (distribution_base_path === 'published' && view_published === false) {\n    return `${host}${API_BASE_PATH}`;\n  }\n\n  return `${host}${API_BASE_PATH}content/${distribution_base_path}/`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superadmin;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <Link\n          to={formatPath(Paths.taskDetail, {\n            task: parsePulpIDFromURL(task?.task || task),\n          })}\n        >\n          detail page{' '}\n        </Link>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from 'src/utilities';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  const { status, statusText } = e.response;\n  console.log(typeof e.response.data);\n\n  let message = '';\n  const err_detail = mapErrorMessages(e);\n  for (const msg in err_detail) {\n    message = message + err_detail[msg] + ' ';\n  }\n\n  let description;\n\n  if (message !== '') {\n    description = errorMessage(status, statusText, message);\n  } else {\n    description = errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description: description,\n  });\n  callback();\n};\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.collection_version.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { t } from '@lingui/macro';\nimport { Repositories } from 'src/api/repositories';\nimport { CollectionVersionSearch } from 'src/api/response-types/collection';\nimport { Repository } from 'src/api/response-types/repositories';\nimport { waitForTaskUrl } from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\n\nexport class RepositoriesUtils {\n  public static listApproved(): Promise<Repository[]> {\n    async function getAll() {\n      let list = [];\n\n      let page = 0;\n      const pageSize = 100;\n      // watchdog, in case something terrible happened, loop maximum of 10 times. I hope 1000 repos limit is enough\n      // otherwise, doing more than 10 API calls is not acceptable either\n      for (let i = 0; i < 10; i++) {\n        const result = await Repositories.http.get(\n          `${\n            Repositories.apiPath\n          }?offset=${page}&limit=${pageSize}&pulp_label_select=${encodeURIComponent(\n            'pipeline=approved',\n          )}`,\n        );\n\n        list = list.concat(result.data.results);\n        if (list.length >= result.data.count) {\n          return list;\n        }\n\n        page += pageSize;\n      }\n    }\n\n    return getAll();\n  }\n\n  public static async deleteOrAddCollection(\n    repoName,\n    collectionVersion_pulp_href,\n    add,\n  ) {\n    let data = await Repositories.getRepository({ name: repoName });\n\n    if (data.data.results.length == 0) {\n      return Promise.reject({ error: t`Repository ${repoName} not found.` });\n    }\n\n    const repo = data.data.results[0];\n    const pulp_id = parsePulpIDFromURL(repo.pulp_href);\n\n    const addList = [];\n    const removeList = [];\n\n    if (add) {\n      addList.push(collectionVersion_pulp_href);\n    } else {\n      removeList.push(collectionVersion_pulp_href);\n    }\n\n    data = await Repositories.modify(\n      pulp_id,\n      addList,\n      removeList,\n      repo.latest_version_href,\n    );\n\n    data = await waitForTaskUrl(data.data['task']);\n  }\n\n  public static async deleteCollection(repoName, collectionVersion_pulp_href) {\n    return RepositoriesUtils.deleteOrAddCollection(\n      repoName,\n      collectionVersion_pulp_href,\n      false,\n    );\n  }\n\n  public static async addCollection(repoName, collectionVersion_pulp_href) {\n    return RepositoriesUtils.deleteOrAddCollection(\n      repoName,\n      collectionVersion_pulp_href,\n      true,\n    );\n  }\n\n  public static pushToOrFilterOutCollections(\n    selectedCollection: CollectionVersionSearch,\n    collections: CollectionVersionSearch[],\n  ): CollectionVersionSearch[] {\n    // check if collection is already selected\n    const selectedItem = collections.find(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href === selectedCollection.collection_version.pulp_href &&\n        repository.pulp_href === selectedCollection.repository.pulp_href,\n    );\n\n    // if collection is not selected, add it to selected items\n    if (!selectedItem) {\n      return [...collections, selectedCollection];\n    }\n\n    // unselect collection\n    return collections.filter(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href !== selectedCollection.collection_version.pulp_href ||\n        repository.pulp_href !== selectedCollection.repository.pulp_href,\n    );\n  }\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","findDistroBasePathByRepo","distributions","repository","length","name","distro","find","base_path","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_HubAPI","API","_deleteCollection","_deleteCollectionVersion","_len","args","Array","_key","getUIPath","repo","path","_get","_getPrototypeOf","prototype","response","distributionPath","result","meta","count","collection","_this2","_collection$collectio","collection_version","namespace","is_deprecated","reject","AnsibleDistributionAPI","list","pulp_href","basePath","results","deprecated","res","err","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","version","_this3","distros","distroBasePath","sent","_callee2","_context2","_x2","undefined","NamespaceAPI","PulpStatus","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","source_base_path","destination_base_path","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","RoleAPI","_PulpAPI","for_object_type","newParams","PULP_API_BASE_PATH","permissionId","PulpAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","clearSetFieldsFromRequest","write_only_fields","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","_sign","_ref","_yield$AnsibleDistrib","_yield$AnsibleDistrib2","_yield$AnsibleDistrib3","_repository","_yield$AnsibleReposit","_yield$AnsibleReposit2","_yield$AnsibleReposit3","distribution","_name","updatedData","repository_name","_objectWithoutProperties","_excluded","AnsibleRepositoryAPI","t1","t0","t2","status","i18n","t4","t3","t5","distro_base_path","SigningServiceAPI","CertificateUploadAPI","signed_collection","AnsibleRemoteAPI","uuid","body","version_href","base_version","collection_version_hrefs","add_content_units","collection_version_href","remove_content_units","serviceName","containerId","pulp_type","signServicePath","postObj","manifest_signing_service","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","removePath","addPath","changedParams","useOrdering","Repositories","pulp_id","collection_versions","destination_repositories","signing_service","APISearchTypeAhead","_React$Component","props","loadResults","onClear","evt","textInput","target","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","React","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","chipGroupProps","_step","options","_iterator","_createForOfIteratorHelper","s","n","done","option","push","SelectOption","f","AlertList","alerts","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","alertIndex","_ref2","setAlerts","newList","_toConsumableArray","splice","closeAlertMixin","alertStateVariable","AppliedFilters","className","_ref$ignoredParams","ignoredParams","_ref$niceNames","niceNames","niceValues","updateParams","filters","chips","isArray","marginRight","ChipGroup","_extends","categoryName","v","_niceValues$key","Chip","onClick","unsetFilter","renderGroup","Button","AnsibleRepositoryForm","_repository$pulp_labe","_repository$pulp_labe2","_remotes$find","allowEditName","errorMessages","onCancel","onSave","updateRepository","requiredFields","disabledFields","toError","bool","formGroup","fieldName","label","helperText","children","FormGroup","fieldId","HelperText","content","isRequired","validated","helperTextInvalid","inputField","TextInput","onChange","stringField","type","isValid","_useState","useState","_useState2","_slicedToArray","createDistribution","setCreateDistribution","_useState3","_useState4","disabledDistribution","setDisabledDistribution","_useState5","pulp_labels","hide_from_search","_useState6","hideFromSearch","setHideFromSearch","_useState7","pipeline","_useState8","setPipeline","_useState9","_useState10","disableHideFromSearch","setDisableHideFromSearch","_useState11","_useState12","remotes","setRemotes","_useState13","_useState14","remotesError","setRemotesError","loadRemotes","name__icontains","_ref3","_e$response","statusText","errorMessage","useEffect","selectedRemote","_ref4","_useState15","_useState16","selectedPipeline","setSelectedPipeline","_useState17","_useState18","selectOpen","setSelectOpen","selectOptions","staging","toString","approved","none","pipelineHelp","Trans","components","labelsHelp","Form","numericField","LazyDistributions","emptyText","repositoryHref","onLoad","_distributions$find","Checkbox","isChecked","_e","_repository$pulp_labe3","selectPipeline","entries","_ref5","_ref6","k","preventDefault","stopPropagation","PulpLabels","labels","marginTop","private","_event","_remotes$find2","_ref7","color","Spinner","size","ActionGroup","BaseHeader","_this$props","logo","pageControls","breadcrumbs","contextSelector","versionControl","cx","Title","headingLevel","Breadcrumbs","links","Breadcrumb","link","index","BreadcrumbItem","isActive","Link","to","CardListSwitcher","_ref$size","disp","view_type","iconClasses","ThLargeIcon","ListIcon","CollectionCard","d","namespace_metadata","is_signed","displaySignatures","menu","footer","featureFlags","useContext","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","display_repositories","TextContent","Text","component","TextVariants","Badge","isRead","formatPath","Paths","SignatureBadge","isCompact","signState","values","CardBody","Tooltip","slice","CollectionNumericLabel","newline","CardFooter","CollectionContentList","toShow","summary","all","showing","keywords","_c$content_type","c","keywordMatch","match","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","val","placeholder","clickable","EmptyStateCustom","icon","ExclamationTriangleIcon","DateComponent","date","moment","format","fromNow","SignSingleCertificateModal","onSubmit","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","FormSelect","FormSelectOption","_ref$signState","_ref$isCompact","Label","CheckCircleIcon","text","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","_submitCertificate","modalPagination","page_size","modalCollections","_this$props$collectio","requestParams","order_by","_this$props$collectio2","errorAlert","isOpenSignAllModal","context","settings","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","_this$props$collectio3","isOpenSignModal","collectionVersion","deleteCollection","collections","taskId","parsePulpIDFromURL","task","topVersion","isDeletionPending","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","addAlert","include_related","prevProps","collectionsCount","activeTab","_this$state","urlKeys","latestVersion","pulp_created","_this$context$feature","display_signatures","can_upload_signatures","isLatestVersion","collectionName","Navigate","canSign","canSignNamespace","hasPermission","dropdownItems","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","issueUrl","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","isInline","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","selectedRepo","loadingVariant","Flex","FlexItem","href","rel","ExternalLinkAltIcon","StatefulDropdown","items","renderTabs","_this4","related_fields","my_permissions","active","_this$props2","pathParams","reduced","ignoreParams","tabs","LinkTabs","_this$state$versionTo","_this5","reload","_ref8","_this6","_err$response2","warning","AppContext","LoadingPageSpinner","Bullseye","width","height","DownloadSignatureGridItem","show","setShow","signatures","setSignatures","isLoading","setIsLoading","message","padding","DownloadIcon","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","downloadURL","current","click","download","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","CollectionFilter","repositories","setRepositories","inputText","setInputText","selectedFilter","setSelectedFilter","loadRepos","pulp_label_select","repos","displayTags","displayRepos","displayNamespaces","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","selectFilter","false","true","CollectionList","collectionControls","itemCount","DataList","CollectionListItem","showNamespace","EmptyStateFilter","clearAllFilters","_ref$collection","dropdownMenu","synclistSwitch","uploadButton","cells","DataListCell","alignRight","DeprecatedTag","LabelGroup","direction","default","alignItems","alignSelf","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","listDep","EmptyStateNoData","fqn","version_range","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","Sort","sort","repository_list","selectedID","currentTarget","replace","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","FilterIcon","renderInput","submitFilter","trim","SearchIcon","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","typeAheadResults","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","hoverTip","clickTip","isCode","DeleteModal","isRemove","_ref$variant","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","Details","_ref$fields","fields","overflowWrap","whiteSpace","JSON","stringify","DetailList","actionContext","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderTableRow","sortHeaders","setItems","setParams","setItemCount","loading","setLoading","_ref2$data","handleHttpError","renderModals","action","_action$modal","modal","_action$modal2","knownFilters","noData","fromEntries","button","SortTable","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","EmptyStatePrimary","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","OutlinedQuestionCircleIcon","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","followMessages","handleScrollClick","messages","renderMessage","level","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","repoStatus","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","Status","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","split","artifact","sha256","loaded","total","msg","cancel","ListPage","_class","condition","didMount","displayName","extraState","klass","location","search","unauthorised","_renderModals","forEach","obj","hasObjectPermission","navigate","Main","renderTable","withRouter","PageWithTabs","headerDetails","renderTab","tabUpdateParams","tab","routeParams","permission","_item$my_permissions","_item$my_permissions$","visible","Tabs","NotFound","Page","transformParams","render","_transformParams","_item$my_permissions2","_item$my_permissions3","NonLazyDistributions","_distributions$map","_distributions$map$ca","_distributions$map$ca2","setDistributions","setError","errorElement","ExclamationCircleIcon","LazyRepositories","_repositories$map","remoteHref","_ref$active","LoadingPageWithHeader","Skeleton","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","editing","TextArea","ReactMarkdown","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","NamespaceForm","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","AccessTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","sortBy","renderGroupRow","_this$props3","urlPrefix","ListItemActions","kebabItems","_this$props4","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","_this7","_this$props5","pulpObjectType","selectRolesMessage","_this$props$showGroup","_this$props$showGroup2","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","addGroup","_group$object_roles","_this8","_this$props$showRoleS","addRole","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","PartnerHeader","setSelected","_this$context","model_permissions","showUserManagement","userManagementFilter","allPermissions","categories","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","typeAheadAriaLabel","_model_permissions$pe3","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","_step2","_iterator2","ret","contains","part","renderDocLink","renderPluginLink","fqcn","dom","formatPartError","formatPartBold","formatPartCode","formatPartHorizontalLine","formatPartItalic","formatPartLink","formatPartModule","formatPartRstRef","formatPartURL","formatPartText","formatPartEnvVariable","formatPartOptionNameReturnValue","formatPartOptionValue","formatPartPlugin","parsed","parse","_step3","fragments","_iterator3","_step4","_iterator4","formatPart","_pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","save","renderForm","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","Switch","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","onEditorDidMount","editor","focus","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","repoName","community","published","rejected","InputGroupText","ResourcesForm","resources","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","onSelectProp","_ref$toggleType","_ref$isPlain","ariaLabel","Dropdown","toggle","renderToggle","open","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","typeToVariantMap","primary","secondary","_ref$type","labelProps","OutlinedClockIcon","ExclamationIcon","SyncAltIcon","statusToProps","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","toUpperCase","getContentEntry","a","b","parseLinks","searchBarRef","Nav","theme","NavList","filterString","filteredLinks","NavExpandable","capitalize","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","renderLinks","entry","selectedName","selectedType","base","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","PFTooltip","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","PFClipboardCopy","PFFileUpload","clearButtonText","_this$props$buttons","_this$props$kebabItem","buttons","anyButtons","anyKebab","textAlign","DeleteAnsibleRemoteModal","closeAction","pending","setPending","DeleteAnsibleRepositoryModal","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","cancelButtonText","closeButtonAriaLabel","titleId","descriptionId","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","setRoles","rolesItemCount","setRolesItemCount","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","LegacyNamespaceListItem","_summary_fields$owner","namespace_url","namespaceid","ai_deny_index","summary_fields","userOwnsLegacyNamespace","owners","showWisdom","openModal","float","contextType","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","_ref$response","finishAction","_ref2$response","_ref3$response","expandableTitle","ApproveModal","isSelectorChecked","setIsSelectorChecked","isSelectorOpen","setIsSelectorOpen","repositoryList","setRepositoryList","itemsCount","setItemsCount","selectedRepos","setSelectedRepos","fixedRepos","setFixedRepos","_useState19","_useState20","prevAlerts","changeSelection","checked","par","fixedReposLocal","selectedReposLocal","allRepositories","_approveAsync","reapprove","originRepoName","reposToApprove","repositoriesRef","repoData","collectionData","autosign","signingService_href","signingServiceName","signingList","promiseCopyOrMove","stagingRepoNames","rejectedRepoName","GALAXY_AUTO_SIGN_COLLECTIONS","waitForTaskUrl","approveAsync","selectPage","newRepos","deselectPage","newSelectedRepos","repo2","DropdownSeparator","document","getElementById","splitButtonItems","DropdownToggleCheckbox","renderMultipleSelector","sortTableOptions","INSIGHTS_DEPLOYMENT_MODE","_props","NotFoundImage","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","plurals","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","activate","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","I18nProvider","App","UI_BASE_PATH","replaceAll","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","collapsedText","expandedText","total_count","saveAs","Blob","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","getRepoURL","distribution_base_path","view_published","host","el","newObj","has_model_permission","is_superadmin","lastSynced","entity","last_sync_task","lastSyncStatus","_options$waitMs","waitMs","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","taskUrl","taskAlert","statusCode","customMessage","custom","callback","err_detail","outsideError","protocol","URL","_namespace$related_fi","can_create_signatures","getUsedbyDependencies","ClassComponent","WithRouter","useLocation","useNavigate","useParams","routePath","RepositoriesUtils","_addCollection","_deleteOrAddCollection","_getAll","getAll","collectionVersion_pulp_href","addList","removeList","latest_version_href","_x3","_callee3","_context3","deleteOrAddCollection","_x4","_x5","_callee4","_context4","_x6","_x7","selectedCollection","cv","paramString","numericTypes","appendParam","cloneDeep","param","getQueryString","_i2","_deleteKeys","getReduced","deleteParam","sortParams","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}