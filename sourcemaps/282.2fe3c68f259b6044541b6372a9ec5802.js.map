{"version":3,"file":"js/282.73a9e32e84ba76d0825b.js","mappings":"yuBAcO,SAASA,EAAcC,GAO3B,IANDC,EAAWD,EAAXC,YACAC,EAAWF,EAAXE,YACAC,EAAQH,EAARG,SACAC,EAAYJ,EAAZI,aACAC,EAAaL,EAAbK,cACAC,EAAWN,EAAXM,YAEAC,EAAAA,GAAAA,UACEL,EAAuB,UACvBA,EAAwB,WACxBE,EAAYI,EAAAA,EAAA,GACPF,GAAW,IAAEG,gBAAiB,mBACnCR,GAECS,MAAK,SAACC,GACL,OAAOJ,EAAAA,GAAAA,KACL,CACEK,KAAMV,EAAwB,YAEhCE,GACAM,MAAK,SAACG,GACNF,EAAOG,WAAaD,EAAYE,KAAKA,KAAK,GAAGD,WAC7CT,EAAcM,EAChB,GACF,IAAE,OACK,WACLR,GAASa,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,UACtB,GACJ,C,6MC9B8D,IASxDC,EAAmB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,I,IAAAE,G,EAAAH,E,gaACvB,SAAAA,EAAYI,GAAO,IAAAC,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GACjBK,EAAAF,EAAAI,KAAA,KAAMH,GAEN,IAAMI,EAASC,EAAAA,EAAAA,iBAA6BL,EAAMM,SAASC,QASzD,OAPFN,EAAKO,MAAQ,CACXC,gBAAYC,EACZN,OAAQA,EACRO,gBAAgB,EAChBC,0BAAsBF,EACtBG,oBAAgBH,EAChBI,cAAUJ,GACVT,CACJ,CA0HC,OA1HAc,EAAAA,EAAAA,GAAAnB,EAAA,EAAAoB,IAAA,oBAAAC,MAED,WACEC,KAAKC,UACP,GAAC,CAAAH,IAAA,SAAAC,MAED,WAAS,IAAAG,EAAA,KACPC,EAOIH,KAAKV,MANPC,EAAUY,EAAVZ,WACAL,EAAMiB,EAANjB,OACAO,EAAcU,EAAdV,eACAC,EAAoBS,EAApBT,qBACAC,EAAcQ,EAAdR,eACAC,EAAQO,EAARP,SAGF,IAAKL,EACH,OAAOa,EAAAA,cAACC,EAAAA,GAAqB,MAG/B,IAAMC,EAAc,CAClBC,EAAAA,GACA,CACEC,KAAKhC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,gBAAuB,CACrCgC,UAAWlB,EAAWkB,UAAUrC,KAChCsC,KAAMV,KAAKW,QAAQ/C,eAErBQ,KAAMmB,EAAWkB,UAAUrC,MAE7B,CACEoC,KAAKhC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,iBAAwB,CACtCgC,UAAWlB,EAAWkB,UAAUrC,KAChCmB,WAAYA,EAAWnB,KACvBsC,KAAMV,KAAKW,QAAQ/C,eAErBQ,KAAMmB,EAAWnB,MAEnB,CAAEA,KAAMwC,EAAAA,GAAAA,EAAA,gBAGV,OACER,EAAAA,cAACA,EAAAA,SAAc,KACbA,EAAAA,cAACS,EAAAA,GAAgB,CACfC,OAAQ,kBAAMZ,EAAKD,UAAS,EAAK,EACjCV,WAAYA,EACZL,OAAQA,EACR6B,aAAc,SAAC7B,GAAM,OACnBgB,EAAKa,aAAa7B,GAAQ,kBAAMgB,EAAKD,UAAS,EAAK,GAAC,EAEtDK,YAAaA,EACbU,UAAU,aACVN,KAAMV,KAAKW,QAAQ/C,eAErBwC,EAAAA,cAACa,EAAAA,GAAI,KACHb,EAAAA,cAAA,WAASc,UAAU,QACjBd,EAAAA,cAACe,EAAAA,GAAa,CACZC,OAAO,EACPC,QAAS5B,EACT6B,KAAM5B,EACN6B,gBAAgB,EAChBC,kBAAmB,kBAAM,IAAI,EAC7B7B,eAAgBA,EAChBC,SAAUA,EACV6B,oBAAoB,MAMhC,GAAC,CAAA3B,IAAA,WAAAC,MAED,WAAsC,IAAA2B,EAAA,KAArBjE,EAAWkE,UAAAC,OAAA,QAAApC,IAAAmC,UAAA,IAAAA,UAAA,GACpBE,EAAUjB,EAAAA,GAAAA,EAAA,6BAChBZ,KAAK8B,SAAS,CAAErC,gBAAgB,IAAQ,WACtCiC,EAAKnE,eAAeE,GAAa,WAC/BsE,EAAAA,GAAAA,KAAe,CACbtB,UAAWiB,EAAKpC,MAAMC,WAAWkB,UAAUrC,KAC3CA,KAAMsD,EAAKpC,MAAMC,WAAWnB,KAC5B4D,QAASN,EAAKpC,MAAMC,WAAW0C,eAAeD,QAC9CE,KAAM,aAELhE,MAAK,SAACiE,GACL,IAAMC,EAAYD,EAAiB5D,KAAKA,KAAK,GAC7CwD,EAAAA,GAAAA,IAAcK,EAAUC,IACrBnE,MAAK,SAACoE,GACLZ,EAAKI,SAAS,CACZlC,cAAUJ,EACVC,gBAAgB,EAChBE,eAAgByC,EAChB1C,qBAAsB4C,EAAmB/D,MAE7C,IAAE,OACK,WACLmD,EAAKI,SAAS,CACZlC,SAAUiC,EACVpC,gBAAgB,GAEpB,GACJ,IAAE,OACK,WACLiC,EAAKI,SAAS,CACZlC,SAAUiC,EACVpC,gBAAgB,GAEpB,GACJ,GACF,GACF,GAAC,CAAAK,IAAA,iBAAAC,MAED,SAAuBtC,EAAa8E,GAAU,IAAAC,EAAA,MAC5CjF,EAAAA,EAAAA,GAAe,CACbE,YAAAA,EACAC,YAAasC,KAAKlB,MAAM2D,YACxB9E,SAAUqC,KAAKlB,MAAMnB,SACrBC,aAAcoC,KAAKW,QAAQ/C,aAC3BC,cAAe,SAAC0B,GAAU,OAAKiD,EAAKV,SAAS,CAAEvC,WAAAA,GAAcgD,EAAS,EACtEzE,YAAakC,KAAKV,MAAMJ,QAE5B,GAAC,CAAAY,IAAA,eAAA4C,IAED,WACE,OAAOvD,EAAAA,EAAAA,mBACT,KAACT,CAAA,CAxIsB,CAAS0B,EAAAA,WA2IlC,SAAeuC,EAAAA,EAAAA,IAAWjE,GAE1BA,EAAoBkE,YAAcC,EAAAA,C","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-import-log.tsx"],"sourcesContent":["import { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collection: CollectionDetailType;\n  alerts?: AlertType[];\n}\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  selectedRepo,\n  setCollection,\n  stateParams,\n}) {\n  CollectionAPI.getCached(\n    matchParams['namespace'],\n    matchParams['collection'],\n    selectedRepo,\n    { ...stateParams, include_related: 'my_permissions' },\n    forceReload,\n  )\n    .then((result) => {\n      return CollectionAPI.list(\n        {\n          name: matchParams['collection'],\n        },\n        selectedRepo,\n      ).then((collections) => {\n        result.deprecated = collections.data.data[0].deprecated;\n        setCollection(result);\n      });\n    })\n    .catch(() => {\n      navigate(formatPath(Paths.notFound));\n    });\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { ImportAPI, ImportDetailType, ImportListType } from 'src/api';\nimport {\n  CollectionHeader,\n  ImportConsole,\n  LoadingPageWithHeader,\n  Main,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { IBaseCollectionState, loadCollection } from './base';\n\ninterface IState extends IBaseCollectionState {\n  loadingImports: boolean;\n  selectedImportDetail: ImportDetailType;\n  selectedImport: ImportListType;\n  apiError: string;\n}\n\nclass CollectionImportLog extends React.Component<RouteProps, IState> {\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      collection: undefined,\n      params: params,\n      loadingImports: true,\n      selectedImportDetail: undefined,\n      selectedImport: undefined,\n      apiError: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      loadingImports,\n      selectedImportDetail,\n      selectedImport,\n      apiError,\n    } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Import log` },\n    ];\n\n    return (\n      <React.Fragment>\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collection={collection}\n          params={params}\n          updateParams={(params) =>\n            this.updateParams(params, () => this.loadData(true))\n          }\n          breadcrumbs={breadcrumbs}\n          activeTab='import-log'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <ImportConsole\n              empty={false}\n              loading={loadingImports}\n              task={selectedImportDetail}\n              followMessages={false}\n              setFollowMessages={() => null}\n              selectedImport={selectedImport}\n              apiError={apiError}\n              hideCollectionName={true}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    const failMsg = t`Could not load import log`;\n    this.setState({ loadingImports: true }, () => {\n      this.loadCollection(forceReload, () => {\n        ImportAPI.list({\n          namespace: this.state.collection.namespace.name,\n          name: this.state.collection.name,\n          version: this.state.collection.latest_version.version,\n          sort: '-created',\n        })\n          .then((importListResult) => {\n            const importObj = importListResult.data.data[0];\n            ImportAPI.get(importObj.id)\n              .then((importDetailResult) => {\n                this.setState({\n                  apiError: undefined,\n                  loadingImports: false,\n                  selectedImport: importObj,\n                  selectedImportDetail: importDetailResult.data,\n                });\n              })\n              .catch(() => {\n                this.setState({\n                  apiError: failMsg,\n                  loadingImports: false,\n                });\n              });\n          })\n          .catch(() => {\n            this.setState({\n              apiError: failMsg,\n              loadingImports: false,\n            });\n          });\n      });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      selectedRepo: this.context.selectedRepo,\n      setCollection: (collection) => this.setState({ collection }, callback),\n      stateParams: this.state.params,\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(CollectionImportLog);\n\nCollectionImportLog.contextType = AppContext;\n"],"names":["loadCollection","_ref","forceReload","matchParams","navigate","selectedRepo","setCollection","stateParams","CollectionAPI","_objectSpread","include_related","then","result","name","collections","deprecated","data","formatPath","Paths","CollectionImportLog","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","params","ParamHelper","location","search","state","collection","undefined","loadingImports","selectedImportDetail","selectedImport","apiError","_createClass","key","value","this","loadData","_this2","_this$state","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","namespace","repo","context","i18n","CollectionHeader","reload","updateParams","activeTab","Main","className","ImportConsole","empty","loading","task","followMessages","setFollowMessages","hideCollectionName","_this3","arguments","length","failMsg","setState","ImportAPI","version","latest_version","sort","importListResult","importObj","id","importDetailResult","callback","_this4","routeParams","get","withRouter","contextType","AppContext"],"sourceRoot":""}