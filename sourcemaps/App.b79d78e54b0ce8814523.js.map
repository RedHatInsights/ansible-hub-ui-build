{"version":3,"file":"js/App.ef3f23e1fd7071854efe.js","mappings":"UAAIA,ECAAC,EACAC,ECwCAC,EASAC,E,mBClDJ,IAAIC,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,O,qiBC9Rb,IAAMY,EAAb,WAIE,WAAYC,GAAY,2BACtBC,KAAKC,KAAOC,IAAAA,OAAa,CACvBC,QAASJ,EACTK,iBAAkB,SAACC,GAAD,OAAYC,EAAAA,GAAAA,eAA2BD,MAG3DL,KAAKC,KAAKM,aAAaC,QAAQC,KAAI,SAACD,GAAD,OAAa,EAAKE,YAAYF,MAVrE,oDAaE,SAAuBG,GAGrB,IAAMN,E,qWAAS,CAAH,GAAQM,GAEdC,EACJC,SAASR,EAAM,YAAkBS,EAAAA,EAAAA,kBAC7BC,EAAOF,SAASR,EAAM,OAAa,EAQzC,cANOA,EAAM,YACNA,EAAM,UAEbA,EAAM,OAAaU,EAAOH,EAAWA,EACrCP,EAAM,MAAYO,EAEXP,IA5BX,kBA+BE,SAAKA,EAAiBW,GAKpB,OAAOhB,KAAKC,KAAKgB,IAAIjB,KAAKkB,QAAQF,GAAU,CAC1CX,OAAQL,KAAKmB,gBAAgBd,OArCnC,iBAyCE,SAAInB,EAAY8B,GACd,OAAOhB,KAAKC,KAAKgB,IAAIjB,KAAKkB,QAAQF,GAAW9B,EAAK,OA1CtD,oBA6CE,SAAOA,EAAqBkC,EAAWJ,GACrC,OAAOhB,KAAKC,KAAKoB,IAAIrB,KAAKkB,QAAQF,GAAW9B,EAAK,IAAKkC,KA9C3D,oBAiDE,SAAOA,EAAWJ,GAChB,OAAOhB,KAAKC,KAAKqB,KAAKtB,KAAKkB,QAAQF,GAAUI,KAlDjD,oBAqDE,SAAOlC,EAAqB8B,GAC1B,OAAOhB,KAAKC,KAAL,OAAiBD,KAAKkB,QAAQF,GAAW9B,EAAK,OAtDzD,mBAyDE,SAAMA,EAAqBkC,EAAWJ,GACpC,OAAOhB,KAAKC,KAAKsB,MAAMvB,KAAKkB,QAAQF,GAAW9B,EAAK,IAAKkC,KA1D7D,qBA6DE,SAAQJ,GACN,OAAOA,GAAWhB,KAAKgB,UA9D3B,8CAiEE,WAA0BR,GAA1B,oEAIMgB,aAAoBV,EAAAA,EAAAA,yBAJ1B,gCAKWW,OAAeC,SAASC,OAAOC,KAAKC,UAL/C,aAOML,aAAoBV,EAAAA,EAAAA,6BACtBN,EAAQsB,QAAQ,eAAiBC,EAAAA,EAAAA,IAAY,cARjD,kBAUSvB,GAVT,2CAjEF,qDCFO,IAAMwB,EAAb,6B,IAAA,G,EAAA,E,gaAME,aAAc,4BACZ,cAAiBC,yBADL,mCALG,MAKH,EANhB,wCAYE,SAAUC,GACR,oBAAclC,KAAKmC,eAAnB,YAAqCD,OAbzC,GAA4BpC,G,qkBCK5B,SAASsC,EAAeC,GACtB,OAAIA,EACKA,EAASC,QACd,SAACC,GAAD,OAAW,CAAC,gBAAiB,gBAAgBC,SAASD,EAAKE,iBAIxDJ,EAGT,SAASK,EAAeH,GACtB,cACKA,GADL,IAEEI,eAAgB,OACXJ,EAAKI,gBADI,IAEZN,SAAU,KACVO,SAAU,OACLL,EAAKI,eAAeC,UADjB,IAENP,SAAUD,EAAeG,EAAKI,eAAeC,SAASP,gBAwBvD,IAuHMQ,EAAgB,IAvH7B,6B,IAAA,G,EAAA,E,gaAIE,aAAc,4BACZ,gBADY,4BAHJ,EAAKC,UAAU,UAGX,EAJhB,mCAQE,SAAKzC,EAAc0C,GACjB,IAAMC,EAAOhD,KAAKgB,QAAU+B,EAAO,IACnC,OAAO,mDAAW1C,EAAQ2C,GAAMC,MAAK,SAACC,GAAD,SAAC,KACjCA,GADgC,IAEnC9B,KAAM,OACD8B,EAAS9B,MADV,IAGFA,KAAM8B,EAAS9B,KAAKA,KAAKrC,IAAI2D,YAfrC,4BAoBE,SACES,EACAC,EACAL,GAEA,IAAMC,EAAO,WAAH,OAAcD,EAAd,oBAEV,OAAO/C,KAAKuB,MAAL,UACF4B,EAAWE,UAAUC,KADnB,YAC2BH,EAAWG,MAC3C,CACEC,WAAYH,GAEdJ,KAhCN,oBAoCE,SACEQ,EACApC,EACAqC,EACAC,GAEA,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQzC,EAAK0C,MAG7B,IAAMC,EAAS,CACbjC,QAAS,CACP,eAAgB,uBAElBkC,iBAAkBP,GAMpB,OAHIC,IACFK,EAAM,YAAkBL,EAAYO,OAE/BjE,KAAKC,KAAKqB,KACf,WAAakC,EAAiB,6BAC9BG,EACAI,KA3DN,4BA+DE,WAIE,OAHoB7D,IAAAA,YACOgE,WAjE/B,uBA2EE,SACEb,EACAC,EACAP,EACA1C,EACA8D,GAC+B,WAC/B,IACGA,GACDnE,KAAKoE,kBACLpE,KAAKoE,iBAAiBd,OAASA,GAC/BtD,KAAKoE,iBAAiBf,UAAUC,OAASD,EAEzC,OAAOgB,QAAQ1E,QAAQK,KAAKoE,kBAG9B,IAAMpB,EAAO,GAAH,OAAMhD,KAAKgB,SAAX,OAAqB+B,EAArB,YAA6BM,EAA7B,YAA0CC,EAA1C,KACV,OAAOtD,KAAKC,KACTgB,IAAI+B,EAAM,CACT3C,OAAQA,IAET4C,MAAK,SAACqB,GAEL,IAAM/B,EApHd,SAA0BA,GACxB,cACKA,GADL,IAEEI,eAAgB,OACXJ,EAAKI,gBADI,IAEZN,SAAU,KACVkC,UAAW,OACNhC,EAAKI,eAAe4B,WADhB,IAEPlC,SAAUD,EAAeG,EAAKI,eAAe4B,UAAUlC,YAEzDO,SAAU,OACLL,EAAKI,eAAeC,UADjB,IAENP,SAAUD,EAAeG,EAAKI,eAAeC,SAASP,gBAwGzCmC,CAAiBF,EAAOlD,MAErC,OADA,EAAKgD,iBAAmB7B,EACjBA,OApGf,4BAwGE,SAAekC,EAAkBpB,EAAWC,EAAMoB,GAAS,WAEzD,OAAO,IAAIL,SAAQ,SAAC1E,EAASgF,GAC3B,EAAK1E,KACFgB,IADH,kBAEewD,EAFf,2BAEkDpB,EAFlD,YAE+DC,EAF/D,qBAEgFoB,EAFhF,MAIGzB,MAAK,SAACqB,GACL3E,EAAQ2E,EAAOlD,KAAP,iBALZ,OAOS,SAACwD,GAAD,OAASD,EAAOC,aAlH/B,GAAyB5C,I,IChDb6C,ECFAC,ECUCC,EAAe,IARtBC,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,gBAEX,E,SAHVkC,CAAYhD,K,SFAN6C,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,SAAAA,EAAAA,QAAAA,UAAAA,EAAAA,QAAAA,U,CAAAA,IAAAA,EAAAA,K,SCFAC,GAAAA,EAAAA,QAAAA,UAAAA,EAAAA,QAAAA,UAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,YAAAA,EAAAA,OAAAA,SAAAA,EAAAA,SAAAA,W,CAAAA,IAAAA,EAAAA,KEEL,IAeMG,EAAY,IAfzB,6B,IAAA,G,EAAA,E,gaAIE,aAAc,4BACZ,gBADY,4BAHJ,EAAKnC,UAAU,yBAGX,EAJhB,kCAQE,SAAI5D,EAAI8D,GAGN,yDAAiB9D,EAAI8D,OAXzB,GAAyBhB,I,ICkFZkD,EAAgB,IAjFvBF,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,QAEX,E,sCAId,WAAwB,WACtB,MAAItB,aAAoBV,EAAAA,EAAAA,yBACf,IAAIuD,SAAQ,SAAC1E,EAASgF,GAC1BlD,OAAeC,SAASC,OAAOC,KAC7BC,UAGAoB,MAAK,SAACqB,GAAD,OAAY3E,EAAQ2E,EAAOa,aAJnC,OAKS,SAACb,GAAD,OAAYK,EAAOL,SAErB9C,aAAoBV,EAAAA,EAAAA,2BACtB,IAAIuD,SAAQ,SAAC1E,EAASgF,GAC3B,EAAK1E,KACFgB,IAAI,EAAKD,SACTiC,MAAK,SAACqB,GACL3E,EAAQ2E,EAAOlD,SAHnB,OAKS,SAACkD,GAAD,OAAYK,EAAOL,cAPzB,I,2BAYT,WACE,OAAOtE,KAAKC,KAAKgB,IAAIjB,KAAKgB,W,sBAG5B,SAASI,GACP,OAAOpB,KAAKC,KAAKoB,IAAIrB,KAAKgB,QAASI,K,sBAMrC,WACE,MAAII,aAAoBV,EAAAA,EAAAA,yBACf,IAAIuD,SAAQ,SAAC1E,EAASgF,GAC3BA,EACE,6EAIC3E,KAAKC,KAAKqB,KAAK,iBAAkB,M,oBAK1C,WACE,OAAOtB,KAAKC,KAAKqB,KAAKtB,KAAK8C,UAAU,gBAAiB,M,mBAKxD,SAAMsC,EAAUC,GAAU,WAClBC,EAAWtF,KAAK8C,UAAU,eAEhC,OAAO,IAAIuB,SAAQ,SAAC1E,EAASgF,GAG3B,EAAK1E,KACFgB,IAAIqE,GACJrC,MAAK,WACJ,EAAKhD,KACFqB,KAAKgE,EAAU,CACdF,SAAUA,EACVC,SAAUA,IAEXpC,MAAK,SAACC,GAAD,OAAcvD,EAAQuD,MAL9B,OAMS,SAAC0B,GAAD,OAASD,EAAOC,SAT7B,OAWS,SAACA,GAAD,OAASD,EAAOC,a,EA5EzBI,CAAYhD,ICDX,IAmBMuD,EAAuB,IAnBpC,6B,IAAA,G,EAAA,E,gaAGE,aAAc,4BACZ,gBADY,4BAFJ,EAAKzC,UAAU,yBAEX,EAHhB,4CAOE,SACEO,EACAC,EACAoB,EACAc,EACAC,GAEA,IAAMzC,EAAO,kBAAH,OAAqBK,EAArB,YAAkCC,EAAlC,qBAAmDoB,EAAnD,iBAAmEc,EAAnE,YAAmFC,EAAnF,KACV,OAAOzF,KAAK0F,OAAO,GAAI1C,OAf3B,GAAyBhB,I,ICQZ2D,EAAiB,IARxBX,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,mBAEX,E,SAHVkC,CAAYhD,ICSK,IATvB,6B,IAAA,G,EAAA,E,gaAIE,aAAc,4BACZ,gBADY,4BAHJ,EAAKc,UAAU,WAGX,EAJhB,UAAyBd,I,ICYZ4D,EAAgB,IAZvBZ,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,kBAEX,E,qCAId,SAAO5D,GACL,OAAOc,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAAU9B,EAAK,WAAY,Q,EARpD8F,CAAYhD,ICAX,IAQM6D,EAAU,IARvB,6B,IAAA,G,EAAA,E,gaAGE,aAAc,4BACZ,gBADY,4BAFJ,aAEI,EAHhB,UAAyB7D,I,ICuBZ8D,EAAW,IAvBlBd,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,YAEX,E,6CAId,SAAe5D,GACb,OAAOc,KAAKC,KAAKgB,IACfjB,KAAKgB,QAAU9B,EAAK,+C,2BAIxB,SAAcA,EAAIkC,GAChB,OAAOpB,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAAU9B,EAAK,sBAAuBkC,K,8BAEnE,SAAiBlC,EAAI6G,GACnB,OAAO/F,KAAKC,KAAL,OACLD,KAAKgB,QAAU9B,EAAK,sBAAwB6G,O,EAlB5Cf,CAAYhD,I,ICoDLgE,EAAY,IAlDnBhB,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,aAEX,E,0CAOd,SAAYmD,EAAcC,EAAoBC,GAM5C,IAAMC,GAA0BC,EAAAA,EAAAA,IAC9BH,EACAA,EAAOI,mBAOLF,EAAYG,WAAaJ,EAAiBI,iBACrCH,EAAW,SAGpB,cAAoB1G,OAAOD,KAAK2G,GAAhC,eAA8C,CAAzC,IAAMI,EAAK,KACa,KAAvBJ,EAAYI,KACdJ,EAAYI,GAAS,MAIzB,OAAOxG,KAAKC,KAAKoB,IAAV,kBACM4E,EADN,oBAELG,K,oBAIJ,SAAOlH,EAAIuH,GACT,KAAM,sB,kBAGR,SAAKR,GACH,OAAOjG,KAAKC,KAAKqB,KAAV,kBAA0B2E,EAA1B,aAAmD,Q,EA9CxDjB,CAAYhD,ICKgB,IAP5BgD,SAAAA,I,2bAEJ,aAAc,4BACZ,gBADY,4BADJ0B,IACI,E,SAFV1B,CAAYhD,I,ICQL2E,EAAkB,IARzB3B,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,mBAEX,E,SAHVkC,CAAYhD,I,ICQL4E,EAAoB,IAR3B5B,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,sBAEX,E,SAHVkC,CAAYhD,ICoBqB,IApBjCgD,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,yCAEX,E,qCAId,SAAOQ,GACL,OAAOtD,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAAUsC,EAAO,uB,wBAG7C,SAAWA,EAAMuD,GACf,OAAO7G,KAAKC,KAAKoB,IAAIrB,KAAKgB,QAAUsC,EAAO,oBAAqBuD,K,mBAGlE,SAAMvD,EAAMwD,GACV,OAAO9G,KAAKC,KAAKgB,IAAV,UAAiBjB,KAAKgB,SAAtB,OAAgCsC,EAAhC,4BAAwDwD,EAAxD,U,EAhBL9B,CAAYhD,ICcO,IAdnBgD,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,yCAEX,E,mCAId,SAAK5D,EAAImB,GACP,OAAOL,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAAU9B,EAAK,oBAAqB,CAC5DmB,OAAQL,KAAKmB,gBAAgBd,S,EAT7B2E,CAAYhD,ICYW,IAZvBgD,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,yCAEX,E,mCAId,SAAK5D,EAAI6B,GACP,0DAAkB,CAAEA,KAAMA,GAAQf,KAAKgB,QAAU9B,EAAK,0B,EARpD8F,CAAYhD,ICAX,IAAM+E,EAAb,6B,IAAA,G,EAAA,E,gaAIE,aAAc,kCACN,iBALV,UAA6BjH,G,8NCkBE,IAlBzBkF,SAAAA,I,6mBACM,0C,oCAEV,SAAIgC,EAAsBC,EAAaH,GACrC,OAAO9G,KAAKC,KAAKqB,KAAV,UAAkBtB,KAAKgB,SAAvB,OAAiCgG,EAAjC,SAAsD,CAC3DF,OAAQA,EACRG,IAAKA,M,mBAIT,SAAMD,EAAsBC,EAAaH,GACvC,OAAO9G,KAAKC,KAAKqB,KAAV,UAAkBtB,KAAKgB,SAAvB,OAAiCgG,EAAjC,WAAwD,CAC7DF,OAAQA,EACRG,IAAKA,Q,EAbLjC,CAAY+B,ICYa,IAZzB/B,SAAAA,I,2bAGJ,aAAc,4BACZ,gBADY,4BAFJ,EAAKlC,UAAU,mBAEX,E,kCAId,WACE,OAAO9C,KAAKC,KAAKgB,IAAIjB,KAAKgB,a,EARxBgE,CAAYhD,ICIsB,IAJxC,6B,IAAA,G,EAAA,E,gaAAA,kLACY,sCADZ,YAAyB+E,ICIuB,IAJ1C/B,SAAAA,I,6mBACM,EAAKlC,UAAU,uC,WADrBkC,CAAYhD,ICae,IAbjC,6B,IAAA,G,EAAA,E,gaAAA,kLACY,UADZ,qCAGE,SAAK3B,GACH,IAAI6G,E,qWAAgB,IAAK7G,GAKzB,OAJI6G,EAAa,OACfA,EAAa,SAAeA,EAAa,YAClCA,EAAa,OAEtB,mDAAkBA,OATtB,GAAyBH,K,4yBCuBlB,IAAMI,EAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYC,GAAO,4BACjB,cAAMA,IADW,6BAsCD,WAChB,EAAKA,MAAMC,YAAY,IACnB,EAAKD,MAAME,SACb,EAAKF,MAAME,cAzCI,8BAiEA,SAACC,GAClB,GAAY,OAARA,EAAc,CAChB,IAAMC,EAAYD,EAAIE,OAAOC,MAC7B,EAAKN,MAAMC,YAAYG,GAEzB,OAAO,EAAKG,iBAtEK,8BAyEA,SAACC,GAClB,EAAKC,SAAS,CACZD,OAAAA,QA3Ee,8BA+EA,SAACE,EAAOC,EAAWC,GACpC,EAAKZ,MAAMa,SAASH,EAAOC,EAAWC,GAEjC,EAAKZ,MAAMc,UACd,EAAKL,SACH,CACED,QAAQ,IAEV,kBAAM,EAAKR,MAAMC,YAAY,UApFjC,EAAKc,MAAQ,CACXP,QAAQ,GAJO,EADrB,qCASE,WACE,IAAIQ,EAAW,KACXpI,KAAKoH,MAAMiB,aACbD,EAAWpI,KAAKoH,MAAMiB,WAAWtJ,KAAI,SAACuJ,GAAD,OAAWA,EAAMhF,SAGxD,IAAQsE,EAAW5H,KAAKmI,MAAhBP,OACFW,EAAUvI,KAAKoH,MAAMc,SACvBM,EAAAA,GAAAA,eACAA,EAAAA,GAAAA,UAEJ,OACE,gBAACC,EAAA,EAAD,CACEC,aAAc1I,KAAKoH,MAAMsB,aACzBpB,QAAStH,KAAKsH,QACdW,SAAUjI,KAAKiI,SACfU,SAAU3I,KAAK2I,SACfJ,QAASA,EACTF,WAAYD,EACZR,OAAQA,EACRgB,iBAAe,EACfC,SAAU7I,KAAK6I,SACfC,gBAAiB9I,KAAKoH,MAAM0B,gBAC5BC,WAAY/I,KAAKoH,MAAM2B,YAEtB/I,KAAK2H,gBAlCd,wBA8CE,WACE,IADmB,EACbqB,EAAU,GADG,E,25BAAA,CAGEhJ,KAAKoH,MAAM6B,SAHb,IAGnB,2BAAyC,KAA9BC,EAA8B,QACvCF,EAAQG,KAAK,gBAACC,EAAA,EAAD,CAAcC,IAAKH,EAAOhK,GAAIwI,MAAOwB,EAAO5F,SAJxC,8BAiBnB,OAVuB,IAAnB0F,EAAQM,QACVN,EAAQG,KACN,gBAACC,EAAA,EAAD,CACEC,IAAK,YACL3B,MAAO6B,EAAF,+BACLR,YAAY,KAKXC,MA/DX,GAAwCQ,EAAAA,W,iCCVjC,IAMMC,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA+BzJ,KAAKoH,MAA5BsC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAChB,OACE,uBACEC,MAAO,CACLC,SAAU,QACVC,MAAO,MACPC,IAAK,OACLC,OAAQ,IACRC,QAAS,OACTC,cAAe,WAGhBR,EAAO3K,KAAI,SAACoL,EAAOC,GAAR,OACV,gBAACC,EAAA,EAAD,CACET,MAAO,CAAEU,aAAc,QACvBjB,IAAKe,EACLG,MAAOJ,EAAMI,MACbhC,QAAS4B,EAAM5B,QACfiC,YACE,gBAACC,EAAA,EAAD,CAAwBC,QAAS,kBAAMf,EAAWS,OAGnDD,EAAMQ,qBAxBnB,GAA+BnB,EAAAA,WAgCxB,SAASoB,EAAgBC,GAC9B,OAAO,SAAUC,GACf,IAAMC,GAAU,OAAI/K,KAAKmI,MAAL,QACpB4C,EAAQC,OAAOF,EAAY,GAE3B,IAAMG,EAAW,GACjBA,EAASJ,GAAsBE,EAE/B/K,KAAK6H,SAASoD,I,iDCnCX,IAAMC,EAAb,6B,IAAA,G,EAAA,E,gaAAA,2LAsD4B,WACxB,MAAgD,EAAK9D,MAA7C/G,EAAR,EAAQA,OAAQ8K,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,aAC/B9K,EAAAA,GAAAA,gBAA4B,CAAED,OAAAA,EAAQ8K,cAAAA,EAAeC,aAAAA,OAxDzD,uCAME,WAAS,WACP,EAAoDpL,KAAKoH,MAAjD/G,EAAR,EAAQA,OAAQ8K,EAAhB,EAAgBA,cAAeE,EAA/B,EAA+BA,UAAWzB,EAA1C,EAA0CA,MAE1C,OAAIlK,OAAOD,KAAKa,EAAAA,GAAAA,WAAuBD,EAAQ8K,IAAgB7B,OAAS,EAEpE,uBAAK+B,UAAWA,EAAWzB,MAAOA,GAC/BlK,OAAOD,KAAKa,EAAAA,GAAAA,WAAuBD,EAAQ8K,IAAgBpM,KAC1D,SAACsK,GAAD,OAAS,EAAKiC,YAAYjC,MAE5B,gBAACkC,EAAA,GAAD,CAAQC,QAASxL,KAAKyL,gBAAiBlD,QAAQ,QAC5CgB,EADH,yCAMG,OArBb,yBAyBE,SAAoBF,GAClB,IAEIqC,EAFJ,EAAwD1L,KAAKoH,MAArDuE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYvL,EAA/B,EAA+BA,OAAQ+K,EAAvC,EAAuCA,aAUvC,OALEM,EADEG,MAAMC,QAAQzL,EAAOgJ,IACfhJ,EAAOgJ,GAEP,CAAChJ,EAAOgJ,IAIhB,uBAAKO,MAAO,CAAEK,QAAS,SAAU8B,YAAa,OAAS1C,IAAKA,GAC1D,gBAAC2C,EAAA,EAAD,CAAWC,aAAeN,EAAUtC,IAAQA,GACzCqC,EAAM3M,KAAI,SAACmN,EAAG9B,GAAJ,aACT,gBAAC+B,EAAA,EAAD,CACE9C,IAAKe,EACLoB,QAAS,kBACPJ,EAAa9K,EAAAA,GAAAA,YAAwBD,EAAQgJ,EAAK6C,OAGnDN,MAAAA,GAAA,UAAAA,EAAavC,UAAb,eAAoB6C,KAAMA,YA9CzC,GAAoC1C,EAAAA,Y,OAAvB0B,EAAAA,eACW,CACpBC,cAAe,GACfQ,UAAW,K,qCCXR,IAAMS,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MASIpM,KAAKoH,MARPmD,EADF,EACEA,MACA8B,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,YACAnB,EANF,EAMEA,UACAoB,EAPF,EAOEA,gBACAC,EARF,EAQEA,eAEF,OACE,uBAAKrB,UAAWsB,GAAAA,CAAG,aAActB,IAC9BoB,GACC,uBAAKpB,UAAU,wBAAwBoB,GAExCD,GACC,uBAAKnB,UAAU,wBAAwBmB,IAEvCA,IAAgBC,GAAmB,uBAAKpB,UAAU,gBAEpD,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,aACZgB,EACC,gBAACO,GAAD,CACEvB,UAAU,QACVwB,IAAKtD,EAAF,+BACHuD,MAAOT,EACPU,KAAK,OACLC,aAAa,IAEb,KACJ,2BACE,gBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKH,KAAK,MAAMR,SAAUhC,MAGjD+B,EACC,uBAAKjB,UAAU,gBAAgBiB,GAC7B,MAELI,EAAiB,gCAAGA,GAAqB,KAEzCH,EACC,uBAAKlB,UAAU,iBAAiBkB,GAEhC,uBAAKlB,UAAU,qBA9CzB,GAAgC7B,EAAAA,W,iCCNzB,IAAM2D,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,OACE,gBAACC,EAAA,EAAD,KACGpN,KAAKoH,MAAMiG,MAAMtO,KAAI,SAACuO,EAAMlD,GAAP,OAAa,EAAKmD,WAAWD,EAAMlD,SAJjE,wBASE,SAAWkD,EAAME,GACf,OACE,gBAACC,EAAA,EAAD,CACEpE,IAAKmE,EACLE,SAAUF,EAAQ,IAAMxN,KAAKoH,MAAMiG,MAAM/D,QAExCgE,EAAKpL,IAAM,gBAAC,KAAD,CAAMyL,GAAIL,EAAKpL,KAAMoL,EAAKhK,MAAegK,EAAKhK,UAflE,GAAiCkG,EAAAA,W,gCCK1B,IAAMoE,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGAKE,WACE,IAAIC,EAAO7N,KAAKoH,MAAM/G,OAAOyN,UAC7B,EAAkD9N,KAAKoH,MAA/CgE,EAAR,EAAQA,aAAc/K,EAAtB,EAAsBA,OAAQ0M,EAA9B,EAA8BA,KAAM1B,EAApC,EAAoCA,UAE/BwC,IACHA,EAAO,QAGT,IAAME,EAAc,CAAC,OAAQ,aAE7B,OACE,uBAAK1C,UAAWA,GACd,gBAAC,KAAD,CACE0B,KAAMA,EACN1B,UAAWsB,GAAAA,CAAGoB,EAAa,CAAE3F,SAAmB,SAATyF,IACvCrC,QAAS,kBACPJ,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,YAAa,YAG3D,gBAAC,KAAD,CACE0M,KAAMA,EACN1B,UAAWsB,GAAAA,CAAGoB,EAAa,CAAE3F,SAAmB,SAATyF,IACvCrC,QAAS,kBACPJ,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,YAAa,iBA5BnE,GAAsCmJ,EAAAA,Y,OAAzBoE,EAAAA,eACW,CACpBb,KAAM,O,oHCSH,I,eAAMiB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,iMAC2B,IAD3B,uCAGE,WAAS,WACP,EACEhO,KAAKoH,MADC9D,EAAR,EAAQA,KAAMX,EAAd,EAAcA,eAAgBU,EAA9B,EAA8BA,UAAWgI,EAAzC,EAAyCA,UAAW4C,EAApD,EAAoDA,OAAQlL,EAA5D,EAA4DA,KAGtDmL,EAAU7K,EAAU6K,SAAW7K,EAAUC,KACzC6K,GAAiBC,EAAAA,EAAAA,IACrBzL,EAAeC,SAASP,UAG1B,OACE,gBAACgM,EAAA,EAAD,CAAMhD,UAAWsB,GAAAA,CAAG,4BAA6BtB,IAC/C,gBAACiD,EAAA,EAAD,CAAYjD,UAAU,YACpB,gBAACuB,GAAD,CACEE,MAAOzJ,EAAUkL,WACjB1B,IAAKqB,EAAU,QACfnB,KAAK,OACLC,aAAa,IAEf,gBAACwB,EAAA,EAAD,KAAcxO,KAAKyO,iBAAiB1L,KAEtC,gBAACuL,EAAA,EAAD,KACE,uBAAKjD,UAAU,QACb,gBAAC,KAAD,CACEsC,IAAIe,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,iBAAwB,CACrCxL,WAAYG,EACZD,UAAWA,EAAUC,KACrBP,KAAMA,KAGPO,IAGL,uBAAK+H,UAAU,UACb,gBAACmD,EAAA,EAAD,KACE,gBAACI,EAAA,EAAD,CAAMC,UAAWC,EAAAA,EAAAA,OAAjB,eAAkDZ,MAIxD,gBAACa,EAAA,EAAD,KACE,gBAAC,IAAD,CAASC,QAAS,2BAAMrM,EAAeC,SAAS+H,cAC9C,uBAAKU,UAAU,eACZrL,KAAKiP,eAAetM,EAAeC,SAAS+H,gBAInD,gBAACoE,EAAA,EAAD,CAAU1D,UAAU,kBACjB3L,OAAOD,KAAK0O,EAAe9L,UAAUtD,KAAI,SAACmQ,GAAD,OACxC,EAAKC,gBAAgBD,EAAGf,EAAe9L,SAAS6M,QAGnDjB,GAAU,gBAACmB,EAAA,EAAD,KAAanB,MArDhC,8BA0DE,SAAyBlL,GACvB,OAAIA,IAASjC,EAAAA,EAAAA,eAET,gBAAC8N,EAAA,EAAD,CAAMC,UAAWC,EAAAA,EAAAA,OACf,gBAACO,EAAA,EAAD,CAAOC,QAAM,GAAE/F,EAAf,iCAKC,OAnEX,4BAsEE,SAAuBgG,GACrB,OAAKA,EAGDA,EAAEjG,OAAStJ,KAAKwP,uBACXD,EAAEE,MAAM,EAAGzP,KAAKwP,wBAA0B,MAE1CD,EALA,KAxEb,6BAiFE,SAAwBG,EAAMC,GAC5B,OACE,uBAAKtG,IAAKqG,GACR,2BACE,gBAACE,GAAD,CAAcC,OAAQF,KAExB,uBAAKtE,UAAU,cACb,gBAACuE,GAAD,CAAcC,OAAQF,EAAOG,YAAY,EAAMC,MAAOL,UAxFhE,GAAoClG,EAAAA,W,sKCC7B,IAAMwG,GAAb,6B,IAAA,G,EAAA,E,gaAAA,wLACkB,CAAC,WAAY,YAD/B,uCAIE,WAAS,aACP,EACEhQ,KAAKoH,MADC/E,EAAR,EAAQA,SAAUc,EAAlB,EAAkBA,WAAYE,EAA9B,EAA8BA,UAAWhD,EAAzC,EAAyCA,OAAQ+K,EAAjD,EAAiDA,aAG7C6E,EAA+B,GAC7BC,EAAU,CAAEC,IAAK,GACjBC,EAAU/P,EAAO+P,SAAW,MAC5BC,EAAWhQ,EAAOgQ,UAAY,GAP7B,E,65BAAA,CASOhO,GATP,IASP,2BAAwB,KAAfiO,EAAe,QAChBC,EAAwB,QAAZH,GAA2BE,EAAE7N,eAAiB2N,EAC3DF,EAAQI,EAAE7N,gBACbyN,EAAQI,EAAE7N,cAAgB,GAGxB8N,GAAaD,EAAEhN,KAAKkN,MAAMH,KAC5BJ,EAAO9G,KAAKmH,GACZJ,EAAQI,EAAE7N,gBACVyN,EAAO,QAlBJ,8BAsBP,OACE,2BACE,2BACE,gBAAC,KAAD,KACE,gBAACO,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CACEjJ,MAAOrH,EAAOgQ,UAAY,GAC1BO,SAAU,SAACC,GAAD,OACRzF,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,WAAYwQ,KAExDvJ,QAAS,kBACP8D,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,WAAY,MAExD,aAAW,eACXyQ,YAAavH,EAAF,wCAIjB,gBAACkH,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KAAcnH,EAAd,iCACC7J,OAAOD,KAAKyQ,GAASnR,KAAI,SAACsK,GAAD,OACxB,gBAACqH,GAAA,EAAD,CACErH,IAAKA,EACLgC,UAAWsB,GAAAA,CAAG,CACZoE,WAAW,EACX,gBAAiB1H,IAAQ+G,EACzB,iBAAiB,IAEnB5E,QAAS,kBACPJ,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,UAAWgJ,MAGtDA,EAXH,KAWU6G,EAAQ7G,GAXlB,WAiBR,yBAAOgC,UAAU,yCACf,6BACE,0BACE,0BAAK9B,EAAL,6BACA,0BAAKA,EAAL,6BACA,0BAAKA,EAAL,sCAGJ,6BACG0G,EAAOlR,KAAI,SAACiQ,EAAS5E,GAAV,OACV,sBAAIf,IAAKe,GACP,0BACE,gBAAC,KAAD,CACEuD,IAAIe,EAAAA,EAAAA,IACFC,EAAAA,GAAAA,4BACA,CACExL,WAAYA,EACZE,UAAWA,EACXqM,KAAMV,EAAQvM,aACda,KAAM0L,EAAQ1L,KACdP,KAAM,EAAKiO,QAAQC,cAErB3Q,EAAAA,EAAAA,WAAuBD,EAAQ,EAAK8K,iBAGrC6D,EAAQ1L,OAGb,0BAAK0L,EAAQvM,cACb,0BAAKuM,EAAQrE,wBA9F7B,GAA2CnB,EAAAA,Y,OAA9BwG,GAAAA,cAEUkB,GAAAA,G,oDCvBhB,I,iCAAMC,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,IAAQC,EAASpR,KAAKoH,MAAdgK,KAER,OACEA,GACE,gBAACC,GAAD,CAASrC,QAASsC,GAAOF,GAAMG,OAAO,0BACnCD,GAAOF,GAAMI,eAPxB,GAAmChI,EAAAA,WC2B5B,IAAMiI,GAAb,6B,IAAA,G,EAAA,E,gaAAA,uLACiB,CAAC,UAAW,YAD7B,uCAIE,WACE,MAOIzR,KAAKoH,MANPjE,EADF,EACEA,WACA9C,EAFF,EAEEA,OACA+K,EAHF,EAGEA,aACAoB,EAJF,EAIEA,YACAkF,EALF,EAKEA,UACArG,EANF,EAMEA,UAGIsG,GAAe,OAAIxO,EAAWwO,cAEtBA,EAAaC,MACzB,SAACC,GAAD,OAAOA,EAAEnN,UAAYvB,EAAWR,eAAe+B,YAI/CiN,EAAaxI,KAAK,CAChBjK,GAAIiE,EAAWR,eAAezD,GAC9BwF,QAASvB,EAAWR,eAAe+B,QACnCoN,QAAS3O,EAAWR,eAAeoP,aAIvC,IAAMC,EAAU,CACd,CAAE3I,IAAK,gBAAiB/F,KAAMiG,EAAF,kCAC5B,CAAEF,IAAK,WAAY/F,KAAMiG,EAAF,gCACvB,CAAEF,IAAK,SAAU/F,KAAMiG,EAAF,sCACrB,CAAEF,IAAK,aAAc/F,KAAMiG,EAAF,8BAGrB0I,EAAgB9O,EAAWR,eAAeoP,WAEhD,OACE,gBAAC3F,EAAD,CACEf,UAAWA,EACXd,MAAOpH,EAAWG,KAClB+I,SAAUlJ,EAAWE,UAAUkL,WAC/B9B,gBACE,gBAACyF,GAAD,CACEjB,aAAcjR,KAAKgR,QAAQC,aAC3BjO,KAAM2L,EAAAA,GAAAA,aACN5F,YAAU,IAGdyD,YAAa,gBAACW,EAAD,CAAaE,MAAOb,IACjCE,eACE,uBAAKrB,UAAU,0BACb,4BAAO9B,EAAP,gCACA,uBAAK8B,UAAU,4BACb,gBAAC8G,GAAA,EAAD,CACEvB,SAAU,SAACC,GAAD,OACRzF,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,UAAWwQ,KAEvDnJ,MAAOvE,EAAWR,eAAe+B,QACjC,aAAY6E,EAAZ,kDAECoI,EAAa5S,KAAI,SAACmN,GAAD,OAChB,gBAACkG,GAAA,EAAD,CACE/I,IAAK6C,EAAExH,QACPgD,MAAOwE,EAAExH,QACTqL,MAAO,IAAM7D,EAAExH,eAKtBuN,EACC,wBAAM5G,UAAU,gBAAhB,eACe,IACb,gBAAC8F,GAAD,CAAeC,KAAMa,KAErB,OAIP9O,EAAWI,YACV,gBAAC8G,EAAA,EAAD,CACE9B,QAAQ,SACR8J,UAAQ,EACR9H,MAAOhB,EAAF,8DAGT,uBAAK8B,UAAU,sBACb,uBAAKA,UAAU,QAAQrL,KAAKsS,WAAWZ,IACvC,uBAAKrG,UAAU,SACb,2BACE,gBAAC,MAAD,OAED2G,EAAQjT,KAAI,SAACuO,GACZ,IAAMiF,EAAIpP,EAAWR,eAAeC,SAAS0K,EAAKjE,KAClD,OAAKkJ,EAKH,uBAAKlH,UAAU,OAAOhC,IAAKiE,EAAKjE,KAC9B,qBAAGmJ,KAAMD,EAAG9K,OAAO,UAChB6F,EAAKhK,OANH,aA/FvB,wBAgHE,SAAmBmP,GACjB,MAAyBzS,KAAKoH,MAAtB/G,EAAR,EAAQA,OAAQ0C,EAAhB,EAAgBA,KAEV2P,EAAa,CACjBrP,UAAWrD,KAAKoH,MAAMjE,WAAWE,UAAUC,KAC3CH,WAAYnD,KAAKoH,MAAMjE,WAAWG,KAClCP,KAAMA,GAEF4P,EAAUrS,EAAAA,EAAAA,WAAuBD,EAAQL,KAAK4S,cAE9CC,EAAO,CACX,CACEJ,OAAmB,YAAXA,EACRlI,MAAOhB,EAAF,+BACL+D,MAAMoB,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,iBAAwB+D,EAAYC,IAEvD,CACEF,OAAmB,kBAAXA,EACRlI,MAAOhB,EAAF,qCACL+D,MAAMoB,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,0BAAiC+D,EAAYC,IAEhE,CACEF,OAAmB,aAAXA,EACRlI,MAAOhB,EAAF,gCACL+D,MAAMoB,EAAAA,EAAAA,IACJC,EAAAA,GAAAA,4BACA+D,EACAC,IAGJ,CACEF,OAAmB,eAAXA,EACRlI,MAAOhB,EAAF,kCACL+D,MAAMoB,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,0BAAiC+D,EAAYC,KAIlE,OAAO,gBAACG,GAAD,CAAUD,KAAMA,QArJ3B,GAAsCrJ,EAAAA,Y,OAAzBiI,GAAAA,cAEUP,GAAAA,G,gHCLhB,IAAM6B,GAAb,6B,IAAA,G,EAAA,E,gaAIE,WAAY3L,GAAO,6BACjB,cAAMA,IACD4L,gBAAkBxJ,EAAAA,YAFN,EAJrB,qCASE,WAAS,WACP,EAOIxJ,KAAKoH,MANP9D,EADF,EACEA,KACAX,EAFF,EAEEA,eACAU,EAHF,EAGEA,UACAsO,EAJF,EAIEA,aACAtR,EALF,EAKEA,OACA+K,EANF,EAMEA,aAGE6H,EAAiB,qCAAH,OAAwC5P,EAAUC,KAAlD,YAA0DA,GAM5E,OAJIjD,EAAOqE,UACTuO,GAAkB,IAAJ,OAAQ5S,EAAOqE,UAI7B,uBAAK2G,UAAU,2BACb,0BAAK9B,EAAL,gCACA,gBAAC2J,GAAA,EAAD,CAAMC,WAAW,GACf,gBAACC,GAAA,EAAD,KAAWzQ,EAAeC,SAAS+H,aACnC,gBAACyI,GAAA,EAAD,KACGzQ,EAAeC,SAASyQ,KAAKtU,KAAI,SAACkI,EAAKmD,GAAN,OAChC,gBAACkJ,GAAD,CAAKjK,IAAKe,GAAInD,OAIlB,gBAACmM,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,CAAOJ,WAAW,GAChB,gBAACK,GAAA,EAAD,CAAWnI,UAAU,iBAAiB9B,EAAtC,gCACA,gBAACiK,GAAA,EAAD,CAAWC,UAAQ,GAAE9Q,EAAeC,SAAS8Q,WAGjD,gBAACN,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,CAAOJ,WAAW,GAChB,gBAACK,GAAA,EAAD,CAAWnI,UAAU,gBAAgB9B,EAArC,wCACA,gBAACiK,GAAA,EAAD,CAAWC,UAAQ,GACjB,gBAACtB,GAAA,EAAD,CACEvB,SAAU,SAACC,GAAD,OACRzF,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,UAAWwQ,KAEvDnJ,MACErH,EAAOqE,QAAUrE,EAAOqE,QAAU/B,EAAe+B,QAEnD,aAAY6E,EAAZ,kDAECoI,EAAa5S,KAAI,SAACmN,GAAD,OAChB,gBAACkG,GAAA,EAAD,CACE/I,IAAK6C,EAAExH,QACPgD,MAAOwE,EAAExH,QACTqL,MAAK,UAAK7D,EAAExH,QAAP,qBAA2B4M,GAC9BpF,EAAE4F,SACFN,UAFG,YAGHtF,EAAExH,UAAY/B,EAAe+B,QAAU,WAAa,aAQlE,gBAAC0O,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,CAAOJ,WAAW,GAChB,gBAACK,GAAA,EAAD,CAAWnI,UAAU,iBAAiB9B,EAAtC,qCACA,gBAACiK,GAAA,EAAD,CAAWC,UAAQ,GACjB,gBAACE,GAAA,GAAD,CAAeC,YAAU,GAAEX,GAC3B,2BACE,kCADF,iFAIA,2BACE,qBAAGY,IAAK7T,KAAKgT,gBAAiBpJ,MAAO,CAAEK,QAAS,UAChD,gBAACsB,EAAA,GAAD,CACEF,UAAU,kBACV9C,QAAQ,OACRuL,KAAM,gBAAC,MAAD,MACNtI,QAAS,kBACP,EAAKuI,SACH,EAAK/C,QAAQC,aACb5N,EACAC,EACAX,KAIH4G,EAbH,6CAmBP5G,EAAeqR,kBACd,gBAACZ,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,CAAOJ,WAAW,GAChB,gBAACK,GAAA,EAAD,CAAWnI,UAAU,iBAClB9B,EADH,yCAGA,gBAACiK,GAAA,EAAD,CAAWC,UAAQ,GAChB9Q,EAAeqR,oBAMvBrR,EAAe4B,UAAU0P,kBACxB,gBAACb,GAAA,EAAD,KACE,uBAAK/H,UAAU,oBACb,uBACEA,UAAU,eACV6I,wBAAyB,CACvBC,OAAQxR,EAAe4B,UAAU0P,kBAAkBG,QAGvD,uBAAK/I,UAAU,cAEjB,gBAAC,KAAD,CACEsC,IAAIe,EAAAA,EAAAA,IACFC,EAAAA,GAAAA,0BACA,CACExL,WAAYG,EACZD,UAAWA,EAAUC,KACrBP,KAAM/C,KAAKgR,QAAQC,cAErB5Q,IAGDkJ,EAXH,6CAcA,SA1Id,sBAgJE,SAAiB8K,EAAUhR,EAAWC,EAAMX,GAAgB,WAC1DE,GAAAA,GAAAA,eACEwR,EACAhR,EAAUC,KACVA,EACAX,EAAe+B,SACfzB,MAAK,SAACqR,GAMN,EAAKtB,gBAAgBuB,QAAQ/B,KAAO8B,EACpC,EAAKtB,gBAAgBuB,QAAQC,eA7JnC,GAAoChL,EAAAA,Y,OAAvBuJ,GAAAA,cAEU7B,GAAAA,G,sBChBhB,I,YAAMuD,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAAgDzU,KAAKoH,MAA7C+D,EAAR,EAAQA,cAAe9K,EAAvB,EAAuBA,OAAQ+K,EAA/B,EAA+BA,aAEzBsJ,EAAe,CACnB,CACExV,GAAI,WACJqL,MAAOhB,EAAF,iCAEP,CACErK,GAAI,OACJqL,MAAOhB,EAAF,2BACLoL,UAAW,WACX3L,QAASlI,EAAAA,EAAAA,uBAAAA,KAAqC,SAACmG,GAAD,MAAU,CACtD/H,GAAI+H,EACJsD,MAAOtD,QAKb,OACE,gBAAC,KAAD,KACE,gBAAC2N,GAAA,EAAD,KACE,gBAACnE,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAACmE,GAAD,CACEzJ,aAAcA,EACd/K,OAAQA,EACRqU,aAAcA,IAEhB,gBAAChE,GAAA,EAAD,KACE,gBAACxF,EAAD,CACEtB,MAAO,CAAEkL,UAAW,QACpB1J,aAAcA,EACd/K,OAAQA,EACR8K,cAAeA,aAnCjC,GAAsC3B,EAAAA,W,oCCc/B,IAAMuL,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,EAQI/U,KAAKoH,MAPP4N,EADF,EACEA,YACA3U,EAFF,EAEEA,OACA+K,EAHF,EAGEA,aACAD,EAJF,EAIEA,cACA8J,EALF,EAKEA,UACAC,EANF,EAMEA,aACAnS,EAPF,EAOEA,KAGF,OACE,gBAAC,WAAD,KACE,gBAACoS,GAAA,GAAD,CAAU,aAAY5L,EAAZ,4CACPyL,EAAY1L,OAAS,EACpB0L,EAAYjW,KAAI,SAACuR,GAAD,OACd,gBAAC8E,IAAD,SACEC,SACEH,EAAe,EAAKI,yBAAyBhF,GAAK,KAEpDjH,IAAKiH,EAAEpR,IACHoR,EALN,CAMEvN,KAAMA,QAIV,gBAACwS,GAAD,CACE9J,gBAAiB,WACfnL,EAAAA,EAAAA,gBAA4B,CAC1BD,OAAAA,EACA8K,cAAAA,EACAC,aAAAA,QAOV,uBAAKC,UAAU,mBACb,4BACA,2BACE,gBAACmK,GAAD,CACEnV,OAAQA,EACR+K,aAAc,SAACzK,GAAD,OAAOyK,EAAazK,IAClCgP,MAAOsF,SA7CrB,sCAqDE,SAAiC9R,GAAgC,WAC/D,OACE,uBAAKyG,MAAO,CAAEK,QAAS,OAAQwL,WAAY,WACzC,gBAAClK,EAAA,GAAD,CACEC,QAAS,kBAAM,EAAKpE,MAAMsO,mBAAmBvS,EAAWjE,GAAI,WAC5DqJ,QAAQ,aAEPgB,EAJH,2CAMA,gBAACoM,GAAD,CACEC,MAAO,CACL,gBAACC,GAAA,EAAD,CACErK,QAAS,SAAClM,GAAD,OACP,EAAK8H,MAAMsO,mBAAmBvS,EAAWjE,GAAI,cAE/CmK,IAAI,KAEHlG,EAAWI,WAAagG,EAAxB,mCAAyCA,EAAzC,0CAtEf,GAAoCC,EAAAA,W,2DCC7B,I,SAAM4L,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MASIpV,KAAKoH,MARP9D,EADF,EACEA,KAEAX,EAHF,EAGEA,eACAU,EAJF,EAIEA,UACAyS,EALF,EAKEA,cACAT,EANF,EAMEA,SACA9R,EAPF,EAOEA,WACAR,EARF,EAQEA,KAGIgT,EAAQ,GAER7H,EAAU7K,EAAU6K,SAAW7K,EAAUC,KAE3CwS,GACFC,EAAM5M,KACJ,gBAAC6M,GAAA,EAAD,CAAcvC,UAAU,EAAOwC,YAAY,EAAO5M,IAAI,MACpD,gBAACuD,GAAD,CACEC,IAAKqB,EAAU,QACfpB,MAAOzJ,EAAUkL,WACjBxB,KAAK,OACLC,aAAa,EACbkJ,MAAM,WAMd,IAAM/H,GAAiBC,EAAAA,EAAAA,IACrBzL,EAAeC,SAASP,UAsD1B,OAnDA0T,EAAM5M,KACJ,gBAAC6M,GAAA,EAAD,CAAc3M,IAAI,WAChB,2BACE,gBAAC,KAAD,CACEsE,IAAIe,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,iBAAwB,CACrCxL,WAAYG,EACZD,UAAWA,EAAUC,KACrBP,KAAMA,KAGPO,GAEFC,GAAc,gBAAC4S,GAAD,MACdL,EACC,gBAACtH,EAAA,EAAD,KACE,gBAACI,EAAA,EAAD,CAAMC,UAAWC,EAAAA,EAAAA,OAAjB,eAAkDZ,IAElD,MAEN,uBAAK7C,UAAU,SAAS1I,EAAeC,SAAS+H,aAChD,uBAAKU,UAAU,qCACZ3L,OAAOD,KAAK0O,EAAe9L,UAAUtD,KAAI,SAACmQ,GAAD,OACxC,uBAAK7F,IAAK6F,GACR,gBAACU,GAAD,CACEvE,UAAU,gCACV0E,MAAOb,EACPW,OAAQ1B,EAAe9L,SAAS6M,UAKxC,uBAAK7D,UAAU,6BACb,gBAAC+K,GAAA,EAAD,KACGzT,EAAeC,SAASyQ,KAAKtU,KAAI,SAACkI,EAAKuG,GAAN,OAChC,gBAAC8F,GAAD,CAAKjK,IAAKmE,GAAQvG,UAO5B8O,EAAM5M,KACJ,gBAAC6M,GAAA,EAAD,CAAcvC,UAAU,EAAOwC,YAAU,EAAC5M,IAAI,SAC3CgM,EAAW,uBAAKhK,UAAU,SAASgK,GAAkB,KACtD,uBAAKhK,UAAU,mBAAf,WACU,gBAAC8F,GAAD,CAAeC,KAAMzO,EAAeoP,cAE9C,uBAAK1G,UAAU,SAAf,IAAyB1I,EAAe+B,WAK1C,gBAAC2R,GAAA,EAAD,CAAc,kBAAgB,gBAC5B,gBAACC,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAmBC,cAAeT,UAzF5C,GAAwCvM,EAAAA,W,mECc3BqL,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYzN,GAAO,4BACjB,cAAMA,IADW,8BAuJA,WACjB,EAAKS,SAAS,CACZD,QAAS,EAAKO,MAAMP,aAzJL,sCA6JQ,SAACE,GAC1B,IAAI2O,EAAY,EAAKrP,MAAM/G,OAAO,EAAK8H,MAAMuO,eAAexX,IACvDuX,IACHA,EAAY,IAId,IAAME,EAAa7O,EAAM8O,cAAc1X,GAAG2X,QAAQ,oBAAqB,IACvE,GAAIJ,EAAUjU,SAASmU,GAAa,CAClC,IAAMnJ,EAAQiJ,EAAUK,QAAQH,GAC5BnJ,GAAS,GACXiJ,EAAUzL,OAAOwC,EAAO,QAG1BiJ,EAAUtN,KAAKwN,GAEjB,EAAKI,eAAeN,MA1KpB,EAAKtO,MAAQ,CACXuO,eAAgBtP,EAAMsN,aAAa,GACnCsC,UAAW,GACXC,YAAY,EACZC,aAAa,EACbtP,QAAQ,EACRuP,mBAAmB,GATJ,EADrB,qCAcE,WAAS,WACCzC,EAAiB1U,KAAKoH,MAAtBsN,aACAgC,EAAmB1W,KAAKmI,MAAxBuO,eAEFU,EAAgB1C,EAAa3V,KAAI,SAACmN,GAAD,OACrC,gBAAC2J,GAAA,EAAD,CACErK,QAAS,kBAAM,EAAK3D,SAAS,CAAE6O,eAAgBxK,EAAG8K,UAAW,MAC7D3N,IAAK6C,EAAEhN,IAENgN,EAAE3B,UAIP,OACE,gBAAC8M,GAAA,EAAD,KACE,gBAAC1B,GAAD,CACE2B,WAAW,WACXC,YACE,4BACE,gBAAC,MAAD,MACC,MACAb,EAAenM,OAGpBV,SAAS,OACT2N,SAAS,EACT5B,MAAOwB,IAERpX,KAAKyX,YAAYf,GAClB,gBAACnL,EAAA,GAAD,CACEC,QAAS,kBAAM,EAAKkM,gBACpBnP,QAASoP,EAAAA,GAAAA,QACT5O,YAAa/I,KAAKmI,MAAM6O,WAExB,gBAAC,MAAD,UAhDV,yBAsDE,SAAoBN,GAA8B,WAChD,OAAQA,EAAe/B,WACrB,IAAK,WACH,IAAM3L,EAAU0N,EAAe1N,QAAQjK,KAAI,SAACmK,GAAD,OAIzC,gBAACE,EAAA,EAAD,CAAcC,IAAKH,EAAOhK,GAAIwI,MAAOwB,EAAOhK,QAGxC0Y,EAAS,CACb,gBAACC,GAAA,EAAD,CACE9H,MAAOxG,EAAC,kCAAemN,EAAexX,GACtCmK,IAAKqN,EAAexX,IAEnB8J,IAIL,OACE,gBAACP,EAAA,EAAD,CACEF,QAASC,EAAAA,GAAAA,SACTG,SAAU3I,KAAK2I,SACfV,SAAUjI,KAAK8X,iBACflQ,OAAQ5H,KAAKmI,MAAMP,OACnBkB,gBAAiBS,EAAC,kCAAemN,EAAexX,GAAG6Y,cACnD1P,WAAYrI,KAAKoH,MAAM/G,OAAOL,KAAKmI,MAAMuO,eAAexX,IACxD8Y,WAAS,GAERJ,GAGP,IAAK,SACH,OACE,gBAACjC,GAAD,CACE2B,WAAW,WACXC,YACEvX,KAAKiY,gBAAgBjY,KAAKmI,MAAM6O,UAAWN,IAC3CA,EAAe5F,aACf4F,EAAenM,MAEjBiN,SAAS,EACT3N,SAAS,OACT+L,MAAOc,EAAe1N,QAAQjK,KAAI,SAACmN,EAAG9B,GAAJ,OAChC,gBAACyL,GAAA,EAAD,CACErK,QAAS,kBACP,EAAK3D,SAAS,CAAEmP,UAAW9K,EAAEhN,KAAM,kBAAM,EAAKwY,mBAEhDrO,IAAK6C,EAAEhN,IAENgN,EAAE3B,YAKb,QACE,OACE,gBAAC2N,GAAA,GAAD,CACE,aAAYxB,EAAexX,GAC3B4R,YACE4F,EAAe5F,aACfvH,EADA,oCACcmN,EAAenM,MAAMwN,eAErCrQ,MAAO1H,KAAKmI,MAAM6O,UAClBpG,SAAU,SAAC1B,GAAD,OAAO,EAAKrH,SAAS,CAAEmP,UAAW9H,KAC5CiJ,WAAY,SAAC7Y,GAAD,OAAO,EAAK8Y,YAAY9Y,SAvHhD,yBA6HE,SAAoBA,GAEJ,UAAVA,EAAE+J,KACJrJ,KAAK0X,iBAhIX,4BAoIE,SAAuBW,GACrBrY,KAAKoH,MAAMgE,aACT9K,EAAAA,GAAAA,SACEN,KAAKoH,MAAM/G,OACXL,KAAKmI,MAAMuO,eAAexX,GAC1BmZ,MAzIR,0BA8IE,WACErY,KAAKoH,MAAMgE,aACT9K,EAAAA,GAAAA,SACEN,KAAKoH,MAAM/G,OACXL,KAAKmI,MAAMuO,eAAexX,GAC1Bc,KAAKmI,MAAM6O,cAnJnB,6BAiLE,SAAwBA,EAAmBN,GACzC,OAAKM,GAAcN,MAAAA,GAAAA,EAAgB1N,QAE5B0N,EAAe1N,QAAQ4I,MAAK,SAAC0G,GAAD,OAASA,EAAIpZ,KAAO8X,KAAWzM,MAFfyM,MAlLvD,GAAoCxN,EAAAA,WC7C7B,IAAM2M,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,uBACEvM,MAAO,CACLK,QAAS,eACTsO,OAAQ,MACRC,gBAAiB,UACjBC,MAAO,QACPC,SAAU,OACVC,YAAa,MACbC,aAAc,MACdC,cAAe,MACfC,WAAY,MACZC,aAAc,QAGfxP,EAdH,uCAHN,GAAmCC,EAAAA,W,8CCiB5B,I,SAAMwP,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAACC,GAAA,EAAD,CAAY1Q,QAAS2Q,GAAAA,EAAAA,OACnB,gBAACC,GAAA,EAAD,CAAgBrF,KAAM9T,KAAKoH,MAAM0M,OACjC,gBAAC7G,EAAA,EAAD,CAAOC,aAAa,KAAKH,KAAK,MAC3B/M,KAAKoH,MAAMmD,OAEd,gBAAC6O,GAAA,EAAD,KAAiBpZ,KAAKoH,MAAMuD,aAC3B3K,KAAKoH,MAAMiS,QACV,gBAACC,GAAA,EAAD,KAAoBtZ,KAAKoH,MAAMiS,aAVzC,GAAsC7P,EAAAA,WCV/B,IAAM+L,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAACyD,GAAD,CACEzO,MAAOhB,EAAF,wCACLoB,YAAapB,EAAF,gGACXuK,KAAMyF,GAAAA,GACNF,OACErZ,KAAKoH,MAAMqE,gBACT,gBAACF,EAAA,GAAD,CAAQC,QAASxL,KAAKoH,MAAMqE,gBAAiBlD,QAAQ,QAClDgB,EADH,0CAGE,WAZd,GAAsCC,EAAAA,W,WCE/B,I,MAAMgQ,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAACR,GAAD,CACElF,KAAM9T,KAAKoH,MAAMiS,OAASI,GAAAA,GAAiBF,GAAAA,GAC3ChP,MAAOvK,KAAKoH,MAAMmD,MAClBI,YAAa3K,KAAKoH,MAAMuD,YACxB0O,OAAQrZ,KAAKoH,MAAMiS,aAP3B,GAAsC7P,EAAAA,W,YCL/B,IAAMkQ,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAACV,GAAD,CACElF,KAAM6F,GAAAA,GACNpP,MAAOhB,EAAF,gEACLoB,YAAapB,EAAF,0FANnB,GAA4CC,EAAAA,WCQIA,EAAAA,UAAzC,I,mCCOyBA,EAAAA,UAAzB,I,wBCXA,I,2BAAMoQ,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAACC,GAAA,EAAD,CACE,aAAW,kBACXhQ,SAAUiQ,GAAAA,EAAAA,IACVC,YAAa/Z,KAAKoH,MAAM4H,SAExB,gBAACzD,EAAA,GAAD,CAAQyO,aAAc,OAAQzR,QAAS,QAAS8C,UAAW,UACzD,gBAAC,MAAD,YATV,GAAgC7B,EAAAA,W,WCqBzB,I,oCAAMyQ,GAAb,6B,IAAA,G,EAAA,E,gaAIE,WAAY7S,GAAO,4BACjB,cAAMA,IADW,+BAFP,GAKV,EAAK8S,WAAa1Q,EAAAA,YAHD,EAJrB,iDAUE,WACExJ,KAAKma,eAXT,+BAcE,WACEna,KAAKma,eAfT,oBAkBE,WAAS,WACP,EAAoDna,KAAKoH,MAAjDgT,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,SAE9B,OAFA,EAAwCC,SAEzBD,EAEX,uBAAKjP,UAAU,kBACZ+O,EAAiBpa,KAAKwa,YAAYJ,GAAkB,KACrD,uBAAK/O,UAAU,wBACZiP,EAAW,uBAAKjP,UAAU,WAAWiP,GAAkB,gBAACG,GAAA,EAAD,SAMhEza,KAAK0a,UACHN,EAAejS,QAAUrD,GAAAA,GAAAA,SACzBsV,EAAejS,QAAUrD,GAAAA,GAAAA,QAGzB,uBAAKuG,UAAU,+BACZrL,KAAKwa,YAAYJ,GAClB,uBAAK/O,UAAU,gBACb,uBACEA,UAAWsB,GAAAA,CAAG,CACZ,gBAAiB3M,KAAKoH,MAAMuT,eAC5B,qBAAqB,KAGvB,gBAAC,IAAD,CACE9Q,SAAS,OACTmF,QAAShP,KAAK0a,UAAYnR,EAAjB,mCAAkCA,EAAlC,sCAET,wBACEiC,QAAS,kBAAM,EAAKoP,qBACpBvP,UAAU,wCAKfgP,EAAKQ,SAAS9b,KAAI,SAAC8S,EAAGzH,GACrB,OAAO,EAAK0Q,cAAcjJ,EAAGzH,MAGL,IAAzBiQ,EAAKQ,SAASvR,OACb,uBAAK+B,UAAU,WACb,wBAAMA,UAAU,SAAS9B,EAAzB,oDAEA,KAEH8Q,EAAKlS,QAAUrD,GAAAA,GAAAA,WACd,uBAAKuG,UAAU,WACb,2BACA,wBAAMA,UAAU,WAAW9B,EAA3B,8BAIH8Q,EAAKlS,QAAUrD,GAAAA,GAAAA,QACd,uBAAKuG,UAAU,WACb,2BACA,wBAAMA,UAAU,UAAU9B,EAA1B,iCAIN,uBAAK8B,UAAU,eAAehC,IAAK,OAAQwK,IAAK7T,KAAKka,iBAjF7D,2BAsFE,SAAsB3X,EAAM6H,GAC1B,OACE,uBAAKiB,UAAU,UAAUhC,IAAKe,GAC5B,wBAAMiB,UAAW9I,EAAKwY,MAAMhD,eAAgBxV,EAAKyY,QAAjD,QAzFR,yBA8FE,SAAoBZ,GAClB,MAAwDpa,KAAKoH,MAArDiT,EAAR,EAAQA,KAAMY,EAAd,EAAcA,mBAAoBC,EAAlC,EAAkCA,kBAE9BC,EAAsB,GAAH,OAAMf,EAAe/W,UAArB,YAAkC+W,EAAe9W,MACpE8X,EAAiB,+BAErB,GAAIF,EAAmB,CACrB,IAAMG,EAAQH,EAAkBI,gBAE9BF,EADEC,EAAM7Y,SAAS1B,EAAAA,EAAAA,cACA,WACRua,EAAM7Y,SAAS1B,EAAAA,EAAAA,aACP,uBACRua,EAAM7Y,SAAS1B,EAAAA,EAAAA,WACP,WAEA,8BAGnBqa,EACE,gBAAC,KAAD,CACE9P,UAAU,QACVsC,IAAIe,EAAAA,EAAAA,IACFC,EAAAA,GAAAA,iBACA,CACEtL,UAAW+W,EAAe/W,UAC1BF,WAAYiX,EAAe9W,KAC3BP,KAAMsY,EAAM,IAEd,CACE3W,QAAS0V,EAAe1V,WAI3B0V,EAAe/W,UAdlB,IAc8B+W,EAAe9W,MAKjD,OACE,4BACI2X,GACA,uBAAK5P,UAAU,mBAAmB8P,GAGpC,uBAAK9P,UAAU,aACb,2BACE,wBAAMA,UAAU,cAAc9B,EAA9B,iCACA,gBAACgS,GAAD,CAAiB7L,KAAK,YAAY8L,OAAQpB,EAAejS,SAE3D,2BACE,wBAAMkD,UAAU,cAAc9B,EAA9B,0CACC6R,GAEH,2BACE,wBAAM/P,UAAU,cAAc9B,EAA9B,kCACC6Q,EAAe1V,SAGjB2V,GAAQA,EAAKoB,MACZ,2BACE,wBAAMpQ,UAAU,cAAc9B,EAA9B,wCACC8Q,EAAKoB,MAAMjc,KACZ,2BACE,4BAAO6a,EAAKoB,MAAM9Q,cAEpB,2BACE,4BAAO0P,EAAKoB,MAAMC,aAGpB,SAnKd,+BAyKE,WACM1b,KAAK0a,UACP1a,KAAKoH,MAAMuU,mBAAmB3b,KAAKoH,MAAMuT,gBAEzC3a,KAAKka,WAAW3F,QAAQqH,eAAe,CAAEC,SAAU,aA7KzD,wBAiLE,WAAqB,WACf7b,KAAKoH,MAAMuT,gBAAkB3a,KAAKka,WAAW3F,SAC/C9S,OAAOqa,uBAAsB,WAC3B,EAAK5B,WAAW3F,QAAQqH,eAAe,CAAEC,SAAU,WAE9C,EAAKnB,WACR,EAAKtT,MAAMuU,mBAAkB,UAvLvC,GAAmCnS,EAAAA,W,qlBCO5B,IAAMuS,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAY3U,GAAO,6BACjB,cAAMA,IAEDe,MAAQ,CACX6T,QAAS,IAJM,EADrB,qCASE,WAAS,WACP,EASIhc,KAAKoH,MARP6U,EADF,EACEA,aACAC,EAFF,EAEEA,WACA9B,EAHF,EAGEA,eACA+B,EAJF,EAIEA,WACAC,EALF,EAKEA,gBACA/b,EANF,EAMEA,OACA+K,EAPF,EAOEA,aACAmP,EARF,EAQEA,QAGF,OACE,uBAAKlP,UAAU,eACZrL,KAAKqc,sBAAsBF,GAC5B,gBAAC,KAAD,KACE,gBAACtH,GAAD,CACEzJ,aAAc,SAACzK,GACbA,EAAC,KAAW,EACZ,EAAKyG,MAAMgE,aAAazK,IAE1BN,OAAQA,EACRqU,aAAc,CACZ,CACExV,GAAI,WACJqL,MAAOhB,EAAF,6BAEP,CACErK,GAAI,QACJqL,MAAOhB,EAAF,8BACLoL,UAAW,SACX3L,QAAS,CACP,CACE9J,GAAI,YACJqL,MAAOhB,EAAF,kCAEP,CACErK,GAAI,SACJqL,MAAOhB,EAAF,+BAEP,CACErK,GAAI,UACJqL,MAAOhB,EAAF,gCAEP,CACErK,GAAI,UACJqL,MAAOhB,EAAF,sCAOjB,gBAAC2B,EAAD,CACEE,aAAc,SAACzK,GACbA,EAAC,KAAW,EACZ,EAAKyG,MAAMgE,aAAazK,IAE1BN,OAAQA,EACR8K,cAAe,CAAC,YAAa,OAAQ,OAAQ,WAAY,aACzDQ,UAAW,CACT0E,SAAU9G,EAAF,4BACRpB,MAAOoB,EAAF,iCAIT,2BACGvJ,KAAKsc,WAAWL,EAAcC,EAAY9B,EAAgBG,IAE7D,gBAAC,KAAD,CACEtF,UAAWmH,EACXG,QAASlc,EAAOmc,WAAa1b,EAAAA,EAAAA,kBAC7BC,KAAMV,EAAOU,MAAQ,EACrB0b,UAAW,SAAClT,EAAG5I,GAAJ,OACTyK,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,OAAQM,KAEpD+b,gBAAiB,SAACnT,EAAG5I,GACnByK,EAAa,GAAD,MAAM/K,GAAN,IAAcU,KAAM,EAAGyb,UAAW7b,MAEhDgc,WAAW,OAxFrB,wBA8FE,SAAmBV,EAAcC,EAAY9B,EAAgBG,GAAS,WACpE,OAAIA,EAEA,uBAAKlP,UAAU,WACb,gBAACoP,GAAA,EAAD,OAKkB,IAAtByB,EAAW5S,SACVsT,EAAAA,EAAAA,IAAY5c,KAAKoH,MAAM/G,OAAQ,CAAC,WAAY,UAQd,IAAtB6b,EAAW5S,OACb,gBAACiM,GAAD,MAIP,2BACG2G,EAAWnd,KAAI,SAACwD,GACf,OACE,uBACEiJ,QAAS,kBAAMyQ,EAAa1Z,IAC5B8G,IAAK9G,EAAKrD,GACVmM,UAAWsB,GAAAA,CAAG,CACZoE,WAAW,EACX,kBAAkB,EAClB,gBACExO,EAAKmN,OAAS0K,EAAe1K,MAC7BnN,EAAKrD,KAAOkb,EAAelb,MAG/B,uBAAKmM,UAAU,QACb,qBAAGA,UAAW,EAAKwR,eAAeta,EAAK4F,UAEzC,uBAAKkD,UAAU,SAAS,EAAKyR,kBAAkBva,SA3BrD,gBAACiX,GAAD,CACEjP,MAAOhB,EAAF,kCACLoB,YAAapB,EAAF,8EA7GrB,+BA8IE,SAA0BhH,GACxB,OACE,2BACE,2BACGA,EAAKe,KADR,IACef,EAAKmC,QAAU,IAAMnC,EAAKmC,QAAU,IAEnD,uBAAK2G,UAAU,YAAf,WACW9I,EAAK4F,MAAO,IACpB5F,EAAKwa,YAAc,gBAAC5L,GAAD,CAAeC,KAAM7O,EAAKwa,cAAkB,SAtJ1E,4BA4JE,SAAuB5U,GACrB,IAAM6U,EAAc,kBAEpB,OAAQ7U,GACN,KAAKrD,GAAAA,GAAAA,QAEL,KAAKA,GAAAA,GAAAA,QACH,OAAOkY,EAAc,6BACvB,KAAKlY,GAAAA,GAAAA,UACH,OAAOkY,EAAc,oBACvB,QACE,OAAOA,EAAc,sBAvK7B,mCA2KE,SAA8Bb,GAAY,WACxC,OACE,uBAAK9Q,UAAU,8BACb,uBAAKA,UAAU,SAAS9B,EAAxB,kCACA,uBAAK8B,UAAU,YACb,gBAAC8G,GAAA,EAAD,CACEvB,SAAU,SAACC,GACT,IAAMxQ,EAASC,EAAAA,EAAAA,SACb,EAAK8G,MAAM/G,OACX,YACAwQ,GAEFxQ,EAAM,KAAW,EACjB,EAAK+G,MAAMgE,aAAa/K,IAE1BqH,MAAO1H,KAAKoH,MAAM/G,OAAOgD,UACzB,aAAYkG,EAAZ,yCAEC4S,EAAWpd,KAAI,SAACke,GAAD,OACd,gBAAC7K,GAAA,EAAD,CAAkB/I,IAAK4T,EAAG3Z,KAAMyM,MAAOkN,EAAG3Z,KAAMoE,MAAOuV,EAAG3Z,iBA9LxE,GAAgCkG,EAAAA,WCvBzB,IAAMsJ,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,OACE,uBAAKzH,UAAU,aACb,sBAAIA,UAAU,mBACXrL,KAAKoH,MAAMyL,KAAK9T,KAAI,SAACme,GAAD,OAAS,EAAKC,UAAUD,UALvD,uBAWE,YAAmD,IAA/B5P,EAA+B,EAA/BA,KAAM/C,EAAyB,EAAzBA,MAAyB,IAAlBkI,OAAAA,OAAkB,SACjD,OACE,sBACEpH,UAAWsB,GAAAA,CAAG,CACZ,mBAAmB,EACnB,eAAgB8F,IAElBpJ,IAAKkB,GAEL,gBAAC,KAAD,CAAMoD,GAAIL,EAAMjC,UAAU,mBACxB,wBAAMA,UAAU,wBAAwBd,SArBlD,GAA8Bf,EAAAA,W,YCZvB,IAAM4T,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAACC,GAAA,EAAD,CAAUzT,MAAO,CAAEsM,MAAO,OAAQoH,OAAQ,SACxC,gBAAC7C,GAAA,EAAD,WAJR,GAAwCjR,EAAAA,W,YCGjC,I,2BAAM+T,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC,WAAD,KACE,2BACElS,UACE,gGAGF,gBAAC4B,EAAA,EAAD,CAAOC,aAAa,MAClB,gBAACsQ,GAAA,EAAD,QAGJ,gBAACC,GAAD,KACE,+BACE,gBAACL,GAAD,aAfZ,GAA2C5T,EAAAA,WCcpC,IAAMkU,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYtW,GAAO,kCACXA,GAFV,qCAKE,WACE,IAAQuW,EAAiB3d,KAAKoH,MAAtBuW,aACR,OAA4B,IAAxBA,EAAarU,OAEb,gBAACkQ,GAAD,CACEjP,MAAOhB,EAAF,iDACLoB,YAAa,KAIZ3K,KAAK4d,YAAYD,KAf5B,yBAkBE,SAAoBA,GAAc,WAE5BE,EAAmB,CACrB/b,QAAS,CACP,CACEyI,MAAOhB,EAAF,yCACLmG,KAAM,OACNxQ,GAAI,gBAEN,CACEqL,MAAOhB,EAAF,uCACLmG,KAAM,OACNxQ,GAAI,cAEN,CACEqL,MAAOhB,EAAF,qCACLmG,KAAM,OACNxQ,GAAI,WAEN,CACEqL,MAAOhB,EAAF,oCACLmG,KAAM,OACNxQ,GAAI,cAEN,CACEqL,MAAOhB,EAAF,gCACLmG,KAAM,OACNxQ,GAAI,mBAEN,CACEqL,MAAOhB,EAAF,yCACLmG,KAAM,OACNxQ,GAAI,cAEN,CACEqL,MAAO,GACPmF,KAAM,OACNxQ,GAAI,WAWV,MANIsC,aAAoBV,EAAAA,EAAAA,2BACtB+c,EAAiB/b,QAAU+b,EAAiB/b,QAAQQ,QAAO,SAACwb,GAC1D,MAAqB,eAAdA,EAAO5e,IAAqC,eAAd4e,EAAO5e,OAK9C,yBACE,aAAYqK,EAAZ,2CACA8B,UAAU,4BAEV,gBAAC0S,GAAD,CACE/U,QAAS6U,EACTxd,OAtDS,CAAE2d,KAAM,cAuDjB5S,aAAc,SAACzK,GAAD,OAAOsd,QAAQC,IAAIvd,MAEnC,6BACGgd,EAAa5e,KAAI,SAACkH,GAAD,OAAkB,EAAKkY,UAAUlY,UA7E7D,uBAmFE,SAAkBA,GAChB,IAAMmY,EAAY,CAChB,WADgB,wBAECnY,EAAaoY,WAAW/a,KAFzB,SAGhB,GAHgB,yBAIE2C,EAAaoY,WAAW/a,KAJ1B,yBAKTgb,EAAAA,EAAAA,IAAWrY,EAAasY,YAC/B,+BAGF,OACE,sBAAIlV,IAAKpD,EAAa3C,MACpB,0BAAK2C,EAAa3C,MAClB,0BAAK2C,EAAaoY,WAAW/a,MAC7B,0BAAK2C,EAAaoY,WAAWG,eAC5Bhd,aACDV,EAAAA,EAAAA,yBAAqC,KAASmF,EAAaoY,WACtDI,kBACH,0BACE,gBAACtN,GAAD,CAAeC,KAAMnL,EAAaoY,WAAWI,qBAG/C,0BAAK,OAEP,0BACE,gBAAC9K,GAAA,GAAD,CAAeC,YAAU,IACtB0K,EAAAA,EAAAA,IAAWrY,EAAasY,aAG5B/c,aAAoBV,EAAAA,EAAAA,yBAAqC,KACxD,0BACE,gBAAC6S,GAAA,GAAD,CAAe+K,QAAM,EAAC9K,YAAU,EAACrL,QAAS,aACvC6V,EAAUO,KAAK,QAItB,0BACE,4BACE,gBAAChJ,GAAD,CACEC,MAAO,CACL,gBAACC,GAAA,EAAD,CACExM,IAAI,IACJwF,UACE,gBAAC,KAAD,CAAMlB,IAAIe,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,MAAa,IAAKlH,OAAO,UAC3C8B,EADH,8CA9HpB,GAA0CC,EAAAA,W,WCLnC,IAAMoD,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA4D5M,KAAKoH,MAAzD2F,EAAR,EAAQA,KAAMD,EAAd,EAAcA,MAAOD,EAArB,EAAqBA,IAAKxB,EAA1B,EAA0BA,UAAW2B,EAArC,EAAqCA,YAE/BpD,EAAQ,CACZ0T,OAAQvQ,EACR9C,QAAS,OACT2U,eAAgB,SAChBnJ,WAAY,SACZS,MAPF,EAAkDA,OAiBlD,OAPIlJ,EACFpD,EAAK,SAAemD,EAEpBnD,EAAK,MAAYmD,EAKjB,uBAAK1B,UAAWA,EAAWzB,MAAOA,GAChC,uBACEA,MAAO,CAAEiV,UAAW,UAAWC,UAAW/R,GAC1CgS,IAAKjS,GAASkS,GACdnS,IAAKA,SAxBf,GAA0BrD,EAAAA,W,wCCZnB,I,MAAMiU,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA0Czd,KAAKoH,MAAvCmF,EAAR,EAAQA,SAAUlB,EAAlB,EAAkBA,UAAc4T,GAAhC,cACA,OACE,oCACE5T,UAAWsB,GAAAA,CACT,0BACA,0BACAtB,IAEE4T,GAEH1S,OAZT,GAA0B/C,EAAAA,W,wBCWnB,I,GAAM0V,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA+Dlf,KAAKoH,MAA5D+X,EAAR,EAAQA,KAAMrO,EAAd,EAAcA,YAAasO,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,WAAYC,EAAnD,EAAmDA,QAEnD,OACE,gBAACC,GAAA,EAAD,KACE,uBAAKlU,UAAU,mBACZiU,GACC,uBAAKjU,UAAU,iBACb,gBAACmU,GAAA,EAAD,CAAWC,QAAQ,YAAYJ,WAAYA,GACzC,uBAAKngB,GAAG,kBAAkBqK,EAA1B,qCACA,gBAACmW,GAAA,GAAD,CACE,kBAAgB,iBAChBxgB,GAAG,YACHwI,MAAOyX,EACPvO,SAAU,SAAClJ,GAAD,OAAW0X,EAAW1X,IAChCoJ,YAAaA,MAKrB,uBAAKzF,UAAU,4BACZiU,GAAW/V,EAAJ,+BACR,uBAAK8B,UAAWiU,EAAU,uBAAyB,gBAChDH,EACC,gBAAC,GAAD,CAAe5S,SAAU4S,IAEzB,gBAAC,GAAD,CAAe5S,SAAUuE,YA3BzC,GAAoCtH,EAAAA,W,oBCW7B,I,8BAAMmW,GAAb,6B,IAAA,G,EAAA,E,gaAAA,iMAC2B,IAD3B,uCAEE,WACE,MAAoD3f,KAAKoH,MAAjDmH,EAAR,EAAQA,WAAYjL,EAApB,EAAoBA,KAAM4K,EAA1B,EAA0BA,QAAS0R,EAAnC,EAAmCA,aACnC,OACE,gBAACvR,EAAA,EAAD,CAAMhD,UAAU,qBACd,gBAACiD,EAAA,EAAD,KACE,gBAACuR,GAAA,EAAD,KACE,gBAACjT,GAAD,CACEI,aAAW,EACXF,MAAOyB,EACP1B,IAAKqB,EAAU,QACfnB,KAAK,WAIX,gBAAC,IAAD,CAASiC,QAASd,GAAW5K,GAC3B,gBAACwc,GAAA,EAAD,KAAY9f,KAAKiP,eAAef,GAAW5K,KAE7C,gBAAC,IAAD,CAAS0L,QAAS1L,GAChB,gBAACyL,EAAA,EAAD,KAAW/O,KAAKiP,eAAe3L,KAGhCsc,GACC,gBAACxQ,EAAA,EAAD,KACE,gBAAC,KAAD,CAAMzB,GAAIiS,GAAerW,EAAzB,6CAzBZ,4BAgCE,SAAuBgG,GACrB,OAAKA,EAGDA,EAAEjG,OAAStJ,KAAKwP,uBACXD,EAAEE,MAAM,EAAGzP,KAAKwP,wBAA0B,MAE1CD,EALA,OAlCb,GAAmC/F,EAAAA,W,qlBCJ5B,I,iCAAMuW,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAY3Y,GAAO,6BACjB,cAAMA,IAEDe,MAAQ,CACX6X,kBAAmB,IAJJ,EADrB,qCASE,WAAS,WACP,EAA6ChgB,KAAKoH,MAA1C/D,EAAR,EAAQA,UAAW4c,EAAnB,EAAmBA,cAEnB,OAFA,EAAkCC,OAE7B7c,EAIH,gBAACkc,GAAA,EAAD,KACE,uBAAKlU,UAAU,YACb,uBAAKA,UAAU,UACb,gBAACmU,GAAA,EAAD,CAAWC,QAAQ,OAAO1P,MAAOxG,EAAF,4BAAW4W,YAAU,GAClD,gBAACjI,GAAA,GAAD,CACEiI,YAAU,EACVpX,YAAU,EACV7J,GAAG,OACHwQ,KAAK,OACLhI,MAAOrE,EAAUC,QAIrB,2BAEA,gBAACkc,GAAA,EAAD,CACEC,QAAQ,UACR1P,MAAOxG,EAAF,oCACL6W,kBAAmBH,EAAa,QAChCI,UAAWrgB,KAAKsgB,UAAU,YAAaL,KAEvC,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,YAAaL,IACvCE,YAAU,EACVjhB,GAAG,UACHwQ,KAAK,OACLhI,MAAOrE,EAAU6K,QACjB0C,SAAU,SAAClJ,EAAOI,GAAR,OAAkB,EAAKyY,YAAY7Y,EAAOI,QAI1D,uBAAKuD,UAAU,QACb,gBAACsU,GAAkBtc,KAIvB,gBAACmc,GAAA,EAAD,CACEC,QAAQ,SACR1P,MAAOxG,EAAF,wCACL8B,UAAU,mBACV+U,kBAAmBH,EAAa,OAChCI,UAAWrgB,KAAKsgB,SACbE,MAAMC,OAAOzgB,KAAKmI,MAAM6X,uBACrB,WAAYC,KAGlB,2BAEA,gBAACS,GAAD,CACEC,OAAQtd,EAAUsd,OAClBC,qBAAsB,CAAC,mBAAoB,uBAC3CC,UAAW,SAACC,GACV,IAAMC,EAAQ,MAAK1d,GACnB0d,EAAMJ,OAASG,EACf,EAAK1Z,MAAM4Z,gBAAgBD,OAKjC,gBAACvB,GAAA,EAAD,CACEC,QAAQ,aACR1P,MAAOxG,EAAF,gCACL6W,kBAAmBH,EAAa,WAChCI,UAAWrgB,KAAKsgB,UAAU,eAAgBL,KAE1C,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,eAAgBL,IAC1C/gB,GAAG,aACHwQ,KAAK,OACLhI,MAAOrE,EAAUkL,WACjBqC,SAAU,SAAClJ,EAAOI,GAAR,OAAkB,EAAKyY,YAAY7Y,EAAOI,OAIxD,gBAAC0X,GAAA,EAAD,CACEC,QAAQ,cACR1P,MAAOxG,EAAF,mCACL6W,kBAAmBH,EAAa,YAChCI,UAAWrgB,KAAKsgB,UAAU,gBAAiBL,KAE3C,gBAACP,GAAA,GAAD,CACEW,UAAWrgB,KAAKsgB,UAAU,gBAAiBL,IAC3C/gB,GAAG,cACHwQ,KAAK,OACLhI,MAAOrE,EAAUsH,YACjBiG,SAAU,SAAClJ,EAAOI,GAAR,OAAkB,EAAKyY,YAAY7Y,EAAOI,OAIxD,gBAAC0X,GAAA,EAAD,CACEC,QAAQ,QACR1P,MAAOxG,EAAF,oCACL6W,kBAAmBpgB,KAAKihB,kBAAkBhB,GAC1CI,UAAWrgB,KAAKsgB,UACZ,eAAgBL,GAAiB,gBAAiBA,KAGrD5c,EAAUgK,MAAMtO,KAAI,SAACuO,EAAME,GAAP,OACnB,EAAK0T,gBAAgB5T,EAAME,MAGD,IAA3BnK,EAAUgK,MAAM/D,QACf,gBAAC,MAAD,CACE+B,UAAU,YACVG,QAAS,kBAAM,EAAK2V,WACpBpU,KAAK,SA5GN,OAbb,+BAiIE,SAA0BkT,GACxB,IAAMmB,EAAgB,GAQtB,MAPI,gBAAiBnB,GACnBmB,EAAIjY,KAAKI,EAAC,8BAAW0W,EAAa,aAEhC,eAAgBA,GAClBmB,EAAIjY,KAAKI,EAAC,6BAAU0W,EAAa,YAG5BmB,EAAIzC,KAAK,OA1IpB,qBA6IE,SAAgB0B,GACd,OAAIA,EACK,UAEA,UAjJb,yBAqJE,SAAoB3Y,EAAOI,GACzB,IAAMuZ,EAAS,MAAKrhB,KAAKoH,MAAM/D,WAC/Bge,EAAOvZ,EAAML,OAAOvI,IAAMwI,EAC1B1H,KAAKoH,MAAM4Z,gBAAgBK,KAxJ/B,wBA2JE,SAAmB7T,EAAO9F,EAAOI,GAC/B,IAAMuZ,EAAS,MAAKrhB,KAAKoH,MAAM/D,WAC/Bge,EAAOhU,MAAMG,GAAO1F,EAAML,OAAOvI,IAAMwI,EACvC1H,KAAKoH,MAAM4Z,gBAAgBK,KA9J/B,wBAiKE,SAAmB7T,GACjB,IAAM6T,EAAS,MAAKrhB,KAAKoH,MAAM/D,WAC/Bge,EAAOhU,MAAMrC,OAAOwC,EAAO,GAC3BxN,KAAKoH,MAAM4Z,gBAAgBK,KApK/B,qBAuKE,WACE,IAAMA,EAAS,MAAKrhB,KAAKoH,MAAM/D,WAC/Bge,EAAOhU,MAAMlE,KAAK,CAChB7F,KAAM,GACNpB,IAAK,KAGPlC,KAAKoH,MAAM4Z,gBAAgBK,KA9K/B,6BAiLE,SAAwB/T,EAAME,GAAO,WAC7B8T,EAAO9T,IAAUxN,KAAKoH,MAAM/D,UAAUgK,MAAM/D,OAAS,EAC3D,OACE,uBAAK+B,UAAU,eAAehC,IAAKmE,GACjC,uBAAKnC,UAAU,aACb,gBAAC6M,GAAA,GAAD,CACEhZ,GAAG,OACHwQ,KAAK,OACLoB,YAAavH,EAAF,iCACX7B,MAAO4F,EAAKhK,KACZsN,SAAU,SAAClJ,EAAOI,GAAR,OAAkB,EAAKyZ,WAAW/T,EAAO9F,EAAOI,OAG9D,uBAAKuD,UAAU,YACb,gBAAC6M,GAAA,GAAD,CACEhZ,GAAG,MACHwQ,KAAK,OACLoB,YAAavH,EAAF,gCACX7B,MAAO4F,EAAKpL,IACZ0O,SAAU,SAAClJ,EAAOI,GAAR,OAAkB,EAAKyZ,WAAW/T,EAAO9F,EAAOI,OAG9D,uBAAKuD,UAAU,eACb,uBAAKA,UAAU,kBACb,gBAAC,MAAD,CACEA,UAAU,YACVG,QAAS,kBAAM,EAAKgW,WAAWhU,IAC/BT,KAAK,QAIT,uBAAK1B,UAAU,kBACZiW,GACC,gBAAC,MAAD,CACEjW,UAAU,YACVG,QAAS,kBAAM,EAAK2V,WACpBpU,KAAK,cArNrB,GAAmCvD,EAAAA,W,2GCC5B,IAAMiY,GAAb,6B,IAAA,G,EAAA,E,gaAGE,WAAYra,GAAO,4BACjB,cAAMA,IADW,kCAkCI,SAACU,GACtB,IAAM1G,EAAY,CAChBkC,KAAM,EAAK6E,MAAMuZ,iBACjBf,OAAQ,EAAKxY,MAAMwZ,WAErB5c,GAAAA,GAAAA,OAAoB3D,GACjB6B,MAAK,SAACgG,GACL,EAAK2Y,cACL,EAAK/Z,SAAS,CACZ6Z,iBAAkB,GAClBC,UAAW,GACX1B,cAAe,KAEjB,EAAK7Y,MAAMya,gBAAgBzgB,MAR/B,OAUS,SAACqa,GACN,IADgB,EACVnX,EAASmX,EAAMvY,SACf2X,EAAgB,EAAK1S,MAAM8X,cAFjB,E,65BAAA,CAGA3b,EAAOlD,KAAK0gB,QAHZ,IAGhB,2BAAoC,KAAzBxiB,EAAyB,QAClCub,EAASvb,EAAE4E,OAAO6d,WAAaziB,EAAE0iB,QAJnB,8BAMhB,EAAKna,SAAS,CACZoY,cAAepF,EACfoH,wBAAyB,SAAUpH,WAtDzC,EAAK+G,YAAc,EAAKxa,MAAMwa,YAC9B,EAAKzZ,MAAQ,CACXuZ,iBAAkB,GAClBO,uBAAuB,EACvBN,UAAW,GACX1B,cAAe,IARA,EAHrB,sDAeE,WACE,IAAMxE,EAAazb,KAAKmI,MAAM8X,cACxB3c,EAAetD,KAAKmI,MAAMuZ,iBAEpB,IAARpe,EACFmY,EAAK,KAAWlS,EAAhB,0DACU,kBAAkB2Y,KAAK5e,GAExBA,EAAKgG,QAAU,EACxBmS,EAAK,KAAWlS,EAAhB,6DACSjG,EAAK6e,WAAW,KACzB1G,EAAK,KAAWlS,EAAhB,yDAEOkS,EAAK,KANZA,EAAK,KAAWlS,EAAhB,0DASFvJ,KAAK6H,SAAS,CACZoa,wBAAyB,SAAUxG,GACnCwE,cAAexE,MAjCrB,oBAiEE,WAAS,WACP,EAA+Dzb,KAAKmI,MAA5DuZ,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,UAAWM,EAArC,EAAqCA,sBACrC,OACE,gBAACG,GAAA,EAAD,CACE7Z,QAAQ,QACRgC,MAAOhB,EAAF,8CACL3B,OAAQ5H,KAAKoH,MAAMQ,OACnB8C,QAAS1K,KAAK4hB,YACdS,QAAS,CACP,gBAAC9W,EAAA,GAAD,CACElC,IAAI,UACJd,QAAQ,UACRiD,QAASxL,KAAKsiB,aACdvZ,YAAa2Y,IAAqBO,GAEjC1Y,EANH,+BAQA,gBAACgC,EAAA,GAAD,CAAQlC,IAAI,SAASd,QAAQ,OAAOiD,QAASxL,KAAK4hB,aAC/CrY,EADH,iCAKF,gBAACgW,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CACEzP,MAAOxG,EAAF,4BACL4W,YAAU,EACVV,QAAQ,OACRJ,WAAY9V,EAAF,0DACV6W,kBAAmBpgB,KAAKmI,MAAM8X,cAAX,KACnBI,UAAWrgB,KAAKsgB,QAAQtgB,KAAKmI,MAAM8Z,uBACnCM,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,2KAIX,gBAAC8N,GAAA,EAAD,KACE,gBAACa,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,QAAQtgB,KAAKmI,MAAM8Z,uBACnC9B,YAAU,EACVzQ,KAAK,OACLxQ,GAAG,mBACHoE,KAAK,mBACLoE,MAAOga,EACP9Q,SAAU,SAAClJ,GACT,EAAKG,SAAS,CAAE6Z,iBAAkBha,IAAS,WACzC,EAAK8a,kCAMf,gBAAChD,GAAA,EAAD,CACEzP,MAAOxG,EAAF,wCACLkW,QAAQ,SACRW,kBAAmBpgB,KAAKmI,MAAM8X,cAAX,QAEnB,gBAACS,GAAD,CACEE,qBAAsB,CAAC,mBAAoB,uBAC3CD,OAAQgB,EACRd,UAAW,SAACC,GAAD,OAAO,EAAKjZ,SAAS,CAAE8Z,UAAWb,KAC7CpY,aAAa,gBA9H3B,qBAsIE,SAAgB2X,GACd,OAAIA,EACK,UAEA,YA1Ib,GAAoC7W,EAAAA,WCb7B,I,GAAMoG,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,IACI6S,EADJ,EAAiDziB,KAAKoH,MAA9CiE,EAAR,EAAQA,UAAWwE,EAAnB,EAAmBA,OAAQE,EAA3B,EAA2BA,MAAOD,EAAlC,EAAkCA,WAIhC2S,EADoB,iBAAX5S,EACM4Q,OAAO5Q,GAEPA,EAGjB,IAAM6S,EAAoB,IAAX7S,EAAe,GAAK,IAEnC,OACE,2BACE,4BACGC,EAAa,KAAOF,EAAa+S,YAAYF,GAAe,KAE/D,wBAAMpX,UAAWA,GAAY0E,EAAQA,EAAQ2S,EAAS,UAlB9D,0BAyBE,SAAmBE,GACjB,OAAIA,EAAI,IAECA,EAAEC,WACAD,EAAI,KAELE,KAAKC,MAAMH,EAAI,KAAO,IAAIC,WAAa,IACtCD,EAAI,IAENE,KAAKC,MAAMH,EAAI,KAAMC,WAAa,IAChCD,EAAI,KAELE,KAAKC,MAAMH,EAAI,KAAU,IAAIC,WAAa,IACzCD,EAAI,IACNE,KAAKC,MAAMH,EAAI,KAASC,WAAa,IAIvC,UA3CX,GAAkCrZ,EAAAA,W,mICa3B,IAAMkX,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYtZ,GAAO,4BACjB,cAAMA,IADW,gCAgFE,SAAC9D,GACpBwC,GAAAA,GAAAA,KAAc,CAAEkd,eAAgB1f,IAAQL,MAAK,SAACqB,GAC5C,IAAM2e,EAAQ,EAAK7b,MAAMuZ,OAAO5hB,KAAI,SAACuJ,GAAD,OAAWA,EAAMhF,QAC/Cqd,EAASrc,EAAOlD,KAAKA,KAAKkB,QAC9B,SAACgG,GAAD,OAAY2a,EAAMzgB,SAAS8F,EAAMhF,SAEnC,EAAKuE,SAAS,CAAEqb,aAAcvC,WAtFf,8BA0FA,SAAC7Y,EAAOC,EAAWC,GACpC,IAAM2Z,GAAY,OAAI,EAAKva,MAAMuZ,QAE3BwC,EAAa,EAAKhb,MAAM+a,aAAatR,MACzC,SAACkP,GAAD,OAAOA,EAAExd,OAASyE,KAGpB4Z,EAAUxY,KAAK,CACbjK,GAAIikB,EAAWjkB,GACfoE,KAAM6f,EAAW7f,KACjB8f,mBAAoB,EAAKhc,MAAMwZ,uBAGjC,EAAKxZ,MAAMyZ,UAAUc,MApGrB,EAAKxZ,MAAQ,CACX+a,aAAc,IAJC,EADrB,gDASE,WACEljB,KAAKqjB,WAAW,MAVpB,oBAaE,WAAS,WACP,EAAyCrjB,KAAKoH,MAAtCuZ,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,qBAEhB,OACE,2BACE,gBAACzZ,EAAD,CACE8B,QAASjJ,KAAKmI,MAAM+a,aACpB7b,YAAarH,KAAKqjB,WAClBpb,SAAUjI,KAAKiI,SACfa,gBAAiBS,EAAF,oCACfb,aAAc1I,KAAKoH,MAAMsB,aACzBK,aAAc/I,KAAKoH,MAAM2B,aAE3B,2BACA,2BACG4X,EAAO5hB,KAAI,SAACuJ,EAAO8B,GAAR,OACV,gBAACkZ,GAAA,EAAD,CACE1Z,MAAO,CAAEkL,UAAW,QACpBW,WAAY,CAAE8N,QAAS,oBACvBla,IAAKf,EAAMhF,MAEX,gBAACkgB,GAAA,EAAD,CAAU5Z,MAAO,CAAE6Z,SAAU,UAAYnb,EAAMhF,MAC/C,gBAACkgB,GAAA,EAAD,CAAUE,KAAM,CAAEH,QAAS,QAAU3Z,MAAO,CAAEsM,MAAO,QACnD,gBAACyN,GAAD,CACE/C,qBAAsBA,EAAqB7hB,KAAI,SAAC6kB,GAAD,OAC7CC,EAAAA,EAAAA,IAAaD,EAAM9iB,EAAAA,EAAAA,4BAErBgjB,oBAAqBxb,EAAM8a,mBAAmBrkB,KAAI,SAAC6kB,GAAD,OAChDC,EAAAA,EAAAA,IAAaD,EAAM9iB,EAAAA,EAAAA,4BAErBijB,YAAa,SAACC,GAAD,OAAW,EAAKC,eAAeD,EAAO1b,IACnDI,aAAc,EAAKtB,MAAMsB,gBAG7B,gBAAC8a,GAAA,EAAD,KACE,gBAAC,MAAD,CACE5Z,MAAO,CAAEsa,OAAQ,WACjB1Y,QAAS,kBAAM,EAAK2Y,YAAY7b,eAlDlD,yBA4DE,SAAoBA,GAClB,IADyB,EACnBqZ,EAAY,GADO,E,65BAAA,CAET3hB,KAAKoH,MAAMuZ,QAFF,IAEzB,2BAAmC,KAAxBG,EAAwB,QAC7BA,EAAE5hB,KAAOoJ,EAAMpJ,IACjByiB,EAAUxY,KAAK2X,IAJM,8BAQzB9gB,KAAKoH,MAAMyZ,UAAUc,KApEzB,4BAuEE,SAAuBqC,EAAO1b,GAC5B,IAAMqZ,GAAY,OAAI3hB,KAAKoH,MAAMuZ,QACXgB,EAAU/P,MAAK,SAACkP,GAAD,OAAOA,EAAE5hB,KAAOoJ,EAAMpJ,MAC7CkkB,mBAAqBY,EAAMjlB,KAAI,SAAC6kB,GAAD,OAC3CC,EAAAA,EAAAA,IAAaD,EAAM9iB,EAAAA,EAAAA,4BAGrBd,KAAKoH,MAAMyZ,UAAUc,OA9EzB,GAA2CnY,EAAAA,W,ykBCWpC,IAAMgM,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MACExV,KAAKoH,MADCuI,EAAR,EAAQA,MAAOtP,EAAf,EAAeA,OAAQ+K,EAAvB,EAAuBA,aAAcgZ,EAArC,EAAqCA,MAAOC,EAA5C,EAA4CA,eAAgB1H,EAA5D,EAA4DA,UAGtD2H,EAAa,GAMnB,OALKF,IACHE,EAAU,SAAe,iCACzBA,EAAU,QAAcC,GAAAA,EAAAA,QAIxB,gBAAC,MAAD,SACEtP,UAAWtF,EACX4M,QAASlc,EAAOmc,WAAa1b,EAAAA,EAAAA,kBAC7BC,KAAMV,EAAOU,MAAQ,EACrB0b,UAAW,SAAClT,EAAG5I,GAAJ,OACTyK,EAAa9K,EAAAA,EAAAA,SAAqBD,EAAQ,OAAQM,KAEpD+b,gBAAiB,SAACnT,EAAG5I,GACnByK,EAAa,SAAK/K,GAAN,IAAcU,KAAM,EAAGyb,UAAW7b,OAE5C2jB,EAVN,CAWE3H,UAAWyH,GAASzH,EACpB0H,eAAgBrkB,KAAKwkB,kBACnBH,GAAkBvjB,EAAAA,EAAAA,iCAzB5B,+BA+BE,SAA0BkI,GACxB,OAAOA,EAAQjK,KAAI,SAACmK,GAAD,MAAa,CAC9BqB,MAAOka,OAAOvb,GACdxB,MAAOwB,UAlCb,GAAgCM,EAAAA,WCVzB,I,YAAMkb,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MASI1kB,KAAKoH,MARPoF,EADF,EACEA,YACAC,EAFF,EAEEA,gBACAkY,EAHF,EAGEA,QACAthB,EAJF,EAIEA,UACAiJ,EALF,EAKEA,aACAjM,EANF,EAMEA,OACAwS,EAPF,EAOEA,KACAzH,EARF,EAQEA,aAEF,OACE,gBAACgB,EAAD,CACE7B,MAAOlH,EAAU6K,SAAW7K,EAAUC,KACtC+I,SAAUhJ,EAAUkL,WACpB/B,YAAa,gBAACW,EAAD,CAAaE,MAAOb,IACjCF,aAAcA,EACdG,gBAAiBA,EACjBpB,UAAU,UAEThI,EAAUsH,YAAc,2BAAMtH,EAAUsH,aAAqB,KAE9D,uBAAKU,UAAU,sBACb,uBAAKA,UAAU,QACb,gBAACuZ,GAAD,CACE/R,KAAMA,EACNxS,OAAQA,EACR+K,aAAc,SAACzK,GAAD,OAAOyK,EAAazK,OAGrC0C,EAAUgK,MAAM/D,OAAS,EACxB,uBAAK+B,UAAU,SACb,2BACE,gBAAC,MAAD,OAEDhI,EAAUgK,MAAMtO,KAAI,SAAC8S,EAAGzH,GACvB,OACE,uBAAKiB,UAAU,OAAOhC,IAAKe,GACzB,qBAAGoI,KAAMX,EAAE3P,IAAKuF,OAAO,SACpBoK,EAAEvO,WAMX,MAGLqhB,GAAW,UAjDpB,GAAmCnb,EAAAA,W,YCC5B,I,+GAAMma,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYvc,GAAO,4BACjB,cAAMA,IADW,oCAwDM,WACvB,EAAKA,MAAM2c,YAAY,QAzDN,8BA4DA,SAACnc,GAClB,EAAKC,SAAS,CACZD,OAAQA,QA9DO,8BAkEA,SAACE,EAAOC,GACzB,IAAM8c,EAAW,IAAIC,IAAI,EAAK1d,MAAM0c,qBAChCe,EAASE,IAAIhd,GACf8c,EAAQ,OAAQ9c,GAEhB8c,EAASG,IAAIjd,GAGf,EAAKX,MAAM2c,YAAYlY,MAAMoZ,KAAKJ,OAxElC,EAAK1c,MAAQ,CAAEP,QAAQ,GAFN,EADrB,qCAME,WACE,GAAI5H,KAAKoH,MAAM8d,WAAY,CACzB,IAAMtP,EAAQ5V,KAAKoH,MAAM0c,oBAAoBxa,OACzCtJ,KAAKoH,MAAM0c,oBACX,CAAC9jB,KAAK8I,mBACV,OACE,gBAACsN,GAAA,EAAD,KACGR,EAAM7W,KAAI,SAACogB,GAAD,OACT,gBAACgG,GAAA,EAAD,CAAO9b,IAAK8V,GAAOA,OAM3B,OACE,gBAAC1W,EAAA,EAAD,CACEC,aAAc1I,KAAKoH,MAAMsB,aACzBH,QAASC,EAAAA,GAAAA,eACT4c,mBAAoB7b,EAAF,0CAClBZ,SAAU3I,KAAK2I,SACfV,SAAYjI,KAAKoH,MAAMa,SAAWjI,KAAKoH,MAAMa,SAAWjI,KAAKiI,SAC7DX,QACItH,KAAKoH,MAAME,QAAUtH,KAAKoH,MAAME,QAAUtH,KAAKqlB,eAEnDhd,WAAYrI,KAAKoH,MAAM0c,oBACvBlc,OAAQ5H,KAAKmI,MAAMP,OACnBkB,gBAAiB9I,KAAK8I,kBACtBC,aAAc/I,KAAKoH,MAAM2B,YAEmB,IAA3C/I,KAAKoH,MAAMwZ,qBAAqBtX,OAC7B,CACE,gBAACF,EAAA,EAAD,CACEL,YAAY,EACZM,IAAK,YACL3B,MAAO6B,EAAF,oCAGTvJ,KAAKoH,MAAMwZ,qBAAqB7hB,KAAI,SAACmK,EAAQsE,GAAT,OAClC,gBAACpE,EAAA,EAAD,CAAcC,IAAKmE,EAAO9F,MAAOwB,UA5C/C,6BAkDE,WACE,OAAKlJ,KAAKoH,MAAM2B,YAAe/I,KAAKoH,MAAM8d,WAGO,IAA1CllB,KAAKoH,MAAM0c,oBAAoBxa,OAAeC,EAA9C,qCAAiE,GAF/DA,EAAP,8CApDN,GAA4CC,EAAAA,W,gpDCgBrC,I,8BAAM8b,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYle,GAAO,sBACjB,cAAMA,GACN,MAKIyE,MAAM,GAAG0Z,KAAK,IALlB,gBACEC,EADF,KAEEC,EAFF,KAGEC,EAHF,KAIEC,EAJF,KAFiB,OASXve,EAAMlB,SACVsf,EAAuB,EAAKpe,MAAMlB,OAAO0f,kBACrC,mBACA,GACJF,EAAoB,EAAKte,MAAMlB,OAAO2f,WAAa,iBAAmB,GACtEJ,EAAqB,EAAKre,MAAMlB,OAAO4f,YACnC,kBACA,GACJH,EAAiB,EAAKve,MAAMlB,OAAO6f,QAAU,cAAgB,IAG/D,EAAK5d,MAAQ,CACX6d,4BAA6BR,EAC7BS,0BAA2BP,EAC3BQ,2BAA4BT,EAC5BU,uBAAwBR,GAxBT,EADrB,qCA6BE,WAAS,WACP,EAAkC3lB,KAAKoH,MAA/BlB,EAAR,EAAQA,OACR,GADA,EAAgB+Z,eACX/Z,EACH,OAAO,KAET,IAAMkgB,EAAapmB,KAAKqmB,cAAcngB,EAAOhE,KAEzCokB,EAAiB,CAAC,OAAQ,OAC1BC,EAAiB,CAAC,QAWtB,MATmB,cAAfH,IACFE,EAAiBA,EAAeE,OAAO,CAAC,aACxCD,EAAiBA,EAAeC,OAAO,CAAC,uBAGvB,cAAfJ,IACFE,EAAiBA,EAAeE,OAAO,CAAC,sBACxCD,EAAiBA,EAAeC,OAAO,CAAC,WAAY,WAGpD,gBAACpE,GAAA,EAAD,CACExa,OAAQ5H,KAAKoH,MAAMqf,UACnBlc,MAAOhB,EAAF,mCACLhB,QAAQ,QACRmC,QAAS,kBAAM,EAAKtD,MAAMsf,cAC1BrE,QAAS,CACP,gBAAC9W,EAAA,GAAD,CACExC,YAAa/I,KAAK2mB,QAAQL,GAC1Bjd,IAAI,UACJd,QAAQ,UACRiD,QAAS,kBAAM,EAAKpE,MAAMwf,eAEzBrd,EANH,6BAQA,gBAACgC,EAAA,GAAD,CACElC,IAAI,SACJd,QAAQ,YACRiD,QAAS,kBAAM,EAAKpE,MAAMsf,eAEzBnd,EALH,iCASDvJ,KAAK6mB,WAAWP,EAAgBC,MAxEzC,wBA6EE,SAAmBD,EAAgBC,GAAgB,WACjD,EAAkCvmB,KAAKoH,MAA/BlB,EAAR,EAAQA,OAAQ+Z,EAAhB,EAAgBA,cAChB,OACE,gBAACV,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CACEC,QAAS,OACT1P,MAAOxG,EAAF,4BACL4W,WAAYmG,EAAe9jB,SAAS,QACpC6d,UAAWrgB,KAAKsgB,UAAU,SAAUL,IACpCG,kBAAmBH,EAAa,MAEhC,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,SAAUL,IACpCE,WAAYmG,EAAe9jB,SAAS,QACpCuG,WAAYwd,EAAe/jB,SAAS,QACpCtD,GAAG,OACHwQ,KAAK,OACLhI,MAAOxB,EAAO5C,MAAQ,GACtBsN,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,YAGlD,gBAAC8X,GAAA,EAAD,CACEC,QAAS,MACT1P,MAAOxG,EAAF,2BACLgZ,UACE,gBAAC3I,GAAD,CAAY5K,QAASzF,EAAF,gEAErB4W,WAAYmG,EAAe9jB,SAAS,OACpC6d,UAAWrgB,KAAKsgB,UAAU,QAASL,IACnCG,kBAAmBH,EAAa,KAEhC,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,QAASL,IACnCE,WAAYmG,EAAe9jB,SAAS,OACpCuG,WAAYwd,EAAe/jB,SAAS,OACpCtD,GAAG,MACHwQ,KAAK,OACLhI,MAAOxB,EAAOhE,KAAO,GACrB0O,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,YAGhD6e,EAAe/jB,SAAS,UACxB,gBAACgd,GAAA,EAAD,CACEC,QAAS,QACT1P,MAAOxG,EAAF,6BACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,qEAGX4W,WAAYmG,EAAe9jB,SAAS,SACpC6d,UAAWrgB,KAAKsgB,UAAU,UAAWL,IACrCG,kBAAmBH,EAAa,OAEhC,gBAAC8G,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IAAW,QAAS/gB,EAAOI,mBACvCgB,QAAS,kBAAM,EAAK4f,YAAY,SAAS,KAEzC,gBAAChP,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,UAAWL,IACrCE,WAAYmG,EAAe9jB,SAAS,SACpCkN,KAAK,WACLxQ,GAAG,QACHwI,MAAOxB,EAAOjC,OAAS,GACvB2M,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,eAMpD6e,EAAe/jB,SAAS,aACxB,gBAACgd,GAAA,EAAD,CACEC,QAAS,WACT1P,MAAOxG,EAAF,+BACLgZ,UAAW,gBAAC3I,GAAD,CAAY5K,QAASzF,EAAF,6CAC9B4W,WAAYmG,EAAe9jB,SAAS,YACpC6d,UAAWrgB,KAAKsgB,UAAU,aAAcL,IACxCG,kBAAmBH,EAAa,UAEhC,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,aAAcL,IACxCE,WAAYmG,EAAe9jB,SAAS,YACpCtD,GAAG,SACHwQ,KAAK,OACLhI,MAAO1H,KAAKoH,MAAMlB,OAAOK,UAAY,GACrCqK,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,iBAKlD6e,EAAe/jB,SAAS,sBACxB,gBAACgd,GAAA,EAAD,CACEC,QAAS,OACT1P,MAAOxG,EAAF,yCACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QACE,qDACqB,IACnB,qBACEvH,OAAO,SACP+K,KAAK,mIAFP,oBAKK,IAPP,6HAcN2N,WAAYmG,EAAe9jB,SAAS,qBACpC6d,UAAWrgB,KAAKsgB,UAAU,sBAAuBL,IACjDG,kBAAmBH,EAAa,mBAEhC,gBAACqD,GAAA,EAAD,KACE,gBAACE,GAAA,EAAD,CAAUE,KAAM,CAAEH,QAAS,SACzB,gBAAC4D,GAAA,EAAD,CACE9G,UAAWrgB,KAAKsgB,UACZ,sBAAuBL,IAE3BE,WAAYmG,EAAe9jB,SAAS,qBACpCtD,GAAG,OACHwQ,KAAK,OACL0X,SAAUpnB,KAAKmI,MAAM6d,4BACrBte,MAAO1H,KAAKoH,MAAMlB,OAAO0f,mBAAqB,GAC9CyB,oBAAkB,EAClBzW,SAAU,SAAClJ,EAAO0f,GAChB,EAAKvf,SACH,CAAEme,4BAA6BoB,IAC/B,kBAAM,EAAKN,aAAapf,EAAO,4BAKvC,gBAAC8b,GAAA,EAAD,KACE,gBAACjY,EAAA,GAAD,CACExC,YAAa/I,KAAKoH,MAAMlB,OAAO0f,kBAC/Bpa,QAAS,WACP8b,GAAAA,OACE,IAAIC,KAAK,CAAC,EAAKngB,MAAMlB,OAAO0f,mBAAoB,CAC9ClW,KAAM,6BAER,EAAKvH,MAAM6d,8BAGfzd,QAAQ,QACR,aAAYgB,EAAZ,mDAEA,gBAAC,MAAD,UAMV,gBAACie,GAAA,EAAD,CACEC,mBAAoBle,EAAF,6CAClBme,oBAAqBne,EAAF,8CAEnB,uBAAK8B,UAAU,aACb,gBAACmU,GAAA,EAAD,CACEC,QAAS,WACT1P,MAAOxG,EAAF,gCACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,2HAGX4W,WAAYmG,EAAe9jB,SAAS,YACpC6d,UAAWrgB,KAAKsgB,UAAU,aAAcL,IACxCG,kBAAmBH,EAAa,UAEhC,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,aAAcL,IACxCE,WAAYmG,EAAe9jB,SAAS,YACpCuG,WAAYwd,EAAe/jB,SAAS,YACpCtD,GAAG,WACHwQ,KAAK,OACLhI,MAAOxB,EAAOd,UAAY,GAC1BwL,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,gBAGlD,gBAAC8X,GAAA,EAAD,CACEC,QAAS,WACT1P,MAAOxG,EAAF,gCACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,2HAGX4W,WAAYmG,EAAe9jB,SAAS,YACpC6d,UAAWrgB,KAAKsgB,UAAU,aAAcL,IACxCG,kBAAmBH,EAAa,UAEhC,gBAAC8G,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IAAW,WAAY/gB,EAAOI,mBAC1CgB,QAAS,kBAAM,EAAK4f,YAAY,YAAY,KAE5C,gBAAChP,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,aAAcL,IACxCE,WAAYmG,EAAe9jB,SAAS,YACpCuG,WAAYwd,EAAe/jB,SAAS,YACpCtD,GAAG,WACHwQ,KAAK,WACLhI,MAAOxB,EAAOb,UAAY,GAC1BuL,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,iBAIpD,gBAAC8X,GAAA,EAAD,CACEC,QAAS,YACT1P,MAAOxG,EAAF,iCACL4W,WAAYmG,EAAe9jB,SAAS,aACpC6d,UAAWrgB,KAAKsgB,UAAU,cAAeL,IACzCG,kBAAmBH,EAAa,WAEhC,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,cAAeL,IACzCE,WAAYmG,EAAe9jB,SAAS,aACpCuG,WAAYwd,EAAe/jB,SAAS,aACpCtD,GAAG,YACHwQ,KAAK,OACLhI,MAAOxB,EAAOyhB,WAAa,GAC3B/W,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,iBAIlD,gBAAC8X,GAAA,EAAD,CACEC,QAAS,iBACT1P,MAAOxG,EAAF,sCACL4W,WAAYmG,EAAe9jB,SAAS,kBACpC6d,UAAWrgB,KAAKsgB,UAAU,mBAAoBL,IAC9CG,kBAAmBH,EAAa,gBAEhC,gBAAC/H,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,mBAAoBL,IAC9CE,WAAYmG,EAAe9jB,SAAS,kBACpCuG,WAAYwd,EAAe/jB,SAAS,kBACpCtD,GAAG,iBACHwQ,KAAK,OACLhI,MAAOxB,EAAO0hB,gBAAkB,GAChChX,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,sBAIlD,gBAAC8X,GAAA,EAAD,CACEC,QAAS,iBACT1P,MAAOxG,EAAF,sCACL4W,WAAYmG,EAAe9jB,SAAS,kBACpC6d,UAAWrgB,KAAKsgB,UAAU,mBAAoBL,IAC9CG,kBAAmBH,EAAa,gBAEhC,gBAAC8G,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IACV,iBACA/gB,EAAOI,mBAETgB,QAAS,kBAAM,EAAK4f,YAAY,kBAAkB,KAElD,gBAAChP,GAAA,GAAD,CACEmI,UAAWrgB,KAAKsgB,UAAU,mBAAoBL,IAC9CE,WAAYmG,EAAe9jB,SAAS,kBACpCuG,WAAYwd,EAAe/jB,SAAS,kBACpCtD,GAAG,iBACHwQ,KAAK,OACLhI,MAAOxB,EAAO2hB,gBAAkB,GAChCjX,SAAU,SAAClJ,GAAD,OACR,EAAKof,aAAapf,EAAO,uBAMjC,gBAAC8X,GAAA,EAAD,CACEC,QAAS,iBACT1P,MAAOxG,EAAF,sCACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,6EAGX4W,WAAYmG,EAAe9jB,SAAS,kBACpC6d,UAAWrgB,KAAKsgB,UAAU,mBAAoBL,IAC9CG,kBAAmBH,EAAa,gBAEhC,gBAAC6H,GAAA,EAAD,CACElX,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,mBAC9CxI,GAAG,iBACH6oB,UAAW7hB,EAAO8hB,kBAGtB,gBAACxI,GAAA,EAAD,CACEC,QAAS,aACT1P,MAAOxG,EAAF,kCACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,4EAGX4W,WAAYmG,EAAe9jB,SAAS,cACpC6d,UAAWrgB,KAAKsgB,UAAU,eAAgBL,IAC1CG,kBAAmBH,EAAa,YAEhC,gBAAC8G,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IAAW,aAAc/gB,EAAOI,mBAC5CgB,QAAS,kBAAM,EAAK4f,YAAY,cAAc,KAE9C,gBAACC,GAAA,EAAD,CACE9G,UAAWrgB,KAAKsgB,UAAU,eAAgBL,IAC1CE,WAAYmG,EAAe9jB,SAAS,cACpCtD,GAAG,OACHwQ,KAAK,OACL0X,SAAUpnB,KAAKmI,MAAM8d,0BACrBve,MAAO1H,KAAKoH,MAAMlB,OAAO2f,YAAc,GACvCwB,oBAAkB,EAClBzW,SAAU,SAAClJ,EAAO0f,GAChB,EAAKvf,SAAS,CAAEoe,0BAA2BmB,IAAY,kBACrD,EAAKN,aAAapf,EAAO,sBAMnC,gBAAC8X,GAAA,EAAD,CACEC,QAAS,cACT1P,MAAOxG,EAAF,0CACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,mFAGX4W,WAAYmG,EAAe9jB,SAAS,eACpC6d,UAAWrgB,KAAKsgB,UAAU,gBAAiBL,IAC3CG,kBAAmBH,EAAa,aAEhC,gBAACqD,GAAA,EAAD,KACE,gBAACE,GAAA,EAAD,CAAUE,KAAM,CAAEH,QAAS,SACzB,gBAAC4D,GAAA,EAAD,CACE9G,UAAWrgB,KAAKsgB,UAAU,gBAAiBL,IAC3CE,WAAYmG,EAAe9jB,SAAS,eACpCtD,GAAG,OACHwQ,KAAK,OACL0X,SAAUpnB,KAAKmI,MAAM+d,2BACrBxe,MAAO1H,KAAKoH,MAAMlB,OAAO4f,aAAe,GACxCuB,oBAAkB,EAClBzW,SAAU,SAAClJ,EAAO0f,GAChB,EAAKvf,SACH,CAAEqe,2BAA4BkB,IAC9B,kBAAM,EAAKN,aAAapf,EAAO,sBAKvC,gBAAC8b,GAAA,EAAD,KACE,gBAACjY,EAAA,GAAD,CACExC,YAAa/I,KAAKoH,MAAMlB,OAAO4f,YAC/Bta,QAAS,WACP8b,GAAAA,OACE,IAAIC,KAAK,CAAC,EAAKngB,MAAMlB,OAAO4f,aAAc,CACxCpW,KAAM,6BAER,EAAKvH,MAAM+d,6BAGf3d,QAAQ,QACR,aAAYgB,EAAZ,2DAEA,gBAAC,MAAD,UAKR,gBAACiW,GAAA,EAAD,CACEC,QAAS,UACT1P,MAAOxG,EAAF,sCACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,mFAGX4W,WAAYmG,EAAe9jB,SAAS,WACpC6d,UAAWrgB,KAAKsgB,UAAU,YAAaL,IACvCG,kBAAmBH,EAAa,SAEhC,gBAACqD,GAAA,EAAD,KACE,gBAACE,GAAA,EAAD,CAAUE,KAAM,CAAEH,QAAS,SACzB,gBAAC4D,GAAA,EAAD,CACE9G,UAAWrgB,KAAKsgB,UAAU,YAAaL,IACvCE,WAAYmG,EAAe9jB,SAAS,WACpCtD,GAAG,OACHwQ,KAAK,OACL0X,SAAUpnB,KAAKmI,MAAMge,uBACrBze,MAAO1H,KAAKoH,MAAMlB,OAAO6f,SAAW,GACpCsB,oBAAkB,EAClBzW,SAAU,SAAClJ,EAAO0f,GAChB,EAAKvf,SAAS,CAAEse,uBAAwBiB,IAAY,kBAClD,EAAKN,aAAapf,EAAO,kBAKjC,gBAAC8b,GAAA,EAAD,KACE,gBAACjY,EAAA,GAAD,CACExC,YAAa/I,KAAKoH,MAAMlB,OAAO6f,QAC/Bva,QAAS,WACP8b,GAAAA,OACE,IAAIC,KAAK,CAAC,EAAKngB,MAAMlB,OAAO6f,SAAU,CACpCrW,KAAM,6BAER,EAAKvH,MAAMge,yBAGf5d,QAAQ,QACR,aAAYgB,EAAZ,uDAEA,gBAAC,MAAD,UAKR,gBAACiW,GAAA,EAAD,CACEC,QAAS,uBACT1P,MAAOxG,EAAF,4CACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,mEAGX8W,UAAWna,EAAO+hB,qBAAuB,EAAI,UAAY,QACzD7H,kBAAmB7W,EAAF,sDAEjB,gBAAC2O,GAAA,GAAD,CACEhZ,GAAG,uBACHwQ,KAAK,SACLhI,MAAOxB,EAAO+hB,qBACd5H,UACEna,EAAO+hB,qBAAuB,EAAI,UAAY,QAEhDrX,SAAU,SAAClJ,GAAD,OACR,EAAKof,aAAajmB,SAAS6G,GAAQ,4BAIzC,gBAAC8X,GAAA,EAAD,CACEC,QAAS,aACT1P,MAAOxG,EAAF,kCACLgZ,UACE,gBAAC3I,GAAD,CACE5K,QAASzF,EAAF,4EAGX8W,UACEI,OAAOyH,UAAUhiB,EAAOiiB,aACF,OAAtBjiB,EAAOiiB,WACH,UACA,QAEN/H,kBAAmB7W,EAAF,4CAEjB,gBAAC2O,GAAA,GAAD,CACEhZ,GAAG,aACHwI,MAAOxB,EAAOiiB,WACdvX,SAAU,SAAClJ,GAAD,OAAW,EAAKof,aAAapf,EAAO,oBAKrDuY,EAAa,UACZ,wBACErW,MAAO,CACL6O,MAAO,wCAGRwH,EAAa,WAEd,QAxiBZ,qBA6iBE,SAAgBqG,GACd,IAD8B,EACtBpgB,EAAWlG,KAAKoH,MAAhBlB,OADsB,KAGVogB,GAHU,IAG9B,2BAAoC,KAAzB9f,EAAyB,QAClC,IAAKN,EAAOM,IAA4B,KAAlBN,EAAOM,GAC3B,OAAO,GALmB,8BAQ9B,QAAIN,EAAO+hB,qBAAuB,KArjBtC,2BA2jBE,SAAsB/lB,GAAiD,WAClDpB,EAAAA,EAAAA,gBADkD,IACrE,2BAA6C,KAAlCsnB,EAAkC,QAC3C,GAAIlmB,EAAIM,SAAS4lB,GACf,MAAO,aAH0D,yCAOlDtnB,EAAAA,EAAAA,kBAPkD,IAOrE,2BAA+C,KAApCsnB,EAAoC,QAC7C,GAAIlmB,EAAIM,SAAS4lB,GACf,MAAO,aAT0D,8BAarE,MAAO,SAxkBX,yBA2kBE,SAAoBC,EAAmB3gB,GACrC,IADqD,EAE/C4gB,EAAkC,GAFa,KAC7BtoB,KAAKoH,MAAMlB,OAAOI,mBADW,IAIrD,2BAAqC,KAA1BE,EAA0B,QAC/BA,EAAMlD,OAAS+kB,IACjB7hB,EAAM+hB,OAAS7gB,GAGjB4gB,EAAUnf,KAAK3C,IAToC,8BAYrD,IAAM6a,EAAS,MAAKrhB,KAAKoH,MAAMlB,QAC/Bmb,EAAO/a,kBAAoBgiB,EAC3BjH,EAAOgH,GAAa,KAEpBroB,KAAKoH,MAAM0f,aAAazF,KA3lB5B,0BA8lBE,SAAqB3Z,EAAOlB,GAC1B,IAAM6a,EAAS,MAAKrhB,KAAKoH,MAAMlB,QAC/Bmb,EAAO7a,GAASkB,EAChB1H,KAAKoH,MAAM0f,aAAazF,KAjmB5B,qBAomBE,SAAgBhB,GACd,OAAIA,EACK,UAEA,YAxmBb,GAAgC7W,EAAAA,W,uhCCpBzB,I,YAAMgf,GAAb,6B,IAAA,G,EAAA,E,gaAIE,WAAYphB,GAAO,4BACjB,cAAMA,IADW,sCAFC,CAACtC,GAAAA,GAAAA,QAAoBA,GAAAA,GAAAA,UAEtB,EAJrB,gDAQE,WAAoB,WAClB9E,KAAKyoB,QAAUC,aAAY,WACzB,IAD+B,EAE3BC,GAAU,EAFiB,KACX,EAAKvhB,MAAjBwhB,SADuB,IAG/B,2BAA8B,oBACFjL,cADE,IAC5B,2BAAwC,KAA7B5a,EAA6B,QACtC,GAAIA,EAAK8lB,gBACH,EAAKC,kBAAkBtmB,SAASO,EAAK8lB,eAAe1gB,OAAQ,CAC9DwgB,GAAU,EACV,QALsB,gCAHC,8BAc3BA,GACF,EAAKvhB,MAAM2hB,mBAGZ,OA3BP,kCA8BE,WACEC,cAAchpB,KAAKyoB,WA/BvB,oBAkCE,WACE,IAAQG,EAAY5oB,KAAKoH,MAAjBwhB,QACR,OAAO5oB,KAAK4d,YAAYgL,KApC5B,yBAuCE,SAAoBA,GAAS,WAEvB/K,EAAmB,CACrB/b,QAAS,CACP,CACEyI,MAAOhB,EAAF,mCACLmG,KAAM,OACNxQ,GAAI,UAEN,CACEqL,MAAOhB,EAAF,oCACLmG,KAAM,OACNxQ,GAAI,cAEN,CACEqL,MAAOhB,EAAF,oCACLmG,KAAM,OACNxQ,GAAI,cAEN,CACEqL,MAAOhB,EAAF,mCACLmG,KAAM,OACNxQ,GAAI,8BAEN,CACEqL,MAAOhB,EAAF,mCACLmG,KAAM,OACNxQ,GAAI,wBAEN,CACEqL,MAAO,GACPmF,KAAM,OACNxQ,GAAI,cAKV,OACE,yBACE,aAAYqK,EAAZ,2CACA8B,UAAU,4BAEV,gBAAC0S,GAAD,CACE/U,QAAS6U,EACTxd,OA3CS,CAAE2d,KAAM,cA4CjB5S,aAAc,SAACzK,GAAD,OAAO,QAEvB,6BAAQioB,EAAQ7pB,KAAI,SAACmH,EAAQkE,GAAT,OAAe,EAAK+T,UAAUjY,EAAQkE,UAtFlE,uBA2FE,SAAkBlE,EAAQkE,GAAG,WACnB6e,EAASjpB,KAAKoH,MAAd6hB,KACR,OACE,sBAAI5f,IAAKe,GACP,0BAAKlE,EAAO5C,MACZ,0BAAK4C,EAAOyX,aAAa5e,KAAI,SAACmqB,GAAD,OAAOA,EAAE5lB,QAAMqb,KAAK,OAC9CzY,EAAOijB,WACR,0BACE,gBAAChY,GAAD,CAAeC,KAAMlL,EAAOijB,cAG9B,0BAAK,OAEJjjB,EAAO2iB,gBAAoB3iB,EAAO2iB,eAAe9L,YAClD,0BACE,gBAAC5L,GAAD,CAAeC,KAAMlL,EAAO2iB,eAAe9L,eAG7C,0BAAK,OAEP,0BAAK/c,KAAKopB,aAAaljB,IACvB,0BACkC,IAA/BA,EAAOyX,aAAarU,OACnB,gBAAC,IAAD,CACE0F,QAASzF,EAAF,wEAEP,gBAACgC,EAAA,GAAD,CAAQhD,QAAQ,SACd,gBAAC,MAAD,UAIF0gB,GACFA,EAAKI,kBAAkBC,eACrB,gCACGtpB,KAAKupB,yBAAyBrjB,GAC/B,4BACE,gBAACyP,GAAD,CACEC,MAAO,CACL,gBAACC,GAAA,EAAD,CACExM,IAAI,OACJmC,QAAS,kBAAM,EAAKpE,MAAMoiB,WAAWtjB,KAEpCqD,EAJH,sCAjItB,0BAkJE,SAAqBrD,GACnB,IAAKA,EAAO2iB,eACV,MAAO,MAGT,IAAIY,EAAe,KAOnB,OANIvjB,EAAM,eAAN,QACFujB,EACE,gBAAC7P,GAAD,CAAY5K,QAAS9I,EAAO2iB,eAAepN,MAAtB,eAKvB,gCACE,gBAACF,GAAD,CAAiBC,OAAQtV,EAAO2iB,eAAe1gB,QADjD,IAC4DshB,KAhKlE,sCAqKE,SAAiCvjB,GAAoB,WAC3C+iB,EAASjpB,KAAKoH,MAAd6hB,KACR,GAAMA,IAASA,EAAKI,kBAAkBC,cACpC,OAAO,KAET,IALmD,EAK7CI,EACJ,gBAACne,EAAA,GAAD,CAAQC,QAAS,kBAAM,EAAKpE,MAAMoiB,WAAWtjB,IAASqC,QAAQ,aAC3DgB,EADH,kCAKIogB,EACJ,gCACE,gBAACpe,EAAA,GAAD,CACExC,WACiC,IAA/B7C,EAAOyX,aAAarU,QACnBpD,EAAO2iB,gBACN,CAAC,UAAW,WAAWrmB,SAAS0D,EAAO2iB,eAAe1gB,OAE1DqD,QAAS,kBACP,EAAKpE,MAAMwiB,WACT1jB,EAAOyX,aAAa,GAAGkM,cAAc,GAAGtL,YAG5ChW,QAAQ,aAEPgB,EAbH,8BAkBA6c,EAAa,OA/BkC,KAiChCtlB,EAAAA,EAAAA,gBAjCgC,IAiCnD,2BAA6C,KAAlCsnB,EAAkC,QAC3C,GAAIliB,EAAOhE,IAAIM,SAAS4lB,GAAO,CAC7BhC,EAAa,YACb,QApC+C,yCAwChCtlB,EAAAA,EAAAA,kBAxCgC,IAwCnD,2BAA+C,KAApCsnB,EAAoC,QAC7C,GAAIliB,EAAOhE,IAAIM,SAAS4lB,GAAO,CAC7BhC,EAAa,YACb,QA3C+C,8BA+CnD,MACiB,cAAfA,GACAlgB,EAAOhE,KACPgE,EAAO5C,MACP4C,EAAO0f,mBAMQ,cAAfQ,GACAlgB,EAAOhE,KACPgE,EAAO5C,MACP4C,EAAOK,UAKU,SAAf6f,GAAyBlgB,EAAOhE,IAZ3BynB,EAgBFD,MA1OX,GAA2ClgB,EAAAA,W,qlBCQpC,I,GAAM0I,GAAb,6B,IAAA,G,EAAA,E,gaAEE,WAAY9K,GAAO,6BACjB,cAAMA,IAEDe,MAAQ,CAAE2hB,gBAAgB,GAHd,EAFrB,qCAQE,WAAS,WACP,MAAItoB,aAAoBV,EAAAA,EAAAA,yBACf,KAIP,gBAACwiB,GAAA,EAAD,KACE,gBAACE,GAAA,EAAD,KACE,gBAACnM,GAAA,EAAD,KACE,gBAAC0S,GAAA,EAAD,CACExhB,QAAQ,QACR8C,UAAU,4BAET9B,EAJH,6CAMA,gBAACd,EAAA,EAAD,CACE4C,UAAU,aACVtC,WAAY/I,KAAKoH,MAAM2B,WACvBnB,OAAQ5H,KAAKmI,MAAM2hB,eACnBtS,SAAS,EACTvP,SAAU,SAACH,EAAOJ,GAChB,IAAMlC,EAAe,EAAK4B,MAAM6J,aAC1B+Y,EAAU,EAAKC,gBAAgBviB,EAAMmb,YAI3C,GAFA,EAAKhb,SAAS,CAAEiiB,gBAAgB,IAE5BE,IAAYxkB,EAAc,CAC5B,IAAMxC,GAAO0L,EAAAA,EAAAA,IAAW,EAAKtH,MAAMpE,KAAZ,GAAC,MACnB,EAAKoE,MAAMsL,YADO,IAErB3P,KAAMinB,KAER,EAAKhZ,QAAQkZ,QAAQlnB,KAGzB2F,SAAU,SAACsO,GACT,EAAKpP,SAAS,CAAEiiB,eAAgB7S,KAElC5O,WAAYrI,KAAKmqB,YAAYnqB,KAAKoH,MAAM6J,cACxC1I,QAAQ,UAER,gBAACa,EAAA,EAAD,CAAcC,IAAK,YAAa3B,MAAO6B,EAAF,mCACrC,gBAACH,EAAA,EAAD,CAAcC,IAAK,eAAgB3B,MAAO6B,EAAF,2CACxC,gBAACH,EAAA,EAAD,CAAcC,IAAK,YAAa3B,MAAO6B,EAAF,yCAlDnD,yBA0DE,SAAoB6gB,GAOlB,OANoB1qB,OAAOD,KAAKqB,EAAAA,EAAAA,iBAA2B8Q,MACzD,SAACvI,GAAD,OAASvI,EAAAA,EAAAA,gBAA0BuI,KAAS+gB,MAMrCA,IAlEb,6BAuEE,SAAwBC,GACtB,OAAIvpB,EAAAA,EAAAA,gBAA0BupB,GACrBvpB,EAAAA,EAAAA,gBAA0BupB,GAG5BA,MA5EX,GAAkC7gB,EAAAA,W,uOAArB0I,GAAAA,cACUhB,GAAAA,GCDa1H,EAAAA,UCvBpC,IAmBa8gB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACCjnB,EAAcrD,KAAKoH,MAAnB/D,UAER,OACE,gBAAC6b,GAAD,CACEC,KAAM9b,EAAUknB,UAChBzZ,YA1BY,oQA2BZuO,WAAY9V,EAAF,iHACV6V,WAAY,SAAC1X,GAAD,OAAW,EAAK8iB,gBAAgB9iB,IAC5C4X,SAAS,MAVjB,6BAeE,SAAwBle,GACtB,IAAMigB,E,uWAAS,IAAKrhB,KAAKoH,MAAM/D,WAC/Bge,EAAOkJ,UAAYnpB,EACnBpB,KAAKoH,MAAM4Z,gBAAgBK,OAlB/B,GAAmC7X,EAAAA,WChBLA,EAAAA,U,SCDCA,EAAAA,UAAxB,I,sDCMA,IAwBMihB,GAAb,6B,IAAA,G,EAAA,E,gaAME,WAAYrjB,GAAO,6BACjB,cAAMA,IAEDe,MAAQ,CACX8O,YAAY,GAJG,EANrB,uCAcE,SAAiBA,GACfjX,KAAK6H,SAAS,CACZoP,WAAAA,MAhBN,sBAoBE,SAAiB3T,GAAM,WACjBonB,EAAe1qB,KAAK2qB,gBAAgB3qB,KAAKoH,MAAM/G,QAE7C6I,EAASlJ,KAAKoH,MAAM4B,QAAQ4I,MAAK,SAACxH,GAAD,OAAOA,EAAEG,QAAUjH,KAItC,UAAhB4F,EAAOwG,OACTgb,GAAgBA,GAElB,IAAME,EAAOF,EAAe,IAAM,GAElC1qB,KAAK6H,SAAS,CAAEoP,YAAY,IAAS,kBACnC,EAAK7P,MAAMgE,aACT9K,EAAAA,EAAAA,SACE,EAAK8G,MAAM/G,OACX,EAAK+G,MAAMyjB,cACXD,EAAO1hB,EAAOhK,UArCxB,2BA2CE,WACE,IAAIsH,EAAQxG,KAAK8qB,YAAY9qB,KAAKoH,MAAM/G,QAClC0qB,GAAc/qB,KAAK2qB,gBAAgB3qB,KAAKoH,MAAM/G,QAEpDL,KAAKoH,MAAMgE,aACT9K,EAAAA,EAAAA,SACEN,KAAKoH,MAAM/G,OACXL,KAAKoH,MAAMyjB,eACVE,EAAa,IAAM,IAAMvkB,EAAMtH,OAnDxC,6BAwDE,SAAwBmB,GACtB,IAAM2d,EAAO3d,EAAOL,KAAKoH,MAAMyjB,eAI/B,OAAK7M,GAGEA,EAAKmE,WAAW,OAhE3B,yBAmEE,SAAoB9hB,GAClB,IAAI2d,EAAO3d,EAAOL,KAAKoH,MAAMyjB,eACvBG,EAAMhrB,KAAKoH,MAAM4B,QAAQ,GAE/B,OAAKgV,GAIDA,EAAKmE,WAAW,OAClBnE,EAAOA,EAAKiN,UAAU,EAAGjN,EAAK1U,SAGjBtJ,KAAKoH,MAAM4B,QAAQ4I,MAAK,SAACC,GAAD,OAAOA,EAAE3S,KAAO8e,MAE9BgN,GAThBA,IAxEb,oBAoFE,WAAS,IAMHE,EACAC,EAPG,OACP,EAA4BnrB,KAAKoH,MAAzB4B,EAAR,EAAQA,QAAS3I,EAAjB,EAAiBA,OACT4W,EAAejX,KAAKmI,MAApB8O,WAEFmU,EAAiBprB,KAAK8qB,YAAYzqB,GAaxC,MAR4B,UAAxB+qB,EAAe1b,MACjByb,EAAUE,GAAAA,GACVH,EAAWI,GAAAA,KAEXJ,EAAWK,GAAAA,GACXJ,EAAUK,GAAAA,IAIV,uBAAKngB,UAAU,gBACZrC,EAAQM,OAAS,EAChB,gBAACb,EAAA,EAAD,CACEF,QAASC,EAAAA,GAAAA,OACT,aAAYe,EAAZ,oCACAZ,SAAU,SAACrJ,GAAD,OAAO,EAAKqJ,SAASrJ,IAC/B2I,SAAU,SAACsB,EAAGjG,GAAJ,OAAa,EAAK2E,SAAS3E,IACrC+E,WAAY+iB,EAAe7gB,MAC3B3C,OAAQqP,EACR,kBAAiB1N,EAAjB,qCAECP,EAAQjK,KAAI,SAACmK,GAAD,OACX,gBAACE,EAAA,EAAD,CAAcC,IAAKH,EAAOhK,GAAIwI,MAAOwB,EAAOqB,YAG9C,KAEHvK,KAAK2qB,gBAAgBtqB,GACpB,gBAAC6qB,EAAD,CACE7f,UAAU,uBACV0B,KAAK,KACLvB,QAAS,kBAAM,EAAKigB,mBAGtB,gBAACN,EAAD,CACE9f,UAAU,uBACV0B,KAAK,KACLvB,QAAS,kBAAM,EAAKigB,wBAjIhC,GAA0BjiB,EAAAA,Y,OAAbihB,GAAAA,eAEW,CACpBI,cAAe,S,uCCjBZ,I,MAAM9M,GAAb,6B,IAAA,G,EAAA,E,gaAAA,8FACE,SAAa7e,EAAIwsB,GAGfA,GAAWA,EACX1rB,KAAKoH,MAAMgE,aACT9K,EAAAA,GAAAA,SACEN,KAAKoH,MAAM/G,OACX,QACCqrB,EAAU,IAAM,IAAMxsB,MAT/B,qBAaE,SAAgBwQ,EAAMxQ,GAAI,WACxB,GAAY,QAARwQ,EAAJ,CAGA,IAAIic,EACAC,IACA5rB,KAAKoH,MAAM/G,OAAX,MACFnB,GAAMc,KAAKoH,MAAM/G,OAAX,KAA0BwW,QAAQ,IAAK,IAC3C6U,GAAU,EACd,GAAIE,EAAY,CAEd,IAAIC,EADJH,EAAU1rB,KAAKoH,MAAM/G,OAAX,KAA0BmC,SAAS,KAEjC,SAARkN,IACFmc,GAAMA,GAERF,EAAOE,EAAKC,GAAAA,GAAuBC,GAAAA,QAEnCJ,EAAOK,GAAAA,GAGT,OACE,gBAACL,EAAD,CACE,UAAS,QAAUzsB,EACnB6N,KAAK,KACLvB,QAAS,kBAAM,EAAKwS,KAAK9e,EAAIwsB,IAC7BrgB,UAAW,cAAgBugB,EAAa,SAAW,iBAtC3D,2BA2CE,SAAsBrpB,GACpB,OACE,sBAAI8G,IAAK9G,EAAKrD,GAAImM,UAAW9I,MAAAA,OAAF,EAAEA,EAAM8I,WAChC9I,EAAKgI,MADR,IACgBvK,KAAKisB,QAAQ1pB,EAAKmN,KAAMnN,EAAKrD,OA9CnD,oBAmDE,WAAS,WACP,OACE,6BACE,sBAAI,kBAAgB,WACjBc,KAAKoH,MAAM4B,QAAX,QAA8BjK,KAAI,SAACmtB,GAAD,OACjC,EAAKC,cAAcD,YAxD/B,GAA+B1iB,EAAAA,W,gDCaxB,IAAMmM,GAAb,6B,IAAA,G,EAAA,E,gaAME,WAAYvO,GAAO,6BACjB,cAAMA,IACDe,MAAQ,CACXP,QAAQ,EACRQ,cAAUgkB,GAJK,EANrB,qCAcE,WAAS,WACCxkB,EAAW5H,KAAKmI,MAAhBP,OACR,EACE5H,KAAKoH,MADCwO,EAAR,EAAQA,MAAO0B,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,YAAa1N,EAAxC,EAAwCA,SAAU2N,EAAlD,EAAkDA,QAAS6U,EAA3D,EAA2DA,UAG3D,OACE,gBAACC,GAAA,EAAD,CACErkB,SAAU,SAAC3I,GAAD,OAAO,EAAK2I,SAAS3I,IAC/BsY,OAAQ5X,KAAKusB,aAAajV,EAAYC,GACtC3P,OAAQA,EACR4P,QAASA,EACTgV,cAAe5W,EACf/L,SAAUA,GAAY4iB,GAAAA,GAAAA,MACtBC,WAAW,EACX,aAAYL,MA5BpB,0BAiCE,SAAqB/U,EAAYC,GAAa,WAC5C,OAAQD,GACN,IAAK,WACH,OACE,gBAACqV,GAAA,EAAD,CAAgBhkB,SAAU,SAACrJ,GAAD,OAAO,EAAKqJ,SAASrJ,KAC5CU,KAAKmI,MAAMC,SACRpI,KAAKmI,MAAMC,SACXmP,GAAehO,EAAJ,iCAGrB,IAAK,OACH,OACE,gBAACojB,GAAA,EAAD,CACEC,gBAAiB,KACjBjkB,SAAU,SAACrJ,GAAD,OAAO,EAAKqJ,SAASrJ,KAE9BU,KAAKmI,MAAMC,SACRpI,KAAKmI,MAAMC,SACXmP,GAAehO,EAAJ,iCAGrB,IAAK,QACH,OAAO,gBAACsjB,GAAA,EAAD,CAAalkB,SAAU,SAACrJ,GAAD,OAAO,EAAKqJ,SAASrJ,SAvD3D,sBA2DE,SAAiBsI,GACf5H,KAAK6H,SAAS,CACZD,OAAAA,MA7DN,sBAiEE,SAAiBE,GAAO,WACtB9H,KAAK6H,SACH,CACED,QAAS5H,KAAKmI,MAAMP,OACpBQ,SAAUN,EAAM8O,cAAclP,QAEhC,WACM,EAAKN,MAAMa,UACb,EAAKb,MAAMa,SAASH,UAzE9B,GAAsC0B,EAAAA,Y,OAAzBmM,GAAAA,eACW,CACpB6B,SAAS,EACTF,WAAY,U,mECfT,IAAMiE,GAAb,6B,IAAA,G,EAAA,E,gaAAA,2LAKqB,CACjBuR,QAAS,UACTC,UAAW,WAPf,uCAUE,WACE,IAAIC,EACJ,EAAyBhtB,KAAKoH,MAAtBoU,EAAR,EAAQA,OAAQ9L,EAAhB,EAAgBA,KAEhB,OAAQ8L,GACN,KAAK1W,GAAAA,GAAAA,QACHkoB,EAAa,CACXvU,MAAO,OACP0G,KAAM5V,EAAF,+BACJuK,KAAM,gBAAC,MAAD,OAER,MAGF,KAAKhP,GAAAA,GAAAA,QACL,KAAKA,GAAAA,GAAAA,SACHkoB,EAAa,CACXvU,MAAO,SACP0G,KAAM5V,EAAF,gCACJuK,KAAM,gBAAC,MAAD,OAER,MAEF,KAAKhP,GAAAA,GAAAA,QACHkoB,EAAa,CAAEvU,MAAO,OAAQ0G,KAAM5V,EAAF,+BAAcuK,KAAM,gBAAC,MAAD,OACtD,MAEF,KAAKhP,GAAAA,GAAAA,UACHkoB,EAAa,CACXvU,MAAO,QACP0G,KAAM5V,EAAF,iCACJuK,KAAM,gBAAC,MAAD,OAER,MAEF,KAAKhP,GAAAA,GAAAA,OACHkoB,EAAa,CACXvU,MAAO,MACP0G,KAAM5V,EAAF,8BACJuK,KAAM,gBAAC,MAAD,OAER,MACF,QACE,MAAO,MAGX,OACE,gBAACqR,GAAA,EAAD,CACE5c,QAASvI,KAAKitB,iBAAiBvd,GAC/B+I,MAAOuU,EAAWvU,MAClB3E,KAAMkZ,EAAWlZ,MAEhBkZ,EAAW7N,UA9DpB,GAAqC3V,EAAAA,Y,OAAxB+R,GAAAA,eACW,CACpB7L,KAAM,Y,yqDC0BGwd,GAAb,6B,IAAA,G,EAAA,E,gaAKE,WAAY9lB,GAAO,6BACjB,cAAMA,IAEDe,MAAQ,CACXglB,oBAAqB,IAJN,EALrB,qCAaE,WAAS,WACP,EAAuDntB,KAAKoH,MAApDiE,EAAR,EAAQA,UAAW9G,EAAnB,EAAmBA,UAAW6G,EAA9B,EAA8BA,aAAc/K,EAA5C,EAA4CA,OAUvCL,KAAKotB,YAAcptB,KAAKqtB,gBAAkB9oB,IAC7CvE,KAAKotB,WAAaptB,KAAKstB,WAAW/oB,GAClCvE,KAAKqtB,cAAgB9oB,GAGvB,IAAMgpB,EAAQvtB,KAAKotB,WAEnB,OACE,uBAAK/hB,UAAWA,GACd,gBAAC,KAAD,KACE,gBAACoF,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CACEkD,IAAK7T,KAAKoH,MAAMomB,aAChB9lB,MAAOrH,EAAOgQ,SACdO,SAAU,SAACC,GACTzF,EAAa9K,EAAAA,GAAAA,SAAqBD,EAAQ,WAAYwQ,KAExDvJ,QAAS,kBACP8D,EAAa9K,EAAAA,GAAAA,SAAqBD,EAAQ,WAAY,MAExD,aAAW,eACXyQ,YAAavH,EAAF,yCAKnB,gBAACkkB,GAAA,EAAD,CAAKC,MAAM,SACT,gBAACC,GAAA,EAAD,KACGjuB,OAAOD,KAAK8tB,GAAOxuB,KAAI,SAACsK,GAAD,OACA,IAAtBkkB,EAAMlkB,GAAKC,OACP,KACA,EAAKskB,YACHL,EAAMlkB,GACNA,EACA,EAAKjC,MAAM/G,OAAOgQ,UAAY,YA3DlD,wBAoEE,SAAmB9L,GACjB,MAAkCvE,KAAKoH,MAEjCymB,EAAgB,CACpBxqB,UAHF,EAAQA,UAINF,WAJF,EAAmBA,WAKjBJ,KAAM/C,KAAKgR,QAAQC,cAGfsc,EAAQ,CACZO,cAAe,GACfC,QAAS,GACTC,MAAO,GACPC,QAAS,GACTC,UAAW,IAUb,GAPAX,EAAMO,cAAc3kB,KAAK,CACvBc,QAASV,EAAF,8BACPrH,KAAKwM,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,0BAAiCkf,GACjDne,KAAM,OACNpM,KAAM,WAGJiB,EAAU4pB,oBAAqB,YACd5pB,EAAU4pB,qBADI,IACjC,2BAAkD,KAAvCrqB,EAAuC,QAC1C5B,GAAMksB,EAAAA,EAAAA,IAAiBtqB,EAAKR,MAClCiqB,EAAMO,cAAc3kB,KAAK,CACvBc,QAASjK,KAAKquB,WACZvqB,EAAKR,KAAKgrB,MAAM,KAAK,GAAGA,MAAM,KAAK3P,KAAK,MAE1Czc,KAAKwM,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,yBAAD,GAAC,MACXkf,GADU,IAEb9sB,KAAMmB,KAGRwN,KAAM,OACNpM,KAAMpB,KAbuB,+BAkBnC,GAAIqC,EAAUlC,SAAU,YACAkC,EAAUlC,UADV,IACtB,2BAA0C,KAA/B2M,EAA+B,QACxC,OAAQA,EAAQvM,cACd,IAAK,OACH8qB,EAAMS,MAAM7kB,KAAKnJ,KAAKuuB,gBAAgBvf,EAAS6e,IAC/C,MACF,IAAK,SACHN,EAAMQ,QAAQ5kB,KAAKnJ,KAAKuuB,gBAAgBvf,EAAS6e,IACjD,MACF,IAAK,WACHN,EAAMW,UAAU/kB,KAAKnJ,KAAKuuB,gBAAgBvf,EAAS6e,IACnD,MACF,QACEN,EAAMU,QAAQ9kB,KAAKnJ,KAAKuuB,gBAAgBvf,EAAS6e,MAbjC,+BAoBxB,cAAgBnuB,OAAOD,KAAK8tB,GAA5B,eACEA,EADU,MACDvP,MAAK,SAACwQ,EAAGC,GAGhB,OAAID,EAAEvkB,QAAQkY,WAAW,OAASsM,EAAExkB,QAAQkY,WAAW,KAC9C,GAEJqM,EAAEvkB,QAAQkY,WAAW,MAAQsM,EAAExkB,QAAQkY,WAAW,MAC7C,EAEHqM,EAAEvkB,QAAUwkB,EAAExkB,QAAU,GAAK,KAIxC,OAAOsjB,IAhJX,yBAmJE,SAAoBlgB,EAAoB9C,EAAOmkB,GAAsB,WAC7DzX,GAAcjX,KAAKmI,MAAMglB,oBAAoB3qB,SAAS+H,GACtDokB,EAAgBthB,EAAM/K,QAAO,SAACgL,GAAD,OACjCA,EAAKrD,QAAQ8N,cAAcvV,SAASksB,EAAa3W,kBAEnD,OACE,gBAAC6W,GAAA,EAAD,CACEvlB,IAAKkB,EACLA,MAAO,eAAcA,EAAd,aAAwBokB,EAAcrlB,OAAtC,MACP2N,WAAYA,EACZvJ,SAAU1N,KAAK6uB,wBAA0BtkB,GAExCokB,EAAc5vB,KAAI,SAACuO,EAAiBE,GAAlB,OACjB,gBAACshB,GAAA,EAAD,CAASzlB,IAAKmE,EAAOE,SAAU,EAAKqhB,WAAWzhB,IAC7C,gBAAC,KAAD,CACE1D,MAAO,CACLolB,aAAc,WACdC,SAAU,SACVC,WAAY,UAEdvhB,GACEL,EAAKpL,KACqC,GAAzCxC,OAAOD,KAAK,EAAK2H,MAAM/G,QAAQiJ,OAC5B,IAAMhJ,EAAAA,GAAAA,eAA2B,EAAK8G,MAAM/G,QAC5C,KAGN,wBACEuJ,MAAO,CACLolB,aAAc,WACdC,SAAU,SACVC,WAAY,SACZjlB,QAAS,UAGVqD,EAAKrD,iBAtLtB,wBA+LE,SAAmBklB,GAEjB,OAAKnvB,KAAKoH,MAAMgoB,cAA+B,WAAfD,EAAM7rB,MAOpCtD,KAAKoH,MAAMgoB,eAAiBD,EAAM7rB,MAClCtD,KAAKoH,MAAMioB,eAAiBF,EAAMzf,OAzMxC,iCA6ME,WACE,IAAQ2f,EAAiBrvB,KAAKoH,MAAtBioB,aACR,OAAKA,GAAiC,SAAjBA,EAIA,SAAjBA,EACK,QAGY,WAAjBA,EACK,UAGF,UAXE,kBAhNb,wBA8NE,SAAmBC,GACjB,OAAOA,EAAE7f,MAAM,EAAG,GAAG8f,cAAgBD,EAAE7f,MAAM,KA/NjD,6BAkOE,SAAwBT,EAASwgB,GAC/B,MAAO,CACLvlB,QAAS+E,EAAQygB,aACjBvtB,KAAKwM,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,4BAAD,GAAC,MACX6gB,GADU,IAEb9f,KAAMV,EAAQvM,aACda,KAAM0L,EAAQygB,gBAEhBnsB,KAAM0L,EAAQygB,aACd/f,KAAMV,EAAQvM,kBA3OpB,GAAqC+G,EAAAA,Y,OAAxB0jB,GAAAA,cAGUhc,GAAAA,G,wCCjChB,IAAM0T,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MACE5kB,KAAKoH,MADCyL,EAAR,EAAQA,KAAMxS,EAAd,EAAcA,OAAQ+K,EAAtB,EAAsBA,aAAcrC,EAApC,EAAoCA,WAAY2mB,EAAhD,EAAgDA,cAEhD,OACE,gBAAC,KAAD,CACEC,UAAW3vB,KAAK4vB,eAChB3nB,SAAU,SAACsB,EAAGF,GAAJ,OACPN,GACDqC,EACE9K,EAAAA,EAAAA,SAAqBD,EAAQ,MAAOwS,EAAKxJ,GAAK0O,kBAIjDlF,EAAK9T,KAAI,SAACme,EAAK9S,GAAN,OACR,gBAACylB,GAAA,EAAD,CACExmB,IAAKe,EACL0lB,SAAU1lB,EACVG,MACE,gBAACwlB,GAAAC,EAAD,CAAczlB,MAAOxB,EAAa2mB,EAAgB,MAC/CxS,GAGL7R,UAAWtC,EAAa,WAAa,aAvBjD,0BA8BE,WACE,MAAyB/I,KAAKoH,MAAtB/G,EAAR,EAAQA,OAAQwS,EAAhB,EAAgBA,KAChB,GAAIxS,EAAO6c,IAAK,CACd,IAAM9S,EAAIyI,EAAKod,WACb,SAACpe,GAAD,OAAOA,EAAEkG,gBAAkB1X,EAAO6c,IAAInF,iBAIxC,OAAW,IAAP3N,EACK,EAEAA,EAGT,OAAO,MA5Cb,GAA0BZ,EAAAA,WCZnB,IAAM8J,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC6R,GAAA,EAAD,CAAO9Z,UAAU,MAAM6kB,UAAQ,GAC5BlwB,KAAKoH,MAAMmF,cAJpB,GAAyB/C,EAAAA,W,klBCFKA,EAAAA,UCqCvB,IAAM2mB,GAAb,6B,IAAA,G,EAAA,E,gaAKE,WAAY/oB,GAAO,6BACjB,cAAMA,IACDe,MAAQ,CACX6T,QAAS5U,EAAM/G,OAAOgQ,UAAY,IAHnB,EALrB,qCAYE,WAAS,WACP,EAMIrQ,KAAKoH,MALP/G,EADF,EACEA,OACA+vB,EAFF,EAEEA,YACAhlB,EAHF,EAGEA,aACAilB,EAJF,EAIEA,kBACAC,EALF,EAKEA,YAEMtU,EAAYhc,KAAKmI,MAAjB6T,QACR,OACE,gBAAC,KAAD,KACE,gBAACpH,GAAA,EAAD,KACE,gBAACnE,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAAC2G,GAAA,EAAD,KACE,gBAACa,GAAA,GAAD,CACExQ,MAAOsU,EACPpL,SAAU,SAAC1B,GAAD,OAAO,EAAKrH,SAAS,CAAEmU,QAAS9M,KAC1CiJ,WAAY,SAAC7Y,GAAD,OAAO,EAAK8Y,YAAY9Y,IACpCoQ,KAAK,SACL,aAAW,oBACXoB,YAAauf,IAEf,gBAAC9kB,EAAA,GAAD,CACEhD,QAASoP,EAAAA,GAAAA,QACT,aAAW,gBACXnM,QAAS,kBAAM,EAAK+kB,mBAEpB,gBAAC,MAAD,UAKPH,GACC,gBAAC3f,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAAC+Z,GAAD,CACEzhB,QAASonB,EACT/vB,OAAQA,EACR+K,aAAcA,MAKrBklB,MAxDX,yBA8DE,SAAoBhxB,GAEJ,UAAVA,EAAE+J,KACJrJ,KAAKuwB,mBAjEX,4BAqEE,WACEvwB,KAAKoH,MAAMgE,aAAX,SACK9K,EAAAA,EAAAA,SACDN,KAAKoH,MAAM/G,OACX,WACAL,KAAKmI,MAAM6T,UAJf,IAMEjb,KAAM,SA5EZ,GAA6ByI,EAAAA,Y,OAAhB2mB,GAAAA,eACW,CACpBG,YAAa,KCxCV,IAAMjf,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA8BrR,KAAKoH,MAA3B4H,EAAR,EAAQA,QAASzC,EAAjB,EAAiBA,SACjB,OACE,gBAAC,IAAD,CAAWyC,QAASA,GAClB,4BAAOzC,QALf,GAA6B/C,EAAAA,W,wBCetB,I,yDAAMgnB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,EASIxwB,KAAKoH,MARP6Y,EADF,EACEA,cACAwQ,EAFF,EAEEA,WACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,WACAC,EANF,EAMEA,MACAvK,EAPF,EAOEA,eACA/F,EARF,EAQEA,YAGIuQ,EAASL,EAAW1xB,KAAI,SAACyH,GAC7B,IAAKA,EACH,OAAO,KAGT,IAAM6Z,EAAY7Z,EAAMtH,MAAM+gB,EAAgB,QAAU,UAExD,OACE,gBAACT,GAAA,EAAD,CACEC,QAASjZ,EAAMtH,GACfkhB,kBAAmBH,EAAczZ,EAAMtH,IACvCihB,YAAayQ,GAActK,EAAe9jB,SAASgE,EAAMtH,IACzDmK,IAAK7C,EAAMtH,GACX6Q,MAAOvJ,EAAM+D,MACbgY,WAAYqO,GAAepqB,EAAMuqB,mBACjC1Q,UAAWuQ,EAAa,UAAYvQ,EACpC,kBAAiB7Z,EAAMtH,IAEtB0xB,EACCC,EAAMrqB,EAAMtH,IAEZ,gBAACgZ,GAAA,GAAD,CACEhZ,GAAIsH,EAAMtH,GACV0R,SAAU2P,EACVzP,YAAatK,EAAMsK,YACnBpB,KAAOlJ,EAAMkJ,MAAgB,OAC7B2Q,UAAWA,EACX3Y,MAAOmpB,EAAMrqB,EAAMtH,UAO7B,OACE,gBAACqgB,GAAA,EAAD,CACEyR,SAAU,SAAC1xB,GACTA,EAAE2xB,iBACF,EAAK7pB,MAAM8pB,WAGZR,EACAI,EACAH,OAxDT,GAA8BnnB,EAAAA,W,ykBCuBvB,IAAM2nB,GAAb,6B,IAAA,G,EAAA,E,gaAME,WAAY/pB,GAAO,4BACjB,cAAMA,IADW,iCAsLG,WACpB,IAAMgqB,EAAU,MAAK,EAAKhqB,MAAM6hB,MAChCmI,EAAQzQ,OAAS,GACjB,EAAKvZ,MAAMiqB,WAAWD,EAAS,EAAKhqB,MAAM6Y,mBAzLzB,mCA4LK,SAACnY,EAAOC,EAAWC,GACzC,IAAQihB,EAAS,EAAK7hB,MAAd6hB,KAEFmI,EAAU,MAAKnI,GAEf7e,EAAI6e,EAAKtI,OAAOsP,WAAU,SAACnP,GAAD,OAAOA,EAAExd,OAASyE,KAClD,IAAW,IAAPqC,EAAU,CACZ,IAAM+Y,EAAa,EAAKhb,MAAM+a,aAAatR,MACzC,SAACkP,GAAD,OAAOA,EAAExd,OAASyE,KAEpBkhB,EAAKtI,OAAOxX,KAAKga,QAEjB8F,EAAKtI,OAAO3V,OAAOZ,EAAG,GAGxB,EAAKhD,MAAMiqB,WAAWD,EAAS,EAAKhqB,MAAM6Y,mBA3MzB,gCA8ME,SAAC3c,GACpBwC,GAAAA,GAAAA,KAAc,CAAEkd,eAAgB1f,EAAMkZ,UAAW,IAAKvZ,MAAK,SAACqB,GAAD,OACzD,EAAKuD,SAAS,CAAEqb,aAAc5e,EAAOlD,KAAKA,cAhN3B,iCAyPG,SAACsG,EAAOI,GAC5B,EAAKwpB,sBAAsB5pB,EAAOI,EAAML,OAAOvI,OAvP/C,EAAKiJ,MAAQ,CACXopB,gBAAiB,GACjBrO,aAAc,IALC,EANrB,gDAeE,WACEljB,KAAKqjB,WAAW,MAhBpB,oBAmBE,WAAS,WACP,EAQIrjB,KAAKoH,MAPP6hB,EADF,EACEA,KACAhJ,EAFF,EAEEA,cACA2Q,EAHF,EAGEA,WACAY,EAJF,EAIEA,SACAC,EALF,EAKEA,SACAC,EANF,EAMEA,UACAC,EAPF,EAOEA,KAEMJ,EAAoBvxB,KAAKmI,MAAzBopB,gBACFd,EAAa,CACjB,CAAEvxB,GAAI,WAAYqL,MAAOhB,EAAF,iCACvB,CAAErK,GAAI,aAAcqL,MAAOhB,EAAF,mCACzB,CAAErK,GAAI,YAAaqL,MAAOhB,EAAF,kCACxB,CAAErK,GAAI,QAASqL,MAAOhB,EAAF,+BACnBqnB,GAAc,CACb1xB,GAAI,WACJqL,MAAOhB,EAAF,gCACLmG,KAAM,WACNoB,YAAa4gB,EAAY,GAAK,yBAC9BX,mBACE,gBAACnX,GAAD,CACE5K,QAASzF,EAAF,6JAKT+c,EAAiB,CAAC,YAAJ,eAAoBoL,EAAY,CAAC,YAAc,KA+D7DE,EACJ,gBAACpS,GAAA,EAAD,CACEa,UAAWrgB,KAAKsgB,UAAU,iBAAkBL,IAC5CR,QAAQ,eACRpW,IAAI,iBACJ0G,MAAOxG,EAAF,iCACL6W,kBAAmBH,EAAa,aAChCZ,WAAYrf,KAAK6xB,uBAAuB5I,IAExC,gBAAC,IAAD,CACEja,QAASzF,EAAF,uGAEP,gBAACuoB,GAAA,EAAD,CACE/oB,YACG/I,KAAKgR,QAAQiY,KAAK8I,cACnBnB,GACA5wB,KAAKgR,QAAQiY,KAAK/pB,KAAO+pB,EAAK/pB,GAEhC6Q,MAAOxG,EAAF,kCACLyoB,SAAUzoB,EAAF,wCACRwe,UAAWkB,EAAK8I,aAChBnhB,SAAU,SAACtR,GAAD,OACR,EAAKgyB,uBAAuBrI,EAAK8I,aAAc,qBAwBnDpB,EAAa,EAChBC,GA3GD,gBAACpR,GAAA,EAAD,CACEC,QAAQ,mBACRW,kBAAmB7W,EAAF,8CACjB4W,WAAYuR,KAAezI,EAAK5jB,SAChCgE,IAAI,gBACJ0G,MAAOxG,EAAF,6CACL8W,UAAW,EAAKC,QACd,EAAK2R,WAAWhJ,EAAK5jB,SAAUksB,KAGjC,gBAACrZ,GAAA,GAAD,CACEpH,YAAa4gB,EAAY,GAAK,yBAC9BrR,UAAW,EAAKC,QACd,EAAK2R,WAAWhJ,EAAK5jB,SAAUksB,IAEjCxoB,WAAY6nB,EACZ1xB,GAAG,mBACHwI,MAAO6pB,EACP3gB,SAAU,SAAClJ,GACT,EAAKG,SAAS,CAAE0pB,gBAAiB7pB,KAEnCgI,KAAK,cAuFTiiB,GAAQf,EAjFR,gBAACpR,GAAA,EAAD,CACEC,QAAQ,SACRpW,IAAI,iBACJ0G,MAAOxG,EAAF,8BACL,kBAAgB,mBAEf0f,EAAKtI,OAAO5hB,KAAI,SAACuJ,GAAD,OACf,gBAAC6c,GAAA,EAAD,CAAO9b,IAAKf,EAAMhF,MAAOgF,EAAMhF,UAMnC,gBAACkc,GAAA,EAAD,CACEC,QAAQ,SACRW,kBAAmBH,EAAa,OAChC5W,IAAI,aACJ0G,MAAOxG,EAAF,8BACL8W,UAAW,EAAKC,UAAU,WAAYL,KAEtC,gBAAC9Y,EAAD,CACE8B,QAAS,EAAKd,MAAM+a,aACpB7b,YAAa,EAAKgc,WAClBpb,SAAU,EAAKiqB,cACfppB,gBAAiBS,EAAF,qCACflB,WAAY4gB,EAAKtI,OACjBzY,UAAU,EACVZ,QAAS,EAAK6qB,YACdppB,WAAY6nB,KAsDhBgB,GACChB,GApBD,gBAACwB,GAAA,EAAD,CAAa/oB,IAAI,WACf,gBAACkC,EAAA,GAAD,CACEmE,KAAK,SACL3G,YACG,EAAKspB,YAAYpJ,EAAK5jB,SAAUksB,KAChC,EAAKe,eAAerJ,IAGtB1f,EAPH,6BASA,gBAACgC,EAAA,GAAD,CAAQlC,IAAI,SAASmC,QAAS,kBAAMimB,KAAYlpB,QAAQ,QACrDgB,EADH,iCAaJ,OACE,gBAACinB,GAAD,CACEvQ,cAAeA,EACfwQ,WAAYA,EACZE,WAAY,gCAAGA,GACfC,WAAYA,EACZC,MAAO5H,EACP3C,eAAgBA,EAChB/F,YAAa,SAACrU,EAAG5M,GAAJ,OAAU,EAAKihB,YAAYrU,EAAG5M,IAC3C4xB,OAAQ,kBAAMM,SA5KtB,oCAiLE,SAA+BvI,GAC7B,OAAKjpB,KAAKgR,QAAQiY,KAAK8I,aAGnB/xB,KAAKgR,QAAQiY,KAAK/pB,KAAO+pB,EAAK/pB,GACzBqK,EAAP,6DAGK,KANEA,EAAP,kEAnLN,qBA0NE,SAAgB8W,GACd,OAAIA,EACK,UAEA,UA9Nb,wBAmOE,SAAmBkS,EAAMC,GACvB,OAAQA,GAAWD,IAASC,IApOhC,yBAwOE,SAAoBD,EAAMC,GACxB,QAASD,GAAQC,IAAYD,IAASC,IAzO1C,4BA4OE,SAAuBvJ,GACrB,OAAIjpB,KAAKoH,MAAMsqB,YACJzI,EAAK5jB,YAAc4jB,EAAK7jB,WAExB6jB,EAAK7jB,WAhPpB,mCAoPE,SAA8BsC,EAAOlB,GACnC,IAAMyZ,EAAgB,MAAKjgB,KAAKoH,MAAM6Y,eAEhCoB,EAAS,MAAKrhB,KAAKoH,MAAM6hB,MAC/B5H,EAAO7a,GAASkB,EACZlB,KAASyZ,UACJA,EAAczZ,GAEvBxG,KAAKoH,MAAMiqB,WAAWhQ,EAAQpB,OA5PlC,GAA8BzW,EAAAA,Y,OAAjB2nB,GAAAA,eACkB,CAC3BP,YAAY,K,OAFHO,GAAAA,cAIUjgB,GAAAA,GC7BhB,I,GAAMuhB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGAIE,WACE,MAYIzyB,KAAKoH,MAXP6hB,EADF,EACEA,KACAzc,EAFF,EAEEA,YACAjC,EAHF,EAGEA,MACA8mB,EAJF,EAIEA,WACApR,EALF,EAKEA,cACAuR,EANF,EAMEA,SACAZ,EAPF,EAOEA,WACA8B,EARF,EAQEA,cACAjB,EATF,EASEA,SACAC,EAVF,EAUEA,UACAC,EAXF,EAWEA,KAGF,OACE,gBAAC,WAAD,KACE,gBAACvlB,EAAD,CACEI,YAAa,gBAACW,EAAD,CAAaE,MAAOb,IACjCF,aAAcomB,EACdnoB,MAAOA,IAET,gBAACkT,GAAD,KACE,2BAASpS,UAAU,QACjB,gBAAC8lB,GAAD,CACEQ,KAAMA,EACNf,WAAYA,EACZ3H,KAAMA,EACNoI,WAAYA,EACZpR,cAAeA,EACfuR,SAAUA,EACVC,SAAUA,EACVC,UAAWA,WApCzB,GAAkCloB,EAAAA,Y,OAArBipB,GAAAA,eACkB,CAC3BC,cAAe,OCRZ,IAAM3L,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA0C/mB,KAAKoH,MAAvCE,EAAR,EAAQA,QAAS0f,EAAjB,EAAiBA,WAAYza,EAA7B,EAA6BA,SAE7B,OAAKya,EAKH,gBAAC3P,GAAA,EAAD,KACE,gBAACa,GAAA,GAAD,CACE,aAAW,eACXpH,YAAY,yBACZpB,KAAK,WACL3G,WAAYie,IAEbA,GACC,gBAACzb,EAAA,GAAD,CAAQC,QAAS,kBAAMlE,KAAWiB,QAAQ,WACvCgB,EADH,+BAZGgD,MALb,GAAoC/C,EAAAA,Y,iRCdvB1I,GAAb,gC,QAAaA,GAAAA,6BACkC,qB,QADlCA,GAAAA,oBAEyB,K,QAFzBA,GAAAA,6BAGkC,CAAC,GAAI,GAAI,GAAI,O,QAH/CA,GAAAA,yBAK8B,K,QAL9BA,GAAAA,kCAMuC,CAAC,GAAI,GAAI,GAAI,O,QANpDA,GAAAA,2BAOgC,a,QAPhCA,GAAAA,6BAQkC,e,QARlCA,GAAAA,cAUmB,6B,QAVnBA,GAAAA,YAWQ,c,QAXRA,GAAAA,iBAcTU,aAAoBV,GAAU6xB,yBAC1B,YACA,iB,QAhBK7xB,GAAAA,eAkBW,a,QAlBXA,GAAAA,cAmBU,Y,QAnBVA,GAAAA,cAoBU,CACnB,CACEwC,KAAM,aACN8f,mBAAoB,CAClB,uBACA,0BACA,+BAGJ,CACE9f,KAAM,cACN8f,mBAAoB,CAAC,wCAEvB,CACE9f,KAAM,QACN8f,mBAAoB,CAClB,mBACA,qBACA,kBACA,uBAGJ,CACE9f,KAAM,SACN8f,mBAAoB,CAClB,oBACA,sBACA,mBACA,wBAGJ,CACE9f,KAAM,UACN8f,mBAAoB,CAClB,kCACA,kCAGJ,CACE9f,KAAM,aACN8f,mBAAoB,CAKlB,mDACA,6DACA,sCACA,iDACA,wC,QArEKtiB,GAAAA,8BA2F0B,CACnC,qBACA,kBACA,qBACA,sBACA,sB,QAhGSA,GAAAA,oBAkGgB,CACzB,uBAAwByI,EAAxB,oCACA,0BAA2BA,EAA3B,uCACA,6BAA8BA,EAA9B,0CACA,sCAAuCA,EAAvC,kDACA,mBAAoBA,EAApB,gCACA,qBAAsBA,EAAtB,kCACA,kBAAmBA,EAAnB,+BACA,qBAAsBA,EAAtB,kCACA,oBAAqBA,EAArB,iCACA,sBAAuBA,EAAvB,mCACA,mBAAoBA,EAApB,gCACA,sBAAuBA,EAAvB,mCACA,kCAAmCA,EAAnC,+CACA,gCAAiCA,EAAjC,6CACA,qCAAsCA,EAAtC,kDACA,mCAAoCA,EAApC,gDACA,yBAA0BA,EAA1B,sCACA,yBAA0BA,EAA1B,sCACA,uBAAwBA,EAAxB,oCACA,sBAAuBA,EAAvB,mCACA,mCAAoCA,EAApC,4CACA,iDAAkDA,EAAlD,8CACA,mDAAoDA,EAApD,wCACA,iDAAkDA,EAAlD,8CACA,6DAA8DA,EAA9D,wCACA,sCAAuCA,EAAvC,6DACA,iDAAkDA,EAAlD,qD,QA7HSzI,GAAAA,0BA+HsB,CAC/B8xB,iBAAkBrpB,EAAF,uCAChBspB,oBAAqBtpB,EAAF,0CACnBupB,uBAAwBvpB,EAAF,4CACtBwpB,qCAAsCxpB,EAAF,8CACpCypB,uCAAwCzpB,EAAF,mDACtC0pB,qCAAsC1pB,EAAF,8CACpC2pB,iDAAkD3pB,EAAF,wCAChD4pB,0BAA2B5pB,EAAF,6DACzB6pB,qCAAsC7pB,EAAF,yDACpC8pB,wBAAyB9pB,EAAF,iDACvB+pB,0BAA2B/pB,EAAF,mDACzBgqB,uCAAwChqB,EAAF,sDACtCiqB,uCAAwCjqB,EAAF,kDACtCkqB,oCAAqClqB,EAAF,0CACnCmqB,6BAA8BnqB,EAAF,0CAC5BoqB,6BAA8BpqB,EAAF,0CAC5BqqB,2BAA4BrqB,EAAF,wCAC1BsqB,2BAA4BtqB,EAAF,wCAC1BuqB,2BAA4BvqB,EAAF,2C,QAlJjBzI,GAAAA,kCAoJ8B,CACvC,4BACA,uCACA,yCACA,mDACA,yC,QAzJSA,GAAAA,iBA2Ja,CACtB,qBACA,yBACA,2B,QA9JSA,GAAAA,mBAgKe,CAExB,mBACA,yBACA,sBACA,sBAEA,qBACA,2BACA,wBACA,2B,QA1KSA,GAAAA,kBA4Kc,CACvB,oBAAqB,eACrBizB,UAAW,YACXC,UAAW,e,QA/KFlzB,GAAAA,eAkLW,CAAC,YAAa,YAAa,kB,QAlLtCA,GAAAA,yBAoLqB,CAC9B,cACA,QACA,WACA,iBACA,QACA,aACA,aACA,WACA,UACA,QACA,a,QA/LSA,GAAAA,aAkMS,CAClB,gEAAiEyI,EAAjE,qDACA,yDAA0DA,EAA1D,8CACA,iDAAkDA,EAAlD,iDACA,iDAAkDA,EAAlD,iDACA,8CAA+CA,EAA/C,gDACA,qDAAsDA,EAAtD,uDACA,gEAAiEA,EAAjE,yDACA,0CAA2CA,EAA3C,uDACA,2CAA4CA,EAA5C,mDACA,qDAAsDA,EAAtD,sDACA,2CAA4CA,EAA5C,wDACA,8DAA+DA,EAA/D,+DACA,uDAAwDA,EAAxD,wDACA,qCAAsCA,EAAtC,kDACA,uCAAwCA,EAAxC,qDACA,uCAAwCA,EAAxC,0DACA,iDAAkDA,EAAlD,8DACA,oDAAqDA,EAArD,iEACA,0DAA2DA,EAA3D,uEACA,gDAAiDA,EAAjD,6DACA,mDAAoDA,EAApD,4DACA,wCAAyCA,EAAzC,iDACA,8CAA+CA,EAA/C,uDACA,6CAA8CA,EAA9C,iDACA,6CAA8CA,EAA9C,iDACA,6CAA8CA,EAA9C,iDACA,wCAAyCA,EAAzC,8CACA,iCAAkCA,EAAlC,8CACA,+CAAgDA,EAAhD,iDACA,+CAAgDA,EAAhD,iDACA,mCAAoCA,EAApC,gDACA,+CAAgDA,EAAhD,iDACA,yCAA0CA,EAA1C,mD,iCChOA0qB,E,0OCkBW,SAASC,EAAeC,GA6BrC,OA7BsD,+B,IAAA,G,EAAA,E,gaAEpD,WAAY/sB,GAAO,6BACjB,cAAMA,IAEDe,MAAQ,CACX0G,UAAW,MAJI,EAFiC,qEAUpD,sGACuCslB,IADvC,gBACmBtlB,EADnB,UAGE7O,KAAK6H,SAAS,CACZgH,UAAAA,IAJJ,gDAVoD,iEAkBpD,WACE,IAAMulB,EAAIp0B,KAAKmI,MAAM0G,UAErB,OAAOulB,EACL,gBAACA,EAAMp0B,KAAKoH,OAEZ,gBAAC,KAAD,UAxBgD,GACzBitB,EAAAA,W,+DCDzBC,EAAgBJ,GAAe,kBACnC,yDAMIK,EAAmBL,GAAe,kBACtC,0DAMIM,EAAoBN,GAAe,kBACvC,yDAMIO,EAAiBP,GAAe,kBACpC,yDAMIQ,EAAsBR,GAAe,kBACzC,0DAMIS,EAAWT,GAAe,kBAC9B,kCAMIU,EAAeV,GAAe,kBAClC,kCAMIW,EAAkBX,GAAe,kBACrC,wDAMIY,EAAgBZ,GAAe,kBACnC,wDAMIa,EAAWb,GAAe,kBAC9B,kCAMIc,EAAYd,GAAe,kBAC/B,kCAMIe,EAASf,GAAe,kBAC5B,kCAMIgB,EAAYhB,GAAe,kBAC/B,kCAMIiB,EAAyBjB,GAAe,kBAC5C,kCAMIkB,EAAalB,GAAe,kBAChC,kCAMImB,EAAgB,SAAC,GAAiD,IAApChB,EAAoC,EAA/CxlB,UAAsBymB,EAAyB,EAAzBA,UAAcC,GAAW,YAChEC,EAAOC,SAASC,eAAe,QAKrC,OAJAF,EAAKG,gBAAgB,SACrBH,EAAKI,UAAU5Q,IAAf,gBAA4BsQ,GAAa,mBACzCE,EAAKK,aAAa,OAAQ,QAEnB,gBAAC,MAAD,UAAWN,EAAX,CAAiB1mB,UAAWwlB,MAGrCgB,EAAcS,UAAY,CACxBjnB,UAAWknB,IAAAA,KACXT,UAAWS,IAAAA,QAWN,IAAMC,EAAS,SAAC5uB,GACrB,IAAMpE,EAAOoE,EAAM6uB,WAAWC,SAASC,SAEvC,OACE,gBAAC,KAAD,KACE,gBAACd,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,aACNE,UAAWumB,EACXE,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,kBACNE,UAAWsmB,EACXG,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,SACNE,UAAW8lB,EACXW,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,MACNE,UAAWqmB,EACXI,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAK,SACXE,UAAWkmB,EACXO,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,cACNE,UAAWylB,EACXgB,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,cACNE,UAAWgmB,EACXS,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,oBACNE,UAAWgmB,EACXS,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,aACNE,UAAW+lB,EACXU,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,yBACNE,UAAW4lB,EACXa,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,0BACNE,UAAW4lB,EACXa,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,4BACNE,UAAW4lB,EACXa,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,4BACNE,UAAW2lB,EACXc,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,0BACNE,UAAW6lB,EACXY,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,iBACNE,UAAW0lB,EACXe,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,gBACNE,UAAWimB,EACXQ,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,aACNE,UAAWomB,EACXK,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,mBACNE,UAAW4lB,EACXa,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,oBACNE,UAAW4lB,EACXa,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,sBACNE,UAAW4lB,EACXa,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,sBACNE,UAAW2lB,EACXc,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,oBACNE,UAAW6lB,EACXY,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,UACNE,UAAWmmB,EACXM,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,WACNE,UAAW0lB,EACXe,UAAU,SAEZ,gBAACD,EAAD,CACEryB,KAAM2L,EAAAA,GAAAA,UACNE,UAAWimB,EACXQ,UAAU,SAEZ,gBAACD,EAAD,CAAeryB,KAAM2L,EAAAA,GAAAA,OAAcE,UAAWomB,EAAQK,UAAU,SAEhE,gBAAC,KAAD,CACEc,OAAQ,kBACNC,GAAAA,CAAK1nB,EAAAA,IAAO,SAAChO,GAAD,OAAOA,IAAMqC,KAAQ,KAC/B,gBAAC,KAAD,CAAU2K,GAAIgB,EAAAA,GAAAA,gB,sBCjR1B,IAAM2nB,EAAe,YAEfC,EAAAA,SAAAA,I,2bACJ,WAAYnvB,GAAO,4BACjB,cAAMA,IADW,mCAiHH,SAAC6hB,GACf,EAAKphB,SAAS,CAAE2uB,WAAYvN,QAlHX,+BAqHP,SAACiN,GACX,OAAOO,EAAAA,EAAAA,IAAUP,EAAU,CACzBlzB,KAAM2L,EAAAA,GAAAA,sBApHR,EAAKxG,MAAQ,CACX8gB,KAAM,KACNuN,WAAY,KACZvlB,aAAcqlB,GANC,E,gDAUnB,WAAoB,WAClB50B,SAASC,OAAO+0B,OAChBh1B,SAASC,OAAOg1B,YAAY,kBAK5B32B,KAAK42B,OAASl1B,SAASC,OAAOk1B,GAAG,kBAAkB,SAAC/uB,GAElD,GAAKA,MAAAA,GAAAA,EAAOgvB,SAAZ,CAMA,IAAMC,EAAW,EAAK3vB,MAAM2vB,SAASlgB,QAAQ,YAAa,KAEtD/O,EAAMgvB,SAAStkB,KAMjB,EAAKpL,MAAM4vB,QAAQ7tB,KACjBrB,EAAMgvB,SAAStkB,KAAKqE,QAAQkgB,EAAU,KAAO,KAO/C,EAAK3vB,MAAM4vB,QAAQ7tB,KAAnB,WAA4BrB,EAAMmvB,YAItCv1B,SAASC,OAAOC,KACbC,UACAoB,MAAK,SAACgmB,GAAD,OAAU,EAAKphB,SAAS,CAAEohB,KAAMA,OACxC/jB,EAAAA,GAAAA,gBAA8BjC,MAAK,SAACqB,GAAD,OACjC,EAAKuD,SAAS,CAAE2uB,WAAYlyB,EAAOlD,Y,kCAIvC,WACEpB,KAAK42B,W,gCAGP,SAAmBM,GASjB,IAAM1mB,EAAQxQ,KAAKm3B,UAAUn3B,KAAKoH,MAAM8uB,SAASC,UAE7C3lB,EAGEA,EAAMnQ,OAAN,OAAyBL,KAAKmI,MAAM8I,cACtCjR,KAAK6H,SAAS,CAAEoJ,aAAcT,EAAMnQ,OAAN,OAK5BL,KAAKmI,MAAM8I,eAAiBqlB,GAC9Bt2B,KAAK6H,SAAS,CAAEoJ,aAAcqlB,M,oBAKpC,WAME,IAAM9lB,EAAQxQ,KAAKm3B,UAAUn3B,KAAKoH,MAAM8uB,SAASC,UACjD,OAAI3lB,GAASA,EAAMnQ,OAAN,OAAyBL,KAAKmI,MAAM8I,aACxC,KAMJjR,KAAKmI,MAAM8gB,MAASjpB,KAAKmI,MAAMquB,WAIhC,gBAAC,aAAD,CACE9uB,MAAO,CACLuhB,KAAMjpB,KAAKmI,MAAMquB,WACjBY,QAASp3B,KAAKq3B,cACdpmB,aAAcjR,KAAKmI,MAAM8I,eAG3B,gBAAC+kB,EAAD,CAAQC,WAAYj2B,KAAKoH,SAVtB,S,EAnGPmvB,CAAYlC,EAAAA,WA6HlBkC,EAAIT,UAAY,CACdkB,QAASjB,IAAAA,OACTgB,SAAUhB,IAAAA,OAAAA,YAQZ,SAAeuB,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,KAAAA,CAAUhB,ICzIpC,ICTMiB,EACEC,GDQFV,ICTAS,EAAU,KACRC,GDQqBh2B,OAAOy0B,SAASC,SCRjB7H,MAAM,MAEvBoJ,QAEW,SAAhBD,GAAS,KACXA,GAASC,QACTF,EAAU,UAGZ,UAAUA,GAAV,OAAoBC,GAAS,GAA7B,YAAmCA,GAAS,KDC9CE,EAAAA,OACE,gBAAC,KAAD,CAAUC,MJRL,WACL,GAAI3D,EACF,MAAM,IAAI10B,MAAM,6BAFgB,2BAAZs4B,EAAY,yBAAZA,EAAY,gBAalC,OARA5D,EAAW,IAAI6D,EAAAA,GAAgB,GAApB,CAAyBC,EAAAA,IAAzB,OAAqCF,IIG/BnB,GAAOsB,YACtB,gBAAC,KAAD,CAAQjB,SAAUA,IAChB,gBAAC,EAAD,CAAKA,SAAUA,OAInBtB,SAASC,eAAe,U,kDERbxkB,E,SAAa1H,mBAAqC4iB,I,yECKnDzd,E,iCAdL,SAASD,EAAW1L,EAAa5B,EAAWf,GAGjD,IAFA,IAAI6B,EAAMc,EAEV,MAAgBtD,OAAOD,KAAK2B,GAA5B,eAAmC,CAA9B,IAAM8N,EAAC,KACVhN,EAAMA,EAAI2U,QAAQ,IAAM3H,EAAI,IAAK9N,EAAK8N,IAAI2H,QAAQ,IAAM3H,EAAG9N,EAAK8N,IAGlE,OAAI7O,EACF,UAAU6B,EAAV,YAAiB5B,EAAAA,EAAAA,eAA2BD,IAErC6B,G,SAICyM,GAAAA,EAAAA,qCAAAA,4CAAAA,EAAAA,iCAAAA,0CAAAA,EAAAA,2BAAAA,0BAAAA,EAAAA,sBAAAA,cAAAA,EAAAA,6BAAAA,kDAAAA,EAAAA,UAAAA,cAAAA,EAAAA,YAAAA,gBAAAA,EAAAA,cAAAA,4BAAAA,EAAAA,aAAAA,iBAAAA,EAAAA,cAAAA,iCAAAA,EAAAA,UAAAA,cAAAA,EAAAA,MAAAA,SAAAA,EAAAA,OAAAA,UAAAA,EAAAA,OAAAA,IAAAA,EAAAA,aAAAA,cAAAA,EAAAA,oBAAAA,uCAAAA,EAAAA,iBAAAA,qCAAAA,EAAAA,mBAAAA,qCAAAA,EAAAA,oBAAAA,+BAAAA,EAAAA,sBAAAA,8CAAAA,EAAAA,sBAAAA,kCAAAA,EAAAA,oBAAAA,qCAAAA,EAAAA,yBAAAA,gDAAAA,EAAAA,0BAAAA,0CAAAA,EAAAA,4BAAAA,yDAAAA,EAAAA,4BAAAA,6CAAAA,EAAAA,0BAAAA,gDAAAA,EAAAA,gBAAAA,yBAAAA,EAAAA,WAAAA,0BAAAA,EAAAA,UAAAA,cAAAA,EAAAA,SAAAA,YAAAA,EAAAA,WAAAA,cAAAA,EAAAA,SAAAA,aAAAA,EAAAA,MAAAA,SAAAA,EAAAA,kBAAAA,sBAAAA,EAAAA,SAAAA,SAAAA,EAAAA,WAAAA,gBAAAA,EAAAA,SAAAA,sBAAAA,EAAAA,WAAAA,iBAAAA,EAAAA,oBAAAA,yBAAAA,EAAAA,aAAAA,gBAAAA,EAAAA,SAAAA,S,CAAAA,IAAAA,EAAAA,KA8CZlN,OAAO8H,EAAI,SAAC0uB,GAAqB,2BAATC,EAAS,iCAATA,EAAS,kBAE/B,IAAM5W,GADN2W,EAAUpsB,MAAMoZ,KAAKgT,IACAE,MACfC,EAC8B,SAAlC32B,OAAO42B,aAAaC,UAAuB,SAAChJ,GAAD,MAAO,IAAMA,EAAI,KAAM,SAACA,GAAD,OAAOA,GAErEiJ,EAAQ,GAAH,eAAON,EAAQl5B,KAAI,SAACuwB,EAAGllB,GAAJ,OAAUguB,EAAK9I,GAAK4I,EAAK9tB,OAA5C,CAAiDguB,EAAK9W,KAEjE,OAAOiX,EAAM5Z,KAAK,KAGb,IAAM6Z,EAAsB,CACjCl1B,MACciG,EAAF,gCACAA,EAAF,+BAEVrH,IAAKyM,EAAK,W,sIClEL,SAASP,EACdY,GAEA,IADS,EACHkB,EAAmB,CACvBuoB,YAAazpB,EAAQ1F,OACrBjH,SAAU,CAAEzC,OAAQ,EAAG84B,KAAM,EAAGC,OAAQ,IAHjC,E,25BAAA,CAMK3pB,GANL,IAMT,2BAAuB,KAAdsB,EAAc,QACE,SAAnBA,EAAE7N,aACJyN,EAAQ7N,SAASq2B,OACW,WAAnBpoB,EAAE7N,aACXyN,EAAQ7N,SAASzC,SAEjBsQ,EAAQ7N,SAASs2B,UAZZ,8BAgBT,OAAOzoB,E,oHC5BF,SAASke,EAAiBlsB,GAC/B,OAAOA,EAAI2U,QAAQ,MAAO,I,0GCArB,SAAS+hB,EAAiBh0B,GAC/B,IAAMiW,EAAgB,GAGtB,GAAiC,iBAAtBjW,EAAI1B,SAAS9B,KAEtB,OADAyZ,EAAQ,UAAgBjW,EAAI1B,SAAS9B,KAC9ByZ,EAN2B,Q,25BAAA,CASpBjW,EAAI1B,SAAS9B,KAAK0gB,QATE,IASpC,2BAA0C,KAA/BxiB,EAA+B,QACpCA,EAAE4E,OACJ2W,EAASvb,EAAE4E,OAAO6d,WAAaziB,EAAE0iB,OAIjCnH,EAAQ,UAAgBvb,EAAE0iB,QAAU1iB,EAAEiL,OAfN,8BAmBpC,OAAOsQ,ECrBF,SAASyD,EAAWua,GAGzB,IAAMzQ,EAA+B3mB,OAAOy0B,SAAS4C,OAErD,OAASD,EAAF,UACAzQ,GADA,OACOnmB,uBADP,mBAC+B42B,EAD/B,eAEAzQ,GAFA,OAEOnmB,wBCPT,SAAS4hB,EAAanc,EAAeqxB,GAC1C,OAAIr5B,OAAOs5B,OAAOD,GAAQv2B,SAASkF,GAC1BhI,OAAOD,KAAKs5B,GAAQnnB,MAAK,SAACvI,GAAD,OAAS0vB,EAAO1vB,KAAS3B,KAEvDhI,OAAOD,KAAKs5B,GAAQv2B,SAASkF,GACxBqxB,EAAOrxB,QADhB,E,sVCHK,SAASuf,EACd3jB,EACA21B,GAEA,IAAMzyB,EAAQyyB,EAAgBrnB,MAAK,SAACsnB,GAAD,OAAQA,EAAG51B,OAASA,KACvD,GAAIkD,EAEF,OADAyX,QAAQC,IAAI1X,GACLA,EAAM+hB,OAEb,qBAAejlB,EAAf,8BAMG,SAAS+C,EACdjF,EACA63B,GAEA,IADQ,EACFE,E,qWAAS,CAAH,GAAQ/3B,GADZ,E,25BAAA,CAGY63B,GAHZ,IAGR,2BAAqC,KAA1BzyB,EAA0B,QAC/BA,EAAM+hB,eACD4Q,EAAO3yB,EAAMlD,OALhB,8BASR,OAAO61B,E,wBC3BF,SAASvc,EAAYvc,EAAQskB,GAClC,OAAO,IAAKA,GAAS,SAACriB,GAAD,OAAYA,KAAUjC,KCHtC,SAAS+4B,EAAYC,GAC1B,IAAIC,EAAWD,EAAI/K,MAAM,KACzB,OAAOgL,EAAS,GAAK,IAAMA,EAAS,GAAG7pB,MAAM,EAAG,K,mmCCA3C,IAAMnP,EAAb,4FAME,SAAwBi5B,EAAqBC,GAC3C,IAEIttB,EAFA7L,EAAS,GAmBb,OAlBiB,IAAIo5B,gBAAgBF,GAG5BG,SAAQ,SAAC7oB,EAAKxH,GAOnB6C,EADEstB,GAAgBA,EAAah3B,SAAS6G,GACpCoX,OAAO5P,GAEPA,EAGNxQ,EAASC,EAAYq5B,YAAYt5B,EAAQgJ,EAAK6C,MAGzC7L,IA1BX,sBA8BE,SACEM,EACA0I,EACA3B,GAEA,IAAMrH,EAAS,IAAUM,GAGzB,OAFAN,EAAOgJ,GAAO3B,EAEPrH,IAtCX,yBA0CE,SAAmBM,EAAW0I,EAAa3B,GACzC,IAAMrH,EAAS,IAAUM,GAWzB,OAVIN,EAAOgJ,GACLwC,MAAMC,QAAQzL,EAAOgJ,IACvBhJ,EAAOgJ,GAAKF,KAAKzB,GAEjBrH,EAAOgJ,GAAO,CAAChJ,EAAOgJ,GAAM3B,GAG9BrH,EAAOgJ,GAAO3B,EAGTrH,IAtDX,wBA2DE,SAAkBM,EAAWlB,GAC3B,IAD2C,EACrCY,EAAS,IAAUM,GADkB,IAE7BlB,GAF6B,IAE3C,kCACSY,EADW,SAFuB,8BAM3C,OAAOA,IAjEX,yBAqEE,SAAmBM,EAAQ0I,EAAa3B,GACtC,IAAMrH,EAAS,IAAUM,GACzB,GAAI+G,GAASmE,MAAMC,QAAQzL,EAAOgJ,KAAShJ,EAAOgJ,GAAKC,OAAS,EAAG,CACjE,IAAMc,EAAI/J,EAAOgJ,GAAKyN,QAAQpP,IACnB,IAAP0C,GACF/J,EAAOgJ,GAAK2B,OAAOZ,EAAG,eAGjB/J,EAAOgJ,GAGhB,OAAOhJ,IAhFX,yBAoFE,SAAmBA,EAAgBgJ,EAAa3B,GAC9C,IAAMkyB,EAAQv5B,EAAOgJ,GAErB,QAAIuwB,IACE/tB,MAAMC,QAAQ8tB,GACTA,EAAMp3B,SAASkF,GAEfkyB,IAAUlyB,KA3FzB,4BAmGE,SAAsBrH,EAAgBuS,GAEpC,IADA,IAAI2mB,EAAc,GAClB,MAAkB75B,OAAOD,KAAKY,GAA9B,eAAuC,CAAlC,IAAMgJ,EAAG,KAEZ,IAAIuJ,IAAgBA,EAAapQ,SAAS6G,GAG1C,GAAIwC,MAAMC,QAAQzL,EAAOgJ,IAAO,WACZhJ,EAAOgJ,IADK,IAC9B,2BAA+B,KAApBwH,EAAoB,QAC7B0oB,EAAYpwB,KAAKE,EAAM,IAAMwwB,mBAAmBhpB,KAFpB,oCAK9B0oB,EAAYpwB,KAAKE,EAAM,IAAMwwB,mBAAmBx5B,EAAOgJ,KAI3D,OAAOkwB,EAAY5a,KAAK,OAnH5B,+BAwHE,SAAyB/L,GACvB,OAAO,SAAUvS,EAAgBy5B,GAM/B95B,KAAK6H,SAAS,CAAExH,OAAQA,GAAUy5B,GAClC95B,KAAKoH,MAAM4vB,QAAQ7tB,KAAK,CACtBgtB,SAAUn2B,KAAKoH,MAAM8uB,SAASC,SAC9B4D,OAAQ,IAAMz5B,EAAY05B,eAAe35B,EAAQuS,GAAgB,SAlIzE,6BAwIE,YAKE,IAL8D,IAAvCvS,EAAuC,EAAvCA,OAAQ8K,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,aAK9C,MAJmB1L,OAAOD,KACxBa,EAAY25B,WAAW55B,EAAQ8K,IAGjC,eAA8B,CAAzB,IAAM9B,EAAG,KACZhJ,EAASC,EAAY45B,YAAY75B,EAAQgJ,GAG3C+B,EAAa/K,OAjJjB,M,wICDI85B,EAA2B,GAG/B,SAAS/6B,EAAoBg7B,GAE5B,IAAIC,EAAeF,EAAyBC,GAC5C,QAAqBhO,IAAjBiO,EACH,OAAOA,EAAax6B,QAGrB,IAAID,EAASu6B,EAAyBC,GAAY,CACjDl7B,GAAIk7B,EACJE,QAAQ,EACRz6B,QAAS,IAUV,OANA06B,EAAoBH,GAAUI,KAAK56B,EAAOC,QAASD,EAAQA,EAAOC,QAAST,GAG3EQ,EAAO06B,QAAS,EAGT16B,EAAOC,QAIfT,EAAoBq7B,EAAIF,E9G5BpB77B,EAAW,GACfU,EAAoBs7B,EAAI,CAACp2B,EAAQq2B,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,EAAAA,EACnB,IAAS3wB,EAAI,EAAGA,EAAI1L,EAAS4K,OAAQc,IAAK,CAGzC,IAFA,IAAKuwB,EAAUC,EAAIC,GAAYn8B,EAAS0L,GACpC4wB,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASrxB,OAAQ2xB,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAan7B,OAAOD,KAAKL,EAAoBs7B,GAAGQ,OAAO7xB,GAASjK,EAAoBs7B,EAAErxB,GAAKsxB,EAASM,MAC9IN,EAAS3vB,OAAOiwB,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbt8B,EAASsM,OAAOZ,IAAK,GACrB,IAAI8e,EAAI0R,SACExO,IAANlD,IAAiB5kB,EAAS4kB,IAGhC,OAAO5kB,EAvBNu2B,EAAWA,GAAY,EACvB,IAAI,IAAIzwB,EAAI1L,EAAS4K,OAAQc,EAAI,GAAK1L,EAAS0L,EAAI,GAAG,GAAKywB,EAAUzwB,IAAK1L,EAAS0L,GAAK1L,EAAS0L,EAAI,GACrG1L,EAAS0L,GAAK,CAACuwB,EAAUC,EAAIC,I+GJ/Bz7B,EAAoBwjB,EAAKhjB,IACxB,IAAIu7B,EAASv7B,GAAUA,EAAOw7B,WAC7B,IAAOx7B,EAAiB,QACxB,IAAM,EAEP,OADAR,EAAoBmQ,EAAE4rB,EAAQ,CAAE3M,EAAG2M,IAC5BA,GCLR/7B,EAAoBmQ,EAAI,CAAC1P,EAASw7B,KACjC,IAAI,IAAIhyB,KAAOgyB,EACXj8B,EAAoBC,EAAEg8B,EAAYhyB,KAASjK,EAAoBC,EAAEQ,EAASwJ,IAC5E3J,OAAO47B,eAAez7B,EAASwJ,EAAK,CAAEkyB,YAAY,EAAMt6B,IAAKo6B,EAAWhyB,MCJ3EjK,EAAoBo8B,EAAI,GAGxBp8B,EAAoBE,EAAKm8B,GACjBp3B,QAAQ8L,IAAIzQ,OAAOD,KAAKL,EAAoBo8B,GAAGE,QAAO,CAACC,EAAUtyB,KACvEjK,EAAoBo8B,EAAEnyB,GAAKoyB,EAASE,GAC7BA,IACL,KCNJv8B,EAAoBw8B,EAAKH,GAEjB,MAAQ,CAAC,GAAK,mBAAmB,IAAM,YAAY,IAAM,kBAAkB,IAAM,SAAS,IAAM,WAAW,IAAM,iBAAiB,IAAM,oBAAoB,IAAM,cAAcA,GAAW,IAAM,CAAC,GAAK,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,wBAAwBA,GAAW,MCF7br8B,EAAoBy8B,SAAYJ,GAExB,OAAS,CAAC,GAAK,mBAAmB,IAAM,YAAY,IAAM,WAAW,IAAM,SAAS,IAAM,WAAW,IAAM,iBAAiB,IAAM,oBAAoB,IAAM,cAAcA,GAAW,IAAM,CAAC,GAAK,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,wBAAwBA,GAAW,OCHvbr8B,EAAoB0hB,EAAI,WACvB,GAA0B,iBAAfgb,WAAyB,OAAOA,WAC3C,IACC,OAAO97B,MAAQ,IAAI+7B,SAAS,cAAb,GACd,MAAOz8B,GACR,GAAsB,iBAAXmC,OAAqB,OAAOA,QALjB,GCAxBrC,EAAoBC,EAAI,CAACoH,EAAKu1B,IAAUt8B,OAAOu8B,UAAUC,eAAe1B,KAAK/zB,EAAKu1B,GpHA9Er9B,EAAa,GACbC,EAAoB,kBAExBQ,EAAoBmT,EAAI,CAACrQ,EAAKi6B,EAAM9yB,EAAKoyB,KACxC,GAAG98B,EAAWuD,GAAQvD,EAAWuD,GAAKiH,KAAKgzB,OAA3C,CACA,IAAIC,EAAQC,EACZ,QAAWjQ,IAAR/iB,EAEF,IADA,IAAIizB,EAAU7G,SAAS8G,qBAAqB,UACpCnyB,EAAI,EAAGA,EAAIkyB,EAAQhzB,OAAQc,IAAK,CACvC,IAAIklB,EAAIgN,EAAQlyB,GAChB,GAAGklB,EAAEkN,aAAa,QAAUt6B,GAAOotB,EAAEkN,aAAa,iBAAmB59B,EAAoByK,EAAK,CAAE+yB,EAAS9M,EAAG,OAG1G8M,IACHC,GAAa,GACbD,EAAS3G,SAASgH,cAAc,WAEzBC,QAAU,QACjBN,EAAOO,QAAU,IACbv9B,EAAoBw9B,IACvBR,EAAOvG,aAAa,QAASz2B,EAAoBw9B,IAElDR,EAAOvG,aAAa,eAAgBj3B,EAAoByK,GACxD+yB,EAAOrd,IAAM7c,GAEdvD,EAAWuD,GAAO,CAACi6B,GACnB,IAAIU,EAAmB,CAACC,EAAMh1B,KAE7Bs0B,EAAOW,QAAUX,EAAOY,OAAS,KACjCC,aAAaN,GACb,IAAIO,EAAUv+B,EAAWuD,GAIzB,UAHOvD,EAAWuD,GAClBk6B,EAAOe,YAAcf,EAAOe,WAAWC,YAAYhB,GACnDc,GAAWA,EAAQxD,SAASkB,GAAQA,EAAG9yB,KACpCg1B,EAAM,OAAOA,EAAKh1B,IAGlB60B,EAAUU,WAAWR,EAAiBS,KAAK,UAAMlR,EAAW,CAAE1c,KAAM,UAAWjI,OAAQ20B,IAAW,MACtGA,EAAOW,QAAUF,EAAiBS,KAAK,KAAMlB,EAAOW,SACpDX,EAAOY,OAASH,EAAiBS,KAAK,KAAMlB,EAAOY,QACnDX,GAAc5G,SAAS8H,KAAKC,YAAYpB,KqHvCzCh9B,EAAoB8pB,EAAKrpB,IACH,oBAAX49B,QAA0BA,OAAOC,aAC1Ch+B,OAAO47B,eAAez7B,EAAS49B,OAAOC,YAAa,CAAEh2B,MAAO,WAE7DhI,OAAO47B,eAAez7B,EAAS,aAAc,CAAE6H,OAAO,KCLvDtI,EAAoBu+B,IAAO/9B,IAC1BA,EAAOg+B,MAAQ,GACVh+B,EAAO2M,WAAU3M,EAAO2M,SAAW,IACjC3M,GCHRR,EAAoBuB,EAAI,6BtHyCpB9B,EAAkB48B,GACd,IAAIp3B,SAAQ,CAAC1E,EAASgF,KAC5B,IAAI6N,EAAOpT,EAAoBy8B,SAASJ,GACpCoC,EAAWz+B,EAAoBuB,EAAI6R,EACvC,GAlBmB,EAACA,EAAMqrB,KAE3B,IADA,IAAIC,EAAmBrI,SAAS8G,qBAAqB,QAC7CnyB,EAAI,EAAGA,EAAI0zB,EAAiBx0B,OAAQc,IAAK,CAChD,IACI2zB,GADA92B,EAAM62B,EAAiB1zB,IACRoyB,aAAa,cAAgBv1B,EAAIu1B,aAAa,QACjE,GAAe,eAAZv1B,EAAI+2B,MAAyBD,IAAavrB,GAAQurB,IAAaF,GAAW,OAAO52B,EAErF,IAAIg3B,EAAoBxI,SAAS8G,qBAAqB,SACtD,IAAQnyB,EAAI,EAAGA,EAAI6zB,EAAkB30B,OAAQc,IAAK,CACjD,IAAInD,EAEJ,IADI82B,GADA92B,EAAMg3B,EAAkB7zB,IACToyB,aAAa,gBAChBhqB,GAAQurB,IAAaF,EAAU,OAAO52B,IAOnDi3B,CAAe1rB,EAAMqrB,GAAW,OAAOl+B,IA7CrB,EAAC87B,EAASoC,EAAUl+B,EAASgF,KACnD,IAAIw5B,EAAU1I,SAASgH,cAAc,QAErC0B,EAAQH,IAAM,aACdG,EAAQzuB,KAAO,WAiBfyuB,EAAQpB,QAAUoB,EAAQnB,OAhBJl1B,IAGrB,GADAq2B,EAAQpB,QAAUoB,EAAQnB,OAAS,KAChB,SAAfl1B,EAAM4H,KACT/P,QACM,CACN,IAAIy+B,EAAYt2B,IAAyB,SAAfA,EAAM4H,KAAkB,UAAY5H,EAAM4H,MAChE2uB,EAAWv2B,GAASA,EAAML,QAAUK,EAAML,OAAO+K,MAAQqrB,EACzDj5B,EAAM,IAAIrF,MAAM,qBAAuBk8B,EAAU,cAAgB4C,EAAW,KAChFz5B,EAAIpF,KAAO,wBACXoF,EAAI8K,KAAO0uB,EACXx5B,EAAIpE,QAAU69B,EACdF,EAAQhB,WAAWC,YAAYe,GAC/Bx5B,EAAOC,KAITu5B,EAAQ3rB,KAAOqrB,EAEfpI,SAAS8H,KAAKC,YAAYW,IAsBzBG,CAAiB7C,EAASoC,EAAUl+B,EAASgF,MAI3C7F,EAAqB,CACxB,IAAK,GAGNM,EAAoBo8B,EAAE+C,QAAU,CAAC9C,EAASE,KAEtC78B,EAAmB28B,GAAUE,EAASxyB,KAAKrK,EAAmB28B,IACzB,IAAhC38B,EAAmB28B,IAFX,CAAC,GAAK,EAAE,IAAM,EAAE,IAAM,EAAE,IAAM,EAAE,IAAM,EAAE,IAAM,EAAE,IAAM,GAEfA,IACtDE,EAASxyB,KAAKrK,EAAmB28B,GAAW58B,EAAe48B,GAASx4B,MAAK,KACxEnE,EAAmB28B,GAAW,KAC3Bn8B,IAEH,aADOR,EAAmB28B,GACpBn8B,O,MuHzDT,IAAIk/B,EAAkB,CACrB,IAAK,GAGNp/B,EAAoBo8B,EAAEP,EAAI,CAACQ,EAASE,KAElC,IAAI8C,EAAqBr/B,EAAoBC,EAAEm/B,EAAiB/C,GAAW+C,EAAgB/C,QAAWrP,EACtG,GAA0B,IAAvBqS,EAGF,GAAGA,EACF9C,EAASxyB,KAAKs1B,EAAmB,QAC3B,CAGL,IAAI1G,EAAU,IAAI1zB,SAAQ,CAAC1E,EAASgF,IAAY85B,EAAqBD,EAAgB/C,GAAW,CAAC97B,EAASgF,KAC1Gg3B,EAASxyB,KAAKs1B,EAAmB,GAAK1G,GAGtC,IAAI71B,EAAM9C,EAAoBuB,EAAIvB,EAAoBw8B,EAAEH,GAEpDhgB,EAAQ,IAAIlc,MAgBhBH,EAAoBmT,EAAErQ,GAfF4F,IACnB,GAAG1I,EAAoBC,EAAEm/B,EAAiB/C,KAEf,KAD1BgD,EAAqBD,EAAgB/C,MACR+C,EAAgB/C,QAAWrP,GACrDqS,GAAoB,CACtB,IAAIL,EAAYt2B,IAAyB,SAAfA,EAAM4H,KAAkB,UAAY5H,EAAM4H,MAChEgvB,EAAU52B,GAASA,EAAML,QAAUK,EAAML,OAAOsX,IACpDtD,EAAMT,QAAU,iBAAmBygB,EAAU,cAAgB2C,EAAY,KAAOM,EAAU,IAC1FjjB,EAAMnY,KAAO,iBACbmY,EAAM/L,KAAO0uB,EACb3iB,EAAMjb,QAAUk+B,EAChBD,EAAmB,GAAGhjB,MAIgB,SAAWggB,EAASA,KAclEr8B,EAAoBs7B,EAAEO,EAAKQ,GAA0C,IAA7B+C,EAAgB/C,GAGxD,IAAIkD,EAAuB,CAACC,EAA4Bx9B,KACvD,IAGIg5B,EAAUqB,GAHTd,EAAUkE,EAAaC,GAAW19B,EAGhBgJ,EAAI,EAC3B,GAAGuwB,EAAStE,MAAMn3B,GAAgC,IAAxBs/B,EAAgBt/B,KAAa,CACtD,IAAIk7B,KAAYyE,EACZz/B,EAAoBC,EAAEw/B,EAAazE,KACrCh7B,EAAoBq7B,EAAEL,GAAYyE,EAAYzE,IAGhD,GAAG0E,EAAS,IAAIx6B,EAASw6B,EAAQ1/B,GAGlC,IADGw/B,GAA4BA,EAA2Bx9B,GACrDgJ,EAAIuwB,EAASrxB,OAAQc,IACzBqxB,EAAUd,EAASvwB,GAChBhL,EAAoBC,EAAEm/B,EAAiB/C,IAAY+C,EAAgB/C,IACrE+C,EAAgB/C,GAAS,KAE1B+C,EAAgB7D,EAASvwB,IAAM,EAEhC,OAAOhL,EAAoBs7B,EAAEp2B,IAG1By6B,EAAqBC,KAAiC,2BAAIA,KAAiC,4BAAK,GACpGD,EAAmBrF,QAAQiF,EAAqBrB,KAAK,KAAM,IAC3DyB,EAAmB51B,KAAOw1B,EAAqBrB,KAAK,KAAMyB,EAAmB51B,KAAKm0B,KAAKyB,K,GClFvF,IAAIE,EAAsB7/B,EAAoBs7B,OAAEtO,EAAW,CAAC,IAAI,IAAI,IAAI,MAAM,IAAOhtB,EAAoB,SACzG6/B,EAAsB7/B,EAAoBs7B,EAAEuE,I","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/load script","webpack:///webpack/runtime/css loading","webpack:////home/runner/work/ansible-hub-ui/ansible-hub-ui/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/images.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/task-management.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/group-management/group-modal.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/permissions/obect-permission-field.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/permissions/permission-chip-selector.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/toolbar.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/user-form/user-form.tsx","webpack:///./src/components/user-form/user-form-page.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/constants.tsx","webpack:///./src/store/index.js","webpack:///./src/utilities/asyncComponent.js","webpack:///./src/loaders/insights/Routes.js","webpack:///./src/loaders/insights/insights-loader.js","webpack:///./src/entry.js","webpack:///./src/utilities/getBaseName.js","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"ansible-hub-ui:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var createStylesheet = (chunkId, fullhref, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"33\":1,\"152\":1,\"464\":1,\"571\":1,\"684\":1,\"776\":1,\"837\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: (params) => ParamHelper.getQueryString(params),\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data: any, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data: any, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data: any, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await (window as any).insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  constructor() {\n    super();\n  }\n\n  list(params?: any, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `content/${repo}/v3/collections/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: String,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?: any,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    return source;\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `content/${distro_base_path}/v3/collections/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const NamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  constructor() {\n    super();\n  }\n\n  getUser(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        (window as any).insights.chrome.auth\n          .getUser()\n          // we don't care about entitlements stuff in the UI, so just\n          // return the user's identity\n          .then((result) => resolve(result.identity))\n          .catch((result) => reject(result));\n      });\n    } else if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        this.http\n          .get(this.apiPath)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((result) => reject(result));\n      });\n    }\n  }\n\n  getActiveUser() {\n    return this.http.get(this.apiPath);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<any> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return new Promise((resolve, reject) => {\n        reject(\n          'Use window.chrome.insights.auth to get tokens for insights deployments',\n        );\n      });\n    }\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    return new Promise((resolve, reject) => {\n      // Make a get request to the login endpoint to set CSRF tokens before making\n      // the authentication reqest\n      this.http\n        .get(loginURL)\n        .then(() => {\n          this.http\n            .post(loginURL, {\n              username: username,\n              password: password,\n            })\n            .then((response) => resolve(response))\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  constructor() {\n    super();\n  }\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n  mock: any;\n\n  constructor() {\n    super();\n  }\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  constructor() {\n    super();\n  }\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n\n  constructor() {\n    super();\n  }\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n\n  constructor() {\n    super();\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId,\n    );\n  }\n}\n\nexport const GroupAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  constructor() {\n    super();\n  }\n\n  // removes unchanged values and write only fields before\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unModifiedRemote: RemoteType) {\n    // Deletes any write only fields from the object that are market as is_set.\n    // This is to prevent accidentally clearing fields that weren't updated.\n\n    // TODO: clearing set fields from the response will be unnecesary if the API\n    // stops returning field: null on write only fields\n    const reducedData: RemoteType = clearSetFieldsFromRequest(\n      remote,\n      remote.write_only_fields,\n    ) as RemoteType;\n\n    // Pulp complains if auth_url gets sent with a request that doesn't include a\n    // valid token, even if the token exists in the database and isn't being changed.\n    // To solve this issue, simply delete auth_url from the request if it hasn't\n    // been updated by the user.\n    if (reducedData.auth_url === unModifiedRemote.auth_url) {\n      delete reducedData['auth_url'];\n    }\n\n    for (const field of Object.keys(reducedData)) {\n      if (reducedData[field] === '') {\n        reducedData[field] = null;\n      }\n    }\n\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(id, obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = API_HOST;\n  constructor() {\n    super();\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n\n  constructor() {\n    super();\n  }\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  list(id, params) {\n    return this.http.get(this.apiPath + id + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n}\n\nexport const ImagesAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  constructor() {\n    super();\n  }\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  apiPath: string;\n  http: any;\n\n  constructor() {\n    super('/pulp/api/v3/');\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  constructor() {\n    super();\n  }\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/namespaces/');\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n\n  list(params) {\n    let changedParams = { ...params };\n    if (changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams);\n  }\n}\n\nexport const TaskManagementAPI = new API();\n","import * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={_`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  variant: AlertProps['variant'];\n  title: string;\n  description?: string;\n}\n\nexport class AlertList extends React.Component<IProps, {}> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps, {}> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {_`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={(niceNames[key] || key) as any}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams(ParamHelper.deleteParam(params, key, v))\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\nimport { Logo } from 'src/components';\n\ninterface IProps {\n  title: string;\n  imageURL?: string;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      title,\n      imageURL,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n    } = this.props;\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {imageURL ? (\n              <Logo\n                className='image'\n                alt={_`Page logo`}\n                image={imageURL}\n                size='40px'\n                unlockWidth={true}\n              />\n            ) : null}\n            <div>\n              <Title headingLevel='h1' size='2xl' children={title} />\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: {\n    name: string;\n    url?: string;\n  }[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { NumericLabel, Logo } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const { name, latest_version, namespace, className, footer, repo } =\n      this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(\n      latest_version.metadata.contents,\n    );\n\n    return (\n      <Card className={cx('collection-card-container', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            image={namespace.avatar_url}\n            alt={company + ' logo'}\n            size='40px'\n            unlockWidth={true}\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>Provided by {company}</Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{_`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <div>\n          <NumericLabel number={count} />\n        </div>\n        <div className='type-label'>\n          <NumericLabel number={count} hideNumber={true} label={type} />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  TextInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    let toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (let c of contents) {\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n      if (!summary[c.content_type]) {\n        summary[c.content_type] = 0;\n      }\n\n      if (typeMatch && c.name.match(keywords)) {\n        toShow.push(c);\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label='find-content'\n                  placeholder={_`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{_`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'selected-item': key === showing,\n                    'type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='content-table pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{_`Name`}</th>\n              <th>{_`Type`}</th>\n              <th>{_`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { FormSelect, FormSelectOption, Alert } from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  LinkTabs,\n  RepoSelector,\n} from 'src/components';\nimport { CollectionDetailType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n}\n\nexport class CollectionHeader extends React.Component<IProps> {\n  ignoreParams = ['showing', 'keyords'];\n  static contextType = AppContext;\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: _`Docs site` },\n      { key: 'homepage', name: _`Website` },\n      { key: 'issues', name: _`Issue tracker` },\n      { key: 'repository', name: _`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    return (\n      <BaseHeader\n        className={className}\n        title={collection.name}\n        imageURL={collection.namespace.avatar_url}\n        contextSelector={\n          <RepoSelector\n            selectedRepo={this.context.selectedRepo}\n            path={Paths.searchByRepo}\n            isDisabled\n          />\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        versionControl={\n          <div className='install-version-column'>\n            <span>{_`Version`}</span>\n            <div className='install-version-dropdown'>\n              <FormSelect\n                onChange={(val) =>\n                  updateParams(ParamHelper.setParam(params, 'version', val))\n                }\n                value={collection.latest_version.version}\n                aria-label={_`Select collection version`}\n              >\n                {all_versions.map((v) => (\n                  <FormSelectOption\n                    key={v.version}\n                    value={v.version}\n                    label={'v' + v.version}\n                  />\n                ))}\n              </FormSelect>\n            </div>\n            {latestVersion ? (\n              <span className='last-updated'>\n                Last updated{' '}\n                <DateComponent date={latestVersion}></DateComponent>\n              </span>\n            ) : null}\n          </div>\n        }\n      >\n        {collection.deprecated && (\n          <Alert\n            variant='danger'\n            isInline\n            title={_`This collection has been deprecated.`}\n          />\n        )}\n        <div className='tab-link-container'>\n          <div className='tabs'>{this.renderTabs(activeTab)}</div>\n          <div className='links'>\n            <div>\n              <ExternalLinkAltIcon />\n            </div>\n            {urlKeys.map((link) => {\n              const l = collection.latest_version.metadata[link.key];\n              if (!l) {\n                return null;\n              }\n\n              return (\n                <div className='link' key={link.key}>\n                  <a href={l} target='_blank'>\n                    {link.name}\n                  </a>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: _`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: _`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: _`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: _`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n}\n","import * as React from 'react';\nimport './collection-info.scss';\n\nimport * as moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nimport {\n  ClipboardCopy,\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  FormSelect,\n  FormSelectOption,\n  Button,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: any;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      all_versions,\n      params,\n      updateParams,\n    } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{_`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{_`License`}</SplitItem>\n              <SplitItem isFilled>{latest_version.metadata.license}</SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-tile'>{_`Install Version`}</SplitItem>\n              <SplitItem isFilled>\n                <FormSelect\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'version', val))\n                  }\n                  value={\n                    params.version ? params.version : latest_version.version\n                  }\n                  aria-label={_`Select collection version`}\n                >\n                  {all_versions.map((v) => (\n                    <FormSelectOption\n                      key={v.version}\n                      value={v.version}\n                      label={`${v.version} released ${moment(\n                        v.created,\n                      ).fromNow()} ${\n                        v.version === latest_version.version ? '(latest)' : ''\n                      }`}\n                    />\n                  ))}\n                </FormSelect>\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{_`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </div>\n                <div>\n                  <a ref={this.downloadLinkRef} style={{ display: 'none' }}></a>\n                  <Button\n                    className='download-button'\n                    variant='link'\n                    icon={<DownloadIcon />}\n                    onClick={() =>\n                      this.download(\n                        this.context.selectedRepo,\n                        namespace,\n                        name,\n                        latest_version,\n                      )\n                    }\n                  >\n                    {_`Download tarball`}\n                  </Button>\n                </div>\n              </SplitItem>\n            </Split>\n          </GridItem>\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {_`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {_`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    ).then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      this.downloadLinkRef.current.href = downloadURL;\n      this.downloadLinkRef.current.click();\n    });\n  }\n}\n","import * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {};\n  updateParams: (p) => void;\n}\n\nexport class CollectionFilter extends React.Component<IProps> {\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: _`Keywords`,\n      },\n      {\n        id: 'tags',\n        title: _`Tag`,\n        inputType: 'multiple' as 'multiple',\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n    ];\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <CompoundFilter\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import * as React from 'react';\nimport './list.scss';\n\nimport { Button, DropdownItem, DataList } from '@patternfly/react-core';\n\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  Pagination,\n  StatefulDropdown,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n\n  showNamespace?: boolean;\n  showControls?: boolean;\n  handleControlClick?: (id, event) => void;\n  repo?: string;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={_`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n\n        <div className='controls bottom'>\n          <div></div>\n          <div>\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderCollectionControls(collection: CollectionListType) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() => this.props.handleControlClick(collection.id, 'upload')}\n          variant='secondary'\n        >\n          {_`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              onClick={(e) =>\n                this.props.handleControlClick(collection.id, 'deprecate')\n              }\n              key='1'\n            >\n              {collection.deprecated ? _`Undeprecate` : _`Deprecate`}\n            </DropdownItem>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  NumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps, {}> {\n  render() {\n    const {\n      name,\n      // download_count,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={company + ' logo'}\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth={true}\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(\n      latest_version.metadata.contents,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>Provided by {company}</Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='entry'>{latest_version.metadata.description}</div>\n        <div className='entry pf-l-flex pf-m-wrap content'>\n          {Object.keys(contentSummary.contents).map((k) => (\n            <div key={k}>\n              <NumericLabel\n                className='numeric-label-capitalize-text'\n                label={k}\n                number={contentSummary.contents[k]}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='entry'>{controls}</div> : null}\n        <div className='right-col entry'>\n          Updated <DateComponent date={latest_version.created_at} />\n        </div>\n        <div className='entry'>v{latest_version.version}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem aria-labelledby='simple-item1'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  inputText: string;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      inputText: '',\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => this.setState({ selectedFilter: v, inputText: '' })}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup>\n        <StatefulDropdown\n          toggleType='dropdown'\n          defaultText={\n            <span>\n              <FilterIcon />\n              {'   '}\n              {selectedFilter.title}\n            </span>\n          }\n          position='left'\n          isPlain={false}\n          items={filterOptions}\n        />\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.state.inputText}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        const options = selectedFilter.options.map((option) => (\n          // patternfly does not allow for us to set a display name aside from the ID\n          // which unfortunately means that multiple select will ignore the human readable\n          // option.title\n          <SelectOption key={option.id} value={option.id} />\n        ));\n\n        const toggle = [\n          <SelectGroup\n            label={_`Filter by ` + selectedFilter.id}\n            key={selectedFilter.id}\n          >\n            {options}\n          </SelectGroup>,\n        ];\n\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={_`Filter by ` + selectedFilter.id.toLowerCase()}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {toggle}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.state.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v, i) => (\n              <DropdownItem\n                onClick={() =>\n                  this.setState({ inputText: v.id }, () => this.submitFilter())\n                }\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              _`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.state.inputText}\n            onChange={(k) => this.setState({ inputText: k })}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter') {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n    );\n  }\n\n  private submitFilter() {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        this.state.inputText,\n      ),\n    );\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) return inputText;\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import * as React from 'react';\n\nexport class DeprecatedTag extends React.Component<{}, {}> {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {_`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: string;\n  button?: ReactElement;\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={_`No results found`}\n        description={_`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {_`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, SearchIcon } from '@patternfly/react-icons';\nimport { ReactElement } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: string;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : SearchIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\n\ninterface IProps {}\n\nexport class EmptyStateUnauthorized extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={_`You do not have access to Automation Hub`}\n        description={_`Contact you organization administrator for more information.`}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport { Paths } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const tabs = [_`Detail`, _`Activity`, _`Images`];\n    return (\n      <BaseHeader\n        title={this.props.container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: _`Container Registry`,\n              },\n              { name: this.props.container.name },\n            ]}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        <Tooltip content={this.props.container.description}>\n          <p className={'truncated'}>{this.props.container.description}</p>\n        </Tooltip>\n        <span />\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab: this.props.tab }}\n              updateParams={(p) => this.props.updateState({ redirect: p.tab })}\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: any;\n  errorMessage?: any;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant='small'\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={''}\n        header={<h2>{_`Create a group`}</h2>}\n        aria-label='group-modal'\n        actions={[\n          <Button\n            isDisabled={\n              this.state.name.length === 0 ||\n              (this.props.group && this.state.name === this.props.group.name)\n            }\n            key='create'\n            variant='primary'\n            onClick={() => onSave(this.state.name)}\n          >\n            {!this.props.group ? _`Create` : _`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {_`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={_`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import * as React from 'react';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Popover\n        aria-label='popover example'\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps, {}> {\n  lastImport: any;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div className='import-console pf-c-content'>\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? _`Follow logs` : _`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{_`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{_`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{_`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion } = this.props;\n\n    let collectionHead: any = `${selectedImport.namespace}.${selectedImport.name}`;\n    let approvalStatus = 'waiting for import to finish';\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = 'rejected';\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = 'waiting for approval';\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = 'approved';\n      } else {\n        approvalStatus = 'could not be determined yet';\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{_`Status: `}</span>\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{_`Approval status: `}</span>\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{_`Version: `}</span>\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{_`Error message: `}</span>\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport {\n  Pagination,\n  FormSelect,\n  FormSelectOption,\n  Spinner,\n  Toolbar,\n} from '@patternfly/react-core';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { PulpStatus, NamespaceType, ImportListType } from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  namespaces: NamespaceType[];\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n}\n\ninterface IState {\n  kwField: string;\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n    };\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      namespaces,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderNamespacePicker(namespaces)}\n        <Toolbar>\n          <CompoundFilter\n            updateParams={(p) => {\n              p['page'] = 1;\n              this.props.updateParams(p);\n            }}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: _`Name`,\n              },\n              {\n                id: 'state',\n                title: _`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: _`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: _`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: _`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: _`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n        <AppliedFilters\n          updateParams={(p) => {\n            p['page'] = 1;\n            this.props.updateParams(p);\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: _`Name`,\n            state: _`Status`,\n          }}\n        />\n\n        <div>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        <Pagination\n          itemCount={numberOfResults}\n          perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n          page={params.page || 1}\n          onSetPage={(_, p) =>\n            updateParams(ParamHelper.setParam(params, 'page', p))\n          }\n          onPerPageSelect={(_, p) => {\n            updateParams({ ...params, page: 1, page_size: p });\n          }}\n          isCompact={true}\n        />\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (loading) {\n      return (\n        <div className='loading'>\n          <Spinner />\n        </div>\n      );\n    }\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={_`No imports`}\n          description={_`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          {item.name} {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private renderNamespacePicker(namespaces) {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{_`Namespace`}</div>\n        <div className='selector'>\n          <FormSelect\n            onChange={(val) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                val,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            value={this.props.params.namespace}\n            aria-label={_`Select namespace`}\n          >\n            {namespaces.map((ns) => (\n              <FormSelectOption key={ns.name} label={ns.name} value={ns.name} />\n            ))}\n          </FormSelect>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component<{}> {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component<{}> {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { DropdownItem, ClipboardCopy } from '@patternfly/react-core';\nimport {\n  DateComponent,\n  EmptyStateNoData,\n  SortTable,\n  StatefulDropdown,\n} from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  repositories: {}[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={_`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: _`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: _`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: _`Content count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: _`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: _`Repo URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: _`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'kebab',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={_`Collection versions`}\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>{distribution.repository.content_count}</td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : !!distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n        <td>\n          <span>\n            <StatefulDropdown\n              items={[\n                <DropdownItem\n                  key='2'\n                  component={\n                    <Link to={formatPath(Paths.token, {})} target='_blank'>\n                      {_`Get token`}\n                    </Link>\n                  }\n                />,\n              ]}\n            />\n          </span>\n        </td>\n      </tr>\n    );\n  }\n}\n","import { cellWidth } from '@patternfly/react-table';\nimport * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n}\n\nexport class Logo extends React.Component<IProps> {\n  render() {\n    const { size, image, alt, className, unlockWidth, width } = this.props;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={image || DefaultLogo}\n          alt={alt}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nexport class Main extends React.Component<any> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps, {}> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{_`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && _`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              {text ? (\n                <ReactMarkdown children={text} />\n              ) : (\n                <ReactMarkdown children={placeholder} />\n              )}\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps, {}> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='ns-card-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              unlockWidth\n              image={avatar_url}\n              alt={company + ' logo'}\n              size='40px'\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{_`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import * as React from 'react';\nimport './namespace-form.scss';\n\nimport { Form, FormGroup, TextInput, TextArea } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\n\nimport { NamespaceCard, ObjectPermissionField } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: any;\n  userId: string;\n\n  updateNamespace: (namespace) => void;\n}\n\ninterface IState {\n  newNamespaceGroup: string;\n}\n\nexport class NamespaceForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newNamespaceGroup: '',\n    };\n  }\n\n  render() {\n    const { namespace, errorMessages, userId } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <Form>\n        <div className='card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={_`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={_`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                isRequired\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='groups'\n          label={_`Namespace owners`}\n          className='namespace-owners'\n          helperTextInvalid={errorMessages['groups']}\n          validated={this.toError(\n            !isNaN(Number(this.state.newNamespaceGroup)) &&\n              !('groups' in errorMessages),\n          )}\n        >\n          <br />\n\n          <ObjectPermissionField\n            groups={namespace.groups}\n            availablePermissions={['change_namespace', 'upload_to_namespace']}\n            setGroups={(g) => {\n              const newNS = { ...namespace };\n              newNS.groups = g;\n              this.props.updateNamespace(newNS);\n            }}\n          ></ObjectPermissionField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={_`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={_`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={_`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(_`Text: ` + errorMessages['links__name']);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(_`URL: ` + errorMessages['links__url']);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <TextInput\n            id='name'\n            type='text'\n            placeholder={_`Link text`}\n            value={link.name}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-url'>\n          <TextInput\n            id='url'\n            type='text'\n            placeholder={_`Link URL`}\n            value={link.url}\n            onChange={(value, event) => this.updateLink(index, value, event)}\n          />\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { NamespaceAPI, GroupObjectPermissionType } from 'src/api';\n\nimport { HelperText, ObjectPermissionField } from 'src/components';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  newGroups: GroupObjectPermissionType[];\n  errorMessages: any;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      newGroups: [],\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error: any = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = _`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = _`Name can only contain [A-Za-z0-9_]`;\n    } else if (name.length <= 2) {\n      error['name'] = _`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = _`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = (event) => {\n    const data: any = {\n      name: this.state.newNamespaceName,\n      groups: this.state.newGroups,\n    };\n    NamespaceAPI.create(data)\n      .then((results) => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          newGroups: [],\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages: any = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newGroups, newNamespaceNameValid } = this.state;\n    return (\n      <Modal\n        variant='large'\n        title={_`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {_`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {_`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup\n            label={_`Name`}\n            isRequired\n            fieldId='name'\n            helperText={_`Please, provide the namespace name`}\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={_`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n          <FormGroup\n            label={_`Namespace owners`}\n            fieldId='groups'\n            helperTextInvalid={this.state.errorMessages['groups']}\n          >\n            <ObjectPermissionField\n              availablePermissions={['change_namespace', 'upload_to_namespace']}\n              groups={newGroups}\n              setGroups={(g) => this.setState({ newGroups: g })}\n              menuAppendTo='parent'\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\n\ninterface IProps {\n  className?: string;\n  number: number | string;\n  label?: string;\n  hideNumber?: boolean;\n}\n\nexport class NumericLabel extends React.Component<IProps, {}> {\n  render() {\n    const { className, number, label, hideNumber } = this.props;\n    let convertedNum: number;\n\n    if (typeof number === 'string') {\n      convertedNum = Number(number);\n    } else {\n      convertedNum = number;\n    }\n\n    const plural = number === 1 ? '' : 's';\n\n    return (\n      <div>\n        <span>\n          {hideNumber ? null : NumericLabel.roundNumber(convertedNum)}{' '}\n        </span>\n        <span className={className}>{label ? label + plural : null}</span>\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n","import * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\n\nimport { TrashIcon } from '@patternfly/react-icons';\n\nimport { GroupObjectPermissionType, GroupAPI } from 'src/api';\nimport { APISearchTypeAhead, PermissionChipSelector } from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  groups: GroupObjectPermissionType[];\n  availablePermissions: string[];\n  setGroups: (groups: GroupObjectPermissionType[]) => void;\n  isDisabled?: boolean;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  searchGroups: { name: string; id: number | string }[];\n}\n\nexport class ObjectPermissionField extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const { groups, availablePermissions } = this.props;\n\n    return (\n      <div>\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelect}\n          placeholderText={_`Find a group`}\n          menuAppendTo={this.props.menuAppendTo}\n          isDisabled={!!this.props.isDisabled}\n        />\n        <br />\n        <div>\n          {groups.map((group, i) => (\n            <Flex\n              style={{ marginTop: '16px' }}\n              alignItems={{ default: 'alignItemsCenter' }}\n              key={group.name}\n            >\n              <FlexItem style={{ minWidth: '200px' }}>{group.name}</FlexItem>\n              <FlexItem grow={{ default: 'grow' }} style={{ width: '90%' }}>\n                <PermissionChipSelector\n                  availablePermissions={availablePermissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  selectedPermissions={group.object_permissions.map((perm) =>\n                    twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n                  )}\n                  setSelected={(perms) => this.setPermissions(perms, group)}\n                  menuAppendTo={this.props.menuAppendTo}\n                />\n              </FlexItem>\n              <FlexItem>\n                <TrashIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => this.removeGroup(group)}\n                />\n              </FlexItem>\n            </Flex>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  private removeGroup(group) {\n    const newGroups = [];\n    for (const g of this.props.groups) {\n      if (g.id !== group.id) {\n        newGroups.push(g);\n      }\n    }\n\n    this.props.setGroups(newGroups);\n  }\n\n  private setPermissions(perms, group) {\n    const newGroups = [...this.props.groups];\n    const selectedGroup = newGroups.find((g) => g.id === group.id);\n    selectedGroup.object_permissions = perms.map((perm) =>\n      twoWayMapper(perm, Constants.GROUP_HUMAN_PERMISSIONS),\n    );\n\n    this.props.setGroups(newGroups);\n  }\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name }).then((result) => {\n      const added = this.props.groups.map((group) => group.name);\n      const groups = result.data.data.filter(\n        (group) => !added.includes(group.name),\n      );\n      this.setState({ searchGroups: groups });\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    const newGroups = [...this.props.groups];\n\n    const addedGroup = this.state.searchGroups.find(\n      (g) => g.name === selection,\n    );\n\n    newGroups.push({\n      id: addedGroup.id as number,\n      name: addedGroup.name,\n      object_permissions: this.props.availablePermissions,\n    });\n\n    this.props.setGroups(newGroups);\n  };\n}\n","import * as React from 'react';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { BaseHeader, Tabs, Breadcrumbs } from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: string[];\n  breadcrumbs: {\n    url?: string;\n    name: string;\n  }[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps, {}> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n    return (\n      <BaseHeader\n        title={namespace.company || namespace.name}\n        imageURL={namespace.avatar_url}\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions: string[];\n  selectedPermissions: string[];\n  setSelected: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map((text) => (\n            <Label key={text}>{text}</Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={_`Select permissions`}\n        onToggle={this.onToggle}\n        onSelect={!!this.props.onSelect ? this.props.onSelect : this.onSelect}\n        onClear={\n          !!this.props.onClear ? this.props.onClear : this.clearSelection\n        }\n        selections={this.props.selectedPermissions}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={_`Not found`}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option} />\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return _`Select permissions`;\n    }\n    return this.props.selectedPermissions.length === 0 ? _`No permission` : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    const newPerms = new Set(this.props.selectedPermissions);\n    if (newPerms.has(selection)) {\n      newPerms.delete(selection);\n    } else {\n      newPerms.add(selection);\n    }\n\n    this.props.setSelected(Array.from(newPerms));\n  };\n}\n","import * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  FileUpload,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText } from 'src/components';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet } from 'src/utilities';\n\ninterface IProps {\n  updateRemote: (remote) => void;\n  remote: RemoteType;\n  saveRemote: () => void;\n  showModal: boolean;\n  closeModal: () => void;\n  errorMessages: object;\n}\n\ninterface IState {\n  uploadedRequirementFilename: string;\n  uploadedClientKeyFilename: string;\n  uploadedClientCertFilename: string;\n  uploadedCaCertFilename: string;\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    let [\n      requirementsFilename,\n      clientCertFilename,\n      clientKeyFilename,\n      caCertFilename,\n    ] = Array(4).fill('');\n\n    if (!!props.remote) {\n      requirementsFilename = this.props.remote.requirements_file\n        ? 'requirements.yml'\n        : '';\n      clientKeyFilename = this.props.remote.client_key ? 'client_key.yml' : '';\n      clientCertFilename = this.props.remote.client_cert\n        ? 'client_cert.yml'\n        : '';\n      caCertFilename = this.props.remote.ca_cert ? 'ca_cert.yml' : '';\n    }\n\n    this.state = {\n      uploadedRequirementFilename: requirementsFilename,\n      uploadedClientKeyFilename: clientKeyFilename,\n      uploadedClientCertFilename: clientCertFilename,\n      uploadedCaCertFilename: caCertFilename,\n    };\n  }\n\n  render() {\n    const { remote, errorMessages } = this.props;\n    if (!remote) {\n      return null;\n    }\n    const remoteType = this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={_`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {_`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.props.closeModal()}\n          >\n            {_`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={_`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n        <FormGroup\n          fieldId={'url'}\n          label={_`URL`}\n          labelIcon={\n            <HelperText content={_`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          validated={this.toError(!('url' in errorMessages))}\n          helperTextInvalid={errorMessages['url']}\n        >\n          <TextInput\n            validated={this.toError(!('url' in errorMessages))}\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={_`Token`}\n            labelIcon={\n              <HelperText\n                content={_`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={_`SSO URL`}\n            labelIcon={<HelperText content={_`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={_`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <>\n                    This uses the same{' '}\n                    <a\n                      target='_blank'\n                      href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n                    >\n                      requirements.yml\n                    </a>{' '}\n                    format as the ansible-galaxy CLI with the caveat that roles\n                    aren't supported and the source parameter is not supported.\n                  </>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedRequirementFilename}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState(\n                      { uploadedRequirementFilename: filename },\n                      () => this.updateRemote(value, 'requirements_file'),\n                    );\n                  }}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      this.state.uploadedRequirementFilename,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={_`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n        <ExpandableSection\n          toggleTextExpanded={_`Hide advanced options`}\n          toggleTextCollapsed={_`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'username'}\n              label={_`Username`}\n              labelIcon={\n                <HelperText\n                  content={_`The username to be used for authentication when syncing. This is not required when using a token.`}\n                />\n              }\n              isRequired={requiredFields.includes('username')}\n              validated={this.toError(!('username' in errorMessages))}\n              helperTextInvalid={errorMessages['username']}\n            >\n              <TextInput\n                validated={this.toError(!('username' in errorMessages))}\n                isRequired={requiredFields.includes('username')}\n                isDisabled={disabledFields.includes('username')}\n                id='username'\n                type='text'\n                value={remote.username || ''}\n                onChange={(value) => this.updateRemote(value, 'username')}\n              />\n            </FormGroup>\n            <FormGroup\n              fieldId={'password'}\n              label={_`Password`}\n              labelIcon={\n                <HelperText\n                  content={_`The password to be used for authentication when syncing. This is not required when using a token.`}\n                />\n              }\n              isRequired={requiredFields.includes('password')}\n              validated={this.toError(!('password' in errorMessages))}\n              helperTextInvalid={errorMessages['password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('password', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('password' in errorMessages))}\n                  isRequired={requiredFields.includes('password')}\n                  isDisabled={disabledFields.includes('password')}\n                  id='password'\n                  type='password'\n                  value={remote.password || ''}\n                  onChange={(value) => this.updateRemote(value, 'password')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={_`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_username'}\n              label={_`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_username' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_username')}\n                isDisabled={disabledFields.includes('proxy_username')}\n                id='proxy_username'\n                type='text'\n                value={remote.proxy_username || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_username')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={_`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='text'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={_`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={_`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n            <FormGroup\n              fieldId={'client_key'}\n              label={_`Client key`}\n              labelIcon={\n                <HelperText\n                  content={_`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={this.state.uploadedClientKeyFilename}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={(value, filename) => {\n                    this.setState({ uploadedClientKeyFilename: filename }, () =>\n                      this.updateRemote(value, 'client_key'),\n                    );\n                  }}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n            <FormGroup\n              fieldId={'client_cert'}\n              label={_`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={_`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={this.state.uploadedClientCertFilename}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={(value, filename) => {\n                      this.setState(\n                        { uploadedClientCertFilename: filename },\n                        () => this.updateRemote(value, 'client_cert'),\n                      );\n                    }}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        this.state.uploadedClientCertFilename,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={_`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={_`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={_`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={this.state.uploadedCaCertFilename}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={(value, filename) => {\n                      this.setState({ uploadedCaCertFilename: filename }, () =>\n                        this.updateRemote(value, 'ca_cert'),\n                      );\n                    }}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        this.state.uploadedCaCertFilename,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={_`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={_`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={_`Total number of simultaneous connections.`}\n                />\n              }\n              validated={remote.download_concurrency > 0 ? 'default' : 'error'}\n              helperTextInvalid={_`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency}\n                validated={\n                  remote.download_concurrency > 0 ? 'default' : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(parseInt(value), 'download_concurrency')\n                }\n              />\n            </FormGroup>\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={_`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={_`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                Number.isInteger(remote.rate_limit) ||\n                remote.rate_limit === null\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={_`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                value={remote.rate_limit}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n    if (remote.download_concurrency < 1) {\n      return false;\n    }\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, HelperText, SortTable, StatefulDropdown } from '..';\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  polling: any;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      } else {\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    let sortTableOptions = {\n      headers: [\n        {\n          title: _`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: _`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: _`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: _`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: _`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={_`Collection versions`}\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { user } = this.props;\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {!!remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        {!!remote.last_sync_task && !!remote.last_sync_task.finished_at ? (\n          <td>\n            <DateComponent date={remote.last_sync_task.finished_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{this.renderStatus(remote)}</td>\n        <td>\n          {remote.repositories.length === 0 ? (\n            <Tooltip\n              content={_`There are no repos associated with this remote.`}\n            >\n              <Button variant='plain'>\n                <ExclamationCircleIcon />\n              </Button>\n            </Tooltip>\n          ) : (\n            !!user &&\n            user.model_permissions.change_remote && (\n              <>\n                {this.getConfigureOrSyncButton(remote)}\n                <span>\n                  <StatefulDropdown\n                    items={[\n                      <DropdownItem\n                        key='edit'\n                        onClick={() => this.props.editRemote(remote)}\n                      >\n                        {_`Edit`}\n                      </DropdownItem>,\n                    ]}\n                  />\n                </span>\n              </>\n            )\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  private renderStatus(remote) {\n    if (!remote.last_sync_task) {\n      return '---';\n    }\n\n    let errorMessage = null;\n    if (remote['last_sync_task']['error']) {\n      errorMessage = (\n        <HelperText content={remote.last_sync_task.error['description']} />\n      );\n    }\n\n    return (\n      <>\n        <StatusIndicator status={remote.last_sync_task.state} /> {errorMessage}\n      </>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { user } = this.props;\n    if (!!user && !user.model_permissions.change_remote) {\n      return null;\n    }\n    const configButton = (\n      <Button onClick={() => this.props.editRemote(remote)} variant='secondary'>\n        {_`Configure`}\n      </Button>\n    );\n\n    const syncButton = (\n      <>\n        <Button\n          isDisabled={\n            remote.repositories.length === 0 ||\n            (remote.last_sync_task &&\n              ['running', 'waiting'].includes(remote.last_sync_task.state))\n          }\n          onClick={() =>\n            this.props.syncRemote(\n              remote.repositories[0].distributions[0].base_path,\n            )\n          }\n          variant='secondary'\n        >\n          {_`Sync`}\n        </Button>\n      </>\n    );\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: any;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return null;\n    }\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              variant='plain'\n              className='input-group-text-no-wrap'\n            >\n              {_`Filter by repository`}\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event, value) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoBasePath(value.toString());\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: newRepo,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={(isExpanded) => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              <SelectOption key={'published'} value={_`Published`} />\n              <SelectOption key={'rh-certified'} value={_`Red Hat Certified`} />\n              <SelectOption key={'community'} value={_`Community`} />\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoName(basePath) {\n    const newRepoName = Object.keys(Constants.REPOSITORYNAMES).find(\n      (key) => Constants.REPOSITORYNAMES[key] === basePath,\n    );\n\n    // allowing the repo to go through even if isn't one that we support so\n    // that 404s bubble up naturally from the child components.\n    if (!newRepoName) {\n      return basePath;\n    }\n    return newRepoName;\n  }\n\n  private getRepoBasePath(repoName) {\n    if (Constants.REPOSITORYNAMES[repoName]) {\n      return Constants.REPOSITORYNAMES[repoName];\n    }\n\n    return repoName;\n  }\n}\n","import * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport { ObjectPermissionField } from 'src/components';\nimport { GroupObjectPermissionType } from 'src/api';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n  onSave: (string, []) => void;\n  onCancel: () => void;\n  permissions: string[];\n}\n\ninterface IState {\n  description: string;\n  selectedGroups: GroupObjectPermissionType[];\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: this.props.description,\n      selectedGroups: this.props.selectedGroups,\n    };\n  }\n\n  render() {\n    const { name, onSave, onCancel, namespace } = this.props;\n    const { description, selectedGroups } = this.state;\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={_`Edit repository`}\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            onClick={() => onSave(description, selectedGroups)}\n          >\n            {_`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {_`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup key='name' fieldId='name' label={_`Name`}>\n            <TextInput id='name' value={name} isDisabled={true} type='text' />\n          </FormGroup>\n          <FormGroup key='name' fieldId='name' label={_`Container namespace`}>\n            <TextInput\n              id='name'\n              value={namespace}\n              isDisabled={true}\n              type='text'\n            />\n          </FormGroup>\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={_`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n          <FormGroup\n            key='groups'\n            fieldId='groups'\n            label={_`Groups with access`}\n          >\n            <div className='pf-c-form__helper-text'>\n              Adding groups provides access to all repositories in the \"\n              {namespace}\" container namespace.\n            </div>\n            <ObjectPermissionField\n              groups={this.state.selectedGroups}\n              availablePermissions={Constants.CONTAINER_NAMESPACE_PERMISSIONS}\n              setGroups={(g) => this.setState({ selectedGroups: g })}\n              menuAppendTo='parent'\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.change_containernamespace',\n                )\n              }\n            ></ObjectPermissionField>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n}\n","import * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps, {}> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={_`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    return (\n      <Tooltip content={this.props.digest}>\n        <Label color='blue'>{truncateSha(this.props.digest)}</Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: any;\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams(\n        ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n      ),\n    );\n  }\n\n  private setDescending() {\n    let field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n    );\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={_`Select input`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n            aria-labelledby={_`Sort results`}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n    );\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    let activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr aria-labelledby='headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNodeArray;\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || _`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || _`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Label } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n}\n\ninterface LabelPropType {\n  color: string;\n  icon: any;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps, {}> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: _`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: _`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: _`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: _`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: _`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type] as any}\n        color={labelProps.color as any}\n        icon={labelProps.icon}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label='find-content'\n                placeholder={_`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: _`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: string[];\n\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps, {}> {\n  render() {\n    return (\n      <Label className='tag' readOnly>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  Toolbar as ToolbarPF,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarContent,\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { Sort } from 'src/components';\n\nimport { SortFieldType } from './sort';\n\ninterface IProps {\n  /** Current page params */\n  params: {\n    sort?: string;\n    keywords?: string;\n  };\n\n  /** List of sort options that the user can pick from */\n  sortOptions?: SortFieldType[];\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Search bar placeholder text*/\n  searchPlaceholder: string;\n\n  /** Extra set of customizeable inputs that appear to right of sort*/\n  extraInputs?: React.ReactNode[];\n}\n\ninterface IState {\n  kwField: string;\n}\n\n// FIXME: only used in collection-list & namespace-list, other Toolbar is unrelated; merge\nexport class Toolbar extends React.Component<IProps, IState> {\n  static defaultProps = {\n    extraInputs: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      kwField: props.params.keywords || '',\n    };\n  }\n\n  render() {\n    const {\n      params,\n      sortOptions,\n      updateParams,\n      searchPlaceholder,\n      extraInputs,\n    } = this.props;\n    const { kwField } = this.state;\n    return (\n      <ToolbarPF>\n        <ToolbarContent>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <InputGroup>\n                <TextInput\n                  value={kwField}\n                  onChange={(k) => this.setState({ kwField: k })}\n                  onKeyPress={(e) => this.handleEnter(e)}\n                  type='search'\n                  aria-label='search text input'\n                  placeholder={searchPlaceholder}\n                />\n                <Button\n                  variant={ButtonVariant.control}\n                  aria-label='search button'\n                  onClick={() => this.submitKeywords()}\n                >\n                  <SearchIcon />\n                </Button>\n              </InputGroup>\n            </ToolbarItem>\n          </ToolbarGroup>\n          {sortOptions && (\n            <ToolbarGroup>\n              <ToolbarItem>\n                <Sort\n                  options={sortOptions}\n                  params={params}\n                  updateParams={updateParams}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          )}\n          {extraInputs}\n        </ToolbarContent>\n      </ToolbarPF>\n    );\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter') {\n      this.submitKeywords();\n    }\n  }\n\n  private submitKeywords() {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        'keywords',\n        this.state.kwField,\n      ),\n      page: 1, // always reset the page when searching\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps, {}> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  errorMessages: any; // FIXME: { [key: string]: string }, but all callers use {}, object or any\n  formFields: {\n    formGroupLabelIcon?: React.ReactNode;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  model: any;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && (field.formGroupLabelIcon as any)}\n          validated={isReadonly ? 'default' : validated}\n          aria-labelledby={field.id}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as any) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\n\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: object;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: any[];\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm } = this.state;\n    const formFields = [\n      { id: 'username', title: _`Username` },\n      { id: 'first_name', title: _`First name` },\n      { id: 'last_name', title: _`Last name` },\n      { id: 'email', title: _`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: _`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={_`Create a password using at least 9 characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={_`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={_`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={_`Groups`}\n        aria-labelledby='readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={_`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        <APISearchTypeAhead\n          results={this.state.searchGroups}\n          loadResults={this.loadGroups}\n          onSelect={this.onSelectGroup}\n          placeholderText={_`Select groups`}\n          selections={user.groups}\n          multiple={true}\n          onClear={this.clearGroups}\n          isDisabled={isReadonly}\n        />\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={_`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={_`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={_`Super user`}\n            labelOff={_`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={(e) =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {_`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {_`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return _`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return _`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection, isPlaceholder) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 }).then((result) =>\n      this.setState({ searchGroups: result.data.data }),\n    );\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport { BaseHeader, Main, Breadcrumbs, UserForm } from 'src/components';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: any[];\n  errorMessages: object;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: object) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: any;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label='hidden value'\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {_`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","export class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      object_permissions: [\n        'galaxy.add_namespace',\n        'galaxy.change_namespace',\n        'galaxy.upload_to_namespace',\n      ],\n    },\n    {\n      name: 'collections',\n      object_permissions: ['ansible.modify_ansible_repo_content'],\n    },\n    {\n      name: 'users',\n      object_permissions: [\n        'galaxy.view_user',\n        'galaxy.delete_user',\n        'galaxy.add_user',\n        'galaxy.change_user',\n      ],\n    },\n    {\n      name: 'groups',\n      object_permissions: [\n        'galaxy.view_group',\n        'galaxy.delete_group',\n        'galaxy.add_group',\n        'galaxy.change_group',\n      ],\n    },\n    {\n      name: 'remotes',\n      object_permissions: [\n        'ansible.change_collectionremote',\n        'ansible.view_collectionremote',\n      ],\n    },\n    {\n      name: 'containers',\n      object_permissions: [\n        // Turning off private container permissions since they aren't supported yet\n        // 'container.namespace_pull_containerdistribution',\n        // 'container.namespace_view_containerdistribution',\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.change_containernamespace',\n        'container.namespace_push_containerdistribution',\n        'container.add_containernamespace',\n      ],\n    },\n\n    // These aren't currently used. Removing them to reduce confusion in the UI\n    // {\n    //   name: 'distribution',\n    //   object_permissions: [\n    //     'ansible.change_ansibledistribution',\n    //     'ansible.view_ansibledistribution',\n    //   ],\n    // },\n    // {\n    //   name: 'synclists',\n    //   object_permissions: [\n    //     'galaxy.delete_synclist',\n    //     'galaxy.change_synclist',\n    //     'galaxy.view_synclist',\n    //     'galaxy.add_synclist',\n    //   ],\n    // },\n  ];\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n  static HUMAN_PERMISSIONS = {\n    'galaxy.add_namespace': _`Add namespace`,\n    'galaxy.change_namespace': _`Change namespace`,\n    'galaxy.upload_to_namespace': _`Upload to namespace`,\n    'ansible.modify_ansible_repo_content': _`Modify Ansible repo content`,\n    'galaxy.view_user': _`View user`,\n    'galaxy.delete_user': _`Delete user`,\n    'galaxy.add_user': _`Add user`,\n    'galaxy.change_user': _`Change user`,\n    'galaxy.view_group': _`View group`,\n    'galaxy.delete_group': _`Delete group`,\n    'galaxy.add_group': _`Add group`,\n    'galaxy.change_group': _`Change group`,\n    'ansible.change_collectionremote': _`Change collection remote`,\n    'ansible.view_collectionremote': _`View collection remote`,\n    'ansible.change_ansibledistribution': _`Change Ansible distribution`,\n    'ansible.view_ansibledistribution': _`View Ansible distribution`,\n    'galaxy.delete_synclist': _`Delete synclist`,\n    'galaxy.change_synclist': _`Change synclist`,\n    'galaxy.view_synclist': _`View synclist`,\n    'galaxy.add_synclist': _`Add synclist`,\n    'container.add_containernamespace': _`Create new containers`,\n    'container.namespace_pull_containerdistribution': _`Pull private containers`,\n    'container.namespace_change_containerdistribution': _`Change containers`,\n    'container.namespace_view_containerdistribution': _`View private containers`,\n    'container.namespace_modify_content_containerpushrepository': _`Change image tags`,\n    'container.change_containernamespace': _`Change container namespace permissions`,\n    'container.namespace_push_containerdistribution': _`Push to existing containers`,\n  };\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: _`Change namespace`,\n    upload_to_namespace: _`Upload to namespace`,\n    add_containernamespace: _`Create new containers`,\n    namespace_pull_containerdistribution: _`Pull private containers`,\n    namespace_change_containerdistribution: _`Update container information`,\n    namespace_view_containerdistribution: _`View private containers`,\n    namespace_modify_content_containerpushrepository: _`Change image tags`,\n    change_containernamespace: _`Change container namespace permissions`,\n    namespace_push_containerdistribution: _`Push images to existing containers`,\n    view_containernamespace: _`View container's namespace`,\n    delete_containernamespace: _`Delete container's namespace`,\n    namespace_delete_containerdistribution: _`Delete container's distribution`,\n    namespace_view_containerpushrepository: _`View container's repository`,\n    namespace_add_containerdistribution: _`Push new containers`,\n    change_containerdistribution: _`Change distribution`,\n    delete_containerdistribution: _`Delete distribution`,\n    push_containerdistribution: _`Push distribution`,\n    pull_containerdistribution: _`Pull distribution`,\n    view_containerdistribution: _`View distribution`,\n  };\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n  static REPOSITORYNAMES = {\n    'Red Hat Certified': 'rh-certified',\n    Community: 'community',\n    Published: 'published',\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': _`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': _`Import and auto approve`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': _`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': _`Import and move to staging`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': _`Import and auto approve`,\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': _`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': _`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.sync': _`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.copy.copy_content': _`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.collections.collection_sync': _`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.roles.synchronize': _`Pulp Ansible: Roles synchronize`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': _`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.collections.import_collection': _`Pulp ansible: Import collection`,\n    'pulp_container.app.tasks.tag_image': _`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': _`Pulp container: Untage image`,\n    'pulp_container.app.tasks.synchronize': _`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.recursive_add_content': _`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': _`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.build_image_from_containerfile': _`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': _`Pulp container: General multi delete`,\n    'pulpcore.tasking.tasks.import_repository_version': _`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': _`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': _`Pulpcore: Repair all artifacts`,\n    'pulpcore.tasking.tasks.base.general_create': _`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_update': _`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.base.general_delete': _`Pulpcore: General delete`,\n    'pulpcore.app.tasks.export.pulp_export': _`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': _`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.delete_version': _`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': _`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': _`Pulpcore: Upload commit`,\n    'pulpcore.app.tasks.repository.add_and_remove': _`Pulpcore: Add and remove`,\n    'pulpcore.plugin.tasking.add_and_remove': _`Pulpcore: Add or remove`,\n  };\n}\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (registry) {\n    throw new Error('store already initialized');\n  }\n\n  registry = new ReducerRegistry({}, [promise, ...middleware]);\n\n  //If you want to register all of your reducers, this is good place.\n  /*\n   *  registry.register({\n   *    someName: (state, action) => ({...state})\n   *  });\n   */\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React, { Component } from 'react';\nimport { LoadingPageWithHeader } from 'src/components';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null,\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component,\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? (\n        <C {...this.props} />\n      ) : (\n        <LoadingPageWithHeader></LoadingPageWithHeader>\n      );\n    }\n  }\n\n  return AsyncComponent;\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport asyncComponent from 'src/utilities/asyncComponent';\nimport some from 'lodash/some';\nimport { Paths } from 'src/paths';\n\n/**\n * Aysnc imports of components\n *\n * https://webpack.js.org/guides/code-splitting/\n * https://reactjs.org/docs/code-splitting.html\n *\n * pros:\n *      1) code splitting\n *      2) can be used in server-side rendering\n * cons:\n *      1) nameing chunk names adds unnecessary docs to code,\n *         see the difference with DashboardMap and InventoryDeployments.\n *\n */\nconst EditNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/edit-namespace/edit-namespace'\n  ),\n);\n\nconst CollectionDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-detail'\n  ),\n);\n\nconst CollectionContent = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-content'\n  ),\n);\n\nconst CollectionDocs = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-docs'\n  ),\n);\n\nconst CollectionImportLog = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"collection_detail\" */\n    '../../containers/collection-detail/collection-import-log'\n  ),\n);\n\nconst NotFound = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"not_found\" */\n    '../../containers/not-found/not-found'\n  ),\n);\n\nconst MyNamespaces = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/my-namespaces'\n  ),\n);\n\nconst ManageNamespace = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst PartnerDetail = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_detail\" */\n    '../../containers/namespace-detail/namespace-detail'\n  ),\n);\n\nconst Partners = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"namespace_list\" */\n    '../../containers/namespace-list/' + NAMESPACE_TERM\n  ),\n);\n\nconst MyImports = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"my_imports\" */\n    '../../containers/my-imports/my-imports'\n  ),\n);\n\nconst Search = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"search\" */\n    '../../containers/search/search'\n  ),\n);\n\nconst TokenPage = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/token/token-insights'\n  ),\n);\n\nconst CertificationDashboard = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"settings\" */\n    '../../containers/certification-dashboard/certification-dashboard'\n  ),\n);\n\nconst Repository = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"repository-list\" */\n    '../../containers/repositories/repository-list'\n  ),\n);\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n\n  return <Route {...rest} component={Component} />;\n};\n\nInsightsRoute.propTypes = {\n  component: PropTypes.func,\n  rootClass: PropTypes.string,\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = (props) => {\n  const path = props.childProps.location.pathname;\n\n  return (\n    <Switch>\n      <InsightsRoute\n        path={Paths.repositories}\n        component={Repository}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.approvalDashboard}\n        component={CertificationDashboard}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.notFound}\n        component={NotFound}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.token}\n        component={TokenPage}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths[NAMESPACE_TERM]}\n        component={Partners}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.editNamespace}\n        component={EditNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollections}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myCollectionsByRepo}\n        component={ManageNamespace}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myNamespaces}\n        component={MyNamespaces}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPageByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndexByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocsByRepo}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentListByRepo}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLogByRepo}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionByRepo}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespaceByRepo}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.searchByRepo}\n        component={Search}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsPage}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionDocsIndex}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentDocs}\n        component={CollectionDocs}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionContentList}\n        component={CollectionContent}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collectionImportLog}\n        component={CollectionImportLog}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.myImports}\n        component={MyImports}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.collection}\n        component={CollectionDetail}\n        rootClass='root'\n      />\n      <InsightsRoute\n        path={Paths.namespace}\n        component={PartnerDetail}\n        rootClass='root'\n      />\n      <InsightsRoute path={Paths.search} component={Search} rootClass='root' />\n      {/* Finally, catch all unmatched routes */}\n      <Route\n        render={() =>\n          some(Paths, (p) => p === path) ? null : (\n            <Redirect to={Paths.notFound} />\n          )\n        }\n      />\n    </Switch>\n  );\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { ActiveUserAPI } from 'src/api';\nimport { Paths } from 'src/paths';\n\nconst DEFAULT_REPO = 'published';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      activeUser: null,\n      selectedRepo: DEFAULT_REPO,\n    };\n  }\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('automation-hub');\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = insights.chrome.on('APP_NAVIGATION', (event) => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, no trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename.replace(/^\\/beta\\//, '/');\n\n      if (event.domEvent.href) {\n        // prod-beta\n        // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n        // (navId: corresponds to the last url component, but not the same one, ansible-hub means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners)\n\n        // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n        this.props.history.push(\n          event.domEvent.href.replace(basename, '') || '/',\n        );\n      } else {\n        // FIXME: may no longer be needed by the time this gets to prod-stable\n        // prod-stable\n        // (domEvent is a react event, no href (there is an absolute url in domEvent.target.href))\n        // navId: corresponds to the first url component after prefix, \"\" means /ansible/ansible-hub, partners means /ansible/ansible-hub/partners\n        this.props.history.push(`/${event.navId}`);\n      }\n    });\n\n    insights.chrome.auth\n      .getUser()\n      .then((user) => this.setState({ user: user }));\n    ActiveUserAPI.getActiveUser().then((result) =>\n      this.setState({ activeUser: result.data }),\n    );\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate(prevProps) {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user || !this.state.activeUser) {\n      return null;\n    } else {\n      return (\n        <AppContext.Provider\n          value={{\n            user: this.state.activeUser,\n            setUser: this.setActiveUser,\n            selectedRepo: this.state.selectedRepo,\n          }}\n        >\n          <Routes childProps={this.props} />\n        </AppContext.Provider>\n      );\n    }\n  }\n  setActiveUser = (user) => {\n    this.setState({ activeUser: user });\n  };\n\n  isRepoURL = (location) => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n  basename: PropTypes.string.isRequired,\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport getBaseName from './utilities/getBaseName';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst basename = getBaseName(window.location.pathname);\n\nReactDOM.render(\n  <Provider store={init().getStore()}>\n    <Router basename={basename}>\n      <App basename={basename} />\n    </Router>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType } from 'src/api';\n\ninterface IAppContextType {\n  user: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\n","import { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(path: Paths, data: any, params?: object) {\n  let url = path as string;\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    return `${url}?${ParamHelper.getQueryString(params)}`;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n}\n\n// FIXME: temporary global for l10n ; do localStorage.test_l10n = true in the console\nwindow._ = (strings, ...args) => {\n  strings = Array.from(strings);\n  const last = strings.pop();\n  const mark =\n    window.localStorage.test_l10n === 'true' ? (s) => '»' + s + '«' : (s) => s;\n\n  const parts = [...strings.map((s, i) => mark(s) + args[i]), mark(last)];\n\n  return parts.join('');\n};\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: _`Namespaces`,\n    partners: _`Partners`,\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { ContentSummaryType } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  content: ContentSummaryType[],\n): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: { module: 0, role: 0, plugin: 0 },\n  };\n\n  for (let c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport function mapErrorMessages(err) {\n  const messages: any = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = !!API_HOST ? API_HOST : window.location.origin;\n\n  return !!distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: any) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find((key) => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    console.log(field);\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data: any,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  let splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: Object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: Object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: Object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (let k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p: any, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: Object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: Object, ignoreParams?: string[]) {\n    let paramString = [];\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams(params);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + {\"33\":\"namespace_detail\",\"152\":\"not_found\",\"378\":\"repository-list\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] + \".\" + {\"33\":\"b18e4c4ec7cde13bd68a\",\"152\":\"0b3af3d7d7eb067108a2\",\"378\":\"dbd45ac397ece97b22e8\",\"464\":\"7b280eec6311c56834b7\",\"571\":\"471268114538e9c20802\",\"684\":\"a79ba71c6aa2ea5af3e0\",\"776\":\"87fce39cb414aa0eb6e4\",\"837\":\"b68b30e49e13f9b3e1d2\"}[chunkId] + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"css/\" + {\"33\":\"namespace_detail\",\"152\":\"not_found\",\"410\":\"pfVendor\",\"464\":\"search\",\"571\":\"settings\",\"684\":\"namespace_list\",\"776\":\"collection_detail\",\"837\":\"my_imports\"}[chunkId] + \".\" + {\"33\":\"0404a1965d8cbc7e8752\",\"152\":\"edf236b3c340045471cc\",\"410\":\"305c5ff055a4fc0f9c19\",\"464\":\"479b6edf24556d317e6f\",\"571\":\"e278031ed8e7e4c376de\",\"684\":\"9d8e8029cd5e90f139f5\",\"776\":\"5be18d32371f96ba784a\",\"837\":\"60d5edc9717bf67286eb\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/beta/apps/automation-hub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t768: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkansible_hub_ui\"] = self[\"webpackChunkansible_hub_ui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [410,293,252,736], () => (__webpack_require__(52853)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","loadStylesheet","installedCssChunks","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","then","response","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","source","forceReload","cachedCollection","Promise","result","docs_blob","filterDetailItem","distro_base_path","version","reject","err","ImportMessageCodes","PulpStatus","NamespaceAPI","API","ImportAPI","ActiveUserAPI","identity","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","MySyncListAPI","TaskAPI","GroupAPI","permissionId","RemoteAPI","distribution","remote","unModifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","obj","API_HOST","DistributionAPI","MyDistributionAPI","readme","digest","PulpAPI","repositoryID","tag","changedParams","APISearchTypeAhead","props","loadResults","onClear","evt","textInput","target","value","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","options","results","option","push","SelectOption","key","length","_","React","AlertList","alerts","closeAlert","style","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","Array","isArray","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","imageURL","pageControls","children","breadcrumbs","contextSelector","versionControl","cx","Logo","alt","image","size","unlockWidth","Title","headingLevel","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","to","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","avatar_url","TextContent","getCertification","formatPath","Paths","Text","component","TextVariants","CardBody","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","count","NumericLabel","number","hideNumber","label","CollectionContentList","toShow","summary","all","showing","keywords","c","typeMatch","match","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","selectedRepo","AppContext","DateComponent","date","Tooltip","moment","format","fromNow","CollectionHeader","activeTab","all_versions","find","x","created","created_at","urlKeys","latestVersion","RepoSelector","FormSelect","FormSelectOption","isInline","renderTabs","l","href","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","CollectionInfo","downloadLinkRef","installCommand","Grid","hasGutter","GridItem","tags","Tag","Split","SplitItem","isFilled","license","ClipboardCopy","isReadOnly","ref","icon","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","filterConfig","inputType","ToolbarContent","CompoundFilter","marginTop","CollectionList","collections","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","Pagination","alignItems","handleControlClick","StatefulDropdown","items","DropdownItem","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","newParams","selectedFilter","selectedID","currentTarget","replace","indexOf","submitMultiple","inputText","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","isPlain","renderInput","submitFilter","ButtonVariant","toggle","SelectGroup","onSelectMultiple","toLowerCase","isGrouped","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","margin","backgroundColor","color","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyStateCustom","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","EmptyStateNoData","PlusCircleIcon","EmptyStateUnauthorized","LockIcon","HelperText","Popover","PopoverPosition","bodyContent","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","task","apiError","loading","renderTitle","Spinner","isLoading","followMessages","handleScrollClick","messages","renderMessage","level","message","hideCollectionName","collectionVersion","collectionHead","approvalStatus","rlist","repository_list","StatusIndicator","status","error","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","selectImport","importList","namespaces","numberOfResults","renderNamespacePicker","renderList","perPage","page_size","onSetPage","onPerPageSelect","isCompact","filterIsSet","getStatusClass","renderDescription","finished_at","statusClass","ns","tab","renderTab","LoadingPageSpinner","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","sort","console","log","renderRow","cliConfig","repository","getRepoUrl","base_path","content_count","pulp_last_updated","isCode","join","justifyContent","objectFit","maxHeight","src","DefaultLogo","extra","MarkdownEditor","text","updateText","helperText","editing","Form","FormGroup","fieldId","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","newNamespaceGroup","errorMessages","userId","isRequired","helperTextInvalid","validated","toError","updateField","isNaN","Number","ObjectPermissionField","groups","availablePermissions","setGroups","g","newNS","updateNamespace","getLinksErrorText","renderLinkGroup","addLink","msg","update","last","updateLink","removeLink","NamespaceModal","newNamespaceName","newGroups","toggleModal","onCreateSuccess","errors","parameter","detail","newNamespaceNameValid","test","startsWith","Modal","actions","handleSubmit","labelIcon","newNamespaceNameIsValid","convertedNum","plural","roundNumber","n","toString","Math","floor","name__contains","added","searchGroups","addedGroup","object_permissions","loadGroups","Flex","default","FlexItem","minWidth","grow","PermissionChipSelector","perm","twoWayMapper","selectedPermissions","setSelected","perms","setPermissions","cursor","removeGroup","isTop","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","String","PartnerHeader","filters","Tabs","newPerms","Set","has","add","from","isViewOnly","Label","typeAheadAriaLabel","clearSelection","RemoteForm","fill","requirementsFilename","clientCertFilename","clientKeyFilename","caCertFilename","requirements_file","client_key","client_cert","ca_cert","uploadedRequirementFilename","uploadedClientKeyFilename","uploadedClientCertFilename","uploadedCaCertFilename","remoteType","getRemoteType","requiredFields","disabledFields","concat","showModal","closeModal","isValid","saveRemote","renderForm","updateRemote","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","FileUpload","filename","hideDefaultPreview","FileSaver","Blob","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","isChecked","tls_validation","download_concurrency","isInteger","rate_limit","host","fieldName","newFields","is_set","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","user","r","updated_at","renderStatus","model_permissions","change_remote","getConfigureOrSyncButton","editRemote","errorMessage","configButton","syncButton","syncRemote","distributions","selectExpanded","InputGroupText","newRepo","getRepoBasePath","setRepo","getRepoName","basePath","repoName","ResourcesForm","resources","updateResources","Sort","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","undefined","ariaLabel","Dropdown","renderToggle","dropdownItems","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","split","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","content_name","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","T","findIndex","readOnly","Toolbar","sortOptions","searchPlaceholder","extraInputs","submitKeywords","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","onSubmit","preventDefault","onSave","UserForm","newUser","updateUser","updateUserFieldByName","passwordConfirm","saveUser","onCancel","isNewUser","isMe","superuserLabel","getSuperUserHelperText","Switch","is_superuser","labelOff","isPassSame","onSelectGroup","clearGroups","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","change_containernamespace","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","Community","Published","registry","asyncComponent","importComponent","C","Component","EditNamespace","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","CertificationDashboard","Repository","InsightsRoute","rootClass","rest","root","document","getElementById","removeAttribute","classList","setAttribute","propTypes","PropTypes","Routes","childProps","location","pathname","render","some","DEFAULT_REPO","App","activeUser","matchPath","init","identifyApp","appNav","on","domEvent","basename","history","navId","prevProps","isRepoURL","setUser","setActiveUser","withRouter","connect","release","pathName","shift","ReactDOM","store","middleware","ReducerRegistry","promise","getStore","strings","args","pop","mark","localStorage","test_l10n","parts","namespaceBreadcrumb","total_count","role","plugin","mapErrorMessages","distributionPath","origin","mapper","values","writeOnlyFields","el","newObj","truncateSha","sha","splitSha","paramString","numericTypes","URLSearchParams","forEach","appendParam","param","encodeURIComponent","callback","search","getQueryString","getReduced","deleteParam","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","definition","defineProperty","enumerable","f","chunkId","reduce","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","done","script","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","fullhref","existingLinkTags","dataHref","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","createStylesheet","miniCss","installedChunks","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}