{"version":3,"file":"js/7910.8aec97daf98d51a123ba.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-dependencies.tsx"],"sourcesContent":["import {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collections?: CollectionVersionSearch[];\n  collectionsCount?: number;\n  collection?: CollectionVersionSearch;\n  content?: CollectionVersionContentType;\n  alerts?: AlertType[];\n  distroBasePath?: string;\n}\n\n// Caches the collection data when matching, prevents redundant fetches between collection detail tabs\nconst cache = {\n  repository: null,\n  namespace: null,\n  name: null,\n  version: null,\n\n  collections: [],\n  collectionsCount: 0,\n  collection: null,\n  content: null,\n};\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  setCollection,\n  stateParams,\n}) {\n  const { version } = stateParams;\n  const { collection: name, namespace, repo } = matchParams;\n\n  // try loading from cache\n  if (\n    !forceReload &&\n    cache.repository === repo &&\n    cache.namespace === namespace &&\n    cache.name === name &&\n    cache.version === version\n  ) {\n    setCollection(\n      cache.collections,\n      cache.collection,\n      cache.content,\n      cache.collectionsCount,\n    );\n    return;\n  }\n\n  const requestParams = {\n    ...(repo ? { repository_name: repo } : {}),\n    namespace,\n    name,\n  };\n\n  const currentVersion = (\n    version\n      ? CollectionVersionAPI.list({ ...requestParams, version })\n      : CollectionVersionAPI.list({ ...requestParams, is_highest: true })\n  ).then(({ data }) => data.data[0]);\n\n  const content = currentVersion\n    .then((collection) =>\n      CollectionAPI.getContent(\n        namespace,\n        name,\n        collection.collection_version.version,\n      ),\n    )\n    .then(({ data: { results } }) => results[0])\n    .catch(() => navigate(formatPath(Paths.notFound)));\n\n  // Note: this only provides the first page - containing the latest version, and all items for the version *selector*,\n  // but the version *modal* is using a separate call, in CollectionHeader updatePaginationParams\n  const versions = CollectionVersionAPI.list({\n    ...requestParams,\n    order_by: '-version',\n    page_size: 10,\n  })\n    .then(({ data }) => data)\n    .catch(() => ({ data: [], meta: { count: 0 } }));\n\n  return Promise.all([versions, currentVersion, content]).then(\n    ([\n      {\n        data: collections,\n        meta: { count: collectionsCount },\n      },\n      collection,\n      content,\n    ]) => {\n      setCollection(collections, collection, content, collectionsCount);\n\n      cache.repository = repo;\n      cache.namespace = namespace;\n      cache.name = name;\n      cache.version = version;\n\n      cache.collections = collections;\n      cache.collectionsCount = collectionsCount;\n      cache.collection = collection;\n      cache.content = content;\n    },\n  );\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionUsedByDependencies,\n  CollectionVersion,\n  CollectionVersionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  CollectionDependenciesList,\n  CollectionHeader,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport { IBaseCollectionState, loadCollection } from './base';\nimport './collection-dependencies.scss';\n\ninterface IState extends IBaseCollectionState {\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n}\n\nclass CollectionDependencies extends React.Component<RouteProps, IState> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n  private cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      collections: [],\n      collectionsCount: 0,\n      collection: null,\n      content: null,\n      dependencies_repos: [],\n      params: params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      collections,\n      collectionsCount,\n      collection,\n      content,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n      alerts,\n    } = this.state;\n\n    if (collections.length <= 0) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const { collection_version: version, repository } = collection;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceDetail, {\n          namespace: version.namespace,\n        }),\n        name: version.namespace,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: version.namespace,\n          collection: version.name,\n          repo: repository.name,\n        }),\n        name: version.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(version.dependencies).length;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collections={collections}\n          collectionsCount={collectionsCount}\n          collection={collection}\n          content={content}\n          params={headerParams}\n          updateParams={(p) => {\n            this.updateParams(this.combineParams(this.state.params, p), () =>\n              this.loadData(true),\n            );\n          }}\n          breadcrumbs={breadcrumbs}\n          activeTab='dependencies'\n          repo={repository.name}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              {noDependencies &&\n              !usedByDependenciesCount &&\n              !filterIsSet(params, ['name__icontains']) ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <>\n                  <p>{t`This collections requires the following collections for use`}</p>\n                  {noDependencies ? (\n                    <EmptyStateNoData\n                      title={t`No dependencies`}\n                      description={t`Collection does not have any dependencies.`}\n                    />\n                  ) : (\n                    <CollectionDependenciesList\n                      collection={this.state.collection}\n                      dependencies_repos={this.state.dependencies_repos}\n                    />\n                  )}\n                  <p>{t`This collection is being used by`}</p>\n                  <CollectionUsedbyDependenciesList\n                    usedByDependencies={usedByDependencies}\n                    itemCount={usedByDependenciesCount}\n                    params={dependenciesParams}\n                    usedByDependenciesLoading={usedByDependenciesLoading}\n                    updateParams={(p) =>\n                      this.updateParams(\n                        this.combineParams(this.state.params, p),\n                        () => this.loadUsedByDependencies(),\n                      )\n                    }\n                  />\n                </>\n              )}\n            </div>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies = this.state.collection.collection_version.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace: namespace,\n        version_range: version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        const [collection] = result.data.data;\n\n        dependency_repo.repo = collection.repository.name;\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      if (this.cancelToken) {\n        this.cancelToken.cancel('request-canceled');\n      }\n\n      this.cancelToken = CollectionAPI.getCancelToken();\n\n      const { name, namespace } = this.state.collection.collection_version;\n\n      // We have to use CollectionAPI here for used by dependencies\n      // because cross repo collection search doesn't allow `name__icontains` filter\n      CollectionAPI.getUsedDependenciesByCollection(\n        namespace,\n        name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n        this.cancelToken,\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch(({ response, message }) => {\n          // console.log(response, message);\n          if (message !== 'request-canceled') {\n            const { status, statusText } = response;\n            this.setState({\n              usedByDependenciesLoading: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Dependent collections could not be displayed.`,\n                  description: errorMessage(status, statusText),\n                },\n              ],\n            });\n          }\n        })\n        .finally(() => {\n          this.cancelToken = undefined;\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      setCollection: (collections, collection, content, collectionsCount) =>\n        this.setState(\n          { collections, collection, content, collectionsCount },\n          callback,\n        ),\n      stateParams: this.state.params.version\n        ? { version: this.state.params.version }\n        : {},\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private combineParams(...params) {\n    return params.reduce((acc, cur) => ({ ...acc, ...cur }));\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n\nCollectionDependencies.contextType = AppContext;\n"],"names":["cache","repository","namespace","name","version","collections","collectionsCount","collection","content","loadCollection","_ref","forceReload","matchParams","navigate","setCollection","stateParams","repo","requestParams","_objectSpread","repository_name","currentVersion","CollectionVersionAPI","list","is_highest","then","_ref2","data","CollectionAPI","getContent","collection_version","_ref3","results","formatPath","Paths","notFound","versions","order_by","page_size","_ref4","meta","count","Promise","all","_ref5","_ref6","_slicedToArray","_ref6$","CollectionDependencies","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","params","ParamHelper","parseParamString","location","search","state","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","alerts","_createClass","key","value","this","loadData","_this2","_this$state","length","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","namespaceDetail","collectionByRepo","i18n","_","id","headerParams","getReduced","ignoredParams","dependenciesParams","noDependencies","Object","keys","dependencies","AlertList","closeAlert","i","CollectionHeader","reload","updateParams","p","combineParams","activeTab","Main","className","filterIsSet","EmptyStateNoData","title","description","CollectionDependenciesList","CollectionUsedbyDependenciesList","itemCount","loadUsedByDependencies","_this3","arguments","undefined","loadCollectionsDependenciesRepos","callback","_this4","promises","forEach","dependency","_dependency$split","split","_dependency$split2","dependency_repo","version_range","path","push","promise","loadDependencyRepo","setState","result","_this5","cancelToken","cancel","getCancelToken","_this5$state$collecti","getUsedDependenciesByCollection","response","message","status","statusText","concat","_toConsumableArray","variant","errorMessage","_this6","routeParams","get","updateParamsMixin","_len","Array","_key","reduce","acc","cur","closeAlertMixin","v","match","withRouter","contextType","AppContext"],"sourceRoot":""}