{"version":3,"file":"js/910.22ec0e6ac0d42d2547c0.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-dependencies.tsx"],"sourcesContent":["import { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collection: CollectionDetailType;\n  alerts?: AlertType[];\n}\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  selectedRepo,\n  setCollection,\n  stateParams,\n}) {\n  CollectionAPI.getCached(\n    matchParams['namespace'],\n    matchParams['collection'],\n    selectedRepo,\n    { ...stateParams, include_related: 'my_permissions' },\n    forceReload,\n  )\n    .then((result) => {\n      return CollectionAPI.list(\n        {\n          name: matchParams['collection'],\n        },\n        selectedRepo,\n      ).then((collections) => {\n        result.deprecated = collections.data.data[0].deprecated;\n        setCollection(result);\n      });\n    })\n    .catch(() => {\n      navigate(formatPath(Paths.notFound));\n    });\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionUsedByDependencies,\n  CollectionVersion,\n  CollectionVersionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  CollectionDependenciesList,\n  CollectionHeader,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport { loadCollection } from './base';\nimport './collection-dependencies.scss';\n\ninterface IState {\n  collection: CollectionDetailType;\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n  alerts: AlertType[];\n}\n\nclass CollectionDependencies extends React.Component<RouteProps, IState> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n  private cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      collection: undefined,\n      dependencies_repos: [],\n      params: params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n      alerts,\n    } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(\n      collection.latest_version.metadata.dependencies,\n    ).length;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collection={collection}\n          params={headerParams}\n          updateParams={(p) => {\n            this.updateParams(this.combineParams(this.state.params, p), () =>\n              this.loadData(true),\n            );\n          }}\n          breadcrumbs={breadcrumbs}\n          activeTab='dependencies'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              {noDependencies &&\n              !usedByDependenciesCount &&\n              !filterIsSet(params, ['name__icontains']) ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <>\n                  <p>{t`This collections requires the following collections for use`}</p>\n                  {noDependencies ? (\n                    <EmptyStateNoData\n                      title={t`No dependencies`}\n                      description={t`Collection does not have any dependencies.`}\n                    />\n                  ) : (\n                    <CollectionDependenciesList\n                      collection={this.state.collection}\n                      dependencies_repos={this.state.dependencies_repos}\n                    />\n                  )}\n                  <p>{t`This collection is being used by`}</p>\n                  <CollectionUsedbyDependenciesList\n                    repo={this.context.selectedRepo}\n                    usedByDependencies={usedByDependencies}\n                    itemCount={usedByDependenciesCount}\n                    params={dependenciesParams}\n                    usedByDependenciesLoading={usedByDependenciesLoading}\n                    updateParams={(p) =>\n                      this.updateParams(\n                        this.combineParams(this.state.params, p),\n                        () => this.loadUsedByDependencies(),\n                      )\n                    }\n                  />\n                </>\n              )}\n            </div>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies =\n      this.state.collection.latest_version.metadata.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace: namespace,\n        version_range: version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        dependency_repo.repo = result.data.data[0].repository_list[0];\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      if (this.cancelToken) {\n        this.cancelToken.cancel('request-canceled');\n      }\n\n      this.cancelToken = CollectionAPI.getCancelToken();\n\n      CollectionAPI.getUsedDependenciesByCollection(\n        this.state.collection.namespace.name,\n        this.state.collection.name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n        this.cancelToken,\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch((err) => {\n          const { status, statusText } = err.response;\n          if (err?.message !== 'request-canceled') {\n            this.setState({\n              usedByDependenciesLoading: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Dependent collections could not be displayed.`,\n                  description: errorMessage(status, statusText),\n                },\n              ],\n            });\n          }\n        })\n        .finally(() => {\n          this.cancelToken = undefined;\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      selectedRepo: this.context.selectedRepo,\n      setCollection: (collection) => this.setState({ collection }, callback),\n      stateParams: this.state.params.version\n        ? { version: this.state.params.version }\n        : {},\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private combineParams(...params) {\n    return params.reduce((acc, cur) => ({ ...acc, ...cur }));\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n\nCollectionDependencies.contextType = AppContext;\n"],"names":["loadCollection","forceReload","matchParams","navigate","selectedRepo","setCollection","stateParams","CollectionAPI","include_related","then","result","name","collections","deprecated","data","formatPath","Paths","CollectionDependencies","props","params","ParamHelper","location","search","state","collection","undefined","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","alerts","this","loadData","breadcrumbs","namespaceBreadcrumb","url","namespace","repo","context","headerParams","ignoredParams","dependenciesParams","noDependencies","Object","keys","latest_version","metadata","dependencies","length","closeAlert","i","reload","updateParams","p","combineParams","activeTab","className","filterIsSet","title","description","itemCount","loadUsedByDependencies","loadCollectionsDependenciesRepos","callback","promises","forEach","dependency","split","dependency_repo","version_range","path","push","promise","loadDependencyRepo","Promise","all","setState","CollectionVersionAPI","page_size","repository_list","cancelToken","cancel","meta","count","err","response","status","statusText","message","variant","errorMessage","routeParams","version","reduce","acc","cur","closeAlertMixin","v","match","React","withRouter","contextType","AppContext"],"sourceRoot":""}