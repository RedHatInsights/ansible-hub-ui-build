{"version":3,"file":"js/376.1664436462283.b7614b97e76c3b57e6bc.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/store/index.js","webpack:///./src/loaders/insights/Routes.tsx","webpack:///./src/loaders/insights/insights-loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/l10n.ts","webpack:///./src/app-entry.js","webpack:///./src/utilities/getBaseName.js","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/about-modal/about-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/delete-modal/delete-execution-environment-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/owners-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-header.tsx","webpack:///./src/components/rbac/role-permissions.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/constants.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: (params) => ParamHelper.getQueryString(params),\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: string,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = this.getUIPath('execution-environments/repositories/');\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/namespaces/');\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n}\n\nexport const Repositories = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (!registry) {\n    registry = new ReducerRegistry({}, [promise, ...middleware]);\n  }\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paths } from 'src/paths';\nimport { LoadingPageWithHeader } from 'src/components';\n\nconst EditNamespace = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/edit-namespace/edit-namespace'\n    ),\n);\n\nconst CollectionDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-detail'\n    ),\n);\n\nconst CollectionContent = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-content'\n    ),\n);\n\nconst CollectionDocs = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-docs'\n    ),\n);\n\nconst CollectionImportLog = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-import-log'\n    ),\n);\n\nconst CollectionDependencies = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-dependencies'\n    ),\n);\n\nconst NotFound = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"not_found\" */\n      '../../containers/not-found/not-found'\n    ),\n);\n\nconst MyNamespaces = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_list\" */\n      '../../containers/namespace-list/my-namespaces'\n    ),\n);\n\nconst ManageNamespace = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/namespace-detail/namespace-detail'\n    ),\n);\n\nconst PartnerDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/namespace-detail/namespace-detail'\n    ),\n);\n\nconst Partners = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_list\" */\n      '../../containers/namespace-list/' + NAMESPACE_TERM\n    ),\n);\n\nconst MyImports = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"my_imports\" */\n      '../../containers/my-imports/my-imports'\n    ),\n);\n\nconst Search = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"search\" */\n      '../../containers/search/search'\n    ),\n);\n\nconst TokenPage = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/token/token-insights'\n    ),\n);\n\nconst TaskListView = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/task-management/task-list-view'\n    ),\n);\n\nconst TaskDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/task-management/task_detail'\n    ),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/certification-dashboard/certification-dashboard'\n    ),\n);\n\nconst Repository = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"repository-list\" */\n      '../../containers/repositories/repository-list'\n    ),\n);\n\nconst SignatureKeysList = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"signature-keys-list\" */\n      '../../containers/signature-keys/list'\n    ),\n);\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n  return (\n    <Suspense fallback={LoadingPageWithHeader}>\n      <Switch>\n        <Route path={Paths.repositories} component={Repository} />\n        <Route\n          path={Paths.approvalDashboard}\n          component={CertificationDashboard}\n        />\n        <Route path={Paths.notFound} component={NotFound} />\n        <Route path={Paths.token} component={TokenPage} />\n        <Route path={Paths[NAMESPACE_TERM]} component={Partners} />\n        <Route path={Paths.editNamespace} component={EditNamespace} />\n        <Route path={Paths.myCollections} component={ManageNamespace} />\n        <Route path={Paths.myCollectionsByRepo} component={ManageNamespace} />\n        <Route path={Paths.myNamespaces} component={MyNamespaces} />\n        <Route path={Paths.signatureKeys} component={SignatureKeysList} />\n        <Route path={Paths.taskList} component={TaskListView} />\n        <Route path={Paths.taskDetail} component={TaskDetail} />\n        <Route\n          path={Paths.collectionDocsPageByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionDocsIndexByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentDocsByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentListByRepo}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLogByRepo}\n          component={CollectionImportLog}\n        />\n        <Route\n          path={Paths.collectionDependenciesByRepo}\n          component={CollectionDependencies}\n        />\n        <Route path={Paths.collectionByRepo} component={CollectionDetail} />\n        <Route path={Paths.namespaceByRepo} component={PartnerDetail} />\n        <Route path={Paths.searchByRepo} component={Search} />\n        <Route path={Paths.collectionDocsPage} component={CollectionDocs} />\n        <Route path={Paths.collectionDocsIndex} component={CollectionDocs} />\n        <Route path={Paths.collectionContentDocs} component={CollectionDocs} />\n        <Route\n          path={Paths.collectionContentList}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLog}\n          component={CollectionImportLog}\n        />\n        <Route path={Paths.myImports} component={MyImports} />\n        <Route path={Paths.collection} component={CollectionDetail} />\n        <Route path={Paths.namespace} component={PartnerDetail} />\n        <Route path={Paths.search} component={Search} />\n        <Route>\n          <Redirect push to={Paths.notFound} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n};\n","import { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { RouteComponentProps, withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Alert } from '@patternfly/react-core';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { Paths } from 'src/paths';\nimport { AlertType, UIVersion } from 'src/components';\n\nconst DEFAULT_REPO = 'published';\n\ninterface IProps {\n  basename: string;\n  history: RouteComponentProps['history'];\n  location: RouteComponentProps['location'];\n  match: RouteComponentProps['match'];\n}\n\ninterface IState {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  selectedRepo: string;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      alerts: [],\n      featureFlags: null,\n      selectedRepo: DEFAULT_REPO,\n      settings: null,\n      user: null,\n    };\n  }\n\n  appNav: () => void;\n\n  componentDidMount() {\n    window.insights.chrome.init();\n    window.insights.chrome.identifyApp('automation-hub', APPLICATION_NAME);\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = window.insights.chrome.on('APP_NAVIGATION', (event) => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent?.href) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, no trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename.replace(/^\\/beta\\//, '/');\n\n      // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n      // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n      const href = event.domEvent.href.replace(basename, '') || '/';\n\n      this.props.history.push(href);\n    });\n\n    loadContext().then((data) => this.setState(data));\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate() {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user) {\n      return null;\n    }\n\n    return (\n      <AppContext.Provider\n        value={{\n          alerts: this.state.alerts,\n          featureFlags: this.state.featureFlags,\n          selectedRepo: this.state.selectedRepo,\n          setAlerts: this.setAlerts,\n          setRepo: this.setRepo,\n          setUser: this.setUser,\n          settings: this.state.settings,\n          user: this.state.user,\n        }}\n      >\n        <Alert\n          isInline\n          variant='info'\n          title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n        />\n        <Routes childProps={this.props} />\n        <UIVersion />\n      </AppContext.Provider>\n    );\n  }\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  setAlerts = (alerts) => {\n    this.setState({ alerts });\n  };\n\n  isRepoURL = (location) => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n\n  setRepo = (_repo: string) => {\n    throw new Error('RepoSelector & setRepo only available in standalone');\n  };\n}\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  UserType,\n  SettingsType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags?._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// Accept-Language\nexport const userLanguage =\n  navigator.languages\n    .map((lang) => lang.replace(/[-_].*/, ''))\n    .filter((lang) => availableLanguages.includes(lang))[0] || 'en';\n\nasync function activate(locale: string) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (window.localStorage.test_l10n === 'true') {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(locale);\n}\n\nactivate(userLanguage);\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { I18nProvider } from '@lingui/react';\nimport { i18n } from '@lingui/core';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport getBaseName from './utilities/getBaseName';\nimport 'src/l10n';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst basename = getBaseName(window.location.pathname);\n\nconst AnsibleHub = () => (\n  <Provider store={init().getStore()}>\n    <Router basename={basename}>\n      <I18nProvider i18n={i18n}>\n        <App basename={basename} />\n      </I18nProvider>\n    </Router>\n  </Provider>\n);\n\nexport default AnsibleHub;\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport class AlertList extends React.Component<IProps> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n        data-cy='AlertList'\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams({\n                  ...ParamHelper.deleteParam(params, key, v),\n                  page: 1,\n                })\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  AboutModal,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from '@patternfly/react-core';\nimport Logo from 'src/../static/images/logo_large.svg';\nimport { ApplicationInfoAPI, UserType } from 'src/api';\nimport { detect } from 'detect-browser';\n\ninterface IProps {\n  isOpen: boolean;\n  trademark: string;\n  brandImageSrc: string;\n  onClose: () => void;\n  brandImageAlt: string;\n  productName: string;\n  user: UserType;\n  userName: string;\n}\n\ninterface IState {\n  applicationInfo: {\n    galaxy_ng_commit: string;\n    pulp_ansible_version: string;\n    server_version: string;\n  };\n}\n\nexport class AboutModalWindow extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicationInfo: {\n        galaxy_ng_commit: '',\n        pulp_ansible_version: '',\n        server_version: '',\n      },\n    };\n  }\n\n  componentDidMount() {\n    ApplicationInfoAPI.get().then((result) => {\n      this.setState({\n        applicationInfo: {\n          galaxy_ng_commit: result.data.galaxy_ng_commit,\n          pulp_ansible_version: result.data.pulp_ansible_version,\n          server_version: result.data.server_version,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { isOpen, onClose, brandImageAlt, productName, user, userName } =\n      this.props;\n    const browser = detect();\n\n    const Label = ({ children }) => (\n      <TextListItem component={TextListItemVariants.dt}>\n        {children}\n      </TextListItem>\n    );\n    const Value = ({ children }) => (\n      <TextListItem component={TextListItemVariants.dd}>\n        {children}\n      </TextListItem>\n    );\n\n    return (\n      <AboutModal\n        isOpen={isOpen}\n        trademark=''\n        brandImageSrc={Logo}\n        onClose={onClose}\n        brandImageAlt={brandImageAlt}\n        productName={productName}\n      >\n        <TextContent>\n          <TextList component={TextListVariants.dl}>\n            <Label>{t`Server version`}</Label>\n            <Value>\n              {this.state.applicationInfo.server_version}\n              <br />\n              {this.state.applicationInfo.galaxy_ng_commit}\n            </Value>\n\n            <Label>{t`Pulp Ansible Version`}</Label>\n            <Value>{this.state.applicationInfo.pulp_ansible_version}</Value>\n\n            <Label>{t`UI Version`}</Label>\n            <Value>{UI_COMMIT_HASH}</Value>\n\n            <Label>{t`Username`}</Label>\n            <Value>{userName}</Value>\n\n            <Label>{t`User Groups`}</Label>\n            <Value>{user.groups.map((group) => group.name).join()}</Value>\n\n            <Label>{t`Browser Version`}</Label>\n            <Value>{browser.name + ' ' + browser.version}</Value>\n\n            <Label>{t`Browser OS`}</Label>\n            <Value>{browser.os}</Value>\n          </TextList>\n        </TextContent>\n      </AboutModal>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <span data-cy='view_type_card'>\n          <ThLargeIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'card' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n            }\n          />\n        </span>\n        <span data-cy='view_type_list'>\n          <ListIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'list' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n            }\n          />\n        </span>\n      </div>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      className,\n      footer,\n      repo,\n      sign_state,\n      menu,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    return (\n      <Card className={cx('hub-c-card-collection-container ', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            flexGrow\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n          <SignatureBadge isCompact signState={sign_state} />\n          {menu}\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{t`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <CollectionNumericLabel count={count} newline type={type} />\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport { EmptyStateCustom } from 'src/components';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    const toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (const c of contents) {\n      summary[c.content_type] ||= 0;\n\n      const keywordMatch = c.name.match(keywords);\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n      // count only items matching keyword\n      if (keywordMatch) {\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n\n      // show only items matching keyword + type\n      if (keywordMatch && typeMatch) {\n        toShow.push(c);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label={t`find-content`}\n                  placeholder={t`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{t`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'hub-c-toolbar__item-selected-item': key === showing,\n                    'hub-c-toolbar__item-type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='hub-c-table-content pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{t`Name`}</th>\n              <th>{t`Type`}</th>\n              <th>{t`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {summary.all <= 0 &&\n          this.context.selectedRepo === 'community' &&\n          this.renderCommunityWarningMessage()}\n      </div>\n    );\n  }\n\n  private renderCommunityWarningMessage() {\n    return (\n      <EmptyStateCustom\n        title={t`Warning`}\n        description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n        icon={ExclamationTriangleIcon}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { Spinner } from '@patternfly/react-core';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\ninterface IState {\n  collectionCount: number;\n  alerts: AlertType[];\n  loading: boolean;\n}\n\nexport class CollectionCount extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collectionCount: null,\n      alerts: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getCollectionCount(this.props.distributionPath);\n  }\n\n  render() {\n    const { collectionCount, loading } = this.state;\n    return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n  }\n\n  private getCollectionCount(repo) {\n    const { distributionPath } = this.props;\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        this.setState({ collectionCount: count, loading: false });\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n        const { status, statusText } = err.response;\n        this.addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n        );\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport React, { FC } from 'react';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n\n  if (!display_signatures) {\n    return null;\n  }\n\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { errorMessage, DeleteCollectionUtils } from 'src/utilities';\nimport './header.scss';\n\nimport { Redirect } from 'react-router-dom';\n\nimport * as moment from 'moment';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  List,\n  ListItem,\n  Modal,\n  Alert,\n  Text,\n  Button,\n  DropdownItem,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  BreadcrumbType,\n  LinkTabs,\n  Logo,\n  RepoSelector,\n  Pagination,\n  AlertList,\n  AlertType,\n  closeAlertMixin,\n  StatefulDropdown,\n  SignSingleCertificateModal,\n  SignAllCertificatesModal,\n  UploadSingCertificateModal,\n  ImportModal,\n  DeleteCollectionModal,\n} from 'src/components';\n\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  SignCollectionAPI,\n  CollectionListType,\n  MyNamespaceAPI,\n  CollectionVersion,\n  Repositories,\n  CertificateUploadAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  waitForTask,\n  canSign as canSignNS,\n  parsePulpIDFromURL,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { Constants } from 'src/constants';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context?.featureFlags || {};\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Redirect push to={redirect} />;\n    }\n\n    const canSign = canSignNS(this.context, namespace);\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          this.context.user.model_permissions.delete_collection,\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      this.context.user.model_permissions.delete_collection && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={collectionVersion}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceByRepo, {\n                      repo: this.context.selectedRepo,\n                      namespace: deleteCollection.namespace.name,\n                    }),\n                    selectedRepo: this.context.selectedRepo,\n                    addAlert: (alert) =>\n                      this.context.setAlerts([...this.state.alerts, alert]),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={Paths.searchByRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              <SignatureBadge\n                isCompact\n                signState={collection.latest_version.sign_state}\n              />\n            </div>\n          }\n          pageControls={\n            dropdownItems.length > 0 ? (\n              <div data-cy='kebab-toggle'>\n                <StatefulDropdown items={dropdownItems} />\n              </div>\n            ) : null\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import React, { FC, useState } from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { t } from '@lingui/macro';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem: FC<Props> = ({ version }) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-info.scss';\nimport { errorMessage } from 'src/utilities';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  Button,\n  Alert,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag, ClipboardCopy, LoginLink } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: React.RefObject<HTMLAnchorElement>;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const { name, latest_version, namespace, params } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{t`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>{latest_version.metadata.license}</SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Installing collections with ansible-galaxy is\n                    only supported in ansible 2.9+\n                  </Trans>\n                </div>\n                {this.context.user.is_anonymous &&\n                !this.context.settings\n                  .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                  <Alert\n                    className={'hub-collection-download-alert'}\n                    isInline\n                    variant='warning'\n                    title={\n                      <React.Fragment>\n                        {t`You have to be logged in to be able to download the tarball.`}{' '}\n                        <LoginLink />\n                      </React.Fragment>\n                    }\n                  />\n                ) : (\n                  <div>\n                    <a\n                      ref={this.downloadLinkRef}\n                      style={{ display: 'none' }}\n                    ></a>\n                    <Button\n                      className='download-button'\n                      variant='link'\n                      data-cy='download-collection-tarball-button'\n                      icon={<DownloadIcon />}\n                      onClick={() =>\n                        this.download(\n                          this.context.selectedRepo,\n                          namespace,\n                          name,\n                          latest_version,\n                        )\n                      }\n                    >\n                      {t`Download tarball`}\n                    </Button>\n                  </div>\n                )}\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <DownloadSignatureGridItem version={latest_version} />\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {t`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled data-cy='ansible-requirement'>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='hub-readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='hub-fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {t`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    )\n      .then((downloadURL: string) => {\n        // By getting a reference to a hidden <a> tag, setting the href and\n        // programmatically clicking it, we can hold off on making the api\n        // calls to get the download URL until it's actually needed. Clicking\n        // the <a> tag also gets around all the problems using a popup with\n        // window.open() causes.\n        this.downloadLinkRef.current.href = downloadURL;\n        this.downloadLinkRef.current.click();\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.props.addAlert(\n          'danger',\n          t`Collection \"${name}\" could not be downloaded.`,\n          errorMessage(status, statusText),\n        );\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\ninterface IState {\n  inputText: string;\n}\n\nexport class CollectionFilter extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: props.params.keywords || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.keywords !== this.props.params['keywords']) {\n      this.setState({ inputText: this.props.params['keywords'] || '' });\n    }\n  }\n\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n    const { display_signatures } = this.context?.featureFlags || {};\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as const,\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n      display_signatures && {\n        id: 'sign_state',\n        title: t`Sign state`,\n        inputType: 'select' as const,\n        options: [\n          { id: 'signed', title: t`Signed` },\n          { id: 'unsigned', title: t`Unsigned` },\n        ],\n      },\n    ].filter(Boolean);\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup style={{ marginLeft: 0 }}>\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={this.state.inputText}\n                onChange={(text) => this.setState({ inputText: text })}\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  niceNames={{\n                    sign_state: t`sign state`,\n                    tags: t`tags`,\n                    keywords: t`keywords`,\n                  }}\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './list.scss';\n\nimport { DataList } from '@patternfly/react-core';\nimport { CollectionListType } from 'src/api';\n\nimport {\n  CollectionListItem,\n  Pagination,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  repo?: string;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.props.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n        <Pagination\n          params={params}\n          updateParams={(p) => updateParams(p)}\n          count={itemCount}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  CollectionNumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps> {\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n      sign_state,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n            data-cy='CollectionList-name'\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='hub-entry'>{latest_version.metadata.description}</div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          {Object.keys(contentSummary.contents).map((type) => (\n            <div key={type}>\n              <CollectionNumericLabel\n                count={contentSummary.contents[type]}\n                type={type}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='hub-entry'>{controls}</div> : null}\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>v{latest_version.version}</div>\n        <SignatureBadge className='hub-entry' signState={sign_state} />\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='CollectionListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\n\nimport { EmptyStateNoData, HelperText } from 'src/components';\n\nimport { CollectionDetailType, CollectionVersion } from 'src/api';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  dependencies_repos: (CollectionVersion & { path?: string })[];\n}\n\nexport class CollectionDependenciesList extends React.Component<IProps> {\n  render() {\n    const { collection, dependencies_repos } = this.props;\n    const { dependencies } = collection.latest_version.metadata;\n\n    if (!Object.keys(dependencies).length) {\n      return (\n        <EmptyStateNoData\n          title={t`No dependencies`}\n          description={t`Collection does not have dependencies.`}\n        />\n      );\n    }\n\n    return (\n      <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n        {dependencies_repos.map((dependency, i) => (\n          <>\n            {dependency.path && (\n              <ListItem key={i} style={{ marginRight: '70px' }}>\n                <Link to={dependency.path}>{dependency.name}</Link>\n              </ListItem>\n            )}\n\n            {!dependency.path && (\n              <ListItem key={i} style={{ marginRight: '70px' }}>\n                {dependency.name}\n                <HelperText\n                  content={t`Collection was not found in the system. You must upload it.`}\n                />\n              </ListItem>\n            )}\n          </>\n        ))}\n      </List>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CollectionUsedByDependencies } from 'src/api';\n\nimport {\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup,\n  SearchInput,\n} from '@patternfly/react-core';\n\nimport {\n  Pagination,\n  EmptyStateNoData,\n  EmptyStateFilter,\n  Sort,\n  LoadingPageSpinner,\n} from 'src/components';\n\nimport { ParamHelper, filterIsSet } from 'src/utilities';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionUsedbyDependenciesList extends React.Component<IProps> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  render() {\n    const {\n      params,\n      usedByDependencies,\n      itemCount,\n      updateParams,\n      usedByDependenciesLoading,\n    } = this.props;\n\n    if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n      return (\n        <EmptyStateNoData\n          title={t`Not required for use by other collections`}\n          description={t`Collection is not being used by any collection.`}\n        />\n      );\n    }\n\n    return (\n      <>\n        <div className='hub-toolbar'>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.name__icontains || ''}\n                  onChange={(val) =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', val),\n                    )\n                  }\n                  onClear={() =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', ''),\n                    )\n                  }\n                  aria-label='filter-collection-name'\n                  placeholder={t`Filter by name`}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Sort\n                  options={[\n                    { title: t`Collection`, id: 'collection', type: 'alpha' },\n                  ]}\n                  params={params}\n                  updateParams={({ sort }) =>\n                    updateParams(ParamHelper.setParam(params, 'sort', sort))\n                  }\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n          {!!itemCount && (\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n              isTop\n            />\n          )}\n        </div>\n\n        {usedByDependenciesLoading ? (\n          <LoadingPageSpinner />\n        ) : (\n          <>\n            {!itemCount ? (\n              <EmptyStateFilter />\n            ) : (\n              <>\n                <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                  <tbody>\n                    {usedByDependencies.map(\n                      ({ name, namespace, version, repository_list }, i) => (\n                        <tr key={i}>\n                          <td>\n                            <Link\n                              to={formatPath(\n                                Paths.collectionByRepo,\n                                {\n                                  collection: name,\n                                  namespace,\n                                  repo: repository_list[0],\n                                },\n                                ParamHelper.getReduced(\n                                  { version },\n                                  this.ignoredParams,\n                                ),\n                              )}\n                            >\n                              {name} v{version}\n                            </Link>\n                          </td>\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n                <Pagination\n                  params={params}\n                  updateParams={(params) => updateParams(params)}\n                  count={itemCount}\n                />\n              </>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, strgin | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length != 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, children, deleteAction, isDisabled, title, spinner } =\n      this.props;\n\n    return (\n      <Modal\n        actions={[\n          <div data-cy='delete-button' key='delete'>\n            <Button\n              key='delete'\n              onClick={deleteAction}\n              variant='danger'\n              isDisabled={isDisabled}\n            >\n              {t`Delete`}\n              {spinner && <Spinner size='sm'></Spinner>}\n            </Button>\n          </div>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n        data-cy='modal_checkbox'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { ExecutionEnvironmentAPI } from 'src/api';\nimport { waitForTask } from 'src/utilities';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\n\nimport { Checkbox, Text } from '@patternfly/react-core';\n\ninterface IState {\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\ninterface IProps {\n  closeAction: () => void;\n  selectedItem: string;\n  addAlert: (message, variant, description?) => void;\n  afterDelete: () => void;\n}\n\nexport class DeleteExecutionEnvironmentModal extends React.Component<\n  IProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  render() {\n    const { selectedItem, closeAction } = this.props;\n    const { isDeletionPending, confirmDelete } = this.state;\n\n    return (\n      <DeleteModal\n        spinner={isDeletionPending}\n        title={t`Delete container?`}\n        cancelAction={() => closeAction()}\n        deleteAction={() => this.deleteContainer(selectedItem)}\n        isDisabled={!confirmDelete || isDeletionPending}\n      >\n        <Text className='delete-container-modal-message'>\n          <Trans>\n            Deleting <b>{selectedItem}</b> and its data will be lost.\n          </Trans>\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={(value) => this.setState({ confirmDelete: value })}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    );\n  }\n\n  deleteContainer(selectedItem: string) {\n    const { addAlert, closeAction, afterDelete } = this.props;\n    this.setState({ isDeletionPending: true }, () =>\n      ExecutionEnvironmentAPI.deleteExecutionEnvironment(selectedItem)\n        .then((result) => {\n          const taskId = result.data.task.split('tasks/')[1].replace('/', '');\n          waitForTask(taskId).then(() => {\n            this.setState({\n              confirmDelete: false,\n              isDeletionPending: false,\n            });\n            closeAction();\n            addAlert(\n              <Trans>\n                Execution environment &quot;{selectedItem}&quot; has been\n                successfully deleted.\n              </Trans>,\n              'success',\n            );\n            afterDelete();\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            confirmDelete: false,\n            isDeletionPending: false,\n          });\n          addAlert(\n            t`Execution environment \"${selectedItem}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n          closeAction();\n        }),\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { List, ListItem, Spinner, Alert } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserType, UserAPI } from 'src/api';\nimport { mapErrorMessages } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nexport class DeprecatedTag extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {t`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    return (\n      <EmptyState\n        variant={EmptyStateVariant[this.props.variant]}\n        data-cy='EmptyState'\n      >\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, CubesIcon } from '@patternfly/react-icons';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { LoginLink } from 'src/components';\n\nexport class EmptyStateUnauthorized extends React.Component {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={\n          <>\n            {t`Contact your organization administrator for more information.`}\n            <br />\n            <br />\n            <LoginLink button />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Paths, formatPath } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs, SignatureBadge } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'owners', name: t`Owners` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'owners'\n                    ? formatPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'owners'\n                ? {\n                    name: t`Owners`,\n                    url: groupId\n                      ? formatPath(Paths.executionEnvironmentDetailOwners, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'owners' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { RoleAPI } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { RolePermissions, LoadingPageSpinner } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  filteredPermissions?: {\n    [key: string]: string;\n  };\n}\n\nexport const GroupRolePermissions = ({ name, filteredPermissions }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  if (!filteredPermissions) {\n    filteredPermissions = { ...Constants.HUMAN_PERMISSIONS };\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <RolePermissions\n        filteredPermissions={filteredPermissions}\n        selectedPermissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n  APISearchTypeAhead,\n} from 'src/components';\nimport {\n  PulpStatus,\n  NamespaceType,\n  ImportListType,\n  MyNamespaceAPI,\n} from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet, errorMessage } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from 'src/api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { DateComponent, EmptyStateNoData, SortTable, ClipboardCopy } from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { CollectionCount } from 'src/components';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport class LoginLink extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { button, next } = this.props;\n    const { featureFlags } = this.context;\n    const className = button ? 'pf-c-button pf-m-primary' : '';\n\n    // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n    if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n      return (\n        <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>\n      );\n    } else {\n      return (\n        <Link\n          className={className}\n          to={formatPath(Paths.login, {}, { next })}\n        >{t`Login`}</Link>\n      );\n    }\n  }\n}\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport class Main extends React.Component<IProps> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='hub-c-card-ns-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              alt={t`${company} logo`}\n              fallbackToDefault\n              image={avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{t`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\n\nimport {\n  Alert,\n  Form,\n  FormGroup,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  ExternalLinkAltIcon,\n  PlusCircleIcon,\n  TrashIcon,\n} from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\n\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup fieldId='none' label={t`Namespace owners`}>\n          <Alert\n            isInline\n            variant='info'\n            title={\n              <Trans>\n                Moved to the{' '}\n                <Link\n                  target='_blank'\n                  to={formatPath(\n                    Paths.myCollections,\n                    {\n                      namespace: namespace.name,\n                    },\n                    { tab: 'owners' },\n                  )}\n                >\n                  Namespace owners\n                </Link>{' '}\n                <ExternalLinkAltIcon /> tab\n              </Trans>\n            }\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\nimport { plural } from '@lingui/macro';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nexport class NumericLabel extends React.Component<IProps> {\n  render() {\n    const { number, newline, label } = this.props;\n\n    let numberElem = (\n      <span key='number'>{NumericLabel.roundNumber(number)} </span>\n    );\n    let labelElem = (\n      <span key='label' className='hub-numeric-label-label'>\n        {label}\n      </span>\n    );\n\n    if (newline) {\n      numberElem = <div>{numberElem}</div>;\n      labelElem = <div>{labelElem}</div>;\n    }\n\n    return (\n      <div>\n        {numberElem}\n        {labelElem}\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nexport class CollectionNumericLabel extends React.Component<ICNLProps> {\n  render() {\n    const { count, newline, type } = this.props;\n\n    const label =\n      {\n        module: plural(count, {\n          one: 'Module',\n          other: 'Modules',\n        }),\n        role: plural(count, {\n          one: 'Role',\n          other: 'Roles',\n        }),\n        plugin: plural(count, {\n          one: 'Plugin',\n          other: 'Plugins',\n        }),\n        dependency: plural(count, {\n          one: 'Dependency',\n          other: 'Dependencies',\n        }),\n      }[type] || type;\n\n    return <NumericLabel number={count} newline={newline} label={label} />;\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { sortBy } from 'lodash';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert) => void;\n  groupId?: number;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  reload: () => void;\n  selectRolesMessage: string;\n  updateGroups: (groups: GroupType[]) => Promise<void>;\n  urlPrefix: string;\n  canEditOwners: boolean;\n}\n\ninterface IState {\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n}\n\nexport class OwnersTab extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n    };\n  }\n\n  render() {\n    const { groups, groupId, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.state;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.setState({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : groupId ? (\n          this.renderRoles({ groupId })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.setState({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`OwnersTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({ group: group.id, tab: 'owners' })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ groupId }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.state;\n    const group = this.props.groups.find(({ id }) => Number(groupId) === id);\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.setState({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.setState({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.state.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() => this.setState({ showGroupRemoveModal: null })}\n        deleteAction={() => this.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.state.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() => this.setState({ showRoleRemoveModal: null })}\n        deleteAction={() => this.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.state;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.setState({ showGroupSelectWizard: { group, roles } })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.setState({ showGroupSelectWizard: { group, roles } })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.setState({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.state;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.setState({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.setState({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.updateGroup(group, roles)}\n      />\n    );\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateSuccess }) {\n    const { reload, updateGroups } = this.props;\n\n    return updateGroups(groups)\n      .then(() => {\n        this.setState(stateSuccess);\n        this.props.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        reload(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.props.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  private addGroup(group, roles) {\n    const { name, groups } = this.props;\n    const newGroup = {\n      ...group,\n      object_roles: roles.map(({ name }) => name),\n    };\n    const newGroups = [...groups, newGroup];\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: {\n        showGroupSelectWizard: null,\n      },\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n    });\n  }\n\n  private removeGroup(group) {\n    const { name, groups } = this.props;\n    const newGroups = groups.filter((g) => g !== group);\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: {\n        showGroupRemoveModal: null,\n      },\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n    });\n  }\n\n  private updateGroup(group, roles) {\n    const { name, groups } = this.props;\n    const newGroup = {\n      ...group,\n      object_roles: [...group.object_roles, ...roles.map(({ name }) => name)],\n    };\n    const newGroups = groups.map((g) => (g === group ? newGroup : g));\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: { showRoleSelectWizard: null },\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n    });\n  }\n\n  private removeRole(role, group) {\n    const { name, groups } = this.props;\n    const newGroup = {\n      ...group,\n      object_roles: group.object_roles.filter((name) => name !== role),\n    };\n    const newGroups = groups.map((g) => (g === group ? newGroup : g));\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: { showRoleRemoveModal: null },\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n    });\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n  ToggleTemplate,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n        titles={{\n          ofWord: t`of`,\n          perPageSuffix: t`per page`,\n          items: null,\n        }}\n        toggleTemplate={(props) => <ToggleTemplate ofWord={t`of`} {...props} />}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport {\n  BaseHeader,\n  Logo,\n  Tabs,\n  TabsType,\n  Breadcrumbs,\n  BreadcrumbType,\n} from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  customPermissions?: string[];\n  setSelected?: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n  multilingual?: boolean;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map((text) => (\n            <Label key={text}>\n              {this.props.multilingual ? i18n._(text) : text}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    let selections = [];\n    if (this.props.multilingual) {\n      selections = this.props.selectedPermissions.map((value) => ({\n        // orginal english value\n        value,\n        // translated\n        toString: () => i18n._(value),\n      }));\n    } else {\n      selections = this.props.selectedPermissions;\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        onClear={this.props.onClear ? this.props.onClear : this.clearSelection}\n        selections={selections}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option}>\n                {this.props.multilingual ? i18n._(option) : option}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return t`Select permissions`;\n    }\n    return this.props.selectedPermissions.length === 0 ? t`No permission` : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    // value contains orginal key in english\n    if (this.props.multilingual && selection.value) {\n      selection = selection.value;\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(event, selection);\n    } else {\n      const newPerms = new Set(this.props.selectedPermissions);\n      if (newPerms.has(selection)) {\n        newPerms.delete(selection);\n      } else {\n        newPerms.add(selection);\n      }\n\n      this.props.setSelected(Array.from(newPerms));\n    }\n  };\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n  inputText: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n  inputText: '',\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Controllers list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-pulp_created',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Tags could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, digest, tag } = this.state;\n    const url = getContainersURL();\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const imageUrl = `${url}/${tag ? `${image}:${tag}` : digest}`;\n          const href = `${host}/#/execution_environments/add?image=${encodeURIComponent(\n            imageUrl,\n          )}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    const docsLink =\n      'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank' rel='noreferrer'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that\n              Controller&apos;s console. Log in (if necessary) and follow the\n              steps to complete the configuration.\n            </Trans>\n            <br />\n            {!unsafeLinksSupported && (\n              <Trans>\n                <b>Note:</b> The following links may be blocked by your browser.\n                Copy and paste the external link manually.\n              </Trans>\n            )}\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  inputText={this.state.inputText}\n                  onChange={(text) => this.setState({ inputText: text })}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText, FileUpload } from 'src/components';\n\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  DownloadIcon,\n  ExclamationTriangleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet, isWriteOnly, ErrorMessagesType } from 'src/utilities';\n\nimport { validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const { remote } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n        'signed_only',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='link'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const { filenames } = this.state;\n    const { signatures_enabled } = this.context?.featureFlags || {};\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && signatures_enabled ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      filenames.requirements_file.name,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.client_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.ca_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, SortTable, ListItemActions } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { lastSynced, lastSyncStatus } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { user } = this.props;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length && user?.model_permissions?.change_remote && (\n        <DropdownItem key='edit' onClick={() => this.props.editRemote(remote)}>\n          {t`Edit`}\n        </DropdownItem>\n      ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { user } = this.props;\n    if (!user?.model_permissions?.change_remote) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    const repoNames = Constants.REPOSITORYNAMES;\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              style={{ paddingLeft: 0 }}\n              variant='plain'\n              className='hub-input-group-text-no-wrap'\n            >\n              {t`Filter by repository`}\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoName(event.target.name);\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: event.target.name,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={(isExpanded) => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              {Object.keys(repoNames).map((option) => (\n                <SelectOption\n                  name={option}\n                  key={option}\n                  value={i18n._(repoNames[option])}\n                />\n              ))}\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoName(repoName) {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return repo ? i18n._(repo) : repoName;\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { AlertType, APISearchTypeAhead, HelperText } from 'src/components';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remotePulpId?: string;\n  addAlert?: (variant, title, description?) => void;\n  formError: { title: string; detail: string }[];\n}\n\ninterface IState {\n  name: string;\n  description: string;\n\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors?: {\n    registries?: AlertType;\n  };\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {\n        registries: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              registries: {\n                title: t`Registries list could not be displayed.`,\n                description: errorMessage(status, statusText),\n                variant: 'danger',\n              },\n            },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`}\n                validated={this.validateName(name)}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => this.setState({ name: value })}\n                  validated={this.validateName(name)}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n              >\n                {formErrors?.registries ? (\n                  <Alert\n                    title={formErrors.registries.title}\n                    variant='danger'\n                    isInline\n                  >\n                    {formErrors.registries.description}\n                  </Alert>\n                ) : (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n\n          <FormGroup fieldId='none' label={t`Groups with access`}>\n            <Alert\n              isInline\n              variant='info'\n              title={\n                isNew ? (\n                  <Trans>\n                    Moved to the <b>Owners</b> tab\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Moved to the{' '}\n                    <Link\n                      target='_blank'\n                      to={formatPath(Paths.executionEnvironmentDetailOwners, {\n                        container: name,\n                      })}\n                    >\n                      Owners\n                    </Link>{' '}\n                    <ExternalLinkAltIcon /> tab\n                  </Trans>\n                )\n              }\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n    const nameValid = name && this.validateName(name) === 'default';\n    return nameValid && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ pk, name }) => ({ id: pk, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remotePulpId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    if (isRemote && isNew) {\n      return ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    }\n\n    return Promise.all([\n      // remote edit - upstream, tags, registry\n      isRemote &&\n        !isNew &&\n        ExecutionEnvironmentRemoteAPI.update(remotePulpId, {\n          name: originalName, // readonly but required\n          upstream_name,\n          registry,\n          include_tags,\n          exclude_tags,\n        }),\n      // remote edit or local edit - description, if changed\n      description !== originalDescription &&\n        ContainerDistributionAPI.patch(distributionPulpId, { description }),\n    ]);\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { i18n } from '@lingui/core';\nimport { PermissionChipSelector } from 'src/components';\nimport {\n  ActionGroup,\n  Button,\n  Flex,\n  FlexItem,\n  Form,\n  TextInput,\n  InputGroup,\n  FormGroup,\n  Title,\n  Divider,\n  Spinner,\n} from '@patternfly/react-core';\n\nimport { twoWayMapper } from 'src/utilities';\n\nimport { Constants } from 'src/constants';\ninterface IState {\n  permissions: string[];\n}\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions: selectedPermissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n    const groups = Constants.PERMISSIONS;\n\n    const filteredPermissions = { ...Constants.HUMAN_PERMISSIONS };\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder='Role name'\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder='Add a role description here'\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>Permissions</Title>\n\n            {groups.map((group) => (\n              <Flex\n                style={{ marginTop: '16px' }}\n                alignItems={{ default: 'alignItemsCenter' }}\n                key={group.name}\n                className={group.name}\n                data-cy={`RoleForm-Permissions-row-${group.name}`}\n              >\n                <FlexItem style={{ minWidth: '200px' }}>\n                  {i18n._(group.label)}\n                </FlexItem>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <PermissionChipSelector\n                    availablePermissions={group.object_permissions\n                      .filter(\n                        (perm) =>\n                          !selectedPermissions.find(\n                            (selected) => selected === perm,\n                          ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))\n                      .sort()}\n                    selectedPermissions={selectedPermissions\n                      .filter((selected) =>\n                        group.object_permissions.find(\n                          (perm) => selected === perm,\n                        ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))}\n                    setSelected={(perms) =>\n                      this.setState({ permissions: perms })\n                    }\n                    menuAppendTo='inline'\n                    multilingual={true}\n                    isViewOnly={false}\n                    onClear={() => {\n                      const clearedPerms = group.object_permissions;\n                      this.setState({\n                        permissions: this.state.permissions.filter(\n                          (x) => !clearedPerms.includes(x),\n                        ),\n                      });\n                    }}\n                    onSelect={(event, selection) => {\n                      const newPerms = new Set(this.state.permissions);\n                      if (\n                        newPerms.has(\n                          twoWayMapper(selection, filteredPermissions),\n                        )\n                      ) {\n                        newPerms.delete(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      } else {\n                        newPerms.add(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      }\n                      this.setState({\n                        permissions: Array.from(newPerms),\n                      });\n                    }}\n                  />\n                </FlexItem>\n              </Flex>\n            ))}\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(selectedPermissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { BaseHeader, Breadcrumbs, BreadcrumbType } from 'src/components';\n\ninterface IProps {\n  title: string;\n  subTitle?: string;\n  breadcrumbs: BreadcrumbType[];\n}\n\nexport class RoleHeader extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title, subTitle, breadcrumbs } = this.props;\n    return (\n      <BaseHeader\n        breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n        title={title}\n      >\n        {' '}\n        <div style={{ paddingBottom: '10px' }}>\n          <Trans>{subTitle}</Trans>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\nimport * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { PermissionChipSelector } from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\n\ninterface IProps {\n  filteredPermissions: { [key: string]: string };\n  selectedPermissions: string[];\n  setPermissions?: (permissions) => void;\n  showEmpty: boolean;\n  showCustom: boolean;\n}\n\nexport const RolePermissions: React.FC<IProps> = ({\n  filteredPermissions,\n  selectedPermissions,\n  setPermissions,\n  showCustom,\n  showEmpty,\n}) => {\n  const permFilter = (availablePermissions) =>\n    selectedPermissions\n      .filter((selected) =>\n        availablePermissions.find((perm) => selected === perm),\n      )\n      .map((value) => twoWayMapper(value, filteredPermissions) ?? value);\n\n  const getSelected = (group) => permFilter(group.object_permissions);\n\n  const customPermissions = selectedPermissions.filter(\n    (perm) => !Object.keys(filteredPermissions).includes(perm),\n  );\n\n  const origGroups = Constants.PERMISSIONS.map((group) => ({\n    ...group,\n    label: i18n._(group.label),\n  }));\n  const allGroups = showCustom\n    ? [\n        ...origGroups,\n        {\n          name: 'custom',\n          label: t`Custom permissions`,\n          object_permissions: customPermissions,\n        },\n      ]\n    : origGroups;\n  const groups = showEmpty\n    ? allGroups\n    : allGroups.filter((group) => getSelected(group).length);\n\n  return (\n    <>\n      {groups.map((group) => (\n        <Flex\n          style={{ marginTop: '16px' }}\n          alignItems={{ default: 'alignItemsCenter' }}\n          key={group.name}\n          className={group.name}\n        >\n          <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n          <FlexItem grow={{ default: 'grow' }}>\n            <PermissionChipSelector\n              isViewOnly={!setPermissions}\n              menuAppendTo='inline'\n              multilingual={true}\n              selectedPermissions={getSelected(group).filter(Boolean)}\n              {...(setPermissions\n                ? {\n                    availablePermissions: group.object_permissions\n                      .filter(\n                        (perm) =>\n                          !selectedPermissions.find(\n                            (selected) => selected === perm,\n                          ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))\n                      .sort(),\n                    setSelected: setPermissions,\n                    onClear: () => {\n                      const clearedPermissions = group.object_permissions;\n                      setPermissions(\n                        selectedPermissions.filter(\n                          (x) => !clearedPermissions.includes(x),\n                        ),\n                      );\n                    },\n                    onSelect: (event, selection) => {\n                      const newPermissions = new Set(selectedPermissions);\n                      if (\n                        newPermissions.has(\n                          twoWayMapper(selection, filteredPermissions),\n                        )\n                      ) {\n                        newPermissions.delete(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      } else {\n                        newPermissions.add(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      }\n                      setPermissions(Array.from(newPermissions));\n                    },\n                  }\n                : {})}\n            />\n          </FlexItem>\n        </Flex>\n      ))}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { AlertType } from 'src/components';\n\nimport {\n  Button,\n  Modal,\n  Spinner,\n  Label,\n  LabelGroup,\n  Form,\n  FormGroup,\n  TextInput,\n  InputGroup,\n  Alert,\n  AlertActionLink,\n} from '@patternfly/react-core';\n\nimport { TagIcon } from '@patternfly/react-icons';\n\nimport {\n  ContainerManifestType,\n  ExecutionEnvironmentAPI,\n  ContainerTagAPI,\n  ContainerRepositoryType,\n  TaskAPI,\n  PulpStatus,\n} from 'src/api';\n\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup id='remove-tag' defaultIsOpen={true}>\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.pulp_id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.pulp_id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    const { digest, grey, long } = this.props;\n\n    return (\n      <Tooltip content={digest}>\n        <Label color={grey ? 'grey' : 'blue'}>\n          {long ? digest : truncateSha(digest)}\n        </Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n      page: 1,\n    });\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    const activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNodeArray;\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap: Record<string, LabelProps['variant']> = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: t`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: t`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: t`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: t`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type]}\n        color={labelProps.color}\n        icon={labelProps.icon}\n        className={this.props.className}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: t`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab.name}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps> {\n  render() {\n    return (\n      <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HTMLComment = ({ text, ...props }) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nHTMLComment.propTypes = { text: PropTypes.string };\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import * as React from 'react';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n  Alert,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { AlertType, APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport {\n  BaseHeader,\n  Main,\n  Breadcrumbs,\n  BreadcrumbType,\n  UserForm,\n} from 'src/components';\nimport { UserType } from 'src/api';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\n\nimport React, { useState } from 'react';\n\nimport { SortTable } from 'src/components';\n\nimport {\n  TableComposable,\n  Tr,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n} from '@patternfly/react-table';\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label={t`hidden value`}\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {t`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport class ClipboardCopy extends React.Component<IProps> {\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <PFClipboardCopy\n        hoverTip={t`Copy to clipboard`}\n        clickTip={t`Successfully copied to clipboard!`}\n        {...props}\n      >\n        {children}\n      </PFClipboardCopy>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  FileUpload as PFFileUpload,\n  FileUploadProps,\n} from '@patternfly/react-core';\n\nexport class FileUpload extends React.Component<FileUploadProps> {\n  render() {\n    return (\n      <PFFileUpload\n        browseButtonText={t`Browse...`}\n        clearButtonText={t`Clear`}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        {...this.props}\n      />\n    );\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n\n    return (\n      <td\n        style={{\n          paddingRight: '0px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {buttons?.length ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {kebabItems?.length ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { Text, Checkbox } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components';\nimport { CollectionDetailType, CollectionListType } from 'src/api';\n\ninterface IProps {\n  deleteCollection: CollectionDetailType | CollectionListType;\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport class DeleteCollectionModal extends React.Component<IProps> {\n  render() {\n    const {\n      deleteCollection,\n      isDeletionPending,\n      confirmDelete,\n      collectionVersion,\n      cancelAction,\n      deleteAction,\n      setConfirmDelete,\n    } = this.props;\n\n    return (\n      deleteCollection && (\n        <DeleteModal\n          spinner={isDeletionPending}\n          cancelAction={() => cancelAction()}\n          deleteAction={() => deleteAction()}\n          isDisabled={!confirmDelete || isDeletionPending}\n          title={\n            collectionVersion\n              ? t`Delete collection version?`\n              : t`Delete collection?`\n          }\n        >\n          <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n            {collectionVersion ? (\n              <>\n                {(deleteCollection as CollectionDetailType).all_versions\n                  .length === 1 ? (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost and this will cause the entire\n                    collection to be deleted.\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost.\n                  </Trans>\n                )}\n              </>\n            ) : (\n              <Trans>\n                Deleting <b>{deleteCollection.name}</b> and its data will be\n                lost.\n              </Trans>\n            )}\n          </Text>\n          <Checkbox\n            isChecked={confirmDelete}\n            onChange={setConfirmDelete}\n            label={t`I understand that this action cannot be undone.`}\n            id='delete_confirm'\n          />\n        </DeleteModal>\n      )\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Flex, FlexItem, Label, Divider } from '@patternfly/react-core';\nimport { RoleType, GroupType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => (\n  <div className='hub-custom-wizard-layout'>\n    <p>\n      <Trans>\n        The following roles will be applied to group:{' '}\n        <strong>{group.name}</strong>\n      </Trans>\n    </p>\n    <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n      {selectedRoles.map((role) => (\n        <React.Fragment key={role.name}>\n          <FlexItem>\n            <strong>{role.name}</strong>{' '}\n            {role?.description &&\n              `- ${translateLockedRolesDescription(\n                role.name,\n                role.description,\n              )}`}\n            <Flex className='hub-permissions'>\n              {role.permissions.map((permission) => (\n                <FlexItem\n                  key={permission}\n                  className='hub-permission'\n                  data-cy={`HubPermission-${permission}`}\n                >\n                  <Tooltip\n                    content={\n                      Constants.HUMAN_PERMISSIONS[permission] || permission\n                    }\n                  >\n                    <Label>{splitByDot(permission)}</Label>\n                  </Tooltip>\n                </FlexItem>\n              ))}\n            </Flex>\n          </FlexItem>\n          <FlexItem>\n            <Divider />\n          </FlexItem>\n        </React.Fragment>\n      ))}\n    </Flex>\n  </div>\n);\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { RoleType, RoleAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  CheckboxRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { GroupType, GroupAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  RadioRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t, defineMessage } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      label: defineMessage({ message: `Collection Namespaces` }),\n      object_permissions: [\n        'galaxy.add_namespace', // model_permissions.add_namespace\n        'galaxy.change_namespace', // (model_permissions.change_namespace)\n        'galaxy.delete_namespace', // model_permissions.delete_namespace\n        'galaxy.upload_to_namespace', // (model_permissions.upload_to_namespace)\n      ],\n    },\n    {\n      name: 'collections',\n      label: defineMessage({ message: `Collections` }),\n      object_permissions: [\n        'ansible.modify_ansible_repo_content', // model_permissions.move_collection\n        'ansible.delete_collection', // model_permissions.delete_collection\n      ],\n    },\n    {\n      name: 'users',\n      label: defineMessage({ message: `Users` }),\n      object_permissions: [\n        'galaxy.view_user', // model_permissions.view_user\n        'galaxy.delete_user', // model_permissions.delete_user\n        'galaxy.add_user', // model_permissions.add_user\n        'galaxy.change_user', // model_permissions.change_user\n      ],\n    },\n    {\n      name: 'groups',\n      label: defineMessage({ message: `Groups` }),\n      object_permissions: [\n        'galaxy.view_group', // model_permissions.view_group\n        'galaxy.delete_group', // model_permissions.delete_group\n        'galaxy.add_group', // model_permissions.add_group\n        'galaxy.change_group', // model_permissions.change_group\n      ],\n    },\n    {\n      name: 'remotes',\n      label: defineMessage({ message: `Collection Remotes` }),\n      object_permissions: [\n        'ansible.change_collectionremote', // model_permissions.change_remote\n        'ansible.view_collectionremote',\n        // 'ansible.add_collectionremote', // (model_permissions.add_remote)\n        // 'ansible.delete_collectionremote', // (model_permissions.delete_remote)\n      ],\n    },\n    {\n      name: 'containers',\n      label: defineMessage({ message: `Containers` }),\n      object_permissions: [\n        // Turning off private container permissions since they aren't supported yet\n        // 'container.namespace_pull_containerdistribution',\n        // 'container.namespace_view_containerdistribution',\n\n        // 'container.add_containerrepository', // (model_permissions.add_containerrepository)\n        // 'container.change_containerrepository', // (model_permissions.change_containerrepository)\n        'container.delete_containerrepository', // model_permissions.delete_containerrepository\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.namespace_push_containerdistribution',\n\n        'container.add_containernamespace', // (model_permissions.add_containernamespace)\n        'container.change_containernamespace', // (model_permissions.change_containernamespace)\n        // 'container.delete_containernamespace', // (model_permissions.delete_containernamespace)\n      ],\n    },\n    {\n      name: 'registries',\n      label: defineMessage({ message: `Remote Registries` }),\n      object_permissions: [\n        'galaxy.add_containerregistryremote', // model_permissions.add_containerregistry\n        'galaxy.change_containerregistryremote', // model_permissions.change_containerregistry\n        'galaxy.delete_containerregistryremote', // model_permissions.delete_containerregistry\n      ],\n    },\n    {\n      name: 'task_management',\n      label: defineMessage({ message: `Task Management` }),\n      object_permissions: [\n        'core.change_task',\n        'core.delete_task',\n        'core.view_task',\n      ],\n    },\n\n    // These aren't currently used. Removing them to reduce confusion in the UI\n    // {\n    //   name: 'distribution',\n    //   label: '...',\n    //   object_permissions: [\n    //     'ansible.view_ansibledistribution', // (model_permissions.view_distribution)\n    //     'ansible.add_ansibledistribution', // (model_permissions.add_distribution)\n    //     'ansible.change_ansibledistribution', // (model_permissions.change_distribution)\n    //     'ansible.delete_ansibledistribution', // (model_permissions.delete_distribution)\n    //   ],\n    // },\n    // {\n    //   name: 'synclists',\n    //   label: '...',\n    //   object_permissions: [\n    //     'galaxy.delete_synclist',\n    //     'galaxy.change_synclist',\n    //     'galaxy.view_synclist',\n    //     'galaxy.add_synclist',\n    //   ],\n    // },\n    // {\n    //   name: 'container_distribution',\n    //   label: '...',\n    //   object_permissions: [\n    //     'container.add_containerdistribution', // (model_permissions.add_containerdistribution)\n    //     'container.change_containerdistribution', // (model_permissions.change_containerdistribution)\n    //     'container.delete_containerdistribution', // (model_permissions.delete_containerdistribution)\n    //   ],\n    // },\n  ];\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static HUMAN_PERMISSIONS = {\n    'ansible.add_ansibledistribution': t`Add Ansible distribution`,\n    'ansible.add_collectionremote': t`Add collection remote`,\n    'ansible.change_ansibledistribution': t`Change Ansible distribution`,\n    'ansible.change_collectionremote': t`Change collection remote`,\n    'ansible.delete_ansibledistribution': t`Delete Ansible distribution`,\n    'ansible.delete_collection': t`Delete collection`,\n    'ansible.delete_collectionremote': t`Delete collection remote`,\n    'ansible.modify_ansible_repo_content': t`Modify Ansible repo content`,\n    'ansible.view_ansibledistribution': t`View Ansible distribution`,\n    'ansible.view_collectionremote': t`View collection remote`,\n    'container.add_containerdistribution': t`Add container distribution`,\n    'container.add_containernamespace': t`Create new containers`,\n    'container.add_containerrepository': t`Add container repository`,\n    'container.change_containerdistribution': t`Change container distribution`,\n    'container.change_containernamespace': t`Change container namespace permissions`,\n    'container.change_containerrepository': t`Change container repository`,\n    'container.delete_containerdistribution': t`Delete container distribution`,\n    'container.delete_containernamespace': t`Delete container namespace`,\n    'container.delete_containerrepository': t`Delete container repository`,\n    'container.namespace_change_containerdistribution': t`Change containers`,\n    'container.namespace_modify_content_containerpushrepository': t`Change image tags`,\n    'container.namespace_pull_containerdistribution': t`Pull private containers`,\n    'container.namespace_push_containerdistribution': t`Push to existing containers`,\n    'container.namespace_view_containerdistribution': t`View private containers`,\n    'core.change_task': t`Change task`,\n    'core.delete_task': t`Delete task`,\n    'core.view_task': t`View all tasks`,\n    'galaxy.add_containerregistryremote': t`Add remote registry`,\n    'galaxy.add_group': t`Add group`,\n    'galaxy.add_namespace': t`Add namespace`,\n    'galaxy.add_synclist': t`Add synclist`,\n    'galaxy.add_user': t`Add user`,\n    'galaxy.change_containerregistryremote': t`Change remote registry`,\n    'galaxy.change_group': t`Change group`,\n    'galaxy.change_namespace': t`Change namespace`,\n    'galaxy.change_synclist': t`Change synclist`,\n    'galaxy.change_user': t`Change user`,\n    'galaxy.delete_containerregistryremote': t`Delete remote registry`,\n    'galaxy.delete_group': t`Delete group`,\n    'galaxy.delete_namespace': t`Delete namespace`,\n    'galaxy.delete_synclist': t`Delete synclist`,\n    'galaxy.delete_user': t`Delete user`,\n    'galaxy.upload_to_namespace': t`Upload to namespace`,\n    'galaxy.view_group': t`View group`,\n    'galaxy.view_synclist': t`View synclist`,\n    'galaxy.view_user': t`View user`,\n  };\n\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: t`Change namespace`,\n    upload_to_namespace: t`Upload to namespace`,\n    add_containernamespace: t`Create new containers`,\n    namespace_pull_containerdistribution: t`Pull private containers`,\n    namespace_change_containerdistribution: t`Update container information`,\n    namespace_view_containerdistribution: t`View private containers`,\n    namespace_modify_content_containerpushrepository: t`Change image tags`,\n    change_containernamespace: t`Change container namespace permissions`,\n    namespace_push_containerdistribution: t`Push images to existing containers`,\n    view_containernamespace: t`View container's namespace`,\n    delete_containernamespace: t`Delete container's namespace`,\n    namespace_delete_containerdistribution: t`Delete container's distribution`,\n    namespace_view_containerpushrepository: t`View container's repository`,\n    namespace_add_containerdistribution: t`Push new containers`,\n    change_containerdistribution: t`Change distribution`,\n    delete_containerdistribution: t`Delete distribution`,\n    push_containerdistribution: t`Push distribution`,\n    pull_containerdistribution: t`Pull distribution`,\n    view_containerdistribution: t`View distribution`,\n  };\n\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n    validated: defineMessage({ message: `Validated` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified', 'validated'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType, SettingsType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(\n  path: Paths,\n  data,\n  params?: Record<string, string | boolean>,\n) {\n  let url = path as string;\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetailOwners = '/containers/:container+/_content/owners',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\nexport function getContainersURL() {\n  return window.location.href.split('://')[1].split('/ui')[0];\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: object) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find((key) => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  const splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","// TODO - canSign can be renamed to canSignNS\nexport const canSign = ({ featureFlags }, namespace) => {\n  const { can_create_signatures } = featureFlags || {};\n  const permissions = namespace?.related_fields?.my_permissions || [];\n  return (\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = ({ featureFlags }, container) => {\n  const { can_create_signatures, signatures_enabled, container_signing } =\n    featureFlags || {};\n\n  return (\n    can_create_signatures &&\n    signatures_enabled &&\n    container_signing &&\n    container.namespace.my_permissions.includes(\n      'container.change_containernamespace',\n    )\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React from 'react';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { CollectionAPI } from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection) {\n    const { name, namespace } = collection;\n    return CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    selectedRepo,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(selectedRepo, collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { Constants } from 'src/constants';\nimport { i18n } from '@lingui/core';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","reject","err","undefined","ImportMessageCodes","PulpStatus","NamespaceAPI","API","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","for_object_type","newParams","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","RemoteAPI","distribution","_id","_obj","ApplicationInfoAPI","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","ControllerAPI","TaskManagementAPI","groupId","roleId","role","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","SigningServiceAPI","CertificateUploadAPI","repository","signed_collection","Repositories","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","registry","init","middleware","ReducerRegistry","promise","EditNamespace","lazy","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","CollectionDependencies","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","TaskListView","TaskDetail","CertificationDashboard","Repository","SignatureKeysList","Routes","Suspense","fallback","LoadingPageWithHeader","Switch","Route","Paths","component","Redirect","push","to","propTypes","childProps","PropTypes","location","pathname","DEFAULT_REPO","App","props","user","setState","alerts","matchPath","_repo","state","featureFlags","selectedRepo","settings","getFeatureFlags","identifyApp","APPLICATION_NAME","appNav","on","event","domEvent","href","basename","replace","history","_messages","msg","variant","title","split","all","match","isRepoURL","value","setAlerts","setRepo","setUser","Alert","isInline","Component","withRouter","connect","availableLanguages","locale","messages","localStorage","test_l10n","forEach","key","Array","isArray","i18n","plurals","moment","activate","navigator","languages","lang","release","pathName","shift","store","getStore","APISearchTypeAhead","loadResults","onClear","evt","textInput","target","getOptions","isOpen","selection","isPlaceholder","onSelect","multiple","selected","selections","group","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","options","results","option","SelectOption","length","React","AlertList","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","marginBottom","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","showRepoSelector","cx","Title","headingLevel","size","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","Link","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","getCertification","SignatureBadge","isCompact","signState","formatPath","Text","TextVariants","CardBody","Tooltip","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","CollectionNumericLabel","newline","CollectionContentList","toShow","summary","showing","keywords","c","keywordMatch","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","renderCommunityWarningMessage","EmptyStateCustom","icon","ExclamationTriangleIcon","AppContext","CollectionCount","collectionCount","loading","getCollectionCount","Spinner","promises","collections","statusText","addAlert","errorMessage","DateComponent","date","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","useContext","display_signatures","Label","color","text","UploadSingCertificateModal","useState","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","page_size","modalPagination","errorAlert","isOpenSignAllModal","signing_service","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","redirect","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","activeTab","find","created","created_at","urlKeys","latestVersion","can_upload_signatures","isLatestVersion","signedString","collectionName","canSign","canSignNS","dropdownItems","canDeleteCollection","model_permissions","delete_collection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","toString","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","loadingVariant","renderSelectVersions","StatefulDropdown","items","renderTabs","rel","include_related","related_fields","my_permissions","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","concat","pulp_href","reload","warning","DownloadSignatureGridItem","show","setShow","signatures","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","downloadLinkRef","installCommand","tags","Tag","isFilled","license","ClipboardCopy","isReadOnly","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","inputText","prevProps","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","HelperText","EmptyStateNoData","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","selectedFilter","selectedID","currentTarget","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","trim","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteModal","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","filteredPermissions","setRole","useEffect","selectedRole","translateLockedRolesDescription","RolePermissions","selectedPermissions","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","renderMessage","level","message","hideCollectionName","empty","collectionHead","approvalStatus","rlist","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","artifact","sha256","loaded","total","join","cancel","tab","renderTab","Bullseye","height","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","cliConfig","getRepoUrl","pulp_last_updated","isCode","next","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","preventDefault","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","roundNumber","labelElem","n","Math","floor","plugin","OwnersTab","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","canEditOwners","noData","buttonAdd","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","renderGroupRow","urlPrefix","ListItemActions","kebabItems","Number","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","pulpObjectType","selectRolesMessage","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addGroup","alertSuccess","alertFailure","stateSuccess","updateGroups","newGroup","newGroups","g","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","titles","ofWord","perPageSuffix","toggleTemplate","ToggleTemplate","String","PartnerHeader","filters","Tabs","PermissionChipSelector","setSelected","multilingual","newPerms","Set","has","add","from","isViewOnly","typeAheadAriaLabel","clearSelection","availablePermissions","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","getRemoteType","requiredFields","disabledFields","allowEditName","showModal","isValid","saveRemote","renderForm","signatures_enabled","docsAnsibleLink","fileOnChange","helperTextIcon","helperTextInvalidIcon","isChecked","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","Flex","FlexItem","grow","default","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","isNumericSet","rate_limit","isInteger","host","fieldName","newFields","is_set","isNaN","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","change_remote","editRemote","updated_at","lastSynced","lastSyncStatus","configButton","syncButton","syncRemote","distributions","selectExpanded","repoNames","InputGroupText","newRepo","getRepoName","repoName","setPermissions","getSelected","object_permissions","perm","twoWayMapper","customPermissions","origGroups","allGroups","minWidth","clearedPermissions","newPermissions","ResourcesForm","resources","updateResources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","ariaLabel","Dropdown","toggle","renderToggle","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","content_name","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","UserForm","newUser","updateUser","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","isStickyHeader","defaultTableHeader","TableComposable","colSpan","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","select","disable","RadioRow","hoverTip","clickTip","clearButtonText","textAlign","showClose","hasNoBodyWrapper","hasNoBodyPadding","navAriaLabel","mainAriaLabel","titleId","descriptionId","direction","permission","category","catTitle","charAt","splitByDot","Divider","setInputText","setRoles","rolesItemCount","setRolesItemCount","setLoading","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","change_containernamespace","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","published","community","completed","running","namespaceBreadcrumb","total_count","origin","getContainersURL","mapper","values","writeOnlyFields","el","newObj","sha","splitSha","entity","waitMs","bailAfter","statusCode","outsideError","protocol","URL","can_create_signatures","getUsedbyDependencies","paramString","numericTypes","URLSearchParams","appendParam","param","encodeURIComponent","callback","search","getQueryString","getReduced","deleteParam","sortParams","defaultSort","isDesc","ascSort","UUIDRegEx","section"],"sourceRoot":""}