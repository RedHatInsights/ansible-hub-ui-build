{"version":3,"file":"js/7910.f89970ec186e25b8920e.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-dependencies.tsx"],"sourcesContent":["import {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collections?: CollectionVersionSearch[];\n  collection?: CollectionVersionSearch;\n  content?: CollectionVersionContentType;\n  alerts?: AlertType[];\n  distroBasePath?: string;\n}\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  setCollection,\n  stateParams,\n}) {\n  const { version } = stateParams;\n  const { collection: name, namespace, repo } = matchParams;\n\n  CollectionVersionAPI.getCached(\n    {\n      ...(repo ? { repository_name: repo } : {}),\n      namespace,\n      name,\n      order_by: '-version',\n    },\n    forceReload,\n  )\n    .then((collections: CollectionVersionSearch[]) => {\n      const collection = version\n        ? collections.find(\n            ({ collection_version }) => collection_version.version == version,\n          )\n        : collections.find((cv) => cv.is_highest);\n\n      CollectionAPI.getContent(\n        namespace,\n        name,\n        collection.collection_version.version,\n      ).then((res) => {\n        const [content] = res.data.results;\n        setCollection(collections, collection, content);\n      });\n    })\n    .catch(() => {\n      navigate(formatPath(Paths.notFound));\n    });\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionUsedByDependencies,\n  CollectionVersion,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  CollectionDependenciesList,\n  CollectionHeader,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport { loadCollection } from './base';\nimport './collection-dependencies.scss';\n\ninterface IState {\n  collections: CollectionVersionSearch[];\n  collection: CollectionVersionSearch;\n  content: CollectionVersionContentType;\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n  alerts: AlertType[];\n}\n\nclass CollectionDependencies extends React.Component<RouteProps, IState> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n  private cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      collections: [],\n      collection: null,\n      content: null,\n      dependencies_repos: [],\n      params: params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      collections,\n      collection,\n      content,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n      alerts,\n    } = this.state;\n\n    if (collections.length <= 0) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const { collection_version: version, repository } = collection;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceDetail, {\n          namespace: version.namespace,\n        }),\n        name: version.namespace,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: version.namespace,\n          collection: version.name,\n          repo: repository.name,\n        }),\n        name: version.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(version.dependencies).length;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collections={collections}\n          collection={collection}\n          content={content}\n          params={headerParams}\n          updateParams={(p) => {\n            this.updateParams(this.combineParams(this.state.params, p), () =>\n              this.loadData(true),\n            );\n          }}\n          breadcrumbs={breadcrumbs}\n          activeTab='dependencies'\n          repo={repository.name}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              {noDependencies &&\n              !usedByDependenciesCount &&\n              !filterIsSet(params, ['name__icontains']) ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <>\n                  <p>{t`This collections requires the following collections for use`}</p>\n                  {noDependencies ? (\n                    <EmptyStateNoData\n                      title={t`No dependencies`}\n                      description={t`Collection does not have any dependencies.`}\n                    />\n                  ) : (\n                    <CollectionDependenciesList\n                      collection={this.state.collection}\n                      dependencies_repos={this.state.dependencies_repos}\n                    />\n                  )}\n                  <p>{t`This collection is being used by`}</p>\n                  <CollectionUsedbyDependenciesList\n                    usedByDependencies={usedByDependencies}\n                    itemCount={usedByDependenciesCount}\n                    params={dependenciesParams}\n                    usedByDependenciesLoading={usedByDependenciesLoading}\n                    updateParams={(p) =>\n                      this.updateParams(\n                        this.combineParams(this.state.params, p),\n                        () => this.loadUsedByDependencies(),\n                      )\n                    }\n                  />\n                </>\n              )}\n            </div>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies = this.state.collection.collection_version.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace: namespace,\n        version_range: version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        const [collection] = result.data.data;\n\n        dependency_repo.repo = collection.repository.name;\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      if (this.cancelToken) {\n        this.cancelToken.cancel('request-canceled');\n      }\n\n      this.cancelToken = CollectionAPI.getCancelToken();\n\n      const { name, namespace } = this.state.collection.collection_version;\n\n      // We have to use CollectionAPI here for used by dependencies\n      // because cross repo collection search doesn't allow `name__icontains` filter\n      CollectionAPI.getUsedDependenciesByCollection(\n        namespace,\n        name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n        this.cancelToken,\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch(({ response, message }) => {\n          // console.log(response, message);\n          if (message !== 'request-canceled') {\n            const { status, statusText } = response;\n            this.setState({\n              usedByDependenciesLoading: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Dependent collections could not be displayed.`,\n                  description: errorMessage(status, statusText),\n                },\n              ],\n            });\n          }\n        })\n        .finally(() => {\n          this.cancelToken = undefined;\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      setCollection: (collections, collection, content) =>\n        this.setState({ collections, collection, content }, callback),\n      stateParams: this.state.params.version\n        ? { version: this.state.params.version }\n        : {},\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private combineParams(...params) {\n    return params.reduce((acc, cur) => ({ ...acc, ...cur }));\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n\nCollectionDependencies.contextType = AppContext;\n"],"names":["loadCollection","_ref","forceReload","matchParams","navigate","setCollection","version","stateParams","name","collection","namespace","repo","CollectionVersionAPI","_objectSpread","repository_name","order_by","then","collections","find","_ref2","collection_version","cv","is_highest","CollectionAPI","res","content","_slicedToArray","data","results","formatPath","Paths","CollectionDependencies","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","params","ParamHelper","location","search","state","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","alerts","_createClass","key","value","this","loadData","_this2","_this$state","length","React","LoadingPageWithHeader","repository","breadcrumbs","namespaceBreadcrumb","url","i18n","headerParams","ignoredParams","dependenciesParams","noDependencies","Object","keys","dependencies","AlertList","closeAlert","i","CollectionHeader","reload","updateParams","p","combineParams","activeTab","Main","className","filterIsSet","EmptyStateNoData","title","description","CollectionDependenciesList","CollectionUsedbyDependenciesList","itemCount","loadUsedByDependencies","_this3","arguments","undefined","loadCollectionsDependenciesRepos","callback","_this4","promises","forEach","dependency","_dependency$split","split","_dependency$split2","dependency_repo","version_range","path","push","promise","loadDependencyRepo","Promise","all","setState","page_size","result","_this5","cancelToken","cancel","_this5$state$collecti","meta","count","response","message","status","statusText","concat","_toConsumableArray","variant","errorMessage","_this6","routeParams","get","_len","Array","_key","reduce","acc","cur","closeAlertMixin","v","match","withRouter","contextType","AppContext"],"sourceRoot":""}