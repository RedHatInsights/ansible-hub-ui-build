{"version":3,"file":"js/3689.b21c7fe1dc072fd8e68e.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/role.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/repositories.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/copy-url.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/components/approve-modal/approve-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/repositories.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t5541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t1870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t7853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t2620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t6379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import axios from 'axios';\nimport {\n  AnsibleDistributionAPI,\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\n// return correct distro\nexport function findDistroBasePathByRepo(distributions, repository) {\n  if (distributions.length === 0) {\n    // if distribution doesn't exist, use repository name\n    return repository.name;\n  }\n\n  // try to look for match by name, if not, just use the first distro\n  const distro = distributions.find(\n    (distro) => distro.name === repository.name,\n  );\n  return distro ? distro.base_path : distro[0].base_path;\n}\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionVersionSearch,\n  ): Promise<{ data: { task: string } }> {\n    const {\n      collection_version: { namespace, name },\n      repository,\n      is_deprecated,\n    } = collection;\n    return new Promise((resolve, reject) => {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      })\n        .then((result) => {\n          const basePath = findDistroBasePathByRepo(\n            result.data.results,\n            repository,\n          );\n\n          const path = `v3/plugin/ansible/content/${basePath}/collections/index/`;\n          this.patch(\n            `${namespace}/${name}`,\n            {\n              deprecated: !is_deprecated,\n            },\n            path,\n          )\n            .then((res) => resolve(res))\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post('v3/artifacts/collections/', formData, config);\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      })\n        .then((result) => {\n          const basePath = findDistroBasePathByRepo(\n            result.data.results,\n            repository,\n          );\n\n          this.http\n            .get(\n              `v3/plugin/ansible/content/${basePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n            )\n            .then((result) => {\n              resolve(result.data['download_url']);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  async deleteCollectionVersion(collection: CollectionVersionSearch) {\n    const distros = await AnsibleDistributionAPI.list({\n      repository: collection.repository.pulp_href,\n    });\n\n    const distroBasePath = findDistroBasePathByRepo(\n      distros.data.results,\n      collection.repository,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${collection.collection_version.namespace}/${collection.collection_version.name}/versions/${collection.collection_version.version}/`,\n    );\n  }\n\n  async deleteCollection(collection: CollectionVersionSearch) {\n    const distros = await AnsibleDistributionAPI.list({\n      repository: collection.repository.pulp_href,\n    });\n\n    const distroBasePath = findDistroBasePathByRepo(\n      distros.data.results,\n      collection.repository,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${collection.collection_version.namespace}/${collection.collection_version.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getSignatures(distroBasePath, namespace, name, version) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import axios from 'axios';\nimport { CollectionVersionSearch } from 'src/api';\nimport { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  // contains collection versions\n  cachedCollection: CollectionVersionSearch[] = [];\n\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n\n  copyToRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  // Caches the collection returned from the server.\n  // collection is array of collection versions\n  // If the requested collection matches the cache, return it,\n  // if it doesn't, query the API for the collection versions and\n  // replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(params, forceReload?: boolean) {\n    return new Promise((resolve, reject) => {\n      const { name, namespace, repository_name } = params;\n      const [collection] = this.cachedCollection;\n      if (\n        !forceReload &&\n        collection &&\n        collection.collection_version.name === name &&\n        collection.collection_version.namespace === namespace &&\n        collection.repository.name === repository_name\n      ) {\n        return resolve(this.cachedCollection);\n      }\n\n      super\n        .list(params)\n        .then((result) => {\n          const { data } = result.data;\n          this.cachedCollection = data;\n          return resolve(data);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      `${this.apiPath}?dependency=${namespace}.${collection}`,\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { RemoteType } from '.';\nimport { HubAPI } from './hub';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import {\n  AnsibleDistributionAPI,\n  CollectionVersionSearch,\n  findDistroBasePathByRepo,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository: CollectionVersionSearch['repository'];\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  async sign(data: SignProps) {\n    const { repository, ...args } = data;\n    const distros = await AnsibleDistributionAPI.list({\n      repository: repository.pulp_href,\n    });\n\n    const distroBasePath = findDistroBasePathByRepo(\n      distros.data.results,\n      repository,\n    );\n\n    const updatedData = {\n      distro_base_path: distroBasePath,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from remote.ts\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(uuid, params?) {\n    return this.list(params, this.getPath(null) + uuid + '/versions/');\n  }\n\n  // delete(uuid)\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n\n  revert(id, version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(id, collection_version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      add_content_units: [collection_version_href],\n    });\n  }\n\n  removeContent(id, collection_version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n\n  list(params?) {\n    return super.list(params, this.apiPath);\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/copy_collection_version/`,\n      params,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/move_collection_version/`,\n      params,\n    );\n  }\n\n  modify(\n    pulp_id: string,\n    add_content_units: string[],\n    remove_content_units: string[],\n    base_version: string,\n  ) {\n    const params = {\n      add_content_units,\n      remove_content_units,\n      base_version,\n    };\n\n    return this.http.post(this.apiPath + `${pulp_id}/modify/`, params);\n  }\n}\n\nexport const Repositories = new API();\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top: '80px',\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distributions) => {\n    if (distributions?.find?.(({ name }) => name === repository.name)) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n      ? 'approved'\n      : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n            onLoad={onDistributionsLoad}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <Select\n          variant='single'\n          isOpen={selectOpen}\n          onToggle={() => setSelectOpen(!selectOpen)}\n          onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n          selections={selectOptions[selectedPipeline]}\n        >\n          {Object.entries(selectOptions).map(([k, v]) => (\n            <SelectOption key={k} value={v} />\n          ))}\n        </Select>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          {remotes ? (\n            <APISearchTypeAhead\n              loadResults={loadRemotes}\n              onClear={() => updateRepository({ ...repository, remote: null })}\n              onSelect={(_event, value) =>\n                updateRepository({\n                  ...repository,\n                  remote: remotes.find(({ name }) => name === value)?.pulp_href,\n                })\n              }\n              placeholderText={t`Select a remote`}\n              results={remotes}\n              selections={\n                selectedRemote\n                  ? [\n                      {\n                        name: selectedRemote.name,\n                        id: selectedRemote.pulp_href,\n                      },\n                    ]\n                  : []\n              }\n            />\n          ) : null}\n          {remotesError ? (\n            <span\n              style={{\n                color: 'var(--pf-global--danger-color--200)',\n              }}\n            >\n              {t`Failed to load remotes: ${remotesError}`}\n            </span>\n          ) : null}\n          {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Constants } from 'src/constants';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  className,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace?.company || collection_version.namespace;\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Badge isRead>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name === Constants.CERTIFIED_REPO\n                    ? t`Certified`\n                    : repository.name}\n                </Link>\n              </Badge>\n            </Text>\n          </TextContent>\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import * as moment from 'moment';\nimport * as React from 'react';\nimport { Tooltip } from 'src/components';\n\ninterface IProps {\n  date: string;\n}\n\nexport const DateComponent = (props: IProps) => {\n  const { date } = props;\n\n  return (\n    date && (\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one.`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  DeleteCollectionModal,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { DeleteCollectionUtils, errorMessage } from 'src/utilities';\nimport {\n  canSignNamespace,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\nimport './header.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  collection: CollectionVersionSearch;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionVersionSearch;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n  namespace: NamespaceType;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n      namespace: null,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n  }\n\n  render() {\n    const {\n      collections,\n      collection,\n      content,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.collection_version.pulp_created;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context.featureFlags;\n\n    const signedString = () => {\n      if (!display_signatures) {\n        return '';\n      }\n\n      return collection.is_signed ? t`(signed)` : t`(unsigned)`;\n    };\n\n    const isLatestVersion = (v) => {\n      return `${moment(v.pulp_created).fromNow()} ${signedString()}\n      ${\n        v.version === collections[0].collection_version.version\n          ? t`(latest)`\n          : ''\n      }`;\n    };\n\n    const { collection_version, namespace_metadata: namespace } = collection;\n    const { name: collectionName, version } = collection_version;\n\n    const company = namespace?.company || collection_version.namespace;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version)}\n        >\n          {t`Delete version ${version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${version}`}\n        </DropdownItem>\n      ),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.deprecate(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={collections.length}\n              />\n            </div>\n            {this.paginateVersions(collections).map(\n              ({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {t`updated ${isLatestVersion(collection_version)}`}\n                </ListItem>\n              ),\n            )}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={collections.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection_version.name}\n          logo={\n            namespace?.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              selectedRepo={collection.repository.name}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < collections.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    collections,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              {display_signatures ? (\n                <SignatureBadge\n                  isCompact\n                  signState={collection.is_signed ? 'signed' : 'unsigned'}\n                />\n              ) : null}\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'distributions',\n        title: t`Distributions`,\n        link: formatPath(\n          Paths.collectionDistributionsByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count).map((c) => c.collection_version);\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    CollectionAPI.deleteCollectionVersion(deleteCollection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.collection_version.name;\n\n        waitForTask(taskId).then(() => {\n          const topVersion = (collections || []).filter(\n            ({ collection_version }) =>\n              collection_version.version !== collectionVersion,\n          );\n\n          if (topVersion.length) {\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].collection_version.version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.queueAlert({\n              variant: 'success',\n              title: (\n                <Trans>\n                  Collection &quot;{name} v{collectionVersion}&quot; has been\n                  successfully deleted.\n                </Trans>\n              ),\n            });\n            this.setState({\n              redirect: formatPath(Paths.namespaceDetail, {\n                namespace: deleteCollection.collection_version.namespace,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport {\n  AnsibleDistributionAPI,\n  CollectionAPI,\n  CollectionVersionSearch,\n  findDistroBasePathByRepo,\n} from 'src/api';\nimport 'src/api/response-types/collection';\nimport { useContext } from 'src/loaders/app-context';\nimport { LoadingPageSpinner } from '../loading/loading-page-spinner';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      }).then((result) => {\n        const distroBasePath = findDistroBasePathByRepo(\n          result.data.results,\n          repository,\n        );\n\n        const { namespace, name, version } = collectionVersion;\n\n        CollectionAPI.getSignatures(distroBasePath, namespace, name, version)\n          .then((res) => {\n            setSignatures(res.data.signatures);\n            setIsLoading(false);\n          })\n          .catch(({ code, message }) => {\n            addAlert(code, message);\n            setIsLoading(false);\n            setShow(false);\n          });\n      });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {context.user.is_anonymous &&\n            !context.settings\n              .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                <div>\n                  <Trans>\n                    To download this collection, configure your client to\n                    connect to one of this repositories{' '}\n                    <Link\n                      to={formatPath(Paths.collectionDistributionsByRepo, {\n                        repo: repository.name,\n                        namespace: collection_version.namespace,\n                        collection: collection_version.name,\n                      })}\n                    >\n                      distributions\n                    </Link>\n                    .\n                  </Trans>\n                </div>\n                <a ref={downloadLinkRef} style={{ display: 'none' }}></a>\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out'></div>\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Repositories } from 'src/api';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const [repositories, setRepositories] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  const loadRepos = () => {\n    Repositories.list({\n      name__icontains: inputText,\n      pulp_label_select: '!hide_from_search',\n    }).then((res) => {\n      const repos = res.data.results.map(({ name }) => ({\n        id: name,\n        title: name,\n      }));\n      setRepositories(repos);\n    });\n  };\n\n  useEffect(() => {\n    if (selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  useEffect(() => {\n    setInputText(props.params['repository_name'] || '');\n  }, [props.params.repository_name]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [inputText]);\n\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures } = context.featureFlags;\n  const displayTags = ignoredParams.includes('tags') === false;\n  const displayRepos = ignoredParams.includes('repository_name') === false;\n  const displayNamespaces = ignoredParams.includes('namespace') === false;\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n      options: repositories,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'multiple' as const,\n      options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n        id: tag,\n        title: tag,\n      })),\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n              selectFilter={(selected) => {\n                setSelectedFilter(selected);\n              }}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  is_signed: t`sign state`,\n                  tags: t`tags`,\n                  keywords: t`keywords`,\n                  repository_name: t`repository`,\n                  namespace: t`namespace`,\n                }}\n                niceValues={{\n                  is_signed: {\n                    false: t`unsigned`,\n                    true: t`signed`,\n                  },\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n    showControls,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              controls={showControls ? props.renderCollectionControls(c) : null}\n              key={i}\n              {...c}\n              displaySignatures={displaySignatures}\n              showNamespace={true}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Label,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps extends CollectionVersionSearch {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  displaySignatures: boolean;\n}\n\nexport const CollectionListItem = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  is_deprecated,\n  displaySignatures,\n  showNamespace,\n  controls,\n}: IProps) => {\n  const cells = [];\n\n  const company = namespace?.company || collection_version.namespace;\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup {...chipGroupProps()}>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      {controls ? <div className='hub-entry'>{controls}</div> : null}\n      <div className='hub-right-col hub-entry'>\n        <Trans>\n          Updated <DateComponent date={collection_version.pulp_created} />\n        </Trans>\n      </div>\n      <div className='hub-entry'>v{collection_version.version}</div>\n      <Label variant='outline' className='hub-repository-badge'>\n        <Link\n          to={formatPath(Paths.ansibleRepositoryDetail, {\n            name: repository.name,\n          })}\n        >\n          {repository.name}\n        </Link>\n      </Label>\n      {displaySignatures ? (\n        <SignatureBadge\n          className='hub-entry'\n          variant='outline'\n          signState={is_signed ? 'signed' : 'unsigned'}\n        />\n      ) : null}\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm'></Spinner>}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeAheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              this.submitFilter(value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeAheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy\n      hoverTip={t`Copy`}\n      clickTip={t`Copied`}\n      variant='inline-compact'\n      isCode\n    >\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { AppContext } from 'src/loaders/app-context';\nimport { mapErrorMessages } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortHeaders,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-list-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      <EmptyStateIcon icon={icon} />\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const repoStatus = collection.repository.pulp_labels?.pipeline;\n      if (repoStatus === Constants.NOTCERTIFIED) {\n        approvalStatus = t`rejected`;\n      } else if (repoStatus === Constants.NEEDSREVIEW) {\n        approvalStatus = t`waiting for approval`;\n      } else if (repoStatus === Constants.APPROVED) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { errorMessage, filterIsSet } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent, EmptyStateFilter, EmptyStateNoData } from '..';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ntype ParamsType = { page?: number; page_size?: number };\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState = null },\n  listItemActions?,\n) => React.ReactNode;\ntype RenderModals = ({ addAlert, state, setState, query }) => React.ReactNode;\nexport type SortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T, ExtraState> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  didMount?: ({ context, addAlert }) => void;\n  displayName: string;\n  errorTitle: string;\n  extraState?: ExtraState;\n  filterConfig: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: string;\n}\n\nexport const ListPage = function <T, ExtraState = Record<string, never>>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // extra code to run on mount\n  didMount,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // extra initial state\n  extraState,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n}: ListPageParams<T, ExtraState>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        unauthorised: false,\n        ...extraState,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n\n      if (didMount) {\n        didMount({\n          context: this.context,\n          addAlert: (alert) => this.addAlert(alert),\n        });\n      }\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const knownFilters = (filterConfig || []).map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        (filterConfig || []).map(({ id, title }) => [id, title]),\n      );\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      return (\n        <React.Fragment>\n          <AlertList\n            alerts={alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          ></AlertList>\n          <BaseHeader title={title} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={noDataDescription}\n              title={noDataTitle}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-list-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) =>\n                                this.setState({ inputText })\n                              }\n                              updateParams={updateParams}\n                              params={params}\n                              filterConfig={filterConfig}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        updateParams(p);\n                        this.setState({ inputText: '' });\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      return (\n        <table aria-label={title} className='hub-c-table-content pf-c-table'>\n          <SortTable\n            options={{ headers: sortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: errorTitle,\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      this.setState({\n        alerts: [...this.state.alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface PageWithTabsParams<T, ExtraState> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  didMount?: ({ context, addAlert }) => void;\n  displayName: string;\n  errorTitle: string;\n  extraState?: ExtraState;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: string }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n  ExtraState = Record<string, never>,\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // extra code to run on mount\n  didMount,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // extra initial state\n  extraState,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T, ExtraState>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n        ...extraState,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n\n      if (didMount) {\n        didMount({\n          context: this.context,\n          addAlert: (alert) => this.addAlert(alert),\n        });\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const tab = tabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-list-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={tabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: errorTitle,\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      this.setState({\n        alerts: [...this.state.alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface PageParams<T, ExtraState> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  didMount?: ({ context, addAlert }) => void;\n  displayName: string;\n  errorTitle: string;\n  extraState?: ExtraState;\n  headerActions?: ActionType[];\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n  ExtraState = Record<string, never>,\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // extra code to run on mount\n  didMount,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // extra initial state\n  extraState,\n  // displayed after filters\n  headerActions,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T, ExtraState>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        ...extraState,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n\n      if (didMount) {\n        didMount({\n          context: this.context,\n          addAlert: (alert) => this.addAlert(alert),\n        });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList\n            alerts={alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          ></AlertList>\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-list-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return;\n      }\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: errorTitle,\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      this.setState({\n        alerts: [...this.state.alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelGroup } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const PulpLabels = ({\n  labels,\n}: {\n  labels: { [key: string]: string };\n}) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyDistributions = ({\n  emptyText,\n  onLoad,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  onLoad?: (distributions) => void;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setError(null);\n      setLoading(false);\n      onLoad?.([]);\n      return;\n    }\n\n    setDistributions([]);\n    setError(null);\n    setLoading(true);\n\n    AnsibleDistributionAPI.list({ repository: repositoryHref })\n      .then(({ data }) => {\n        setDistributions(data.results);\n        setError(null);\n        setLoading(false);\n        onLoad?.(data.results);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions([]);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n        onLoad?.([]);\n      });\n  }, [repositoryHref]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n        (emptyText ?? '---')}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  onLoad,\n  remoteHref,\n}: {\n  emptyText?: string;\n  onLoad?: (repositories) => void;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setError(null);\n      setLoading(false);\n      onLoad?.([]);\n      return;\n    }\n\n    setRepositories([]);\n    setError(null);\n    setLoading(true);\n\n    AnsibleRepositoryAPI.list({ remote: remoteHref })\n      .then(({ data }) => {\n        setRepositories(data.results);\n        setError(null);\n        setLoading(false);\n        onLoad?.(data.results);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories([]);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n        onLoad?.([]);\n      });\n  }, [remoteHref]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n    </>\n  );\n};\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  }[type] || type);\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport './header.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlert,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  inputText: '',\n};\n\nexport const PublishToControllerModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState(initialState.alerts);\n  const [controllers, setControllers] = useState(initialState.controllers);\n  const [controllerCount, setControllerCount] = useState(\n    initialState.controllerCount,\n  );\n  const [controllerParams, setControllerParams] = useState(\n    initialState.controllerParams,\n  );\n  const [digest, setDigest] = useState(initialState.digest);\n  const [digestByTag, setDigestByTag] = useState(initialState.digestByTag);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [tag, setTag] = useState(initialState.tag);\n  const [tagResults, setTagResults] = useState(initialState.tagResults);\n  const [tagSelection, setTagSelection] = useState(initialState.tagSelection);\n\n  const [inputText, setInputText] = useState(initialState.inputText);\n\n  useEffect(() => {\n    const { image, isOpen } = props;\n    if (isOpen) {\n      // load on open\n      fetchData(image);\n    } else {\n      // reset on close\n      setAlerts(initialState.alerts);\n      setControllers(initialState.controllers);\n      setControllerCount(initialState.controllerCount);\n      setControllerParams(initialState.controllerParams);\n      setDigest(initialState.digest);\n      setDigestByTag(initialState.digestByTag);\n      setLoading(initialState.loading);\n      setTag(initialState.tag);\n      setTagResults(initialState.tagResults);\n      setTagSelection(initialState.tagSelection);\n\n      setInputText(initialState.inputText);\n    }\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    fetchControllers();\n  }, [controllerParams]);\n\n  function fetchControllers() {\n    return ControllerAPI.list(controllerParams)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        setControllers(controllers);\n        setControllerCount(controllerCount);\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Controllers list could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        setDigestByTag(digestByTag);\n        setTagResults(tagResults);\n\n        return { digestByTag, tags };\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Tags could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchData(image) {\n    const controllers = fetchControllers();\n    const tagsPromises = fetchTags(image).then(({ tags, digestByTag }) => {\n      // tags and digestByTag must be passed this way from fetchTags, otherwise, closure\n      // will see old value of both variables set in fetchTags\n      // and additionaly, tags state is not needed at all because of that\n\n      // preselect tag if present\n      let { digest, tag } = props;\n      tag ||= tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= digestByTag[tag]; // set digest by tag unless in props\n\n      setDigest(digest);\n      setTag(tag);\n      setTagSelection(tag ? [{ id: tag, name: tag }] : []);\n    });\n\n    Promise.all([controllers, tagsPromises]).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function renderControllers() {\n    const { image, isOpen } = props;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  const { image, isOpen, onClose } = props;\n\n  // redirects to ./2.x (latest)\n  const docsLink =\n    'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/';\n\n  const noData =\n    controllers?.length === 0 &&\n    !filterIsSet(controllerParams, ['host__icontains']);\n\n  const notListedMessage = (\n    <>\n      {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n      {docsLink && (\n        <>\n          <a href={docsLink} target='_blank' rel='noreferrer'>\n            {t`Learn more`}\n          </a>{' '}\n          <ExternalLinkAltIcon />\n        </>\n      )}\n    </>\n  );\n\n  const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n  const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n  return (\n    <Modal\n      variant='large'\n      title={t`Use in Controller`}\n      isOpen={isOpen}\n      onClose={onClose}\n      actions={[\n        <Button key='close' variant='primary' onClick={onClose}>\n          {t`Close`}\n        </Button>,\n      ]}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      ></AlertList>\n      {loading && (\n        <div style={{ padding: '16px' }}>\n          <LoadingPageSpinner />\n        </div>\n      )}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          title={t`No Controllers available`}\n          description={notListedMessage}\n        />\n      ) : null}\n\n      {isOpen && !loading && !noData && controllers && (\n        <>\n          <DescriptionList isHorizontal>\n            <DescriptionListGroup>\n              <DescriptionListTerm>\n                {t`Execution Environment`}\n              </DescriptionListTerm>\n              <DescriptionListDescription>{image}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <Flex>\n                  <FlexItem>\n                    <APISearchTypeAhead\n                      loadResults={(name) => fetchTags(image, name)}\n                      onClear={() => {\n                        setTag(null);\n                        setTagSelection([]);\n                      }}\n                      onSelect={(event, value) => {\n                        const digest = digestByTag[value.toString()];\n                        setTag(digest && value.toString());\n                        setTagSelection([{ id: value, name: value }]);\n                        setDigest(digest);\n                      }}\n                      placeholderText={t`Select a tag`}\n                      results={tagResults}\n                      selections={tagSelection}\n                      toggleIcon={<TagIcon />}\n                    />\n                  </FlexItem>\n                  <FlexItem></FlexItem>\n                </Flex>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {digest && (\n              <>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    <ShaLabel grey long digest={digest} />\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              </>\n            )}\n          </DescriptionList>\n          <Spacer />\n          <Trans>\n            Click on the Controller URL that you want to use the above execution\n            environment in, and it will launch that Controller&apos;s console.\n            Log in (if necessary) and follow the steps to complete the\n            configuration.\n          </Trans>\n          <br />\n          {!unsafeLinksSupported && (\n            <Trans>\n              <b>Note:</b> The following links may be blocked by your browser.\n              Copy and paste the external link manually.\n            </Trans>\n          )}\n          <Spacer />\n\n          <Flex>\n            <FlexItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => setInputText(text)}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                params={controllerParams}\n                filterConfig={[\n                  {\n                    id: 'host__icontains',\n                    title: t`Controller name`,\n                  },\n                ]}\n              />\n            </FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n            <FlexItem>\n              <Pagination\n                params={controllerParams}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                count={controllerCount}\n                isTop\n              />\n            </FlexItem>\n          </Flex>\n\n          <AppliedFilters\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            params={controllerParams}\n            ignoredParams={['page_size', 'page']}\n            niceNames={{\n              host__icontains: t`Controller name`,\n            }}\n          />\n\n          <Spacer />\n          {renderControllers()}\n          <Spacer />\n\n          <Pagination\n            params={controllerParams}\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            count={controllerCount}\n            isTop\n          />\n          <Spacer />\n          <div>{notListedMessage}</div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderModuleLink: (moduleName: string) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  // checks if I(), B(), M(), U(), L(), or C() exists. Returns type (ex: B)\n  // and value in parenthesis. Based off of formatters in ansible:\n  // https://github.com/ansible/ansible/blob/devel/hacking/build_library/build_ansible/jinja2/filters.py#L26\n  CUSTOM_FORMATTERS = /([IBMULC])\\(([^)]+)\\)/gm;\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  // This functions similar to how string.replace() works, except it returns\n  // a react object instead of a string\n  private reactReplace(\n    text: string,\n    reg: RegExp,\n    replacement: (matches: string[]) => React.ReactNode,\n  ): React.ReactNode {\n    const fragments = [];\n\n    let match: string[];\n    let prevIndex = 0;\n    while ((match = reg.exec(text)) !== null) {\n      fragments.push(\n        text.substr(prevIndex, reg.lastIndex - prevIndex - match[0].length),\n      );\n      fragments.push(replacement(match));\n      prevIndex = reg.lastIndex;\n    }\n\n    if (fragments.length === 0) {\n      return <span>{text}</span>;\n    }\n\n    // append any text after the last match\n    if (prevIndex != text.length - 1) {\n      fragments.push(text.substring(prevIndex));\n    }\n\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    const { renderModuleLink, renderDocLink } = this.props;\n\n    const nstring = this.reactReplace(text, this.CUSTOM_FORMATTERS, (match) => {\n      const fullMatch = match[0];\n      const type = match[1];\n      const textMatch = match[2];\n\n      switch (type) {\n        case 'L': {\n          const url = textMatch.split(',');\n          return renderDocLink(url[0], url[1]);\n        }\n        case 'U':\n          return (\n            <a href={textMatch} target='_blank' rel='noreferrer'>\n              {textMatch}\n            </a>\n          );\n        case 'I':\n          return <i>{textMatch}</i>;\n        case 'C':\n          return <span className='inline-code'>{textMatch}</span>;\n        case 'M':\n          return renderModuleLink(textMatch);\n\n        case 'B':\n          return <b>{textMatch}</b>;\n\n        default:\n          return fullMatch;\n      }\n    });\n\n    return nstring;\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, pluginName: string) {\n    const isDeprecated = doc.deprecated || pluginName.startsWith('_');\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(\n            requiredFields,\n            disabledFields,\n            <ActionGroup key='actions'>\n              {save}\n              {cancel}\n            </ActionGroup>,\n          )}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields, extra?) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path?: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\nexport const RepoSelector = ({\n  selectedRepo,\n  path,\n  pathParams,\n  isDisabled,\n}: IProps) => {\n  const [selectExpanded, setSelectExpanded] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const getRepoName = (repoName) => {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return repo ? i18n._(repo) : repoName;\n  };\n\n  const repoNames = Constants.REPOSITORYNAMES;\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <InputGroupText\n            style={{ paddingLeft: 0 }}\n            variant='plain'\n            className='hub-input-group-text-no-wrap'\n          >\n            {t`Repository`}\n          </InputGroupText>\n          <Select\n            className='nav-select'\n            isDisabled={!path || isDisabled}\n            isOpen={selectExpanded}\n            isPlain={false}\n            onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const originalRepo = selectedRepo;\n              const newRepo = getRepoName(event.target.name);\n\n              setSelectExpanded(false);\n\n              if (newRepo !== originalRepo) {\n                const newPath = formatPath(path, {\n                  ...pathParams,\n                  repo: event.target.name,\n                });\n                navigate(newPath);\n              }\n            }}\n            onToggle={(isExpanded) => setSelectExpanded(isExpanded)}\n            selections={getRepoName(selectedRepo)}\n            variant='single'\n          >\n            {Object.keys(repoNames).map((option) => (\n              <SelectOption\n                name={option}\n                key={option}\n                value={i18n._(repoNames[option])}\n              />\n            ))}\n          </Select>\n        </InputGroup>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  TextInputTypes,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport { APISearchTypeAhead, AlertType, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n  } = props;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <>\n              {(collections as CollectionVersionSearch[]).length === 1 ? (\n                <Trans>\n                  Deleting{' '}\n                  <b>\n                    {deleteCollection.collection_version.name} v\n                    {collectionVersion}\n                  </b>{' '}\n                  and its data will be lost and this will cause the entire\n                  collection to be deleted.\n                </Trans>\n              ) : (\n                <Trans>\n                  Deleting{' '}\n                  <b>\n                    {deleteCollection.collection_version.name} v\n                    {collectionVersion}\n                  </b>{' '}\n                  and its data will be lost.\n                </Trans>\n              )}\n            </>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b> and its\n              data will be lost.\n            </Trans>\n          )}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\nimport { DateComponent, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${role.github_user} logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          ></Logo>\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        ></Logo>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Wisdom.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Wisdom.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        Are you sure you want to opt the following namespace in to Wisdom?\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Wisdom?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Wisdom.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Wisdom.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace in to\n        Wisdom?\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Wisdom?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Wisdom information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Wisdom.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Wisdom.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Wisdom`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Wisdom`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Learn more about Ansible Wisdom.`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Wisdom settings`\n          : isInDenyIndex\n          ? t`Opt in to Wisdom`\n          : t`Opt out of Wisdom`\n      }\n      variant='small'\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          <div>\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Red Hat is working on exciting new Ansible content\n                    development capabilities within the context of{' '}\n                    <a\n                      href='https://www.redhat.com/en/engage/project-wisdom'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      Project Wisdom\n                    </a>{' '}\n                    <ExternalLinkAltIcon /> to help other automators build\n                    Ansible content.\n                  </p>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  CollectionVersion,\n  CollectionVersionAPI,\n  Repositories,\n  SigningServiceAPI,\n} from 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  SortTable,\n  closeAlert,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTaskUrl,\n} from 'src/utilities';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersion;\n  addAlert: (alert) => void;\n  allRepositories: Repository[];\n  finishAction: () => void;\n  stagingRepoNames: string[];\n  rejectedRepoName: string;\n}\n\nexport const ApproveModal = (props: IProps) => {\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<Repository[]>([]);\n  const [itemsCount, setItemsCount] = useState(0);\n  const [alerts, setAlerts] = useState([]);\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [fixedRepos, setFixedRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const context = useContext();\n\n  function approve() {\n    let error = '';\n\n    async function approveAsync() {\n      setLoading(true);\n\n      let reapprove = false;\n\n      let originRepoName = props.collectionVersion.repository_list.find(\n        (repo) =>\n          props.stagingRepoNames.includes(repo) ||\n          repo == props.rejectedRepoName,\n      );\n\n      // origin repo is not staging or rejected, so this is reapprove process, user can add collection to approved repos\n      if (!originRepoName) {\n        reapprove = true;\n        originRepoName = fixedRepos[0];\n      }\n\n      const reposToApprove = [];\n\n      // fill repos that are actualy needed to approve, some of them may already contain the collection, those dont need to be approved again\n      // this handles the possible inconsistent state\n      selectedRepos.forEach((repo) => {\n        if (!fixedRepos.includes(repo)) {\n          reposToApprove.push(repo);\n        }\n      });\n\n      const repositoriesRef = props.allRepositories\n        .filter((repo) => reposToApprove.includes(repo.name))\n        .map((repo) => repo.pulp_href);\n\n      error = t`Repository name ${originRepoName} not found.`;\n      const repoData = await Repositories.getRepository({\n        name: originRepoName,\n      });\n      if (repoData.data.results.length == 0) {\n        throw new Error();\n      }\n      error = '';\n\n      const pulp_id = parsePulpIDFromURL(repoData.data.results[0].pulp_href);\n\n      error = t`Collection with id ${props.collectionVersion.id} not found.`;\n      const collectionData = await CollectionVersionAPI.get(\n        props.collectionVersion.id,\n      );\n      error = '';\n\n      const autosign = context.settings.GALAXY_AUTO_SIGN_COLLECTIONS;\n      let signingService_href = null;\n\n      if (autosign) {\n        const signingServiceName =\n          context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n        });\n        if (signingList.data.results.length > 0) {\n          signingService_href = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      let promiseCopyOrMove = null;\n      if (reapprove) {\n        // reapprove takes first\n        promiseCopyOrMove = Repositories.copyCollectionVersion(\n          pulp_id,\n          [collectionData.data.pulp_href],\n          repositoriesRef,\n          signingService_href,\n        );\n      } else {\n        promiseCopyOrMove = Repositories.moveCollectionVersion(\n          pulp_id,\n          [collectionData.data.pulp_href],\n          repositoriesRef,\n          signingService_href,\n        );\n      }\n\n      const task = await promiseCopyOrMove;\n      await waitForTaskUrl(task['data'].task);\n\n      setLoading(false);\n      props.finishAction();\n      props.addAlert({\n        title: t`Certification status for collection \"${props.collectionVersion.namespace} ${props.collectionVersion.name} v${props.collectionVersion.version}\" has been successfully updated.`,\n        variant: 'success',\n        description: '',\n      });\n    }\n\n    approveAsync().catch(() => {\n      setLoading(false);\n\n      addAlert({\n        title: t`Failed to approve collection.`,\n        variant: 'danger',\n        description: error,\n      });\n    });\n  }\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function changeSelection(name) {\n    if (fixedRepos.includes(name)) {\n      return;\n    }\n\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      setSelectedRepos(selectedRepos.filter((element) => element != name));\n    } else {\n      // add\n      setSelectedRepos([...selectedRepos, name]);\n    }\n  }\n\n  function loadRepos() {\n    // modify params\n    const par = { ...params };\n    par['pulp_label_select'] = 'pipeline=approved';\n    par['ordering'] = par['sort'];\n    delete par['sort'];\n    setLoading(true);\n\n    Repositories.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  function renderLabels() {\n    const labels = (\n      <>\n        <LabelGroup>\n          {selectedRepos.map((name) => {\n            let label = null;\n            if (fixedRepos.includes(name)) {\n              label = <Label>{name}</Label>;\n            } else {\n              label = (\n                <Label onClose={() => changeSelection(name)}>{name}</Label>\n              );\n            }\n            return <>{label} </>;\n          })}\n        </LabelGroup>\n      </>\n    );\n\n    return (\n      <>\n        <Flex>\n          <FlexItem>\n            <b>{t`Selected`}</b>\n          </FlexItem>\n          <FlexItem>{labels}</FlexItem>\n        </Flex>\n      </>\n    );\n  }\n\n  useEffect(() => {\n    loadRepos();\n  }, [params]);\n\n  useEffect(() => {\n    const fixedReposLocal = [];\n    const selectedReposLocal = [];\n\n    // check for approval repos that are already in collection and select them in UI\n    // this is handling of situation when collection is in inconsistent state\n    props.collectionVersion.repository_list.forEach((repo) => {\n      const count = props.allRepositories.filter((r) => r.name == repo).length;\n      if (count > 0) {\n        fixedReposLocal.push(repo);\n        selectedReposLocal.push(repo);\n      }\n    });\n\n    setSelectedRepos(selectedReposLocal);\n    setFixedRepos(fixedReposLocal);\n  }, []);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectAll() {\n      setSelectedRepos(props.allRepositories.map((a) => a.name));\n      setIsSelectorChecked(true);\n    }\n\n    function selectPage() {\n      const newRepos = [...selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (!selectedRepos.includes(repo.name)) {\n          newRepos.push(repo.name);\n        }\n      });\n\n      setSelectedRepos(newRepos);\n      setIsSelectorChecked(true);\n    }\n\n    function deselectAll() {\n      setSelectedRepos(fixedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function deselectPage() {\n      const newSelectedRepos = selectedRepos.filter(\n        (repo) =>\n          fixedRepos.includes(repo) ||\n          !repositoryList.find((repo2) => repo2.name == repo),\n      );\n      setSelectedRepos(newSelectedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function onToggleCheckbox() {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={selectAll}\n        key='select-all'\n      >{t`Select all (${props.allRepositories.length} items)`}</DropdownItem>,\n      <DropdownSeparator key='separator' />,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${props.allRepositories.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    if (!props.collectionVersion) {\n      return;\n    }\n\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <CheckboxRow\n                rowIndex={i}\n                key={repo.name}\n                isSelected={selectedRepos.includes(repo.name)}\n                onSelect={() => {\n                  changeSelection(repo.name);\n                }}\n                isDisabled={fixedRepos.includes(repo.name)}\n                data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n              >\n                <td>\n                  <div>{repo.name}</div>\n                  <div>{repo.description}</div>\n                </td>\n              </CheckboxRow>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={approve}\n            variant='primary'\n            isDisabled={\n              selectedRepos.length - fixedRepos.length <= 0 || loading\n            }\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          {renderLabels()}\n          <div className='toolbar hub-toolbar'>\n            <Toolbar>\n              <ToolbarGroup>\n                <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n                <ToolbarItem>\n                  <CompoundFilter\n                    inputText={inputText}\n                    onChange={(text) => {\n                      setInputText(text);\n                    }}\n                    updateParams={(p) => setParams(p)}\n                    params={params}\n                    filterConfig={[\n                      {\n                        id: 'name__icontains',\n                        title: t`Repository`,\n                      },\n                    ]}\n                  />\n                </ToolbarItem>\n              </ToolbarGroup>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort']}\n              niceNames={{\n                name__icontains: t`Name`,\n              }}\n            />\n          </div>\n\n          {loading ? <Spinner /> : renderTable()}\n\n          <div className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n            />\n          </div>\n        </section>\n\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { defineMessage, t } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static APPROVED = 'approved';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n    validated: defineMessage({ message: `Validated` }),\n  };\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': t`Manage ansible repositories.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': t`Manage collection remotes.`,\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nconst language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.search, component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport { t } from '@lingui/macro';\nimport { Alert } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <Alert\n        isInline\n        variant='info'\n        title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n      />\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import * as React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\" or \"/beta/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/beta/', '/').replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: formatPath(Paths[NAMESPACE_TERM]),\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl() {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superadmin;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <Link\n          to={formatPath(Paths.taskDetail, {\n            task: parsePulpIDFromURL(task?.task || task),\n          })}\n        >\n          detail page{' '}\n        </Link>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from 'src/utilities';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  const { status, statusText } = e.response;\n  console.log(typeof e.response.data);\n\n  let message = '';\n  const err_detail = mapErrorMessages(e);\n  for (const msg in err_detail) {\n    message = message + err_detail[msg] + ' ';\n  }\n\n  let description;\n\n  if (message !== '') {\n    description = errorMessage(status, statusText, message);\n  } else {\n    description = errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description: description,\n  });\n  callback();\n};\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.collection_version.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { t } from '@lingui/macro';\nimport { Repositories } from 'src/api/repositories';\nimport { Repository } from 'src/api/response-types/repositories';\nimport { waitForTaskUrl } from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\n\nexport class RepositoriesUtils {\n  public static listApproved(): Promise<Repository[]> {\n    async function getAll() {\n      let list = [];\n\n      let page = 0;\n      const pageSize = 100;\n      // watchdog, in case something terrible happened, loop maximum of 10 times. I hope 1000 repos limit is enough\n      // otherwise, doing more than 10 API calls is not acceptable either\n      for (let i = 0; i < 10; i++) {\n        const result = await Repositories.http.get(\n          `${\n            Repositories.apiPath\n          }?offset=${page}&limit=${pageSize}&pulp_label_select=${encodeURIComponent(\n            'pipeline=approved',\n          )}`,\n        );\n\n        list = list.concat(result.data.results);\n        if (list.length >= result.data.count) {\n          return list;\n        }\n\n        page += pageSize;\n      }\n    }\n\n    return getAll();\n  }\n\n  public static async deleteOrAddCollection(\n    repoName,\n    collectionVersion_pulp_href,\n    add,\n  ) {\n    let data = await Repositories.getRepository({ name: repoName });\n\n    if (data.data.results.length == 0) {\n      return Promise.reject({ error: t`Repository ${repoName} not found.` });\n    }\n\n    const repo = data.data.results[0];\n    const pulp_id = parsePulpIDFromURL(repo.pulp_href);\n\n    const addList = [];\n    const removeList = [];\n\n    if (add) {\n      addList.push(collectionVersion_pulp_href);\n    } else {\n      removeList.push(collectionVersion_pulp_href);\n    }\n\n    data = await Repositories.modify(\n      pulp_id,\n      addList,\n      removeList,\n      repo.latest_version_href,\n    );\n\n    data = await waitForTaskUrl(data.data['task']);\n  }\n\n  public static async deleteCollection(repoName, collectionVersion_pulp_href) {\n    return RepositoriesUtils.deleteOrAddCollection(\n      repoName,\n      collectionVersion_pulp_href,\n      false,\n    );\n  }\n\n  public static async addCollection(repoName, collectionVersion_pulp_href) {\n    return RepositoriesUtils.deleteOrAddCollection(\n      repoName,\n      collectionVersion_pulp_href,\n      true,\n    );\n  }\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","findDistroBasePathByRepo","distributions","repository","length","name","distro","find","base_path","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_HubAPI","API","_deleteCollection","_deleteCollectionVersion","_len","args","Array","_key","getUIPath","repo","path","_get","_getPrototypeOf","prototype","response","distributionPath","result","meta","count","collection","_this2","_collection$collectio","collection_version","namespace","is_deprecated","reject","AnsibleDistributionAPI","list","pulp_href","basePath","results","deprecated","res","err","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","version","_this3","distros","distroBasePath","sent","_callee2","_context2","_x2","undefined","NamespaceAPI","PulpStatus","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","forceReload","repository_name","_slicedToArray","cachedCollection","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","RoleAPI","_PulpAPI","for_object_type","newParams","PULP_API_BASE_PATH","permissionId","PulpAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","clearSetFieldsFromRequest","write_only_fields","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","_sign","updatedData","_objectWithoutProperties","_excluded","distro_base_path","SigningServiceAPI","CertificateUploadAPI","signed_collection","AnsibleRemoteAPI","AnsibleRepositoryAPI","uuid","version_href","base_version","collection_version_href","add_content_units","remove_content_units","serviceName","containerId","pulp_type","signServicePath","postObj","manifest_signing_service","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","_ref","removePath","addPath","changedParams","useOrdering","Repositories","pulp_id","collection_versions","destination_repositories","signing_service","APISearchTypeAhead","_React$Component","props","loadResults","onClear","evt","textInput","target","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","React","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","chipGroupProps","_step","options","_iterator","_createForOfIteratorHelper","s","n","done","option","push","SelectOption","f","i18n","AlertList","alerts","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","alertIndex","_ref2","setAlerts","newList","_toConsumableArray","splice","closeAlertMixin","alertStateVariable","AppliedFilters","className","_ref$ignoredParams","ignoredParams","_ref$niceNames","niceNames","niceValues","updateParams","filters","chips","isArray","marginRight","ChipGroup","_extends","categoryName","v","_niceValues$key","Chip","onClick","unsetFilter","renderGroup","Button","AnsibleRepositoryForm","_repository$pulp_labe","_repository$pulp_labe2","_remotes$find","allowEditName","errorMessages","onCancel","onSave","updateRepository","requiredFields","disabledFields","toError","bool","formGroup","fieldName","label","helperText","children","FormGroup","fieldId","HelperText","content","isRequired","validated","helperTextInvalid","inputField","TextInput","onChange","stringField","type","isValid","_useState","useState","_useState2","createDistribution","setCreateDistribution","_useState3","_useState4","disabledDistribution","setDisabledDistribution","_useState5","pulp_labels","hide_from_search","_useState6","hideFromSearch","setHideFromSearch","_useState7","pipeline","_useState8","setPipeline","_useState9","_useState10","disableHideFromSearch","setDisableHideFromSearch","_useState11","_useState12","remotes","setRemotes","_useState13","_useState14","remotesError","setRemotesError","loadRemotes","name__icontains","_ref3","_e$response","status","statusText","errorMessage","useEffect","selectedRemote","_ref4","_useState15","_useState16","selectedPipeline","setSelectedPipeline","_useState17","_useState18","selectOpen","setSelectOpen","selectOptions","staging","toString","approved","none","pipelineHelp","Trans","components","labelsHelp","Form","numericField","LazyDistributions","emptyText","repositoryHref","onLoad","_distributions$find","Checkbox","isChecked","_e","_repository$pulp_labe3","selectPipeline","entries","_ref5","_ref6","k","preventDefault","stopPropagation","PulpLabels","labels","marginTop","private","_event","_remotes$find2","_ref7","color","Spinner","size","ActionGroup","BaseHeader","_this$props","logo","pageControls","breadcrumbs","contextSelector","versionControl","showRepoSelector","cx","Title","headingLevel","Breadcrumbs","links","Breadcrumb","link","index","BreadcrumbItem","isActive","Link","to","CardListSwitcher","_ref$size","disp","view_type","iconClasses","ThLargeIcon","ListIcon","CollectionCard","d","namespace_metadata","is_signed","displaySignatures","menu","footer","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","Text","component","TextVariants","Badge","isRead","formatPath","Paths","SignatureBadge","isCompact","signState","values","CardBody","Tooltip","slice","CollectionNumericLabel","newline","CardFooter","CollectionContentList","toShow","summary","all","showing","keywords","_c$content_type","c","keywordMatch","match","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","val","placeholder","clickable","EmptyStateCustom","icon","ExclamationTriangleIcon","DateComponent","date","moment","format","fromNow","SignSingleCertificateModal","onSubmit","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","FormSelect","FormSelectOption","_ref$signState","_ref$isCompact","Label","CheckCircleIcon","text","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","_submitCertificate","page_size","modalPagination","_this$props$collectio","errorAlert","isOpenSignAllModal","context","settings","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","_this$props$collectio2","isOpenSignModal","collectionVersion","deleteCollection","collections","taskId","parsePulpIDFromURL","task","topVersion","isDeletionPending","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","addAlert","include_related","activeTab","_this$state","urlKeys","latestVersion","pulp_created","_this$context$feature","featureFlags","display_signatures","can_upload_signatures","isLatestVersion","collectionName","Navigate","canSign","canSignNamespace","hasPermission","dropdownItems","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","issueUrl","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","isInline","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","selectedRepo","loadingVariant","renderSelectVersions","Flex","FlexItem","href","rel","ExternalLinkAltIcon","StatefulDropdown","items","renderTabs","_this4","related_fields","my_permissions","active","_this$props2","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","_this$state$versionTo","_this5","reload","_this6","_err$response2","warning","AppContext","LoadingPageSpinner","Bullseye","width","height","DownloadSignatureGridItem","useContext","show","setShow","signatures","setSignatures","isLoading","setIsLoading","message","padding","DownloadIcon","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","downloadURL","current","click","download","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","CollectionFilter","repositories","setRepositories","inputText","setInputText","selectedFilter","setSelectedFilter","loadRepos","pulp_label_select","repos","displayTags","displayRepos","displayNamespaces","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","selectFilter","false","true","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","showNamespace","EmptyStateFilter","clearAllFilters","cells","DataListCell","alignRight","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","listDep","EmptyStateNoData","fqn","version_range","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","Sort","sort","repository_list","selectedID","currentTarget","replace","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","FilterIcon","renderInput","submitFilter","trim","SearchIcon","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","typeAheadResults","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","hoverTip","clickTip","isCode","DeleteModal","isRemove","_ref$variant","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","Details","_ref$fields","fields","overflowWrap","whiteSpace","JSON","stringify","DetailList","actionContext","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderTableRow","sortHeaders","setItems","setParams","setItemCount","loading","setLoading","_ref2$data","handleHttpError","renderModals","action","_action$modal","modal","_action$modal2","knownFilters","noData","fromEntries","button","SortTable","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","EmptyStatePrimary","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","OutlinedQuestionCircleIcon","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","followMessages","handleScrollClick","messages","renderMessage","level","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","repoStatus","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","Status","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","split","artifact","sha256","loaded","total","msg","cancel","ListPage","_class","condition","didMount","displayName","extraState","klass","location","search","unauthorised","_renderModals","hasObjectPermission","navigate","Main","renderTable","withRouter","PageWithTabs","headerDetails","renderTab","tabUpdateParams","prevProps","tab","routeParams","permission","_item$my_permissions","_item$my_permissions$","visible","Tabs","NotFound","Page","transformParams","render","_transformParams","_distributions$map","_distributions$map$ca","_distributions$map$ca2","setDistributions","setError","errorElement","ExclamationCircleIcon","LazyRepositories","_repositories$map","remoteHref","_ref$active","LoadingPageWithHeader","Skeleton","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","editing","TextArea","ReactMarkdown","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","NamespaceForm","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","AccessTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","sortBy","renderGroupRow","_this$props3","urlPrefix","ListItemActions","kebabItems","_this$props4","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","_this7","_this$props5","pulpObjectType","selectRolesMessage","_this$props$showGroup","_this$props$showGroup2","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","addGroup","_group$object_roles","_this8","_this$props$showRoleS","addRole","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","PartnerHeader","setSelected","_this$context","model_permissions","showUserManagement","userManagementFilter","allPermissions","categories","forEach","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","default","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","typeAheadAriaLabel","_model_permissions$pe3","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","_step2","_iterator2","ret","contains","reg","replacement","fragments","prevIndex","exec","substr","substring","renderModuleLink","renderDocLink","reactReplace","CUSTOM_FORMATTERS","fullMatch","textMatch","pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","save","renderForm","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","Switch","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","onEditorDidMount","editor","focus","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","selectExpanded","setSelectExpanded","useNavigate","getRepoName","repoName","repoNames","InputGroupText","newRepo","newPath","ResourcesForm","resources","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","onSelectProp","_ref$toggleType","_ref$isPlain","ariaLabel","Dropdown","toggle","renderToggle","open","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","typeToVariantMap","primary","secondary","_ref$type","labelProps","OutlinedClockIcon","ExclamationIcon","SyncAltIcon","statusToProps","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","toUpperCase","getContentEntry","a","b","parseLinks","searchBarRef","Nav","theme","NavList","filterString","filteredLinks","NavExpandable","capitalize","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","renderLinks","entry","selectedName","selectedType","base","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","PFTooltip","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","PFClipboardCopy","PFFileUpload","clearButtonText","_this$props$buttons","_this$props$kebabItem","buttons","anyButtons","anyKebab","textAlign","DeleteAnsibleRemoteModal","closeAction","pending","setPending","DeleteAnsibleRepositoryModal","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","cancelButtonText","closeButtonAriaLabel","titleId","descriptionId","direction","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","setRoles","rolesItemCount","setRolesItemCount","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","_ref$response","finishAction","_ref2$response","_ref3$response","expandableTitle","ApproveModal","isSelectorChecked","setIsSelectorChecked","isSelectorOpen","setIsSelectorOpen","repositoryList","setRepositoryList","itemsCount","setItemsCount","selectedRepos","setSelectedRepos","fixedRepos","setFixedRepos","_useState19","_useState20","prevAlerts","changeSelection","checked","par","fixedReposLocal","selectedReposLocal","allRepositories","_approveAsync","reapprove","originRepoName","reposToApprove","repositoriesRef","repoData","collectionData","autosign","signingService_href","signingServiceName","signingList","promiseCopyOrMove","stagingRepoNames","rejectedRepoName","GALAXY_AUTO_SIGN_COLLECTIONS","waitForTaskUrl","approveAsync","selectPage","newRepos","deselectPage","newSelectedRepos","repo2","DropdownSeparator","document","getElementById","splitButtonItems","DropdownToggleCheckbox","renderMultipleSelector","sortTableOptions","INSIGHTS_DEPLOYMENT_MODE","published","community","_props","NotFoundImage","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","plurals","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","activate","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","I18nProvider","App","UI_BASE_PATH","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","collapsedText","expandedText","total_count","saveAs","Blob","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","getRepoUrl","host","el","newObj","has_model_permission","is_superadmin","lastSynced","entity","last_sync_task","lastSyncStatus","_options$waitMs","waitMs","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","taskUrl","taskAlert","statusCode","customMessage","custom","callback","err_detail","outsideError","protocol","URL","_namespace$related_fi","can_create_signatures","getUsedbyDependencies","ClassComponent","WithRouter","useLocation","useParams","routePath","RepositoriesUtils","_addCollection","_deleteOrAddCollection","_getAll","getAll","collectionVersion_pulp_href","addList","removeList","latest_version_href","_x3","_callee3","_context3","deleteOrAddCollection","_x4","_x5","_callee4","_context4","_x6","_x7","paramString","numericTypes","appendParam","cloneDeep","param","getQueryString","_i2","_deleteKeys","getReduced","deleteParam","sortParams","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}