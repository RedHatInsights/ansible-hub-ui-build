{"version":3,"file":"js/140.824cfe017df1a073be83.js","mappings":"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","sources":["webpack:///./src/containers/search/search.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { Button, DataList, DropdownItem, Switch } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  MySyncListAPI,\n  SyncListType,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  CollectionCard,\n  CollectionListItem,\n  CollectionNextPageCard,\n  DeleteCollectionModal,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  HubListToolbar,\n  ImportModal,\n  LoadingPageSpinner,\n  Pagination,\n  StatefulDropdown,\n  closeAlertMixin,\n  collectionFilter,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\nimport './search.scss';\n\ninterface IState {\n  collections: CollectionVersionSearch[];\n  count: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n    namespace?: string;\n  };\n  loading: boolean;\n  synclist: SyncListType;\n  alerts: AlertType[];\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  redirect: string;\n  noDependencies: boolean;\n  deleteCollection: CollectionVersionSearch;\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n  deleteAll: boolean;\n}\n\nclass Search extends React.Component<RouteProps, IState> {\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = Constants.DEFAULT_PAGE_SIZE;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem(\n        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n      );\n    }\n\n    this.state = {\n      collections: [],\n      params: params,\n      count: 0,\n      loading: true,\n      synclist: undefined,\n      alerts: [],\n      updateCollection: null,\n      showImportModal: false,\n      redirect: null,\n      noDependencies: false,\n      deleteCollection: null,\n      confirmDelete: false,\n      isDeletionPending: false,\n      deleteAll: true,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  private load() {\n    this.queryCollections();\n\n    if (IS_INSIGHTS) {\n      this.getSynclist();\n    }\n  }\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />;\n    }\n\n    const {\n      loading,\n      collections,\n      params,\n      count,\n      showImportModal,\n      updateCollection,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n    } = this.state;\n    const noData =\n      collections.length === 0 &&\n      !filterIsSet(params, [\n        'keywords',\n        'tags',\n        'is_signed',\n        'repository_name',\n        'namespace',\n      ]);\n\n    const updateParams = (p) =>\n      this.updateParams(p, () => this.queryCollections());\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    const ignoredParams = ['page', 'page_size', 'sort', 'view_type'];\n\n    return (\n      <div className='search-page'>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        <BaseHeader className='hub-header-bordered' title={t`Collections`} />\n        {!noData && (\n          <HubListToolbar\n            count={count}\n            ignoredParams={ignoredParams}\n            params={params}\n            switcher={Constants.SEARCH_VIEW_TYPE_LOCAL_KEY}\n            updateParams={updateParams}\n            {...collectionFilter({\n              featureFlags: this.context.featureFlags,\n              ignoredParams,\n            })}\n          />\n        )}\n        {loading ? (\n          <LoadingPageSpinner />\n        ) : noData ? (\n          <EmptyStateNoData\n            title={t`No collections yet`}\n            description={t`Collections will appear once uploaded`}\n          />\n        ) : (\n          <>\n            <section className='collection-container'>\n              {this.renderCollections(collections, {\n                count,\n                params,\n                updateParams,\n              })}\n            </section>\n            <section className='footer'>\n              <Pagination\n                params={params}\n                updateParams={updateParams}\n                count={count}\n              />\n            </section>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private renderCollections(collections, { count, params, updateParams }) {\n    if (collections.length === 0) {\n      return (\n        <EmptyStateFilter\n          clearAllFilters={() => {\n            ParamHelper.clearAllFilters({\n              params,\n              ignoredParams: ['page', 'page_size', 'sort', 'view_type'],\n              updateParams,\n            });\n          }}\n        />\n      );\n    }\n\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections, {\n        count,\n        params,\n        updateParams,\n      });\n    }\n  }\n\n  private renderCards(collections, { count, params, updateParams }) {\n    return (\n      <div className='hub-cards'>\n        {collections.map((c, i) => {\n          return (\n            <CollectionCard\n              key={i}\n              {...c}\n              footer={this.renderSyncToogle(\n                c.collection_version.name,\n                c.collection_version.namespace,\n              )}\n              menu={this.renderMenu(false, c)}\n              displaySignatures={this.context.featureFlags.display_signatures}\n            />\n          );\n        })}\n        {count > params.page_size * (params.page ?? 1) ? (\n          <CollectionNextPageCard\n            onClick={() =>\n              updateParams({ ...params, page: (params.page ?? 1) + 1 })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  private handleControlClick(collection) {\n    const { name } = collection.collection_version;\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${name}\" has been successfully deprecated.`\n            : t`The collection \"${name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          this.load();\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${name}\" could not be deprecated.`\n                : t`Collection \"${name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private renderMenu(list, collection) {\n    const { hasPermission } = this.context;\n    const hasObjectPermission = (permission, namespace) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n    const { display_repositories } = this.context.featureFlags;\n    const canDeleteCommunityCollection =\n      IS_COMMUNITY &&\n      hasObjectPermission(\n        'galaxy.change_namespace',\n        collection.collection_version.namespace,\n      );\n\n    const menuItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies: null,\n        onClick: () =>\n          DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n            addAlert: (alert) => this.addAlert(alert),\n            setState: (state) => this.setState(state),\n            collection,\n            deleteAll: true,\n          }),\n        deleteAll: true,\n        display_repositories: display_repositories,\n      }),\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies: null,\n        onClick: () =>\n          DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n            addAlert: (alert) => this.addAlert(alert),\n            setState: (state) => this.setState(state),\n            collection,\n            deleteAll: false,\n          }),\n        deleteAll: false,\n        display_repositories: display_repositories,\n      }),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.handleControlClick(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      !list && hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.checkUploadPrivilleges(collection)}\n          key='upload new version'\n        >\n          {t`Upload new version`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const displayMenu = menuItems.length > 0;\n\n    if (list) {\n      return {\n        uploadButton: hasPermission('galaxy.upload_to_namespace') ? (\n          <Button\n            onClick={() => this.checkUploadPrivilleges(collection)}\n            variant='secondary'\n          >\n            {t`Upload new version`}\n          </Button>\n        ) : null,\n        dropdownMenu: displayMenu ? (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        ) : null,\n      };\n    }\n\n    return (\n      <span className={cx(!displayMenu && 'hidden-menu-space')}>\n        {displayMenu && (\n          <StatefulDropdown items={menuItems} ariaLabel='collection-kebab' />\n        )}\n      </span>\n    );\n  }\n\n  private renderSyncToogle(name: string, namespace: string): React.ReactNode {\n    const { synclist } = this.state;\n\n    if (!synclist) {\n      return null;\n    }\n\n    return (\n      <Switch\n        id={namespace + '.' + name}\n        className='sync-toggle'\n        label={t`Sync`}\n        isChecked={this.isCollectionSynced(name, namespace)}\n        onChange={() => this.toggleCollectionSync(name, namespace)}\n      />\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private toggleCollectionSync(name: string, namespace: string) {\n    const synclist = { ...this.state.synclist };\n\n    const colIndex = synclist.collections.findIndex(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    if (colIndex < 0) {\n      synclist.collections.push({ name: name, namespace: namespace });\n    } else {\n      synclist.collections.splice(colIndex, 1);\n    }\n\n    MySyncListAPI.update(synclist.id, synclist).then((response) => {\n      this.setState({ synclist: response.data });\n      MySyncListAPI.curate(synclist.id).then(() => null);\n    });\n  }\n\n  private isCollectionSynced(name: string, namespace: string): boolean {\n    const { synclist } = this.state;\n    const found = synclist.collections.find(\n      (el) => el.name === name && el.namespace === namespace,\n    );\n\n    return synclist.policy === 'include' ? !!found : !found;\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='hub-list'>\n          <DataList className='data-list' aria-label={t`List of Collections`}>\n            {collections.map((c, i) => (\n              <CollectionListItem\n                key={i}\n                collection={c}\n                displaySignatures={this.context.featureFlags.display_signatures}\n                showNamespace\n                synclistSwitch={this.renderSyncToogle(\n                  c.collection_version.name,\n                  c.collection_version.namespace,\n                )}\n                {...this.renderMenu(true, c)}\n              />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private getSynclist() {\n    MySyncListAPI.list().then((result) => {\n      // ignore results if more than 1 is returned\n      // TODO: should we throw an error for this or just ignore it?\n      if (result.data.meta.count === 1) {\n        this.setState({ synclist: result.data.data[0] });\n      } else {\n        console.error(\n          `my-synclist returned ${result.data.meta.count} synclists`,\n        );\n      }\n    });\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, ['view_type']),\n        is_deprecated: false,\n        repository_label: '!hide_from_search',\n        is_highest: true,\n      }).then((result) => {\n        this.setState({\n          collections: result.data.data,\n          count: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(Search);\n\nSearch.contextType = AppContext;\n"],"names":["Search","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","params","ParamHelper","parseParamString","location","search","Constants","DEFAULT_PAGE_SIZE","localStorage","getItem","SEARCH_VIEW_TYPE_LOCAL_KEY","state","collections","count","loading","synclist","undefined","alerts","updateCollection","showImportModal","redirect","noDependencies","deleteCollection","confirmDelete","isDeletionPending","deleteAll","_createClass","key","value","this","load","queryCollections","getSynclist","alert","setState","concat","_toConsumableArray","get","closeAlertMixin","_deleteCollection$rep","_this2","React","Navigate","to","_this$state","noData","length","filterIsSet","updateParams","p","deleteFromRepo","repository","name","ignoredParams","className","AlertList","closeAlert","i","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","collection","addAlert","ImportModal","isOpen","onUploadSuccess","formatPath","Paths","myImports","namespace","collection_version","setOpen","warn","toggleImportModal","BaseHeader","title","i18n","_","id","HubListToolbar","_extends","switcher","collectionFilter","featureFlags","context","LoadingPageSpinner","EmptyStateNoData","description","renderCollections","Pagination","warning","variant","_ref","EmptyStateFilter","clearAllFilters","view_type","renderList","renderCards","_ref2","_params$page","_this3","map","c","CollectionCard","footer","renderSyncToogle","menu","renderMenu","displaySignatures","display_signatures","page_size","page","CollectionNextPageCard","onClick","_params$page2","_objectSpread","_this4","CollectionAPI","setDeprecation","then","res","taskId","parsePulpIDFromURL","data","task","waitForTask","deprecated","values","err","_err$response","response","status","statusText","errorMessage","list","_this5","hasPermission","display_repositories","menuItems","deleteMenuOption","canDeleteCollection","IS_COMMUNITY","tryOpenDeleteModalWithConfirm","DropdownItem","handleControlClick","is_deprecated","checkUploadPrivilleges","filter","Boolean","displayMenu","uploadButton","Button","dropdownMenu","StatefulDropdown","items","ariaLabel","cx","_this6","Switch","label","isChecked","isCollectionSynced","onChange","toggleCollectionSync","_this7","MyNamespaceAPI","include_related","related_fields","my_permissions","includes","_this8","colIndex","findIndex","el","push","splice","MySyncListAPI","update","curate","found","find","policy","_this9","DataList","CollectionListItem","showNamespace","synclistSwitch","_this10","result","meta","console","error","_this11","CollectionVersionAPI","getReduced","repository_label","is_highest","updateParamsMixin","withRouter","contextType","AppContext"],"sourceRoot":""}