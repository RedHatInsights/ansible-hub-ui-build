{"version":3,"file":"js/6176.2659f162377d6f33f0ac.js","mappings":"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","sources":["webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/containers/ansible-remote/tab-access.tsx","webpack:///./src/containers/ansible-remote/tab-details.tsx","webpack:///./src/containers/ansible-remote/detail.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { Button, DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: string;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => React.ReactNode | null;\n  disabled: (item, actionContext) => string | null;\n  dropdownItem: (item, actionContext) => React.ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title,\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={title}>\n          <Button variant={buttonVariant} isDisabled>\n            {title}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={title}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {title}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={title}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {title}\n        </DropdownItem>\n      ) : (\n        <DropdownItem key={title} onClick={() => onClick(item, actionContext)}>\n          {title}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: t`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: t`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: t`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: t`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { getRepoUrl } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: t`Copy CLI configuration`,\n  onClick: (item, { addAlert }) => {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${item.name}_repo`,\n      '',\n      `[galaxy_server.${item.name}_repo]`,\n      `url=${getRepoUrl()}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n      description: <pre>{cliConfig}</pre>,\n    });\n  },\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: t`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRepository({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => null,\n        addAlert,\n      ),\n    );\n}\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: t`Sync`,\n  onClick: ({ name, pulp_href }, { addAlert, query }) => {\n    const pulpId = parsePulpIDFromURL(pulp_href);\n    AnsibleRepositoryAPI.sync(pulpId)\n      .then(({ data }) => {\n        addAlert(\n          taskAlert(data.task, t`Sync started for repository \"${name}\".`),\n        );\n\n        query();\n      })\n      .catch(\n        handleHttpError(\n          t`Failed to sync repository \"${name}\"`,\n          () => null,\n          addAlert,\n        ),\n      );\n  },\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    return null;\n  },\n});\n","import { Trans, t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm'></Spinner>}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: t`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRemoteAPI,\n  AnsibleRemoteType,\n  GroupAPI,\n  GroupType,\n  RoleType,\n} from 'src/api';\nimport { AccessTab } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemoteAccess } from 'src/permissions';\nimport { errorMessage, parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission;\n    user;\n  };\n}\n\nexport const RemoteAccessTab = ({\n  item,\n  actionContext: {\n    addAlert,\n    state: { params },\n    hasPermission,\n    user,\n  },\n}: TabProps) => {\n  const id = item?.pulp_href && parsePulpIDFromURL(item.pulp_href);\n  const [name, setName] = useState<string>(item?.name);\n  const [groups, setGroups] = useState<GroupType[]>(null); // loading\n  const [canEditOwners, setCanEditOwners] = useState<boolean>(false);\n  const [selectedGroup, setSelectedGroup] = useState<GroupType>(null);\n  const [showGroupRemoveModal, setShowGroupRemoveModal] =\n    useState<GroupType>(null);\n  const [showGroupSelectWizard, setShowGroupSelectWizard] = useState<{\n    group?: GroupType;\n    roles?: RoleType[];\n  }>(null);\n  const [showRoleRemoveModal, setShowRoleRemoveModal] = useState<string>(null);\n  const [showRoleSelectWizard, setShowRoleSelectWizard] = useState<{\n    roles?: RoleType[];\n  }>(null);\n\n  const query = () => {\n    setGroups(null);\n    AnsibleRemoteAPI.myPermissions(id)\n      .then(({ data: { permissions } }) => {\n        setCanEditOwners(\n          canEditAnsibleRemoteAccess({\n            hasPermission,\n            hasObjectPermission: (p: string): boolean =>\n              permissions.includes(p),\n            user,\n          }),\n        );\n        AnsibleRemoteAPI.listRoles(id)\n          .then(({ data: { roles } }) => {\n            const groupRoles = [];\n            for (const { groups, role } of roles) {\n              for (const name of groups) {\n                const groupIndex = groupRoles.findIndex((g) => g.name === name);\n                if (groupIndex == -1) {\n                  groupRoles.push({ name, object_roles: [role] });\n                } else {\n                  groupRoles[groupIndex].object_roles.push(role);\n                }\n              }\n            }\n\n            setName(name);\n            setGroups(groupRoles);\n          })\n          .catch(() => {\n            setGroups([]);\n          });\n      })\n      .catch(() => {\n        setGroups([]);\n        setCanEditOwners(false);\n      });\n  };\n\n  const updateGroupRoles = ({\n    roles,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) => {\n    Promise.all(roles)\n      .then(() => {\n        addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        query();\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        updateProps(stateUpdate);\n      });\n  };\n\n  const addGroup = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n      stateUpdate: { showGroupSelectWizard: null },\n    });\n  };\n\n  const removeGroup = (group) => {\n    const roles = group.object_roles.map((role) =>\n      AnsibleRemoteAPI.removeRole(id, {\n        role,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles,\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showGroupRemoveModal: null },\n    });\n  };\n  const addRole = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n  const removeRole = (role, group) => {\n    const removedRole = AnsibleRemoteAPI.removeRole(id, {\n      role,\n      groups: [group.name],\n    });\n    updateGroupRoles({\n      roles: [removedRole],\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const updateProps = (props) => {\n    Object.entries(props).forEach(([k, v]) => {\n      switch (k) {\n        case 'showGroupRemoveModal':\n          setShowGroupRemoveModal(v as GroupType);\n          break;\n        case 'showGroupSelectWizard':\n          setShowGroupSelectWizard(\n            v as { group?: GroupType; roles?: RoleType[] },\n          );\n          break;\n        case 'showRoleRemoveModal':\n          setShowRoleRemoveModal(v as string);\n          break;\n        case 'showRoleSelectWizard':\n          setShowRoleSelectWizard(v as { roles?: RoleType[] });\n          break;\n        default:\n          console.error('updateProps', k, v);\n      }\n    });\n  };\n\n  useEffect(query, [item.pulp_href]);\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n\n    if (!params?.group) {\n      setSelectedGroup(null);\n      return;\n    }\n\n    GroupAPI.list({ name: params.group }).then(({ data: { data } }) => {\n      setSelectedGroup(groups.find((g) => g.name === data[0].name));\n    });\n  }, [params?.group, groups]);\n\n  return (\n    <AccessTab\n      addGroup={addGroup}\n      addRole={addRole}\n      canEditOwners={canEditOwners}\n      group={selectedGroup}\n      groups={groups}\n      name={name}\n      pulpObjectType='remotes/ansible/collection'\n      removeGroup={removeGroup}\n      removeRole={removeRole}\n      selectRolesMessage={t`The selected roles will be added to this specific Ansible remote.`}\n      showGroupRemoveModal={showGroupRemoveModal}\n      showGroupSelectWizard={showGroupSelectWizard}\n      showRoleRemoveModal={showRoleRemoveModal}\n      showRoleSelectWizard={showRoleSelectWizard}\n      updateProps={updateProps}\n      urlPrefix={formatPath(Paths.ansibleRemoteDetail, {\n        name,\n      })}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AnsibleRemoteType } from 'src/api';\nimport { CopyURL, Details, LazyRepositories } from 'src/components';\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: object;\n}\n\nconst PFCodeBlock = ({ code }: { code: string }) => {\n  const [copied, setCopied] = React.useState(false);\n\n  const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n  };\n\n  const onClick = (event, text) => {\n    clipboardCopyFunc(event, text);\n    setCopied(true);\n  };\n\n  const actions = (\n    <React.Fragment>\n      <CodeBlockAction>\n        <ClipboardCopyButton\n          id='basic-copy-button'\n          textId='code-content'\n          aria-label='Copy to clipboard'\n          onClick={(e) => onClick(e, code)}\n          exitDelay={copied ? 1500 : 600}\n          maxWidth='110px'\n          variant='plain'\n          onTooltipHidden={() => setCopied(false)}\n        >\n          {copied ? t`Successfully copied to clipboard` : t`Copy to clipboard`}\n        </ClipboardCopyButton>\n      </CodeBlockAction>\n    </React.Fragment>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id='code-content'>{code}</CodeBlockCode>\n    </CodeBlock>\n  );\n};\n\nconst MaybeCode = ({ code }: { code: string }) =>\n  code ? <PFCodeBlock code={code} /> : <>{t`None`}</>;\n\nexport const DetailsTab = ({ item }: TabProps) => (\n  <Details\n    fields={[\n      { label: t`Remote name`, value: item?.name },\n      {\n        label: t`URL`,\n        value: <CopyURL url={item?.url} fallback />,\n      },\n      {\n        label: t`Proxy URL`,\n        value: <CopyURL url={item?.proxy_url} fallback />,\n      },\n      {\n        label: t`TLS validation`,\n        value: item?.tls_validation ? t`Enabled` : t`Disabled`,\n      },\n      { label: t`Client certificate`, value: item?.client_cert || t`None` },\n      { label: t`CA certificate`, value: item?.ca_cert || t`None` },\n      {\n        label: t`Download concurrency`,\n        value: item?.download_concurrency ?? t`None`,\n      },\n      { label: t`Rate limit`, value: item?.rate_limit ?? t`None` },\n      {\n        label: t`Repositories`,\n        value: <LazyRepositories remoteHref={item?.pulp_href} />,\n      },\n      {\n        label: t`YAML requirements`,\n        value: <MaybeCode code={item?.requirements_file} />,\n      },\n    ]}\n  />\n);\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  ansibleRemoteDeleteAction,\n  ansibleRemoteDownloadCAAction,\n  ansibleRemoteDownloadClientAction,\n  ansibleRemoteDownloadRequirementsAction,\n  ansibleRemoteEditAction,\n} from 'src/actions';\nimport { AnsibleRemoteAPI, AnsibleRemoteType } from 'src/api';\nimport { PageWithTabs } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRemotes } from 'src/permissions';\nimport { parsePulpIDFromURL } from 'src/utilities';\nimport { RemoteAccessTab } from './tab-access';\nimport { DetailsTab } from './tab-details';\n\nconst tabs = [\n  { id: 'details', name: t`Details` },\n  { id: 'access', name: t`Access` },\n];\n\nconst AnsibleRemoteDetail = PageWithTabs<AnsibleRemoteType>({\n  breadcrumbs: ({ name, tab, params: { group } }) =>\n    [\n      { url: formatPath(Paths.ansibleRemotes), name: t`Remotes` },\n      { url: formatPath(Paths.ansibleRemoteDetail, { name }), name },\n      tab.id === 'access' && group\n        ? {\n            url: formatPath(\n              Paths.ansibleRepositoryDetail,\n              { name },\n              { tab: tab.id },\n            ),\n            name: tab.name,\n          }\n        : null,\n      tab.id === 'access' && group\n        ? { name: t`Group ${group}` }\n        : { name: tab.name },\n    ].filter(Boolean),\n  condition: canViewAnsibleRemotes,\n  displayName: 'AnsibleRemoteDetail',\n  errorTitle: t`Remote could not be displayed.`,\n  headerActions: [\n    ansibleRemoteEditAction,\n    ansibleRemoteDownloadRequirementsAction,\n    ansibleRemoteDownloadClientAction,\n    ansibleRemoteDownloadCAAction,\n    ansibleRemoteDeleteAction,\n  ],\n  query: ({ name }) => {\n    return AnsibleRemoteAPI.list({ name })\n      .then(({ data: { results } }) => results[0])\n      .then((remote) => {\n        return AnsibleRemoteAPI.myPermissions(\n          parsePulpIDFromURL(remote.pulp_href),\n        )\n          .then(({ data: { permissions } }) => permissions)\n          .catch((e) => {\n            console.error(e);\n            return [];\n          })\n          .then((my_permissions) => ({ ...remote, my_permissions }));\n      });\n  },\n  renderTab: (tab, item, actionContext) =>\n    ({\n      details: <DetailsTab item={item} actionContext={actionContext} />,\n      access: <RemoteAccessTab item={item} actionContext={actionContext} />,\n    }[tab]),\n  tabs,\n  tabUpdateParams: (p) => {\n    delete p.group;\n    return p;\n  },\n});\n\nexport default AnsibleRemoteDetail;\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags?: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository')\nexport const canViewAnsibleRepositories = isLoggedIn;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","i18n","navigate","formatPath","Paths","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","query","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","handleHttpError","deleteRemote","_ref2","_ref3","id","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","ansibleRepositoryCopyAction","cliConfig","concat","getRepoUrl","join","navigator","clipboard","writeText","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","AnsibleRepositoryAPI","deleteRepository","ansibleRepositoryEditAction","canEditAnsibleRepository","ansibleRepositorySyncAction","canSyncAnsibleRepository","_item","hasPermission","remote","last_sync_task","includes","RevertModal","version","cancelAction","revertAction","_useState","useState","_useState2","_slicedToArray","pending","setPending","Modal","actions","Spinner","size","isOpen","onClose","titleIconVariant","Trans","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","repositoryName","number","revert","_ref7","_ref8","isLatest","RemoteAccessTab","_ref$actionContext","params","user","setName","_useState3","_useState4","groups","setGroups","_useState5","_useState6","canEditOwners","setCanEditOwners","_useState7","_useState8","selectedGroup","setSelectedGroup","_useState9","_useState10","showGroupRemoveModal","setShowGroupRemoveModal","_useState11","_useState12","showGroupSelectWizard","setShowGroupSelectWizard","_useState13","_useState14","showRoleRemoveModal","setShowRoleRemoveModal","_useState15","_useState16","showRoleSelectWizard","setShowRoleSelectWizard","permissions","canEditAnsibleRemoteAccess","hasObjectPermission","p","_step","roles","groupRoles","_iterator","_createForOfIteratorHelper","s","n","done","_step2","_step$value","value","role","_iterator2","_loop","groupIndex","findIndex","g","push","object_roles","err","e","f","updateGroupRoles","alertSuccess","alertFailure","stateUpdate","Promise","all","_ref5$response","response","status","statusText","errorMessage","updateProps","props","Object","entries","forEach","k","v","console","error","useEffect","group","GroupAPI","find","AccessTab","addGroup","rolePromises","map","addRole","pulpObjectType","removeGroup","removeRole","removedRole","selectRolesMessage","urlPrefix","PFCodeBlock","code","_React$useState","_React$useState2","copied","setCopied","CodeBlockAction","ClipboardCopyButton","textId","event","text","toString","clipboardCopyFunc","exitDelay","maxWidth","onTooltipHidden","CodeBlock","CodeBlockCode","MaybeCode","DetailsTab","_item$download_concur","_item$rate_limit","Details","fields","label","CopyURL","url","fallback","proxy_url","tls_validation","download_concurrency","rate_limit","LazyRepositories","remoteHref","tabs","PageWithTabs","breadcrumbs","tab","filter","Boolean","canViewAnsibleRemotes","displayName","errorTitle","headerActions","results","my_permissions","_objectSpread","renderTab","details","access","tabUpdateParams","has_model_perms","permission","is_superuser","has_model_or_obj_perms","canViewAnsibleRepositories","is_anonymous","canEditAnsibleRepositoryAccess"],"sourceRoot":""}