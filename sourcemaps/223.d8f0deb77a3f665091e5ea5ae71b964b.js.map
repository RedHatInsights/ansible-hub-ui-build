{"version":3,"file":"js/223.1b3b5a9c8fb9c6b9cd09.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport { Button, Checkbox, DropdownItem, Text } from '@patternfly/react-core';\nimport React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionDropdown,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ExternalLink,\n  HubListToolbar,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  PartnerHeader,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n  collectionFilter,\n} from 'src/components';\nimport { AppContext, IAppContextType } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RouteProps,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoURL,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface IState {\n  alerts: AlertType[];\n  canSign: boolean;\n  collections: CollectionVersionSearch[];\n  confirmDelete: boolean;\n  deleteAll: boolean;\n  deleteCollection: CollectionVersionSearch;\n  filteredCount: number;\n  group: GroupType;\n  isDeletionPending: boolean;\n  isNamespacePending: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  namespace: NamespaceType;\n  params: {\n    group?: string;\n    keywords?: string;\n    namespace?: string;\n    page?: number;\n    page_size?: number;\n    repository_name?: string;\n    sort?: string;\n    tab?: string;\n    user?: string;\n  };\n  redirect: string;\n  showControls: boolean;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showImportModal: boolean;\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  showUserRemoveModal?: UserType;\n  showUserSelectWizard?: { user?: UserType; roles?: RoleType[] };\n  unfilteredCount: number;\n  updateCollection: CollectionVersionSearch;\n  user: UserType;\n}\n\nexport class NamespaceDetail extends Component<RouteProps, IState> {\n  static contextType = AppContext;\n\n  nonAPIParams = ['tab', 'group', 'user'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    params.namespace = props.routeParams.namespace;\n    if (props.routeParams.repo && !params.repository_name) {\n      params.repository_name = props.routeParams.repo;\n    }\n\n    if (!params['sort']) {\n      params['sort'] = 'name';\n    }\n\n    this.state = {\n      alerts: [],\n      canSign: false,\n      collections: [],\n      confirmDelete: false,\n      deleteAll: true,\n      deleteCollection: null,\n      filteredCount: 0,\n      group: null,\n      isDeletionPending: false,\n      isNamespacePending: false,\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      namespace: null,\n      params,\n      redirect: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showImportModal: false,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      unfilteredCount: 0,\n      updateCollection: null,\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: (this.context as IAppContextType).alerts || [] });\n    (this.context as IAppContextType).setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = ParamHelper.parseParamString(this.props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    if (prevProps.location.search !== this.props.location.search) {\n      params.namespace = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params.group, this.state.namespace.groups),\n        user: this.filterUser(params.user, this.state.namespace.users),\n      });\n    }\n\n    if (\n      prevProps.routeParams.repo !== this.props.routeParams.repo &&\n      this.props.routeParams.repo &&\n      (!params.repository_name ||\n        params.repository_name === prevProps.routeParams.repo)\n    ) {\n      params.repository_name = this.props.routeParams.repo;\n      this.setState({ params });\n    }\n  }\n\n  filterUser(username, users) {\n    return username\n      ? users.find((u) => u.name === username || u.username === username)\n      : null;\n  }\n\n  filterGroup(name, groups) {\n    return name ? groups.find((g) => g.name === name) : null;\n  }\n\n  private updateRoles({\n    users = null,\n    groups = null,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      users: users || this.state.namespace.users,\n      groups: groups || this.state.namespace.groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets users/groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  hasPerm(permission) {\n    const { namespace } = this.state;\n    const {\n      hasPermission,\n      user: { is_superuser },\n    } = this.context as IAppContextType;\n\n    const hasObjectPermission = (permission) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n\n    return (\n      hasPermission(permission) ||\n      hasObjectPermission(permission) ||\n      is_superuser\n    );\n  }\n\n  render() {\n    const {\n      alerts,\n      canSign,\n      collections,\n      confirmDelete,\n      deleteCollection,\n      filteredCount,\n      isDeletionPending,\n      isNamespacePending,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      namespace,\n      params,\n      redirect,\n      showControls,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n    const { featureFlags } = this.context as IAppContextType;\n    const { legacy_roles, display_signatures } = featureFlags;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const tab = params.tab || 'collections';\n    const { user, group } = params;\n\n    const tabs = [\n      {\n        active: tab === 'collections',\n        title: t`Collections`,\n        link: formatPath(\n          Paths.namespaceDetail,\n          { namespace: namespace.name },\n          { tab: 'collections' },\n        ),\n      },\n      showControls && {\n        active: tab === 'cli-configuration',\n        title: t`CLI configuration`,\n        link: formatPath(\n          Paths.namespaceDetail,\n          { namespace: namespace.name },\n          { tab: 'cli-configuration' },\n        ),\n      },\n      namespace.resources && {\n        active: tab === 'resources',\n        title: t`Resources`,\n        link: formatPath(\n          Paths.namespaceDetail,\n          { namespace: namespace.name },\n          { tab: 'resources' },\n        ),\n      },\n      {\n        active: tab === 'access',\n        title: t`Access`,\n        link: formatPath(\n          Paths.namespaceDetail,\n          { namespace: namespace.name },\n          { tab: 'access' },\n        ),\n      },\n      legacy_roles && {\n        active: tab === 'role-namespaces',\n        title: t`Role namespaces`,\n        link: formatPath(\n          Paths.namespaceDetail,\n          { namespace: namespace.name },\n          { tab: 'role-namespaces' },\n        ),\n      },\n    ];\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access' && (group || user)\n        ? {\n            url: formatPath(\n              Paths.namespaceDetail,\n              { namespace: namespace.name },\n              { tab },\n            ),\n            name: t`Access`,\n          }\n        : null,\n      tab === 'access' && group ? { name: t`Group ${group}` } : null,\n      tab === 'access' && user ? { name: t`User ${user}` } : null,\n      tab === 'access' && !user && !group ? { name: t`Access` } : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoURL('published');\n\n    const noData =\n      filteredCount === 0 &&\n      !filterIsSet(params, [\n        'is_signed',\n        'keywords',\n        'repository_name',\n        'tags',\n      ]);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'user',\n      'view_type',\n    ];\n\n    const canEditOwners = this.hasPerm('galaxy.change_namespace');\n\n    const repository = params.repository_name || null;\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    return (\n      <>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection?.collection_version}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n              <Trans>\n                Deleting <b>{namespace.name}</b> and its data will be lost.\n              </Trans>\n            </Text>\n            <Checkbox\n              isChecked={confirmDelete}\n              onChange={(val) => this.setState({ confirmDelete: val })}\n              label={t`I understand that this action cannot be undone.`}\n              id='delete_confirm'\n            />\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          pageControls={this.renderPageControls()}\n        />\n        {tab === 'collections' ? (\n          <HubListToolbar\n            count={filteredCount}\n            ignoredParams={ignoredParams}\n            params={params}\n            updateParams={updateParams}\n            {...collectionFilter({\n              featureFlags,\n              ignoredParams,\n            })}\n          />\n        ) : null}\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >{t`Upload collection`}</Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={filteredCount}\n                  displaySignatures={display_signatures}\n                  collectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <ExternalLink href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'>\n                      here\n                    </ExternalLink>\n                    .\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <section className='body'>\n              <AccessTab\n                showUserRemoveModal={this.state.showUserRemoveModal}\n                showUserSelectWizard={this.state.showUserSelectWizard}\n                showGroupRemoveModal={this.state.showGroupRemoveModal}\n                showGroupSelectWizard={this.state.showGroupSelectWizard}\n                showRoleRemoveModal={this.state.showRoleRemoveModal}\n                showRoleSelectWizard={this.state.showRoleSelectWizard}\n                canEditOwners={canEditOwners}\n                group={this.state.group}\n                groups={namespace.groups}\n                user={this.state.user}\n                users={namespace.users}\n                name={namespace.name}\n                pulpObjectType='pulp_ansible/namespaces'\n                selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n                updateProps={(prop) => {\n                  this.setState(prop);\n                }}\n                addUser={(user, roles) => {\n                  const { users, name } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newUsers = [...users, newUser];\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showUserSelectWizard: null },\n                  });\n                }}\n                removeUser={(user) => {\n                  const { name, users } = namespace;\n                  const newUsers = users.filter((u) => u !== user);\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showUserRemoveModal: null },\n                  });\n                }}\n                addGroup={(group, roles) => {\n                  const { groups, name } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newGroups = [...groups, newGroup];\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showGroupSelectWizard: null },\n                  });\n                }}\n                removeGroup={(group) => {\n                  const { name, groups } = namespace;\n                  const newGroups = groups.filter((g) => g !== group);\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showGroupRemoveModal: null },\n                  });\n                }}\n                addUserRole={(user, roles) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: [\n                      ...user.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeUserRole={(role, user) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: user.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                addRole={(group, roles) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: [\n                      ...group.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeRole={(role, group) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: group.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                urlPrefix={formatPath(Paths.namespaceDetail, {\n                  namespace: namespace.name,\n                })}\n              />\n            </section>\n          ) : null}\n          {tab === 'role-namespaces' ? (\n            <Navigate\n              replace\n              to={formatPath(\n                Paths.standaloneNamespaces,\n                {},\n                { provider: namespace.name },\n              )}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => this.signAllCertificates(namespace, repository)}\n            onCancel={() => this.setState({ isOpenSignModal: false })}\n          />\n        )}\n      </>\n    );\n  }\n\n  private handleCollectionAction(pulp_href, action) {\n    const collection = this.state.collections.find(\n      (c) => c.collection_version.pulp_href === pulp_href,\n    );\n    const { name } = collection.collection_version;\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.addAlert({\n          variant: 'info',\n          title: t`Deprecation status update starting for collection \"${name}\".`,\n        });\n        CollectionAPI.setDeprecation(collection)\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.is_deprecated\n                ? t`Collection \"${name}\" has been successfully undeprecated.`\n                : t`Collection \"${name}\" has been successfully deprecated.`;\n              this.addAlert({\n                title,\n                variant: 'success',\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.addAlert({\n              title: t`API Error: Failed to set deprecation.`,\n              variant: 'warning',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType, repository: string) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: (this.context as IAppContextType).settings\n        .GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository_name: repository,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        // FIXME: use taskAlert\n        this.addAlert({\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        });\n        this.setState({\n          isOpenSignModal: false,\n        });\n\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.loadCollections();\n          })\n          .catch((error) => {\n            this.addAlert(errorAlert(error));\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.addAlert(errorAlert(error.response.status));\n        this.setState({\n          isOpenSignModal: false,\n        });\n      });\n  }\n\n  private loadAllCollections(params) {\n    return CollectionVersionAPI.list({\n      ...params,\n      is_highest: true,\n      namespace: this.props.routeParams.namespace,\n      repository_label: '!hide_from_search',\n    });\n  }\n\n  private loadCollections() {\n    return this.loadAllCollections(\n      ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        filteredCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      this.loadCollections(),\n      this.loadAllCollections({\n        page: 1,\n        page_size: 1,\n      }),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          (this.context as IAppContextType).user.is_anonymous &&\n          (this.context as IAppContextType).settings\n            .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then(\n        ([\n          _collections,\n          {\n            data: {\n              meta: { count: unfilteredCount },\n            },\n          },\n          { data: namespace },\n          myNamespace,\n        ]) => {\n          this.setState({\n            canSign: canSignNamespace(\n              this.context as IAppContextType,\n              myNamespace?.data,\n            ),\n            group: this.filterGroup(this.state.params.group, namespace.groups),\n            user: this.filterUser(this.state.params.user, namespace.users),\n            namespace: {\n              ...namespace,\n              // transform to use username, don't break when missing\n              users: namespace.users\n                ? namespace.users.map(({ name, object_roles }) => ({\n                    username: name,\n                    object_roles,\n                  }))\n                : [],\n            },\n            showControls: !!myNamespace,\n            unfilteredCount,\n          });\n        },\n      )\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    if (!this.state.showControls) {\n      return null;\n    }\n\n    const { canSign, collections, unfilteredCount } = this.state;\n    const { ai_deny_index, can_upload_signatures } = (\n      this.context as IAppContextType\n    ).featureFlags;\n    const repository = this.state.params.repository_name || null;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='edit'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      this.hasPerm('galaxy.delete_namespace') &&\n        (unfilteredCount === 0 ? (\n          <DropdownItem\n            key='delete'\n            onClick={() => this.setState({ isOpenNamespaceModal: true })}\n          >{t`Delete namespace`}</DropdownItem>\n        ) : (\n          <DropdownItem\n            isDisabled\n            description={t`Cannot delete non-empty namespace`}\n          >{t`Delete namespace`}</DropdownItem>\n        )),\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign &&\n        !can_upload_signatures &&\n        (repository ? (\n          <DropdownItem\n            key='sign-collections'\n            data-cy='sign-all-collections-button'\n            onClick={() => this.setState({ isOpenSignModal: true })}\n          >\n            {t`Sign all collections in ${repository}`}\n          </DropdownItem>\n        ) : (\n          <DropdownItem\n            key='sign-collections'\n            isDisabled\n            description={t`Please select a repository filter`}\n          >\n            {t`Sign all collections`}\n          </DropdownItem>\n        )),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Ansible Lightspeed settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    return (\n      <div\n        style={{ display: 'flex', alignItems: 'center' }}\n        data-cy='kebab-toggle'\n      >\n        {' '}\n        {collections.length !== 0 && (\n          <Button\n            onClick={() => this.setState({ showImportModal: true })}\n          >{t`Upload collection`}</Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.addAlert({\n        title: warning,\n        variant: 'warning',\n      });\n    }\n\n    const newState = { showImportModal: isOpen };\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    const { queueAlert } = this.context as IAppContextType;\n\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: formatPath(Paths.namespaces),\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.addAlert({\n                variant: 'danger',\n                title: t`Namespace \"${name}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionVersionSearch) {\n    const { namespace, showControls } = this.state;\n\n    const canUpload = this.hasPerm('galaxy.upload_to_namespace');\n\n    if (!showControls) {\n      return;\n    }\n\n    const deleteFn = (deleteAll) => ({\n      addAlert: (alert) => this.addAlert(alert),\n      collection,\n      openModal: () =>\n        this.setState({\n          deleteCollection: collection,\n          confirmDelete: false,\n          deleteAll,\n        }),\n    });\n\n    return {\n      uploadButton: canUpload && (\n        <Button\n          onClick={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'upload',\n            )\n          }\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n      ),\n      dropdownMenu: (\n        <CollectionDropdown\n          collection={collection}\n          data-cy='collection-kebab'\n          namespace={namespace}\n          onDelete={deleteFn(true)}\n          onDeprecate={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'deprecate',\n            )\n          }\n          onRemove={deleteFn(false)}\n        />\n      ),\n    };\n  }\n}\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","_assertThisInitialized","name","state","namespace","queueAlert","context","setState","isNamespacePending","NamespaceAPI","then","redirect","formatPath","Paths","namespaces","confirmDelete","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","addAlert","i18n","_","description","errorMessage","params","ParamHelper","parseParamString","location","search","routeParams","repo","repository_name","alerts","canSign","collections","deleteAll","deleteCollection","filteredCount","group","isDeletionPending","isOpenSignModal","isOpenWisdomModal","showControls","showGroupRemoveModal","showGroupSelectWizard","showImportModal","showRoleRemoveModal","showRoleSelectWizard","unfilteredCount","updateCollection","user","_inherits","_createClass","key","value","this","load","setAlerts","prevProps","filterGroup","groups","filterUser","users","username","find","u","g","_ref2","_this2","_ref2$users","_ref2$groups","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","update","_objectSpread","_ref3","_ref3$response","permission","_ref4","hasPermission","is_superuser","_namespace$related_fi","_namespace$related_fi2","related_fields","my_permissions","includes","call","hasObjectPermission","_deleteCollection$rep","_this3","_this$state","featureFlags","legacy_roles","display_signatures","Navigate","to","LoadingPageWithHeader","tab","tabs","active","link","namespaceDetail","resources","breadcrumbs","namespaceBreadcrumb","url","filter","Boolean","repositoryUrl","getRepoURL","noData","filterIsSet","updateParams","loadCollections","ignoredParams","canEditOwners","hasPerm","repository","deleteFromRepo","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","collection","collection_version","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","style","paddingBottom","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","PartnerHeader","pageControls","renderPageControls","HubListToolbar","_extends","count","collectionFilter","Main","EmptyStateNoData","button","Button","onClick","className","CollectionList","itemCount","displaySignatures","collectionControls","renderCollectionControls","ExternalLink","href","ClipboardCopy","isReadOnly","renderResources","AccessTab","showUserRemoveModal","showUserSelectWizard","pulpObjectType","selectRolesMessage","updateProps","prop","addUser","roles","newUser","object_roles","map","_ref6","newUsers","concat","_toConsumableArray","updateRoles","removeUser","addGroup","newGroup","_ref7","newGroups","removeGroup","addUserRole","_ref8","removeUserRole","role","addRole","_ref9","removeRole","urlPrefix","replace","standaloneNamespaces","provider","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","pulp_href","action","_this4","c","CollectionAPI","setDeprecation","result","taskId","parsePulpIDFromURL","data","task","waitForTask","is_deprecated","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","sign","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","task_id","error","x","CollectionVersionAPI","list","is_highest","repository_label","_this6","loadAllCollections","getReduced","nonAPIParams","meta","_this7","Promise","all","page","page_size","get","include_related","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_ref10","_ref11","_slicedToArray","myNamespace","canSignNamespace","_ref12","notFound","updateParamsMixin","nonQueryStringParams","_this8","_this$state2","_featureFlags","ai_deny_index","can_upload_signatures","dropdownItems","DropdownItem","component","Link","editNamespace","display","alignItems","StatefulDropdown","items","warning","newState","closeAlertMixin","_this9","_this$state3","canUpload","deleteFn","openModal","uploadButton","handleCollectionAction","dropdownMenu","CollectionDropdown","onDelete","onDeprecate","onRemove","Component","AppContext","withRouter"],"sourceRoot":""}