{"version":3,"file":"js/2613.2cc684142f97ce200640.js","mappings":"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","sources":["webpack:///./src/containers/namespace-list/namespace-list.tsx","webpack:///./src/containers/namespace-list/partners.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport {\n  Button,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { MyNamespaceAPI, NamespaceAPI, NamespaceListType } from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LinkTabs,\n  LoadingPageSpinner,\n  LoadingPageWithHeader,\n  NamespaceCard,\n  NamespaceModal,\n  NamespaceNextPageCard,\n  Pagination,\n  Sort,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n} from 'src/utilities';\nimport './namespace-list.scss';\n\ninterface IState {\n  alerts: AlertType[];\n  namespaces: NamespaceListType[];\n  itemCount: number;\n  params: {\n    name?: string;\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tenant?: string;\n    keywords?: string;\n  };\n  hasPermission: boolean;\n  isModalOpen: boolean;\n  loading: boolean;\n  redirect?: string;\n  inputText: string;\n}\n\ninterface IProps extends RouteProps {\n  namespacePath: Paths;\n  filterOwner?: boolean;\n}\n\nexport class NamespaceList extends React.Component<IProps, IState> {\n  nonURLParams = ['tenant'];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = 20;\n    }\n\n    if (!params['sort']) {\n      params['sort'] = 'name';\n    }\n\n    this.state = {\n      alerts: [],\n      namespaces: undefined,\n      itemCount: 0,\n      params: params,\n      hasPermission: true,\n      isModalOpen: false,\n      loading: true,\n      inputText: params['keywords'] || '',\n    };\n  }\n\n  private handleModalToggle = () => {\n    this.setState(({ isModalOpen }) => ({\n      isModalOpen: !isModalOpen,\n    }));\n  };\n\n  componentDidMount() {\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n\n    if (this.props.filterOwner) {\n      // Make a query with no params and see if it returns results to tell\n      // if the user can edit namespaces\n      MyNamespaceAPI.list({})\n        .then((results) => {\n          if (results.data.meta.count !== 0) {\n            this.loadNamespaces();\n          } else {\n            this.setState({\n              hasPermission: false,\n              namespaces: [],\n              loading: false,\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              namespaces: [],\n              itemCount: 0,\n              loading: false,\n            },\n            () =>\n              this.addAlert({\n                variant: 'danger',\n                title: t`Namespaces list could not be displayed.`,\n                description: errorMessage(status, statusText),\n              }),\n          );\n        });\n    } else {\n      this.loadNamespaces();\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Navigate to={this.state.redirect} />;\n    }\n\n    const { alerts, namespaces, params, itemCount, loading, inputText } =\n      this.state;\n    const { filterOwner } = this.props;\n    const { hasPermission } = this.context;\n\n    const noData =\n      !filterIsSet(this.state.params, ['keywords']) &&\n      namespaces !== undefined &&\n      namespaces.length === 0;\n\n    if (loading) {\n      return <LoadingPageWithHeader />;\n    }\n\n    // Namespaces or Partners\n    const title = namespaceBreadcrumb().name;\n\n    const updateParams = (p) =>\n      this.updateParams(p, () => this.loadNamespaces());\n\n    return (\n      <div className='hub-namespace-page'>\n        <NamespaceModal\n          isOpen={this.state.isModalOpen}\n          toggleModal={this.handleModalToggle}\n          onCreateSuccess={(result) =>\n            this.setState({\n              redirect: formatPath(\n                Paths.namespaceDetail,\n                {\n                  namespace: result.name,\n                },\n                { tab: 'collections' },\n              ),\n            })\n          }\n        />\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <BaseHeader title={title}>\n          {!this.context.user.is_anonymous && (\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <LinkTabs\n                  tabs={[\n                    {\n                      title: t`All`,\n                      link: formatPath(Paths[NAMESPACE_TERM]),\n                      active: !filterOwner,\n                    },\n                    {\n                      title: t`My namespaces`,\n                      link: formatPath(Paths.myNamespaces),\n                      active: filterOwner,\n                    },\n                  ]}\n                />\n              </div>\n            </div>\n          )}\n          {noData ? null : (\n            <div className='hub-toolbar hub-toolbar-left'>\n              <Toolbar>\n                <ToolbarContent>\n                  <ToolbarGroup style={{ marginLeft: 0 }}>\n                    <ToolbarItem>\n                      <CompoundFilter\n                        inputText={inputText}\n                        onChange={(text) => this.setState({ inputText: text })}\n                        params={params}\n                        updateParams={updateParams}\n                        filterConfig={[{ id: 'keywords', title: t`keywords` }]}\n                      />\n                      <AppliedFilters\n                        style={{ marginTop: '16px' }}\n                        params={params}\n                        updateParams={(p) => {\n                          updateParams(p);\n                          this.setState({ inputText: '' });\n                        }}\n                        ignoredParams={['page_size', 'page', 'sort']}\n                        niceNames={{ keywords: t`keywords` }}\n                      />\n                    </ToolbarItem>\n                  </ToolbarGroup>\n                  <ToolbarGroup style={{ alignSelf: 'start' }}>\n                    <ToolbarItem>\n                      <Sort\n                        options={[\n                          { title: t`Name`, id: 'name', type: 'alpha' },\n                        ]}\n                        params={params}\n                        updateParams={updateParams}\n                      />\n                    </ToolbarItem>\n                    {hasPermission('galaxy.add_namespace') && (\n                      <ToolbarItem key='create-button'>\n                        <Button\n                          variant='primary'\n                          onClick={this.handleModalToggle}\n                        >\n                          {t`Create`}\n                        </Button>\n                      </ToolbarItem>\n                    )}\n                  </ToolbarGroup>\n                </ToolbarContent>\n              </Toolbar>\n              <div>\n                <Pagination\n                  params={params}\n                  updateParams={updateParams}\n                  count={itemCount}\n                  isCompact\n                  perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                />\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        <section className='card-area'>\n          {this.renderBody({ updateParams })}\n        </section>\n        {noData || loading ? null : (\n          <section className='footer'>\n            <Pagination\n              params={params}\n              updateParams={updateParams}\n              perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n              count={itemCount}\n            />\n          </section>\n        )}\n      </div>\n    );\n  }\n\n  private renderBody({ updateParams }) {\n    const { itemCount, loading, namespaces, params } = this.state;\n    const { namespacePath, filterOwner } = this.props;\n    const { hasPermission } = this.context;\n\n    const noDataTitle = t`No namespaces yet`;\n    const noDataDescription = !filterOwner\n      ? t`Namespaces will appear once created`\n      : t`This account is not set up to manage any namespaces`;\n\n    const noDataButton = hasPermission('galaxy.add_namespace') ? (\n      <Button variant='primary' onClick={() => this.handleModalToggle()}>\n        {t`Create`}\n      </Button>\n    ) : null;\n\n    if (loading) {\n      return (\n        <section>\n          <LoadingPageSpinner />;\n        </section>\n      );\n    }\n\n    if (namespaces.length === 0) {\n      return (\n        <section>\n          {filterIsSet(this.state.params, ['keywords']) ? (\n            <EmptyStateFilter />\n          ) : (\n            <EmptyStateNoData\n              title={noDataTitle}\n              description={noDataDescription}\n              button={noDataButton}\n            />\n          )}\n        </section>\n      );\n    }\n\n    return (\n      <section className='hub-card-layout'>\n        {namespaces.map((ns, i) => (\n          <div key={i} className='card-wrapper'>\n            <NamespaceCard\n              namespaceURL={formatPath(namespacePath, {\n                namespace: ns.name,\n              })}\n              key={i}\n              namespace={ns}\n            />\n          </div>\n        ))}\n        {itemCount > params.page_size * (params.page ?? 1) ? (\n          <div className='card-wrapper'>\n            <NamespaceNextPageCard\n              onClick={() =>\n                updateParams({ ...params, page: (params.page ?? 1) + 1 })\n              }\n            />\n          </div>\n        ) : null}\n      </section>\n    );\n  }\n\n  private loadNamespaces() {\n    const { filterOwner } = this.props;\n    const api = filterOwner ? MyNamespaceAPI : NamespaceAPI;\n\n    this.setState({ loading: true }, () => {\n      api\n        .list(this.state.params)\n        .then((results) => {\n          this.setState({\n            namespaces: results.data.data,\n            itemCount: results.data.meta.count,\n            loading: false,\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              namespaces: [],\n              itemCount: 0,\n              loading: false,\n            },\n            () =>\n              this.addAlert({\n                variant: 'danger',\n                title: t`Namespaces list could not be displayed.`,\n                description: errorMessage(status, statusText),\n              }),\n          );\n        });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonURLParams);\n  }\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n\nNamespaceList.contextType = AppContext;\n","import React from 'react';\nimport { Paths } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { NamespaceList } from './namespace-list';\n\nclass Partners extends React.Component<RouteProps> {\n  render() {\n    return (\n      <NamespaceList\n        {...this.props}\n        namespacePath={Paths.namespaceDetail}\n        filterOwner={false}\n      />\n    );\n  }\n}\n\nexport default withRouter(Partners);\n"],"names":["NamespaceList","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","setState","_ref","isModalOpen","params","ParamHelper","parseParamString","location","search","state","alerts","namespaces","undefined","itemCount","hasPermission","loading","inputText","_createClass","key","value","_this2","this","context","setAlerts","filterOwner","MyNamespaceAPI","list","then","results","data","meta","count","loadNamespaces","e","_e$response","response","status","statusText","addAlert","variant","title","i18n","_","id","description","errorMessage","_this3","redirect","React","Navigate","to","_this$state","noData","filterIsSet","length","LoadingPageWithHeader","namespaceBreadcrumb","name","updateParams","p","className","NamespaceModal","isOpen","toggleModal","handleModalToggle","onCreateSuccess","result","formatPath","Paths","namespaceDetail","namespace","tab","AlertList","closeAlert","i","BaseHeader","user","is_anonymous","LinkTabs","tabs","link","active","myNamespaces","Toolbar","ToolbarContent","ToolbarGroup","style","marginLeft","ToolbarItem","CompoundFilter","onChange","text","filterConfig","AppliedFilters","marginTop","ignoredParams","niceNames","keywords","alignSelf","Sort","options","type","Button","onClick","Pagination","isCompact","perPageOptions","Constants","CARD_DEFAULT_PAGINATION_OPTIONS","renderBody","_ref2","_params$page","_this4","_this$state2","_this$props","namespacePath","noDataTitle","noDataDescription","noDataButton","LoadingPageSpinner","EmptyStateFilter","EmptyStateNoData","button","map","ns","NamespaceCard","namespaceURL","page_size","page","NamespaceNextPageCard","_params$page2","_objectSpread","_this5","api","NamespaceAPI","_e$response2","get","updateParamsMixin","nonURLParams","alert","concat","_toConsumableArray","closeAlertMixin","contextType","AppContext","Partners","apply","arguments","_extends","withRouter"],"sourceRoot":""}