{"version":3,"file":"js/376.1661180253420.cc2db681aed12e9ee027.js","mappings":"mGAAA,IAAIA,EAAM,CACT,UAAW,CACV,IACA,KAED,UAAW,CACV,MACA,KAED,UAAW,CACV,MACA,KAED,UAAW,CACV,MACA,KAED,UAAW,CACV,KACA,KAED,UAAW,CACV,MACA,KAED,UAAW,CACV,MACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CAAC,IAIT,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBU,EAAED,EAAI,KAEnC,CACAX,EAAoBa,KAAO,IAAOC,OAAOD,KAAKd,GAC9CC,EAAoBW,GAAK,MACzBI,EAAOC,QAAUhB,C,kBC9CjB,IAAID,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASkB,EAAehB,GACvB,IAAIU,EAAKO,EAAsBjB,GAC/B,OAAOC,EAAoBS,EAC5B,CACA,SAASO,EAAsBjB,GAC9B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAAM,CACpC,IAAIM,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOR,EAAIE,EACZ,CACAgB,EAAeJ,KAAO,WACrB,OAAOC,OAAOD,KAAKd,EACpB,EACAkB,EAAeZ,QAAUa,EACzBH,EAAOC,QAAUC,EACjBA,EAAeN,GAAK,K,+rBC9Rb,IAAMQ,EAAb,WAKE,WAAYC,GAAY,2BACtBC,KAAKC,KAAOC,IAAAA,OAAa,CACvBC,QAASJ,EACTK,iBAAkB,SAACC,GAAD,OAAYC,EAAAA,GAAAA,eAA2BD,EAAvC,IAGpBL,KAAKC,KAAKM,aAAaC,QAAQC,KAAI,SAACD,GAAD,OAAa,EAAKE,YAAYF,EAA9B,GACpC,CAZH,oDAcE,SAAuBG,GAGrB,IAAMN,E,qWAAS,CAAH,GAAQM,GAEdC,EACJC,SAASR,EAAM,YAAkBS,EAAAA,EAAAA,kBAC7BC,EAAOF,SAASR,EAAM,OAAa,EAQzC,cANOA,EAAM,YACNA,EAAM,UAEbA,EAAM,OAAaU,EAAOH,EAAWA,EACrCP,EAAM,MAAYO,EAEXP,CACR,GA9BH,kBAgCE,SAAKA,EAAiBW,GAKpB,OAAOhB,KAAKC,KAAKgB,IAAIjB,KAAKkB,QAAQF,GAAU,CAC1CX,OAAQL,KAAKmB,gBAAgBd,IAEhC,GAxCH,iBA0CE,SAAIf,EAAY0B,GACd,OAAOhB,KAAKC,KAAKgB,IAAIjB,KAAKkB,QAAQF,GAAW1B,EAAK,IACnD,GA5CH,oBA8CE,SAAOA,EAAqB8B,EAAMJ,GAChC,OAAOhB,KAAKC,KAAKoB,IAAIrB,KAAKkB,QAAQF,GAAW1B,EAAK,IAAK8B,EACxD,GAhDH,oBAkDE,SAAOA,EAAMJ,GACX,OAAOhB,KAAKC,KAAKqB,KAAKtB,KAAKkB,QAAQF,GAAUI,EAC9C,GApDH,oBAsDE,SAAO9B,EAAqB0B,GAC1B,OAAOhB,KAAKC,KAAL,OAAiBD,KAAKkB,QAAQF,GAAW1B,EAAK,IACtD,GAxDH,mBA0DE,SAAMA,EAAqB8B,EAAMJ,GAC/B,OAAOhB,KAAKC,KAAKsB,MAAMvB,KAAKkB,QAAQF,GAAW1B,EAAK,IAAK8B,EAC1D,GA5DH,qBA8DE,SAAQJ,GACN,OAAOA,GAAWhB,KAAKgB,OACxB,GAhEH,8CAkEE,WAA0BR,GAA1B,oEAIMgB,aAAoBV,EAAAA,EAAAA,yBAJ1B,gCAKUW,OAAOC,SAASC,OAAOC,KAAKC,UALtC,aAOML,aAAoBV,EAAAA,EAAAA,6BACtBN,EAAQsB,QAAQ,eAAiBC,EAAAA,EAAAA,IAAY,cARjD,kBAUSvB,GAVT,2CAlEF,qDCHO,IAAMwB,EAAb,6B,IAAA,G,EAAA,E,gaAGE,aAAc,4BACZ,cAAiBC,yBADL,mCAFG,MAEH,CAEb,CALH,wCASE,SAAUC,GACR,MAAO,OAAP,OAAclC,KAAKmC,eAAnB,YAAqCD,EACtC,KAXH,GAA4BpC,G,qkBCM5B,SAASsC,EAAeC,GACtB,OAAIA,EACKA,EAASC,QACd,SAACC,GAAD,OAAW,CAAC,gBAAiB,gBAAgBC,SAASD,EAAKE,aAA3D,IAIGJ,CACR,CAED,SAASK,EAAeH,GACtB,OAAO,OACFA,GADL,IAEEI,eAAgB,OACXJ,EAAKI,gBADI,IAEZN,SAAU,KACVO,SAAU,OACLL,EAAKI,eAAeC,UADjB,IAENP,SAAUD,EAAeG,EAAKI,eAAeC,SAASP,eAI7D,CAoBM,IA0JMQ,EAAgB,IA1J7B,6B,IAAA,G,EAAA,E,gaAAA,kLACY,EAAKC,UAAU,UAD3B,qCAIE,SAAKzC,EAAS0C,GACZ,IAAMC,EAAOhD,KAAKgB,QAAU+B,EAAO,IACnC,OAAO,mDAAW1C,EAAQ2C,GAAM/D,MAAK,SAACgE,GAAD,SAAC,KACjCA,GADgC,IAEnC7B,KAAM,OACD6B,EAAS7B,MADV,IAGFA,KAAM6B,EAAS7B,KAAKA,KAAK1C,IAAIgE,MALI,GAQtC,GAdH,+BAgBE,SAAkBQ,GAChB,OAAOlD,KAAKC,KACTgB,IADI,oCAC6BiC,EAD7B,wBAEJjE,MAAK,SAACkE,GACL,OAAOA,EAAO/B,KAAKgC,KAAKC,KACzB,GACJ,GAtBH,8BAwBE,SAAiBH,GACf,OAAOlD,KAAKC,KACTgB,IADI,kBACWiC,EADX,kBAEJjE,MAAK,SAACkE,GACL,OAAOA,EAAO/B,IACf,GACJ,GA9BH,4BAgCE,SACEkC,EACAC,EACAR,GAEA,IAAMC,EAAO,6BAAH,OAAgCD,EAAhC,uBAEV,OAAO/C,KAAKuB,MAAL,UACF+B,EAAWE,UAAUC,KADnB,YAC2BH,EAAWG,MAC3C,CACEC,WAAYH,GAEdP,EAEH,GA9CH,oBAgDE,SACEW,EACAvC,EACAwC,EACAC,GAEA,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ5C,EAAK6C,MAG7B,IAAMC,EAAS,CACbpC,QAAS,CACP,eAAgB,uBAElBqC,iBAAkBP,GAMpB,OAHIC,IACFK,EAAM,YAAkBL,EAAYO,OAE/BpE,KAAKC,KAAKqB,KACf,WAAaqC,EAAiB,6BAC9BG,EACAI,EAEH,GAzEH,4BA2EE,WACE,OAAOhE,IAAAA,YAAAA,QACR,GA7EH,uBAoFE,SACEsD,EACAC,EACAV,EACA1C,EACAgE,GAC+B,WAC/B,IACGA,GACDrE,KAAKsE,kBACLtE,KAAKsE,iBAAiBb,OAASA,GAC/BzD,KAAKsE,iBAAiBd,UAAUC,OAASD,EAEzC,OAAOzE,QAAQC,QAAQgB,KAAKsE,kBAG9B,IAAMtB,EAAO,GAAH,OAAMhD,KAAKgB,SAAX,OAAqB+B,EAArB,YAA6BS,EAA7B,YAA0CC,EAA1C,KACV,OAAOzD,KAAKC,KACTgB,IAAI+B,EAAM,CACT3C,OAAQA,IAETpB,MAAK,SAACkE,GAEL,IAAMZ,EA7Hd,SAA0BA,GACxB,OAAO,OACFA,GADL,IAEEI,eAAgB,OACXJ,EAAKI,gBADI,IAEZN,SAAU,KACVkC,UAAW,OACNhC,EAAKI,eAAe4B,WADhB,IAEPlC,SAAUD,EAAeG,EAAKI,eAAe4B,UAAUlC,YAEzDO,SAAU,OACLL,EAAKI,eAAeC,UADjB,IAENP,SAAUD,EAAeG,EAAKI,eAAeC,SAASP,eAI7D,CA6GoBmC,CAAiBrB,EAAO/B,MAErC,OADA,EAAKkD,iBAAmB/B,EACjBA,CACR,GACJ,GA/GH,4BAiHE,SAAekC,EAAkBjB,EAAWC,EAAMiB,GAAS,WAEzD,OAAO,IAAI3F,SAAQ,SAACC,EAAS2F,GAC3B,EAAK1E,KACFgB,IADH,oCAEiCwD,EAFjC,8BAEuEjB,EAFvE,YAEoFC,EAFpF,qBAEqGiB,EAFrG,MAIGzF,MAAK,SAACkE,GACLnE,EAAQmE,EAAO/B,KAAP,aACT,IANH,OAOS,SAACwD,GAAD,OAASD,EAAOC,EAAhB,GACV,GACF,GA7HH,qCA+HE,SAAwB7B,EAAMO,GAC5B,OAAOtD,KAAKC,KAAL,2CACwB8C,EADxB,8BACkDO,EAAWE,UAAUC,KADvE,YAC+EH,EAAWG,KAD1F,qBAC2GH,EAAWX,eAAe+B,QADrI,KAGR,GAnIH,8BAqIE,SAAiB3B,EAAMO,GACrB,OAAOtD,KAAKC,KAAL,2CACwB8C,EADxB,8BACkDO,EAAWE,UAAUC,KADvE,YAC+EH,EAAWG,KAD1F,KAGR,GAzIH,6CA2IE,SACED,EACAF,GAGA,IAFAjD,EAEA,uDAFS,CAAC,EACVwD,EACA,4DADcgB,EAEd,OAAO7E,KAAKC,KAAKgB,IACfjB,KAAK8C,UAAL,0CACqCU,EADrC,YACkDF,IAElD,CAAEjD,OAAQL,KAAKmB,gBAAgBd,GAASwD,YAAaA,aAAF,EAAEA,EAAaO,OAErE,KAvJH,GAAyBpC,I,IChDb8C,ECFAC,ECMCC,EAAe,IAJtBC,SAAAA,I,6mBACM,EAAKnC,UAAU,gB,mBADrBmC,CAAYjD,K,SFAN8C,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,SAAAA,EAAAA,QAAAA,UAAAA,EAAAA,QAAAA,S,EAAAA,IAAAA,EAAAA,CAAAA,I,SCFAC,GAAAA,EAAAA,QAAAA,UAAAA,EAAAA,QAAAA,UAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,YAAAA,EAAAA,OAAAA,SAAAA,EAAAA,SAAAA,U,EAAAA,IAAAA,EAAAA,CAAAA,IEEL,IAUMG,EAAY,IAVzB,6B,IAAA,G,EAAA,E,gaAAA,kLACY,EAAKpC,UAAU,yBAD3B,oCAGE,SAAIxD,EAAI0D,GAGN,OAAO,kDAAU1D,EAAI0D,EACtB,KAPH,GAAyBhB,I,ICgDZmD,EAAgB,IA9CvBF,SAAAA,I,6mBACM,EAAKnC,UAAU,Q,wCAEzB,WACE,OAAO9C,KAAKC,KAAKgB,IAAIjB,KAAKgB,SAAS/B,MAAK,SAACkE,GAAD,OAAYA,EAAO/B,IAAnB,GACzC,G,sBAED,SAASA,GACP,OAAOpB,KAAKC,KAAKoB,IAAIrB,KAAKgB,QAASI,EACpC,G,sBAKD,WACE,MAAII,aAAoBV,EAAAA,EAAAA,yBACf/B,QAAQ4F,OACb,0EAIG3E,KAAKC,KAAKqB,KAAK,iBAAkB,CAAC,EAC1C,G,oBAID,WACE,OAAOtB,KAAKC,KAAKqB,KAAKtB,KAAK8C,UAAU,gBAAiB,CAAC,EACxD,G,mBAID,SAAMsC,EAAUC,GAAU,WAClBC,EAAWtF,KAAK8C,UAAU,eAIhC,OAAO9C,KAAKC,KAAKgB,IAAIqE,GAAUrG,MAAK,kBAClC,EAAKgB,KAAKqB,KAAKgE,EAAU,CACvBF,SAAAA,EACAC,SAAAA,GAHgC,GAMrC,K,EA3CGJ,CAAYjD,ICFX,IAeMuD,EAAuB,IAfpC,6B,IAAA,G,EAAA,E,gaAAA,kLACY,EAAKzC,UAAU,yBAD3B,8CAGE,SACEU,EACAC,EACAiB,EACAc,EACAC,GAEA,IAAMzC,EAAO,kBAAH,OAAqBQ,EAArB,YAAkCC,EAAlC,qBAAmDiB,EAAnD,iBAAmEc,EAAnE,YAAmFC,EAAnF,KACV,OAAOzF,KAAK0F,OAAO,CAAC,EAAG1C,EACxB,KAZH,GAAyBhB,I,ICQZ2D,EAAiB,IARxBV,SAAAA,I,6mBACM,EAAKnC,UAAU,mB,oCAEzB,SAAIxD,GAAyB,IAAbe,EAAa,uDAAJ,CAAC,EACxB,OAAOL,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAAU1B,EAAK,IAAK,CAAEe,OAAAA,GACjD,K,EALG4E,CAAYjD,ICAX,IAIM4D,EAAU,IAJvB,6B,IAAA,G,EAAA,E,gaAAA,kLACY,EAAK9C,UAAU,WAD3B,oBAAyBd,I,ICQZ6D,EAAgB,IARvBZ,SAAAA,I,6mBACM,EAAKnC,UAAU,kB,uCAEzB,SAAOxD,GACL,OAAOU,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAAU1B,EAAK,WAAY,CAAC,EACxD,K,EALG2F,CAAYjD,ICAX,IAIM8D,EAAU,IAJvB,6B,IAAA,G,EAAA,E,gaAAA,kLACY,aADZ,oBAAyB9D,I,ICIZ+D,EAAW,IAJlBd,SAAAA,I,6mBACM,EAAKnC,UAAU,Y,mBADrBmC,CAAYjD,I,8NCAX,IAAMgE,EAAb,6B,IAAA,G,EAAA,E,gaAGE,aAAc,4BACZ,cAAiBC,qCADL,iCAFA,GAEA,CAEb,CALH,mCAOE,SAAK5F,EAASW,GACZ,IAAMkF,E,qWAAgB,IAAK7F,GAK3B,OAJIL,KAAKmG,aAAeD,EAAa,OACnCA,EAAa,SAAeA,EAAa,YAClCA,EAAa,OAEf,mDAAWA,EAAelF,EAClC,KAdH,GAA6BlB,G,8NCAtB,IAsCMsG,EAAU,IAtCvB,6B,IAAA,G,EAAA,E,gaAAA,kLACY,WADZ,iCAEgB,GAFhB,kDAIE,SAAkB9G,EAAI8B,GACpB,OAAOpB,KAAKC,KAAKsB,MAAMvB,KAAKgB,QAAU1B,EAAI8B,EAC3C,GANH,kBAWE,SAAKf,EAASgG,GACZ,IAAMC,E,qWAAY,IAAKjG,GAMvB,OALIgG,IAGFC,EAAUD,gBAAkBJ,mCAAqBI,EAAkB,MAE9D,mDAAWC,EACnB,GAnBH,4BAqBE,SAAehH,GACb,OAAOU,KAAKC,KAAKgB,IACfjB,KAAKgB,QAAU1B,EAAK,4CAEvB,GAzBH,2BA2BE,SAAcA,EAAI8B,GAChB,OAAOpB,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAAU1B,EAAK,sBAAuB8B,EAClE,GA7BH,8BA+BE,SAAiB9B,EAAIiH,GACnB,OAAOvG,KAAKC,KAAL,OACLD,KAAKgB,QAAU1B,EAAK,sBAAwBiH,EAAe,IAE9D,KAnCH,GAAyBP,ICGlB,SAASQ,EAAYC,EAAoBC,GAM9C,IAAMC,GAA0BC,EAAAA,EAAAA,IAC9BH,EACAA,EAAOI,mBAOLF,EAAYG,WAAaJ,EAAiBI,iBACrCH,EAAW,SAGpB,IAAK,IAAL,MAAoBlH,OAAOD,KAAKmH,GAAhC,eAA8C,CAAzC,IAAMI,EAAK,KACa,KAAvBJ,EAAYI,KACdJ,EAAYI,GAAS,KAExB,CAED,OAAOJ,CACR,C,IAwBYK,EAAY,IAtBnB/B,SAAAA,I,6mBACM,EAAKnC,UAAU,a,4CAIzB,SAAYmE,EAAcR,EAAoBC,GAC5C,IAAMC,EAAcH,EAAYC,EAAQC,GACxC,OAAO1G,KAAKC,KAAKoB,IAAV,kBACM4F,EADN,oBAELN,EAEH,G,oBAED,SAAOO,EAAKC,GACV,KAAM,mBACP,G,kBAED,SAAKF,GACH,OAAOjH,KAAKC,KAAKqB,KAAV,kBAA0B2F,EAA1B,aAAmD,CAAC,EAC5D,K,EAnBGhC,CAAYjD,I,ICvBLoF,EAAqB,IAR5BnC,SAAAA,I,6mBACM,I,oCAEV,WACE,OAAO,kDAAU,GAClB,K,EALGA,CAAYjD,I,ICILqF,EAAkB,IAJzBpC,SAAAA,I,6mBACM,EAAKnC,UAAU,mB,mBADrBmC,CAAYjD,I,ICILsF,EAAoB,IAJ3BrC,SAAAA,I,6mBACM,EAAKnC,UAAU,sB,mBADrBmC,CAAYjD,I,ICsCLuF,EAA0B,IAtCjCtC,SAAAA,I,6mBACM,EAAKnC,UAAU,yC,uCAEzB,SAAOW,GACL,OAAOzD,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAAUyC,EAAO,oBAC5C,G,wBAED,SAAWA,EAAM+D,GACf,OAAOxH,KAAKC,KAAKoB,IAAIrB,KAAKgB,QAAUyC,EAAO,oBAAqB+D,EACjE,G,oBAED,SAAO/D,EAAMpD,GACX,OAAOL,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAAUyC,EAAO,oBAAqB,CAC9DpD,OAAQL,KAAKmB,gBAAgBd,IAEhC,G,mBAED,SAAMoD,EAAMgE,GACV,OAAOzH,KAAKC,KAAKgB,IAAV,UAAiBjB,KAAKgB,SAAtB,OAAgCyC,EAAhC,4BAAwDgE,EAAxD,KACR,G,kBAED,SAAKhE,EAAMpD,GACT,OAAOL,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAAUyC,EAAO,kBAAmB,CAC5DpD,OAAQL,KAAKmB,gBAAgBd,IAEhC,G,yBAED,SAAYoD,EAAMiE,GAChB,OAAO1H,KAAKC,KAAL,iBACFD,KAAKgB,SADH,OACayC,EADb,4BACqCiE,EADrC,KAGR,G,wCAED,SAA2BjE,GACzB,OAAOzD,KAAKC,KAAL,iBAAoBD,KAAKgB,SAAzB,OAAmCyC,EAAnC,KACR,K,EAnCGwB,CAAYjD,I,IC4BL2F,EAAkC,IA1BzC1C,SAAAA,I,6mBACM,EAAKnC,UAAU,uC,4CAOzB,SAAY8E,EAAIC,EAAsBC,GACpC,IAAMnB,EAAcH,EAAYqB,EAAUC,GAC1C,OAAO,qDAAaF,EAAIjB,EACzB,G,oBAED,SAAOO,EAAKC,GACV,KAAM,mBACP,G,mBAED,SAAM7H,GACJ,OAAOU,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAAU1B,EAAK,UAAW,CAAC,EACvD,G,kBAED,SAAKA,GACH,OAAOU,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAAU1B,EAAK,SAAU,CAAC,EACtD,K,EAvBG2F,CAAYjD,I,ICYL+F,EAAgC,IAdvC9C,SAAAA,I,6mBACM,EAAKnC,UAAU,oC,qCAOzB,SAAKW,GACH,IAAMzC,EAAUhB,KAAK8C,UAAU,wCAC/B,OAAO9C,KAAKC,KAAKqB,KAAKN,EAAUyC,EAAO,kBAAmB,CAAC,EAC5D,K,EAXGwB,CAAYjD,ICQW,IARvBiD,SAAAA,I,6mBACM,EAAKnC,UAAU,yC,qCAEzB,SAAKxD,EAAIyB,GACP,OAAO,mDAAW,CAAEA,KAAMA,GAAQf,KAAKgB,QAAU1B,EAAK,qBACvD,K,EALG2F,CAAYjD,I,ICiBLgG,EAAkB,IAjBzB/C,SAAAA,I,6mBACM,0C,oCAEV,SAAIgD,EAAsBC,EAAaT,GACrC,OAAOzH,KAAKC,KAAKqB,KAAV,UAAkBtB,KAAKgB,SAAvB,OAAiCiH,EAAjC,SAAsD,CAC3DR,OAAQA,EACRS,IAAKA,GAER,G,mBAED,SAAMD,EAAsBC,GAC1B,OAAOlI,KAAKC,KAAKqB,KAAV,UAAkBtB,KAAKgB,SAAvB,OAAiCiH,EAAjC,WAAwD,CAC7DC,IAAKA,GAER,K,EAdGjD,CAAYe,I,ICQLmC,EAAkB,IARzBlD,SAAAA,I,6mBACM,EAAKnC,UAAU,mB,oCAEzB,WACE,OAAO9C,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAC3B,K,EALGiE,CAAYjD,ICAX,IAMMoG,EAA2B,IANxC,6B,IAAA,G,EAAA,E,gaAAA,kLACY,sCADZ,oBAAyBpC,ICIuB,IAJ1Cf,SAAAA,I,6mBACM,EAAKnC,UAAU,uC,mBADrBmC,CAAYjD,ICAX,IAMMqG,EAAgB,IAN7B,6B,IAAA,G,EAAA,E,gaAAA,kLACY,EAAKvF,UAAU,iBAD3B,oBAAyBd,ICAlB,IASMsG,GAAoB,IATjC,6B,IAAA,G,EAAA,E,gaAAA,kLACY,WADZ,iCAEgB,GAFhB,oBAAyBtC,ICqBG,IArBtBf,SAAAA,I,6mBACM,Y,iCACI,G,0CAEd,SAAUsD,EAASlI,GACjB,OAAO,mDAAWA,EAAlB,UAA6BL,KAAKgB,SAAlC,OAA4CuH,EAA5C,WACD,G,wBAED,SAAWA,EAASC,GAClB,OAAOxI,KAAKC,KAAL,iBAAoBD,KAAKgB,SAAzB,OAAmCuH,EAAnC,kBAAoDC,EAApD,KACR,G,4BAED,SAAeD,EAASE,GACtB,OAAOzI,KAAKC,KAAKqB,KAAV,UAAkBtB,KAAKgB,SAAvB,OAAiCuH,EAAjC,WAAmD,CACxDE,KAAMA,EAAKhF,KAEXiF,eAAgB,MAEnB,K,EAlBGzD,CAAYe,ICAX,IAQM2C,GAAiB,IAR9B,6B,IAAA,G,EAAA,E,gaAAA,kLACY,IADZ,oCAGE,SAAIrJ,EAAY0B,GACd,OAAOhB,KAAKC,KAAKgB,IAAIjB,KAAKkB,QAAQF,GAAW1B,EAC9C,KALH,GAAyB0G,I,ICQZ4C,GAAc,IARrB3D,SAAAA,I,6mBACM,EAAKnC,UAAU,c,oCAEzB,WACE,OAAO9C,KAAKC,KAAKgB,IAAIjB,KAAKgB,QAC3B,K,EALGiE,CAAYjD,I,ICwBL6G,GAAoB,IAR3B5D,SAAAA,I,6mBACM,EAAKnC,UAAU,wB,qCAEzB,SAAK1B,GACH,OAAOpB,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAASI,EACrC,K,EALG6D,CAAYjD,I,ICWL8G,GAAuB,IAnB9B7D,SAAAA,I,6mBACM,0C,uCAGV,SAAO7D,GACL,IAAM0C,EAAW,IAAIC,SAUrB,OATAD,EAASE,OAAO,OAAQ5C,EAAK6C,MAC7BH,EAASE,OAAO,aAAc5C,EAAK2H,YACnCjF,EAASE,OAAO,oBAAqB5C,EAAK4H,mBAOnChJ,KAAKC,KAAKqB,KAAKtB,KAAKgB,QAAS8C,EALrB,CACbhC,QAAS,CACP,eAAgB,wBAIrB,K,EAhBGmD,CAAYe,I,ICcLiD,GAAe,IARtBhE,SAAAA,I,6mBACM,kC,8CAEV,SAAc7D,GACZ,OAAOpB,KAAKC,KAAKgB,IAAV,UAAiBjB,KAAKgB,QAAtB,iBAAsCI,EAAKqC,MACnD,K,EALGwB,CAAYe,G,gECbdkD,E,8FAEG,SAASC,IACd,IAAKD,EAAU,4BADOE,EACP,yBADOA,EACP,gBACbF,EAAW,IAAIG,EAAAA,GAAgB,CAAC,EAArB,CAAyBC,KAAzB,OAAqCF,GACjD,CAED,OAAOF,CACR,C,oICLKK,GAAgBC,EAAAA,EAAAA,OACpB,kBACE,6BADF,IAOIC,GAAmBD,EAAAA,EAAAA,OACvB,kBACE,8BADF,IAOIE,GAAoBF,EAAAA,EAAAA,OACxB,kBACE,6BADF,IAOIG,GAAiBH,EAAAA,EAAAA,OACrB,kBACE,8BADF,IAOII,GAAsBJ,EAAAA,EAAAA,OAC1B,kBACE,8BADF,IAOIK,GAAyBL,EAAAA,EAAAA,OAC7B,kBACE,8BADF,IAOIM,GAAWN,EAAAA,EAAAA,OACf,kBACE,8BADF,IAOIO,GAAeP,EAAAA,EAAAA,OACnB,kBACE,8BADF,IAOIQ,GAAkBR,EAAAA,EAAAA,OACtB,kBACE,6BADF,IAOIS,GAAgBT,EAAAA,EAAAA,OACpB,kBACE,6BADF,IAOIU,GAAWV,EAAAA,EAAAA,OACf,kBACE,8BADF,IAOIW,GAAYX,EAAAA,EAAAA,OAChB,kBACE,8BADF,IAOIY,GAASZ,EAAAA,EAAAA,OACb,kBACE,8BADF,IAOIa,GAAYb,EAAAA,EAAAA,OAChB,kBACE,8BADF,IAOIc,GAAed,EAAAA,EAAAA,OACnB,kBACE,8BADF,IAOIe,GAAaf,EAAAA,EAAAA,OACjB,kBACE,8BADF,IAOIgB,GAAyBhB,EAAAA,EAAAA,OAC7B,kBACE,8BADF,IAOIiB,GAAajB,EAAAA,EAAAA,OACjB,kBACE,8BADF,IAeWkB,EAAS,WACpB,OACE,kBAAC,EAAAC,SAAD,CAAUC,SAAUC,EAAAA,IAClB,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,aAAoBC,UAAWR,IAC5C,kBAAC,EAAAM,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,kBACNC,UAAWT,IAEb,kBAAC,EAAAO,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,SAAgBC,UAAWnB,IACxC,kBAAC,EAAAiB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,MAAaC,UAAWZ,IACrC,kBAAC,EAAAU,MAAD,CAAO/H,KAAMgI,EAAAA,GAAK,SAAkBC,UAAWf,IAC/C,kBAAC,EAAAa,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,cAAqBC,UAAW1B,IAC7C,kBAAC,EAAAwB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,cAAqBC,UAAWjB,IAC7C,kBAAC,EAAAe,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,oBAA2BC,UAAWjB,IACnD,kBAAC,EAAAe,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,aAAoBC,UAAWlB,IAC5C,kBAAC,EAAAgB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,SAAgBC,UAAWX,IACxC,kBAAC,EAAAS,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,WAAkBC,UAAWV,IAC1C,kBAAC,EAAAQ,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,yBACNC,UAAWtB,IAEb,kBAAC,EAAAoB,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,0BACNC,UAAWtB,IAEb,kBAAC,EAAAoB,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,4BACNC,UAAWtB,IAEb,kBAAC,EAAAoB,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,4BACNC,UAAWvB,IAEb,kBAAC,EAAAqB,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,0BACNC,UAAWrB,IAEb,kBAAC,EAAAmB,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,6BACNC,UAAWpB,IAEb,kBAAC,EAAAkB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,iBAAwBC,UAAWxB,IAChD,kBAAC,EAAAsB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,gBAAuBC,UAAWhB,IAC/C,kBAAC,EAAAc,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,aAAoBC,UAAWb,IAC5C,kBAAC,EAAAW,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,mBAA0BC,UAAWtB,IAClD,kBAAC,EAAAoB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,oBAA2BC,UAAWtB,IACnD,kBAAC,EAAAoB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,sBAA6BC,UAAWtB,IACrD,kBAAC,EAAAoB,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,sBACNC,UAAWvB,IAEb,kBAAC,EAAAqB,MAAD,CACE/H,KAAMgI,EAAAA,GAAAA,oBACNC,UAAWrB,IAEb,kBAAC,EAAAmB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,UAAiBC,UAAWd,IACzC,kBAAC,EAAAY,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,WAAkBC,UAAWxB,IAC1C,kBAAC,EAAAsB,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,UAAiBC,UAAWhB,IACzC,kBAAC,EAAAc,MAAD,CAAO/H,KAAMgI,EAAAA,GAAAA,OAAcC,UAAWb,IACtC,kBAAC,EAAAW,MAAD,KACE,kBAAC,EAAAG,SAAD,CAAUC,MAAI,EAACC,GAAIJ,EAAAA,GAAAA,aAK5B,EAEDN,EAAOW,UAAY,CACjBC,WAAYC,IAAAA,MAAgB,CAC1BC,SAAUD,IAAAA,MAAgB,CACxBE,SAAUF,IAAAA,Y,qCCxNhB,IAAMG,EAAe,YAiBfC,EAAAA,SAAAA,I,2bACJ,WAAYC,GAAO,4BACjB,cAAMA,IADW,6BAiHT,SAACC,GACT,EAAKC,SAAS,CAAED,KAAAA,GACjB,KAnHkB,+BAqHP,SAACE,GACX,EAAKD,SAAS,CAAEC,OAAAA,GACjB,KAvHkB,+BAyHP,SAACP,GACX,OAAOQ,EAAAA,EAAAA,WAAUR,EAAU,CACzBxI,KAAMgI,EAAAA,GAAAA,kBAET,KA7HkB,6BA+HT,SAACiB,GACT,MAAM,IAAI9M,MAAM,sDACjB,IA9HC,EAAK+M,MAAQ,CACXH,OAAQ,GACRI,aAAc,KACdC,aAAcV,EACdW,SAAU,KACVR,KAAM,MARS,CAUlB,C,gDAID,WAAoB,IC3BdS,ED2Bc,OAClB7K,OAAOC,SAASC,OAAOwH,OACvB1H,OAAOC,SAASC,OAAO4K,YAAY,iBAAkBC,kBAKrDxM,KAAKyM,OAAShL,OAAOC,SAASC,OAAO+K,GAAG,kBAAkB,SAACC,GAAU,MAEnE,GAAKA,SAAD,UAACA,EAAOC,gBAAR,OAAC,EAAiBC,KAAtB,CAMA,IAAMC,EAAW,EAAKlB,MAAMkB,SAASC,QAAQ,YAAa,KAIpDF,EAAOF,EAAMC,SAASC,KAAKE,QAAQD,EAAU,KAAO,IAE1D,EAAKlB,MAAMoB,QAAQ7B,KAAK0B,EAVvB,CAWF,KCjDGP,EAAkBnE,EAAAA,GAAAA,MAAsBlJ,MAC5C,gBAASkN,EAAT,EAAG/K,KAAH,MAA6B,CAC3B2K,SAASI,aAAA,EAAAA,EAAcc,YAAa,IAAIvO,KAAI,SAACwO,GAAD,MAAU,CACpDC,QAAS,UACTC,MAAOF,EAAIG,MAAM,KAAK,GAFoB,IAI5ClB,aAAAA,EALF,IASKpN,QAAQuO,IAAI,CACjBnI,EAAAA,GAAAA,UACAyD,EAAAA,GAAAA,MACA0D,IAECrN,MAAK,+BAAE4M,EAAF,KAAgBQ,EAAhB,KAAUjL,KAAV,aAA2D,CAC/D2K,OADI,EAA8BA,OAElCI,aAFI,EAAsCA,aAG1CE,SAAAA,EACAR,KAAAA,EAJI,IALD,OAWE,WAEL,OAAOS,EAAgBrN,MAAK,kBAA+B,CACzD8M,OAD0B,EAAGA,OAE7BI,aAF0B,EAAWA,aAAX,GAI7B,KDwBalN,MAAK,SAACmC,GAAD,OAAU,EAAK0K,SAAS1K,EAAxB,GACpB,G,kCAED,WACEpB,KAAKyM,QACN,G,gCAED,WASE,IAAMc,EAAQvN,KAAKwN,UAAUxN,KAAK4L,MAAMJ,SAASC,UAE7C8B,EAGEA,EAAMlN,OAAN,OAAyBL,KAAKkM,MAAME,cACtCpM,KAAK8L,SAAS,CAAEM,aAAcmB,EAAMlN,OAAN,OAK5BL,KAAKkM,MAAME,eAAiBV,GAC9B1L,KAAK8L,SAAS,CAAEM,aAAcV,GAGnC,G,oBAED,WAME,IAAM6B,EAAQvN,KAAKwN,UAAUxN,KAAK4L,MAAMJ,SAASC,UACjD,OAAI8B,GAASA,EAAMlN,OAAN,OAAyBL,KAAKkM,MAAME,aACxC,KAMJpM,KAAKkM,MAAML,KAKd,kBAAC,aAAD,CACE4B,MAAO,CACL1B,OAAQ/L,KAAKkM,MAAMH,OACnBI,aAAcnM,KAAKkM,MAAMC,aACzBC,aAAcpM,KAAKkM,MAAME,aACzBsB,UAAW1N,KAAK0N,UAChBC,QAAS3N,KAAK2N,QACdC,QAAS5N,KAAK4N,QACdvB,SAAUrM,KAAKkM,MAAMG,SACrBR,KAAM7L,KAAKkM,MAAML,OAGnB,kBAAC,EAAAgC,MAAD,CACEC,UAAQ,EACRX,QAAQ,OACRC,MAAO,2JAET,kBAAC1C,EAAD,CAAQY,WAAYtL,KAAK4L,QACzB,kBAAC,KAAD,OAtBK,IAyBV,K,EAhHGD,CAAYoC,EAAAA,WA0IlB,SAAeC,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,KAAAA,CAAUtC,I,uEEnK9BuC,GAAqB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,M,2CAQhE,WAAwBC,GAAxB,0FAC6B,SAAO,YAAiBA,EAAxB,QAD7B,gBACUC,EADV,EACUA,SAE8B,SAAlC3M,OAAO4M,aAAaC,WACtB7O,OAAOD,KAAK4O,GAAUG,SAAQ,SAACC,GACzBC,MAAMC,QAAQN,EAASI,IAEzBJ,EAASI,GAAT,CAAiB,KAAjB,eAAyBJ,EAASI,IAAlC,CAAwC,MAGxCJ,EAASI,GAAO,IAAMJ,EAASI,GAAO,GAEzC,IAGHG,EAAAA,GAAAA,eAAoBR,EAAQ,CAAES,QAASA,GAAQT,KAC/CQ,EAAAA,GAAAA,KAAUR,EAAQC,GAClBO,EAAAA,GAAAA,SAAcR,GAEdU,GAAOV,OAAOA,GAnBhB,4C,gCAAwB,G,yBAsBxBW,CA1BEC,UAAUC,UACPtQ,KAAI,SAACuQ,GAAD,OAAUA,EAAKlC,QAAQ,SAAU,GAAjC,IACJzK,QAAO,SAAC2M,GAAD,OAAUf,GAAmB1L,SAASyM,EAAtC,IAA6C,IAAM,MCC/D,ICZqBxD,GACfyD,GACEC,GDUFrC,ICZerB,GDYQhK,OAAO+J,SAASC,SCXvCyD,GAAU,KACRC,GAAW1D,GAAS4B,MAAM,MAEvB+B,QAEW,SAAhBD,GAAS,KACXA,GAASC,QACTF,GAAU,UAGL,GAAP,OAAUA,IAAV,OAAoBC,GAAS,GAA7B,YAAmCA,GAAS,KDa9C,SAVmB,kBACjB,kBAAC,KAAD,CAAUE,MAAOlG,IAAOmG,YACtB,kBAAC,gBAAD,CAAQxC,SAAUA,IAChB,kBAAC,KAAD,CAAc6B,KAAMA,EAAAA,IAClB,kBAAC,EAAD,CAAK7B,SAAUA,OAJJ,C,4hCEcZ,IAAMyC,EAAb,6B,IAAA,G,EAAA,E,gaACE,WAAY3D,GAAO,4BACjB,cAAMA,IADW,6BAwCD,WAChB,EAAKA,MAAM4D,YAAY,IACnB,EAAK5D,MAAM6D,SACb,EAAK7D,MAAM6D,SAEd,KA7CkB,8BAmEA,SAACC,GAClB,GAAY,OAARA,EAAc,CAChB,IAAMC,EAAYD,EAAIE,OAAOnC,MAC7B,EAAK7B,MAAM4D,YAAYG,EACxB,CACD,OAAO,EAAKE,YACb,KAzEkB,8BA2EA,SAACC,GAClB,EAAKhE,SAAS,CACZgE,OAAAA,GAEH,KA/EkB,8BAiFA,SAACnD,EAAOoD,EAAWC,GACpC,EAAKpE,MAAMqE,SAAStD,EAAOoD,EAAWC,GAEjC,EAAKpE,MAAMsE,UACd,EAAKpE,SACH,CACEgE,QAAQ,IAEV,kBAAM,EAAKlE,MAAM4D,YAAY,GAA7B,GAGL,IAzFC,EAAKtD,MAAQ,CACX4D,QAAQ,GAJO,CAMlB,CAPH,qCASE,WACE,IAAIK,EAAW,KACXnQ,KAAK4L,MAAMwE,aACbD,EAAWnQ,KAAK4L,MAAMwE,WAAW1R,KAAI,SAAC2R,GAAD,OAAWA,EAAM5M,IAAjB,KAGvC,IAAQqM,EAAW9P,KAAKkM,MAAhB4D,OACF3C,EAAUnN,KAAK4L,MAAMsE,SACvBI,EAAAA,cAAAA,eACAA,EAAAA,cAAAA,UAEJ,OACE,gBAAC,EAAAC,OAAD,CACEC,aAAcxQ,KAAK4L,MAAM4E,aACzBf,QAASzP,KAAKyP,QACdQ,SAAUjQ,KAAKiQ,SACfQ,SAAUzQ,KAAKyQ,SACftD,QAASA,EACTiD,WAAYD,EACZL,OAAQA,EACRY,iBAAe,EACfC,SAAU3Q,KAAK2Q,SACfC,gBAAiB5Q,KAAK4L,MAAMgF,gBAC5BC,WAAY7Q,KAAK4L,MAAMiF,WACvBC,WAAY9Q,KAAK4L,MAAMkF,WACvBC,MAAO/Q,KAAK4L,MAAMmF,OAEjB/Q,KAAK6P,aAGX,GAvCH,wBAgDE,WACE,IADmB,EACbmB,EAAU,GADG,E,25BAAA,CAGEhR,KAAK4L,MAAMqF,SAHb,IAGnB,IAAK,EAAL,qBAAyC,KAA9BC,EAA8B,QACvCF,EAAQ7F,KAAK,gBAAC,EAAAgG,aAAD,CAAc3C,IAAK0C,EAAO5R,GAAImO,MAAOyD,EAAOzN,OAC1D,CALkB,+BAiBnB,OAVuB,IAAnBuN,EAAQI,QACVJ,EAAQ7F,KACN,gBAAC,EAAAgG,aAAD,CACE3C,IAAK,YACLf,MAAO,oBACPoD,YAAY,KAKXG,CACR,KAlEH,GAAwCK,EAAAA,W,WCbjC,IAOMC,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA+BtR,KAAK4L,MAA5BG,EAAR,EAAQA,OAAQwF,EAAhB,EAAgBA,WAChB,OACE,uBACER,MAAO,CACLS,SAAU,QACVC,MAAO,MACPC,IAAK,OACLC,OAAQ,IACRC,QAAS,OACTC,cAAe,UAEjB,UAAQ,aAEP9F,EAAOrN,KAAI,SAACoT,EAAOC,GAAR,OACV,gBAAC,EAAAlE,MAAD,CACEkD,MAAO,CAAEiB,aAAc,QACvBxD,IAAKuD,EACL3E,MAAO0E,EAAM1E,MACbD,QAAS2E,EAAM3E,QACf8E,YACE,gBAAC,EAAAC,uBAAD,CAAwBC,QAAS,kBAAMZ,EAAWQ,EAAjB,KAGlCD,EAAMM,YAVC,IAejB,KA9BH,GAA+Bf,EAAAA,WAiCxB,SAASgB,EAAgBC,GAC9B,OAAO,SAAUC,GACf,IAAMC,GAAU,OAAIxS,KAAKkM,MAAL,QACpBsG,EAAQC,OAAOF,EAAY,GAE3B,IAAMG,EAAW,CAAC,EAClBA,EAASJ,GAAsBE,EAE/BxS,KAAK8L,SAAS4G,EACf,CACF,C,eCtCM,IAAMC,EAAb,6B,IAAA,G,EAAA,E,gaAAA,2LAsD4B,WACxB,MAAgD,EAAK/G,MAA7CvL,EAAR,EAAQA,OAAQuS,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,aAC/BvS,EAAAA,GAAAA,gBAA4B,CAAED,OAAAA,EAAQuS,cAAAA,EAAeC,aAAAA,GACtD,IAzDH,uCAME,WAAS,WACP,EAAoD7S,KAAK4L,MAAjDvL,EAAR,EAAQA,OAAQuS,EAAhB,EAAgBA,cAAeE,EAA/B,EAA+BA,UAAW/B,EAA1C,EAA0CA,MAE1C,OAAItR,OAAOD,KAAKc,EAAAA,GAAAA,WAAuBD,EAAQuS,IAAgBxB,OAAS,EAEpE,uBAAK0B,UAAWA,EAAW/B,MAAOA,GAC/BtR,OAAOD,KAAKc,EAAAA,GAAAA,WAAuBD,EAAQuS,IAAgBlU,KAC1D,SAAC8P,GAAD,OAAS,EAAKuE,YAAYvE,EAA1B,IAEF,gBAAC,EAAAwE,OAAD,CAAQC,QAASjT,KAAKkT,gBAAiB/F,QAAQ,QAC5C,8BAKA,IAEV,GAvBH,yBAyBE,SAAoBqB,GAClB,IAEI2E,EAFJ,EAAwDnT,KAAK4L,MAArDwH,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYhT,EAA/B,EAA+BA,OAAQwS,EAAvC,EAAuCA,aAUvC,OALEM,EADE1E,MAAMC,QAAQrO,EAAOmO,IACfnO,EAAOmO,GAEP,CAACnO,EAAOmO,IAIhB,uBAAKuC,MAAO,CAAEa,QAAS,SAAU0B,YAAa,OAAS9E,IAAKA,GAC1D,gBAAC,EAAA+E,UAAD,CAAWC,aAAcJ,EAAU5E,IAAQA,GACxC2E,EAAMzU,KAAI,SAAC+U,EAAG1B,GAAJ,aACT,gBAAC,EAAA2B,KAAD,CACElF,IAAKuD,EACLkB,QAAS,kBACPJ,EAAavS,EAAAA,GAAAA,YAAwBD,EAAQmO,EAAKiF,GAD3C,IAIRJ,SAAA,UAAAA,EAAa7E,UAAb,eAAoBiF,KAAMA,EAPpB,KAalB,KApDH,GAAoCpC,EAAAA,Y,OAAvBsB,EAAAA,eACW,CACpBC,cAAe,GACfQ,UAAW,CAAC,I,4BCGsB/B,EAAAA,UAA/B,I,+BCdA,IAAMsC,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAUI3T,KAAK4L,MATPwB,EADF,EACEA,MACAwG,EAFF,EAEEA,KACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,YACAjB,EANF,EAMEA,UACAkB,EAPF,EAOEA,gBACAC,EARF,EAQEA,eACAC,EATF,EASEA,OAGIC,EACJH,GAAmBxS,aAAoBV,EAAAA,EAAAA,yBAEzC,OACE,uBAAKgS,UAAWsB,IAAG,aAActB,IAC9BqB,GACC,uBAAKrB,UAAU,wBAAwBkB,GAExCD,GACC,uBAAKjB,UAAU,wBAAwBiB,IAEvCA,IAAgBI,GAAoB,uBAAKrB,UAAU,gBAErD,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,aACZc,EACD,2BACE,gBAAC,EAAAS,MAAD,CAAOC,aAAa,KAAKC,KAAK,OAC3BnH,EACA8G,KAINL,EACC,uBAAKf,UAAU,gBAAgBe,GAC7B,MAELI,EAAiB,gCAAGA,GAAqB,KAEzCH,EACC,uBAAKhB,UAAU,iBAAiBgB,GAEhC,uBAAKhB,UAAU,gBAItB,KAlDH,GAAgCzB,EAAAA,W,WCfzB,IAUMmD,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,OACE,gBAAC,EAAAC,WAAD,KACGzU,KAAK4L,MAAM8I,MAAMhW,KAAI,SAACiW,EAAM5C,GAAP,OAAa,EAAK6C,WAAWD,EAAM5C,EAAnC,IAG3B,GAPH,wBASE,SAAW4C,EAAME,GACf,OACE,gBAAC,EAAAC,eAAD,CACEtG,IAAKqG,EACLE,SAAUF,EAAQ,IAAM7U,KAAK4L,MAAM8I,MAAMtD,QAExCuD,EAAKzS,IAAM,gBAAC,EAAA8S,KAAD,CAAM5J,GAAIuJ,EAAKzS,KAAMyS,EAAKlR,MAAekR,EAAKlR,KAG/D,KAlBH,GAAiC4N,EAAAA,W,gCCG1B,IAAM4D,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGAKE,WACE,IAAIC,EAAOlV,KAAK4L,MAAMvL,OAAO8U,UAC7B,EAAkDnV,KAAK4L,MAA/CiH,EAAR,EAAQA,aAAcxS,EAAtB,EAAsBA,OAAQkU,EAA9B,EAA8BA,KAAMzB,EAApC,EAAoCA,UAE/BoC,IACHA,EAAO,QAGT,IAAME,EAAc,CAAC,OAAQ,aAE7B,OACE,uBAAKtC,UAAWA,GACd,wBAAM,UAAQ,kBACZ,gBAAC,KAAD,CACEyB,KAAMA,EACNzB,UAAWsB,IAAGgB,EAAa,CAAEjF,SAAmB,SAAT+E,IACvCjC,QAAS,kBACPJ,EAAavS,EAAAA,EAAAA,SAAqBD,EAAQ,YAAa,QADhD,KAKb,wBAAM,UAAQ,kBACZ,gBAAC,KAAD,CACEkU,KAAMA,EACNzB,UAAWsB,IAAGgB,EAAa,CAAEjF,SAAmB,SAAT+E,IACvCjC,QAAS,kBACPJ,EAAavS,EAAAA,EAAAA,SAAqBD,EAAQ,YAAa,QADhD,KAOlB,KArCH,GAAsCgR,EAAAA,Y,OAAzB4D,EAAAA,eACW,CACpBV,KAAM,O,0BCWH,IAAMc,EAAb,6B,IAAA,G,EAAA,E,gaAAA,iMAC2B,IAD3B,uCAGE,WAAS,WACP,EASIrV,KAAK4L,MARPnI,EADF,EACEA,KACAd,EAFF,EAEEA,eACAa,EAHF,EAGEA,UACAsP,EAJF,EAIEA,UACAwC,EALF,EAKEA,OACAvS,EANF,EAMEA,KACAwS,EAPF,EAOEA,WACAC,EARF,EAQEA,KAGIC,EAAUjS,EAAUiS,SAAWjS,EAAUC,KACzCiS,GAAiBC,EAAAA,EAAAA,IAA4BhT,EAAeC,UAElE,OACE,gBAAC,EAAAgT,KAAD,CAAM9C,UAAWsB,IAAG,mCAAoCtB,IACtD,gBAAC,EAAA+C,WAAD,CAAY/C,UAAU,YACpB,gBAACgD,GAAD,CACEC,IAAK,iCAAIN,IACTO,mBAAiB,EACjBC,MAAOzS,EAAU0S,WACjB3B,KAAK,OACL4B,aAAW,EACXC,UAAQ,IAEV,gBAAC,EAAAC,YAAD,KAAcrW,KAAKsW,iBAAiBvT,IACpC,gBAACwT,EAAD,CAAgBC,WAAS,EAACC,UAAWlB,IACpCC,GAEH,gBAAC,EAAAK,WAAD,KACE,uBAAK/C,UAAU,QACb,gBAAC,EAAAkC,KAAD,CACE5J,IAAIsL,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,iBAAwB,CACrC1H,WAAYG,EACZD,UAAWA,EAAUC,KACrBV,KAAMA,KAGPU,IAGL,uBAAKqP,UAAU,UACb,gBAAC,EAAAuD,YAAD,KACE,gBAAC,EAAAM,KAAD,CAAM1L,UAAW2L,EAAAA,aAAAA,OACf,iEAAoBnB,SAK5B,gBAAC,EAAAoB,SAAD,KACE,gBAAC,EAAAC,QAAD,CAASC,QAAS,2BAAMpU,EAAeC,SAASwP,cAC9C,uBAAKU,UAAU,eACZ9S,KAAKgX,eAAerU,EAAeC,SAASwP,gBAInD,gBAAC,EAAAyE,SAAD,CAAU/D,UAAU,kBACjBrT,OAAOD,KAAKkW,EAAerT,UAAU3D,KAAI,SAACuY,GAAD,OACxC,EAAKC,gBAAgBD,EAAGvB,EAAerT,SAAS4U,GADR,KAI3C3B,GAAU,gBAAC,EAAA6B,WAAD,KAAa7B,GAG7B,GApEH,8BAsEE,SAAyBvS,GACvB,OAAIA,IAASjC,EAAAA,EAAAA,eAET,gBAAC,EAAA6V,KAAD,CAAM1L,UAAW2L,EAAAA,aAAAA,OACf,gBAAC,EAAAQ,MAAD,CAAOC,QAAM,GAAE,sBAKd,IACR,GAhFH,4BAkFE,SAAuBC,GACrB,OAAKA,EAGDA,EAAElG,OAASpR,KAAKuX,uBACXD,EAAEE,MAAM,EAAGxX,KAAKuX,wBAA0B,MAE1CD,EALA,EAOV,GA3FH,6BA6FE,SAAwBG,EAAMpU,GAC5B,OACE,uBAAKmL,IAAKiJ,GACR,gBAACC,GAAD,CAAwBrU,MAAOA,EAAOsU,SAAO,EAACF,KAAMA,IAGzD,KAnGH,GAAoCpG,EAAAA,W,gICG7B,IAAMuG,EAAb,6B,IAAA,G,EAAA,E,gaAAA,wLACkB,CAAC,WAAY,YAD/B,uCAIE,WAAS,aACP,EACE5X,KAAK4L,MADCvJ,EAAR,EAAQA,SAAUiB,EAAlB,EAAkBA,WAAYE,EAA9B,EAA8BA,UAAWnD,EAAzC,EAAyCA,OAAQwS,EAAjD,EAAiDA,aAG3CgF,EAA+B,GAC/BC,EAAU,CAAExK,IAAK,GACjByK,EAAU1X,EAAO0X,SAAW,MAC5BC,EAAW3X,EAAO2X,UAAY,GAP7B,E,25BAAA,CASS3V,GATT,IASP,IAAK,EAAL,qBAA0B,OAAf4V,EAAe,QACxBH,EAAQ,EAAAG,EAAExV,gBAAVqV,EAAQ,GAAoB,GAE5B,IAAMI,EAAeD,EAAExU,KAAK8J,MAAMyK,GAC5BG,EAAwB,QAAZJ,GAA2BE,EAAExV,eAAiBsV,EAG5DG,IACFJ,EAAQG,EAAExV,gBACVqV,EAAO,OAILI,GAAgBC,GAClBN,EAAO1M,KAAK8M,EAEf,CAzBM,+BA2BP,OACE,2BACE,2BACE,gBAAC,EAAAG,QAAD,KACE,gBAAC,EAAAC,aAAD,KACE,gBAAC,EAAAC,YAAD,KACE,gBAAC,EAAAC,YAAD,CACE9K,MAAOpN,EAAO2X,UAAY,GAC1BQ,SAAU,SAACC,GAAD,OACR5F,EAAavS,EAAAA,EAAAA,SAAqBD,EAAQ,WAAYoY,GAD9C,EAGVhJ,QAAS,kBACPoD,EAAavS,EAAAA,EAAAA,SAAqBD,EAAQ,WAAY,IAD/C,EAGT,aAAY,uBACZqY,YAAa,2BAInB,gBAAC,EAAAL,aAAD,KACE,gBAAC,EAAAC,YAAD,KAAc,oBACb7Y,OAAOD,KAAKsY,GAASpZ,KAAI,SAAC8P,GAAD,OACxB,gBAAC,EAAA8J,YAAD,CACE9J,IAAKA,EACLsE,UAAWsB,IAAG,CACZuE,WAAW,EACX,oCAAqCnK,IAAQuJ,EAC7C,qCAAqC,IAEvC9E,QAAS,kBACPJ,EAAavS,EAAAA,EAAAA,SAAqBD,EAAQ,UAAWmO,GAD9C,GAIRA,EAXH,KAWUsJ,EAAQtJ,GAXlB,IADwB,OAkBhC,yBAAOsE,UAAU,+CACf,6BACE,0BACE,0BAAK,gBACL,0BAAK,gBACL,0BAAK,yBAGT,6BACG+E,EAAOnZ,KAAI,SAACqY,EAAShF,GAAV,OACV,sBAAIvD,IAAKuD,GACP,0BACE,gBAAC,EAAAiD,KAAD,CACE5J,IAAIsL,EAAAA,EAAAA,IACF1L,EAAAA,GAAAA,4BACA,CACE1H,WAAYA,EACZE,UAAWA,EACXiU,KAAMV,EAAQtU,aACdgB,KAAMsT,EAAQtT,KACdV,KAAM,EAAK6V,QAAQxM,cAErB9L,EAAAA,EAAAA,WAAuBD,EAAQ,EAAKuS,iBAGrCmE,EAAQtT,OAGb,0BAAKsT,EAAQtU,cACb,0BAAKsU,EAAQ3E,aApBL,MAyBf0F,EAAQxK,KAAO,GACgB,cAA9BtN,KAAK4Y,QAAQxM,cACbpM,KAAK6Y,gCAGZ,GA7GH,2CA+GE,WACE,OACE,gBAACC,GAAD,CACE1L,MAAO,kBACPgF,YAAa,uGACb2G,KAAMC,EAAAA,IAGX,KAvHH,GAA2C3H,EAAAA,Y,OAA9BuG,EAAAA,cAEUqB,EAAAA,GCnBhB,IAAMC,EAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYtN,GAAO,6BACjB,cAAMA,IACDM,MAAQ,CACXiN,gBAAiB,KACjBpN,OAAQ,GACRqN,SAAS,GALM,CAOlB,CARH,gDAUE,WACEpZ,KAAKqZ,mBAAmBrZ,KAAK4L,MAAM1I,iBACpC,GAZH,oBAcE,WACE,MAAqClD,KAAKkM,MAAlCiN,EAAR,EAAQA,gBACR,OADA,EAAyBC,QACkB,gBAAC,EAAAE,QAAD,CAAS/E,KAAK,OAAvC,gCAAG4E,EACtB,GAjBH,gCAmBE,SAA2BpW,GAAM,WACvBG,EAAqBlD,KAAK4L,MAA1B1I,iBACFqW,EAAW,GACjBA,EAASpO,KACPtI,EAAAA,GAAAA,kBAAgCE,GAAM9D,MAAK,SAACoE,GAC1C,OAAOA,CACR,KAGHkW,EAASpO,KACPtI,EAAAA,GAAAA,iBAA+BE,GAAM9D,MACnC,SAACgS,GAGC,OAF4BA,EAAQuI,YACFpI,MAEnC,KAILrS,QAAQuO,IAAIiM,GACTta,MAAK,SAACgS,GACL,IAAM5N,EAAQ4N,EAAQ,GAAKA,EAAQ,GACnC,EAAKnF,SAAS,CAAEqN,gBAAiB9V,EAAO+V,SAAS,GAClD,IAJH,OAKS,SAACxU,GACN,EAAKkH,SAAS,CAAEsN,SAAS,IACzB,MAA+BxU,EAAI3B,SAA3BiR,EAAR,EAAQA,OAAQuF,EAAhB,EAAgBA,WAChB,EAAKC,SACH,6FAA0BxW,IAC1B,UACAyW,EAAAA,EAAAA,IAAazF,EAAQuF,GAExB,GACJ,GApDH,sBAsDE,SAAiBrM,EAAOD,EAASiF,GAC/BpS,KAAK8L,SAAS,CACZC,OAAQ,GAAF,eACD/L,KAAKkM,MAAMH,QADV,CAEJ,CACEqG,YAAAA,EACAhF,MAAAA,EACAD,QAAAA,MAIP,KAjEH,GAAqCkE,EAAAA,W,qDCR9B,IAAMuI,EAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,IAAQC,EAAS7Z,KAAK4L,MAAdiO,KAER,OACEA,GACE,gBAAC/C,GAAD,CAASC,QAASlI,EAAOgL,GAAMC,OAAO,0BACnCjL,EAAOgL,GAAME,UAIrB,KAXH,GAAmC1I,EAAAA,WCStB2I,EAA8C,SAAC,GAAD,IACzDvW,EADyD,EACzDA,KACAiB,EAFyD,EAEzDA,QACAoL,EAHyD,EAGzDA,OACAmK,EAJyD,EAIzDA,SACAC,EALyD,EAKzDA,SALyD,OAOzD,kBAAC,EAAAC,MAAD,CACEhN,QAASiN,EAAAA,aAAAA,OACThN,MAAO,yCAAiB1I,IACxBoL,OAAQA,EACRqC,QAAS+H,EACTG,QAAS,CACP,kBAAC,EAAArH,OAAD,CACExE,IAAI,OACJ,UAAQ,oBACRrB,QAASmN,EAAAA,cAAAA,QACTrH,QAASgH,GAER,gBAEH,kBAAC,EAAAjH,OAAD,CAAQxE,IAAI,SAASrB,QAASmN,EAAAA,cAAAA,KAAoBrH,QAASiH,GACxD,oBAIL,2BACE,iHACyCxV,EADzC,KAEWjB,GAFX,cACwB,iCADxB,EAEE,qCA7BmD,ECS9C8W,EAA4C,SAAC,GAKpD,IAJJ9W,EAII,EAJJA,KACAqM,EAGI,EAHJA,OACAmK,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,kBAAC,EAAAC,MAAD,CACEhN,QAASiN,EAAAA,aAAAA,OACThN,MAAO,+BACP0C,OAAQA,EACRqC,QAAS+H,EACTG,QAAS,CACP,kBAAC,EAAArH,OAAD,CACExE,IAAI,WACJ,UAAQ,oBACRrB,QAASmN,EAAAA,cAAAA,QACTrH,QAASgH,GAER,oBAEH,kBAAC,EAAAjH,OAAD,CAAQxE,IAAI,SAASrB,QAASmN,EAAAA,cAAAA,KAAoBrH,QAASiH,GACxD,oBAIL,kBAAC,EAAAM,KAAD,CAAMC,WAAS,GACb,kBAAC,EAAAC,SAAD,CAAUC,KAAM,IACd,2BACE,yGAEWlX,GAFX,cACwB,iCADxB,EAEE,sCAIN,kBAAC,EAAAiX,SAAD,CAAUC,KAAM,IACd,kBAAC,EAAAC,MAAD,CAAOH,WAAS,GACd,kBAAC,EAAAI,UAAD,KACE,kDAEF,kBAAC,EAAAA,UAAD,MACA,kBAAC,EAAAA,UAAD,KACE,sDAIN,kBAAC,EAAAH,SAAD,CAAUC,KAAM,IACd,kBAAC,EAAAG,KAAD,KACE,kBAAC,EAAAC,UAAD,CACEC,QAAQ,mBACRC,MAAO,qCAEP,kBAAC,EAAAC,WAAD,CAAYzN,MAAM,kBAAkBnO,GAAG,oBACrC,kBAAC,EAAA6b,iBAAD,CACE1N,MAAM,kBACNwN,MAAM,yBASvB,E,6DC7EY1E,EAA4B,SAAC,GAIpC,UAHJE,UAAAA,OAGI,MAHQ,WAGR,MAFJD,UAAAA,OAEI,SADD5K,GACC,YAGJ,QAFyC,QAAV,GAAAwP,EAAAA,EAAAA,YAAA,eAAcjP,eAAgB,CAAC,GAAtDkP,mBAgBN,kBAAC,EAAAC,OAAD,QACE,UAAQ,kBACRnO,QAAQ,UACR2F,UAAU,sBACVyI,MAAqB,WAAd9E,EAAyB,QAAU,SAC1CsC,KACgB,WAAdtC,EACE,kBAAC,KAAD,MAEA,kBAAC,KAAD,MAGJD,UAAWA,GACP5K,GAvBK,WACX,OAAQ6K,GACN,IAAK,SACH,OAAO,iBACT,IAAK,WACH,OAAO,mBAEZ,CAkBI+E,IA5BI,IA+BV,E,WCpCYC,GAA8C,SAAC,GAItD,IAHJ3L,EAGI,EAHJA,OACAmK,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,GAAgCwB,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAwBF,EAAAA,EAAAA,UAAsB,MAA9C,eAAO1Y,EAAP,KAAa6Y,EAAb,KAOA,OACE,kBAAC,EAAA1B,MAAD,CACEhN,QAASiN,EAAAA,aAAAA,OACThN,MAAO,2BACP0C,OAAQA,EACRqC,QAAS+H,EACTG,QAAS,CACP,kBAAC,EAAArH,OAAD,CACExE,IAAI,SACJrB,QAASmN,EAAAA,cAAAA,QACTzJ,YAAa8K,EACb1I,QAAS,WACPgH,EAASjX,GACT4Y,EAAY,IACZC,EAAQ,KACT,GAEA,kBAEH,kBAAC,EAAA7I,OAAD,CAAQxE,IAAI,SAASrB,QAASmN,EAAAA,cAAAA,KAAoBrH,QAASiH,GACxD,oBAIL,2BAAI,qDACJ,kBAAC,EAAA4B,WAAD,CACExc,GAAG,mBACHqc,SAAUA,EACVI,oBAAqB,8CACrBC,iBAAkB,sBAClBC,kBAnCwB,SAAC/c,EAAG+E,GAChC2X,EAAY3X,EAAKR,MACjBoY,EAAQ5X,EACT,EAiCKiY,aAAc,kBAAMN,EAAY,GAAlB,IAIrB,ECmCM,IAAMO,GAAb,+B,IAAA,G,EAAA,E,gaAIE,WAAYvQ,GAAO,4BACjB,cAAMA,IADW,iCAHJ,CAAC,UAAW,cAGR,4CA+jBc,YAAyB,IAAtB7K,EAAsB,EAAtBA,KAAMqb,EAAgB,EAAhBA,UACxC,EAAKtQ,SAAS,CACZuQ,gBAAiB,CACftb,KAAMA,EACNH,SAAUwb,IAGf,KAtkBkB,oCAwkBM,WACvB,IAAME,EAAa,eAACpI,EAAD,uDAA2B,IAA3B,MAA+C,CAChE/G,QAAS,SACTC,MAAO,qCAAe8G,IACtB9B,YAAa,yDAHI,EAMnB,EAAKtG,SAAS,CACZC,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEzM,GAAI,kBACJ6N,QAAS,UACTC,MAAO,iEAAoD,EAAKxB,MAAMtI,WAAWG,UAGrF8Y,oBAAoB,IAGtB1T,EAAAA,GAAAA,KAAuB,CACrB2T,gBAAiB,EAAK5D,QAAQvM,SAASoQ,kCACvChY,iBAAkB,EAAKmU,QAAQxM,aAC/B5I,UAAW,EAAKoI,MAAMtI,WAAWE,UAAUC,KAC3CH,WAAY,EAAKsI,MAAMtI,WAAWG,OAEjCxE,MAAK,SAACkE,IACLuZ,EAAAA,EAAAA,IAAYvZ,EAAO/B,KAAKub,SACrB1d,MAAK,WACJ,EAAK2M,MAAMiH,aAAa,CAAC,EAC1B,IAHH,OAIS,SAAC+J,GACN,EAAK9Q,SAAS,CACZC,OAAQ,GAAF,eAAM,EAAKG,MAAMH,QAAjB,CAAyBuQ,EAAWM,MAE7C,IARH,SASW,WACP,EAAK9Q,SAAS,CACZC,OAAQ,EAAKG,MAAMH,OAAOzJ,QACxB,SAACua,GAAD,MAAiB,qBAAVA,aAAA,EAAAA,EAAGvd,GAAV,KAGL,GACJ,IAvBH,OAwBS,SAACsd,GAEN,EAAK9Q,SAAS,CACZC,OAAQ,GAAF,eAAM,EAAKG,MAAMH,QAAjB,CAAyBuQ,EAAWM,EAAM3Z,SAASiR,WAE5D,GACJ,KAznBkB,iCA2nBG,WACpB,IAAMoI,EAAa,eAACpI,EAAD,uDAA2B,IAA3B,MAA+C,CAChE/G,QAAS,SACTC,MAAO,qCAAe8G,IACtB9B,YAAa,sCAHI,EAMnB,EAAKtG,SAAS,CACZC,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEzM,GAAI,kBACJ6N,QAAS,UACTC,MAAO,uDAAoC,EAAKxB,MAAMtI,WAAWG,KAA1D,EAAmE,EAAKmI,MAAMtI,WAAWX,eAAe+B,aAGnHoY,iBAAiB,IAGnBjU,EAAAA,GAAAA,KAAuB,CACrB2T,gBAAiB,EAAK5D,QAAQvM,SAASoQ,kCACvChY,iBAAkB,EAAKmU,QAAQxM,aAC/B5I,UAAW,EAAKoI,MAAMtI,WAAWE,UAAUC,KAC3CH,WAAY,EAAKsI,MAAMtI,WAAWG,KAClCiB,QAAS,EAAKkH,MAAMtI,WAAWX,eAAe+B,UAE7CzF,MAAK,SAACkE,IACLuZ,EAAAA,EAAAA,IAAYvZ,EAAO/B,KAAKub,SACrB1d,MAAK,WACJ,EAAK2M,MAAMiH,aAAa,CAAC,EAC1B,IAHH,OAIS,SAAC+J,GACN,EAAK9Q,SAAS,CACZC,OAAQ,GAAF,eAAM,EAAKG,MAAMH,QAAjB,CAAyBuQ,EAAWM,MAE7C,IARH,SASW,WACP,EAAK9Q,SAAS,CACZC,OAAQ,EAAKG,MAAMH,OAAOzJ,QACxB,SAACua,GAAD,MAAiB,qBAAVA,aAAA,EAAAA,EAAGvd,GAAV,KAGL,GACJ,IAxBH,OAyBS,SAACsd,GAEN,EAAK9Q,SAAS,CACZC,OAAQ,GAAF,eAAM,EAAKG,MAAMH,QAAjB,CAAyBuQ,EAAWM,EAAM3Z,SAASiR,WAE5D,GACJ,KA7qBkB,6CA2tBe,SAAC6I,GACjC,MAGI,EAAK7Q,MAFP8Q,EADF,EACEA,iBACoBvZ,EAFtB,EAEEuZ,iBAAoBvZ,KAEtBZ,EAAAA,GAAAA,wBACE,EAAK+V,QAAQxM,aACb4Q,GAEC/d,MAAK,SAACge,GACL,IAAMC,GAASC,EAAAA,EAAAA,IAAmBF,EAAI7b,KAAKgc,MACrC3Z,EAAOuZ,EAAiBvZ,MAE9BiZ,EAAAA,EAAAA,IAAYQ,GAAQje,MAAK,WACvB,GAAI+d,EAAiBK,aAAajM,OAAS,EAAG,CAC5C,IAAMkM,EAAaN,EAAiBK,aAAa/a,QAC/C,qBAAGoC,UAA0BqY,CAA7B,IAEF,EAAKnR,MAAMiH,aACTvS,EAAAA,EAAAA,SACE,EAAKsL,MAAMvL,OACX,UACAid,EAAW,GAAG5Y,UAIlB,EAAKoH,SAAS,CACZkR,iBAAkB,KAClBD,kBAAmB,KACnBQ,mBAAmB,EACnBxR,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEoB,QAAS,UACTC,MACE,gHACoB3J,EADpB,kBAC4BsZ,SAOrC,MAEC,EAAKnE,QAAQlL,UAAb,kBACK,EAAKkL,QAAQ7M,QADlB,CAEE,CACEoB,QAAS,UACTC,MACE,gHACoB3J,EADpB,kBAC4BsZ,SAMlC,EAAKjR,SAAS,CACZ0R,UAAU9G,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,gBAAuB,CAC1CjI,KAAM,EAAK6V,QAAQxM,aACnB5I,UAAWwZ,EAAiBxZ,UAAUC,QAI7C,GACF,IA5DH,OA6DS,SAACmB,GACN,MAIIA,EAAI3B,SAJR,IACE7B,KAAQqc,EADV,EACUA,OAAQC,EADlB,EACkBA,8BAChBxJ,EAFF,EAEEA,OACAuF,EAHF,EAGEA,WAGF,GAAe,MAAXvF,EAAgB,CAClB,IAAMyJ,EACJ,gCACE,mDACA,gBAAC,EAAAC,KAAD,CAAM9K,UAAU,oCACb4K,EAA8Bhf,KAAI,SAAC4Y,GAAD,OACjC,gBAAC,EAAAuG,SAAD,CAAUrP,IAAK8I,GAAIA,EADc,MAMzC,EAAKxL,SAAS,CACZkR,iBAAkB,KAClBD,kBAAmB,KACnBQ,mBAAmB,EACnBxR,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEoB,QAAS,SACTC,MAAOqQ,EACPrL,YAAauL,MAIpB,MACC,EAAK7R,SAAS,CACZkR,iBAAkB,KAClBD,kBAAmB,KACnBQ,mBAAmB,EACnBxR,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEoB,QAAS,SACTC,MAAO,8EAAgB3J,EAAhB,kBAAyBsZ,IAChC3K,aAAauH,EAAAA,EAAAA,IAAazF,EAAQuF,OAK3C,GACJ,KA50BkB,gCA+1BE,WACnB,EAAK3N,SAAS,CAAEkR,iBAAkB,MACnC,IA91BC,EAAK9Q,MAAQ,CACX4R,sBAAsB,EACtBC,qBAAqB,EACrBjB,iBAAiB,EACjBP,oBAAoB,EACpBF,gBAAiB,CACftb,KAAM,EACNH,SAAUE,EAAAA,EAAAA,2BAAAA,IAEZkc,iBAAkB,KAClBD,kBAAmB,KACnBiB,eAAe,EACfjS,OAAQ,GACRyR,SAAU,KACVS,gBAAgB,EAChBV,mBAAmB,EACnBW,iBAAkB,KAClBC,iBAAiB,EACjBC,4BAA4B,EAC5BC,gCAA4BxZ,GAtBb,CAwBlB,CA5BH,gDA8BE,WAAoB,WACVvB,EAAetD,KAAK4L,MAApBtI,WACRgb,EAAAA,GAAAA,sBAA4Chb,GACzCrE,MAAK,SAACgf,GAAD,OAAoB,EAAKnS,SAAS,CAAEmS,eAAAA,GAApC,IADR,OAES,SAACnM,GAAD,OAAW,EAAK4H,SAAS5H,EAAzB,GACV,GAnCH,oBAqCE,WAAS,aACP,EAOI9R,KAAK4L,MANPtI,EADF,EACEA,WACAjD,EAFF,EAEEA,OACAwS,EAHF,EAGEA,aACAkB,EAJF,EAIEA,YACAwK,EALF,EAKEA,UACAzL,EANF,EAMEA,UAGF,EAYI9S,KAAKkM,MAXPmQ,EADF,EACEA,gBACA0B,EAFF,EAEEA,oBACAD,EAHF,EAGEA,qBACAN,EAJF,EAIEA,SACAS,EALF,EAKEA,eACAlB,EANF,EAMEA,kBACAC,EAPF,EAOEA,iBACAgB,EARF,EAQEA,cACAT,EATF,EASEA,kBACAY,EAVF,EAUEA,gBACAD,EAXF,EAWEA,iBAKIb,GAAe,OAAI/Z,EAAW+Z,cAEtBA,EAAamB,MACzB,SAAC3B,GAAD,OAAOA,EAAEnY,UAAYpB,EAAWX,eAAe+B,OAA/C,KAIA2Y,EAAalS,KAAK,CAChB7L,GAAIgE,EAAWX,eAAerD,GAC9BoF,QAASpB,EAAWX,eAAe+B,QACnC+Z,QAASnb,EAAWX,eAAe+b,WACnCnJ,WAAYjS,EAAWX,eAAe4S,aAI1C,IAAMoJ,EAAU,CACd,CAAEnQ,IAAK,gBAAiB/K,KAAM,qBAC9B,CAAE+K,IAAK,WAAY/K,KAAM,mBACzB,CAAE+K,IAAK,SAAU/K,KAAM,yBACvB,CAAE+K,IAAK,aAAc/K,KAAM,iBAGvBmb,EAAgBtb,EAAWX,eAAe+b,WAEhD,GACE,UAAA1e,KAAK4Y,eAAL,eAAczM,eAAgB,CAAC,EADzBkP,EAAR,EAAQA,mBAAoBwD,EAA5B,EAA4BA,sBAWtBC,EAAkB,SAACrL,GAAD,gBACnB5E,EAAO4E,EAAEgL,SAAS1E,UADC,YARH,SAACtG,GACpB,OAAI4H,GAAsB,eAAgB5H,EAChB,WAAjBA,EAAE8B,WAA0B,mBAAc,qBAE1C,EAEV,CAGmCwJ,CAAatL,GADzB,mBAEpBA,EAAE/O,UAAY2Y,EAAa,GAAG3Y,QAAU,mBAAc,GAFlC,EAIVsa,EAA8B1b,EAApCG,KAAsBD,EAAcF,EAAdE,UACxBiS,EAAUjS,EAAUiS,SAAWjS,EAAUC,KAE/C,GAAI+Z,EACF,OAAO,gBAAC,EAAAtS,SAAD,CAAUC,MAAI,EAACC,GAAIoS,IAG5B,IAAMyB,GAAUC,EAAAA,EAAAA,IAAUlf,KAAK4Y,QAASpV,GAElC2b,EAAgB,CACpBb,EAAAA,GAAAA,iBAAuC,CACrCc,oBACEpf,KAAK4Y,QAAQ/M,KAAKwT,kBAAkBC,kBACtCrB,eAAAA,EACAhL,QAAS,kBAAM,EAAKsM,4BAAX,IAEXvf,KAAK4Y,QAAQ/M,KAAKwT,kBAAkBC,mBAClC,gBAAC,EAAAE,aAAD,CACE,UAAQ,0BACRhR,IAAI,4BACJyE,QAAS,kBACP,EAAKsM,2BAA2Bjc,EAAWX,eAAe+B,QADnD,GAIR,+BAAmBpB,EAAWX,eAAe+B,WAGlDua,IAAYJ,GACV,gBAAC,EAAAW,aAAD,CACEhR,IAAI,WACJ,UAAQ,yBACRyE,QAAS,kBAAM,EAAKnH,SAAS,CAAEyQ,oBAAoB,GAA1C,GAER,kCAGL0C,GACE,gBAAC,EAAAO,aAAD,CACEhR,IAAI,eACJyE,QAAS,WACH4L,EACF,EAAK/S,SAAS,CACZsS,4BAA4B,EAC5BC,2BAA4B/a,EAAWX,iBAGzC,EAAKmJ,SAAS,CAAEgR,iBAAiB,GAEpC,EACD,UAAQ,uBAEP,6BAAiBxZ,EAAWX,eAAe+B,WAGhD,gBAAC,EAAA8a,aAAD,CAAcvM,QAAS,kBAAM,EAAKwM,UAAUnc,EAArB,EAAkCkL,IAAI,aAC1DlL,EAAWI,WAAa,sBAAiB,qBAE5C,gBAAC,EAAA8b,aAAD,CACEhR,IAAI,4BACJyE,QAAS,kBAAM,EAAKyM,uBAAuBpc,EAAlC,EACT,UAAQ,sCAEP,+BAEHhB,OAAOqd,SAET,OACE,gBAAC,WAAD,KACGxB,GACC,gBAACyB,GAAD,CACE9P,OAAQqO,EACR0B,gBAAiB,kBACf,EAAK/T,SAAS,CACZ0R,UAAU9G,EAAAA,EAAAA,IACR1L,EAAAA,GAAAA,UACA,CAAC,EACD,CACExH,UAAW0a,EAAiB1a,UAAUC,QAN7B,EAYjBqc,QAAS,SAAChQ,EAAQiQ,GAAT,OAAkB,EAAKC,kBAAkBlQ,EAAQiQ,EAAjD,EACTzc,WAAY4a,EACZ1a,UAAW0a,EAAiB1a,UAAUC,OAGzCwb,GACC,gCACE,gBAACxD,GAAD,CACE3L,OAAQ9P,KAAKkM,MAAMkS,2BACnBlE,SAAU,kBAAM,EAAK+F,6BAAX,EACVhG,SAAU,SAAC3C,GAAD,OAAO,EAAK4I,kBAAkB5I,EAA9B,IAEZ,gBAACiD,EAAD,CACE9W,KAAMub,EACNmB,iBAAkB7c,EAAW8c,eAC7BC,iBAAkB/c,EAAWgd,kBAC7BxQ,OAAQ9P,KAAKkM,MAAMqQ,mBACnBtC,SAAUja,KAAKugB,eACfrG,SAAU,WACR,EAAKpO,SAAS,CAAEyQ,oBAAoB,GACrC,IAEH,gBAACvC,EAAD,CACEvW,KAAMub,EACNta,QAASpB,EAAWX,eAAe+B,QACnCoL,OAAQ9P,KAAKkM,MAAM4Q,gBACnB7C,SAAUja,KAAKwgB,YACftG,SAAU,kBAAM,EAAKpO,SAAS,CAAEgR,iBAAiB,GAAvC,KAIhB,gBAAC,EAAA3C,MAAD,CACErK,OAAQiO,EACR3Q,MAAO,8BACPD,QAAQ,QACRgF,QAAS,kBAAM,EAAKrG,SAAS,CAAEiS,qBAAqB,GAA3C,GAET,gBAAC,EAAAH,KAAD,CAAM6C,SAAO,GACX,uBAAK3N,UAAU,yBACb,gBAAC,EAAA6D,KAAD,KAAO,sDAAIqI,KACX,gBAAC0B,GAAD,CACEC,OAAK,EACLtgB,OAAQ,CACNU,KAAMsb,EAAgBtb,KACtBqb,UAAWC,EAAgBzb,UAE7BiS,aAAc7S,KAAK4gB,uBACnBvd,MAAOga,EAAajM,UAGvBpR,KAAK6gB,iBAAiBxD,GAAc3e,KAAI,SAAC+U,EAAG1B,GAAJ,OACvC,gBAAC,EAAA8L,SAAD,CAAUrP,IAAKuD,GACb,gBAAC,EAAAiB,OAAD,CACE7F,QAAQ,OACRW,UAAQ,EACRmF,QAAS,WACPJ,EACEvS,EAAAA,EAAAA,SACED,EACA,UACAoT,EAAE/O,QAAQoc,aAGd,EAAKhV,SAAS,CAAEiS,qBAAqB,GACtC,GAZH,IAcItK,EAAE/O,SACI,IACT,wBAAYoa,EAAgBrL,KAlBQ,KAsB3C,gBAACiN,GAAD,CACErgB,OAAQ,CACNU,KAAMsb,EAAgBtb,KACtBqb,UAAWC,EAAgBzb,UAE7BiS,aAAc7S,KAAK4gB,uBACnBvd,MAAOga,EAAajM,UAGxB,gBAAC2P,GAAD,CACE/D,iBAAkBA,EAClBO,kBAAmBA,EACnBS,cAAeA,EACfgD,iBAAkB,SAAChD,GAAD,OAAmB,EAAKlS,SAAS,CAAEkS,cAAAA,GAAnC,EAClBjB,kBAAmBA,EACnBkE,aAAc,kBAAM,EAAKnV,SAAS,CAAEkR,iBAAkB,MAAxC,EACdkE,aAAc,kBACZ,EAAKpV,SAAS,CAAEyR,mBAAmB,IAAQ,WACzCR,EACI,EAAKoE,wBAAwBpE,GAC7BuB,EAAAA,GAAAA,iBAAuC,CACrChb,WAAY0Z,EACZlR,SAAU,SAACI,GAAD,OAAW,EAAKJ,SAASI,EAAzB,EACVkV,KAAM,KACN5D,UAAU9G,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,gBAAuB,CAC1CjI,KAAM,EAAK6V,QAAQxM,aACnB5I,UAAWwZ,EAAiBxZ,UAAUC,OAExC2I,aAAc,EAAKwM,QAAQxM,aAC3BsN,SAAU,SAAC5H,GAAD,OACR,EAAK8G,QAAQlL,UAAb,kBAA2B,EAAKxB,MAAMH,QAAtC,CAA8C+F,IADtC,GAGjB,GAhBW,IAmBhB,gBAAC6B,EAAD,CACEb,UAAWA,EACX1F,MAAO9J,EAAWG,KAClBmQ,KACEtQ,EAAWE,UAAU0S,YACnB,gBAACJ,GAAD,CACEC,IAAK,iCAAIN,IACT3C,UAAU,QACVkD,mBAAiB,EACjBC,MAAO3S,EAAWE,UAAU0S,WAC5B3B,KAAK,OACL4B,aAAW,IAIjBnC,gBACE,gBAACqN,GAAD,CACEjV,aAAcpM,KAAK4Y,QAAQxM,aAC3BpJ,KAAMgI,EAAAA,GAAAA,aACN6F,YAAU,IAGdkD,YAAa,gBAACS,EAAD,CAAaE,MAAOX,IACjCE,eACE,uBAAKnB,UAAU,0BACb,4BAAO,mBACP,uBAAKA,UAAU,4BACb,gBAAC,EAAAvC,OAAD,CACET,OAAQgO,EACRrN,SAAU,SAACqN,GAAD,OACR,EAAKhS,SAAS,CAAEgS,qBAAAA,GADR,EAGV3Q,QAASmD,EAAAA,cAAAA,OACTL,SAAU,kBACR,EAAKnE,SAAS,CAAEgS,sBAAsB,GAD9B,EAGV1N,WAAU,WAAM9M,EAAWX,eAAe+B,SAC1C,aAAY,oCACZ4c,eA7Qa,GA8QUjE,EAAajM,OAC9B,CACEoK,KAAM,oBACNvI,QAAS,kBACP,EAAKnH,SAAS,CACZiS,qBAAqB,EACrBD,sBAAsB,GAHjB,GAMX,MAGL9d,KAAKuhB,qBACJlE,EA3RW,IA6RX3e,KAAI,SAAC+U,GAAD,OACJ,gBAAC,EAAAtC,aAAD,CACE3C,IAAKiF,EAAE/O,QACP+I,MAAK,WAAMgG,EAAE/O,SACbuO,QAAS,kBACPJ,EACEvS,EAAAA,EAAAA,SACED,EACA,UACAoT,EAAE/O,QAAQoc,YALP,GAUT,qDACGrN,EAAE/O,QADL,EACuBoa,EAAgBrL,MAfrC,MAqBTmL,EACC,wBAAM9L,UAAU,gBACd,2DACe,gBAAC8G,EAAD,CAAeC,KAAM+E,QAGpC,KACJ,gBAACrI,EAAD,CACEC,WAAS,EACTC,UAAWnT,EAAWX,eAAe4S,cAI3C1B,aACEsL,EAAc/N,OAAS,EACrB,uBAAK,UAAQ,gBACX,gBAACoQ,GAAD,CAAkBC,MAAOtC,KAEzB,MAGL7b,EAAWI,YACV,gBAAC,EAAAmK,MAAD,CACEV,QAAQ,SACRW,UAAQ,EACRV,MAAO,iDAGX,gBAACkE,EAAD,CACEvF,OAAQ/L,KAAKkM,MAAMH,OACnBwF,WAAY,SAACQ,GAAD,OAAO,EAAKR,WAAWQ,EAAvB,IAEd,uBAAKe,UAAU,0BACb,uBAAKA,UAAU,QAAQ9S,KAAK0hB,WAAWnD,IACvC,uBAAKzL,UAAU,SACb,2BACE,gBAAC,KAAD,OAED6L,EAAQjgB,KAAI,SAACiW,GACZ,IAAMzS,EAAMoB,EAAWX,eAAeC,SAAS+R,EAAKnG,KACpD,OAAKtM,EAKH,uBAAK4Q,UAAU,OAAOtE,IAAKmG,EAAKnG,KAC9B,qBAAG3B,KAAM3K,EAAK0N,OAAO,SAAS+R,IAAI,cAC/BhN,EAAKlR,OANH,IAUV,OAMZ,GAxaH,oCA0aE,SAA+BH,GAAY,WACnCoW,EAAW,WACf,EAAK5N,SAAS,CACZC,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEqB,MAAO,sDACPD,QAAS,cAIhB,EAEDxH,EAAAA,GAAAA,IAAmBrC,EAAWE,UAAUC,KAAM,CAC5Cme,gBAAiB,mBAEhB3iB,MAAK,SAACwO,GAEHA,EAAMrM,KAAKygB,eAAeC,eAAetf,SACvC,8BAGF,EAAKsJ,SAAS,CACZoS,iBAAkB5a,EAClB6a,iBAAiB,IAGnBzE,GAEH,IAhBH,OAiBS,WACLA,GACD,GACJ,GA3cH,wBA6cE,SAAmBqI,GACjB,MAAyB/hB,KAAK4L,MAAtBvL,EAAR,EAAQA,OAAQ0C,EAAhB,EAAgBA,KAEVif,EAAa,CACjBxe,UAAWxD,KAAK4L,MAAMtI,WAAWE,UAAUC,KAC3CH,WAAYtD,KAAK4L,MAAMtI,WAAWG,KAClCV,KAAMA,GAEFkf,EAAU3hB,EAAAA,EAAAA,WAAuBD,EAAQL,KAAKkiB,cAE9CC,EAAO,CACX,CACEJ,OAAmB,YAAXA,EACR3U,MAAO,kBACPuH,MAAM+B,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,iBAAwBgX,EAAYC,IAEvD,CACEF,OAAmB,kBAAXA,EACR3U,MAAO,wBACPuH,MAAM+B,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,0BAAiCgX,EAAYC,IAEhE,CACEF,OAAmB,aAAXA,EACR3U,MAAO,mBACPuH,MAAM+B,EAAAA,EAAAA,IACJ1L,EAAAA,GAAAA,4BACAgX,EACAC,IAGJ,CACEF,OAAmB,eAAXA,EACR3U,MAAO,qBACPuH,MAAM+B,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,0BAAiCgX,EAAYC,IAEhE,CACEF,OAAmB,iBAAXA,EACR3U,MAAO,uBACPuH,MAAM+B,EAAAA,EAAAA,IACJ1L,EAAAA,GAAAA,6BACAgX,EACAC,KAKN,OAAO,gBAACG,GAAD,CAAUD,KAAMA,GACxB,GA5fH,kCA8fE,SAA6BE,EAAUhf,GACrC,OAAOgf,EAAS7K,MAAM,EAAGnU,EAC1B,GAhgBH,oDAkgBE,WAAgCY,GAAhC,yFACQS,EAAU1E,KAAKkM,MAAMmS,2BAD7B,SAEyBpV,EAAAA,GAAAA,cAA2B,CAChDxF,KAAMzD,KAAK4Y,QAAQxM,eAHvB,OAEQnJ,EAFR,OAKQ+F,EALR,UAK+B/C,mCAL/B,+CAKwFvB,EAAQpF,GALhG,KAOEU,KAAK8L,SAAS,CACZC,OAAQ/L,KAAKkM,MAAMH,OAAOuW,OAAO,CAC/BhjB,GAAI,qBACJ6N,QAAS,OACTC,MAAO,kEAAyB1I,EAAQlB,UAAjC,EAA8CkB,EAAQjB,KAAtD,EAA+DiB,EAAQA,cAIlF1E,KAAKigB,8BAELnX,EAAAA,GAAAA,OAA4B,CAC1B7E,KAAAA,EACA8E,WAAY9F,EAAS7B,KAAK6P,QAAQ,GAAGsR,UACrCvZ,kBAAAA,IAEC/J,MAAK,SAACkE,GACL,OAAOuZ,EAAAA,EAAAA,KAAYS,EAAAA,EAAAA,IAAmBha,EAAO/B,KAAKgc,OAAOne,MAAK,WACxD,EAAK2M,MAAM4W,QACb,EAAK5W,MAAM4W,SAEb,EAAK1W,SAAS,CACZC,OAAQ,EAAKG,MAAMH,OAChBzJ,QAAO,kBAAmB,uBAAnB,EAAGhD,EAAH,IACPgjB,OAAO,CACNnV,QAAS,UACTC,MAAO,sFAAgC1I,EAAQlB,UAAxC,EAAqDkB,EAAQjB,KAA7D,EAAsEiB,EAAQA,aAG5F,GACF,IAnBH,OAoBS,SAACkY,GACN,EAAK9Q,SAAS,CACZC,OAAQ,EAAKG,MAAMH,OAChBzJ,QAAO,kBAAmB,uBAAnB,EAAGhD,EAAH,IACPgjB,OAAO,CACNnV,QAAS,SACTC,MAAO,mEAAyB1I,EAAQlB,UAAjC,EAA8CkB,EAAQjB,KAAtD,EAA+DiB,EAAQA,UAC9E0N,YAAawK,KAGpB,IA/CL,gDAlgBF,uFAojBE,WACE5c,KAAK8L,SAAS,CACZsS,4BAA4B,EAC5BC,gCAA4BxZ,GAE/B,GAzjBH,8BA2jBE,SAAyBwd,GACvB,IAAQhG,EAAoBrc,KAAKkM,MAAzBmQ,gBACR,OAAOgG,EAAS7K,MACd6E,EAAgBzb,UAAYyb,EAAgBtb,KAAO,GACnDsb,EAAgBzb,SAAWyb,EAAgBtb,KAE9C,GAjkBH,uBAmrBE,SAAkBuC,GAAY,WAC5BT,EAAAA,GAAAA,eACES,GACCA,EAAWI,WACZ1D,KAAK4Y,QAAQxM,cAEZnN,MAAK,SAACge,GACL,IAAMC,GAASC,EAAAA,EAAAA,IAAmBF,EAAI7b,KAAKgc,MAC3C,OAAOV,EAAAA,EAAAA,IAAYQ,GAAQje,MAAK,WAC9B,IAAMmO,EAAS9J,EAAWI,WAEtB,qEAAoBJ,EAAWG,OAD/B,mEAAoBH,EAAWG,OAEnC,EAAKqI,SAAS,CACZC,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEqB,MAAOA,EACPD,QAAS,eAIX,EAAKvB,MAAM4W,QACb,EAAK5W,MAAM4W,QAEd,GACF,IAxBH,OAyBS,SAAC5d,GACN,MAA+BA,EAAI3B,SAA3BiR,EAAR,EAAQA,OAAQuF,EAAhB,EAAgBA,WAChB,EAAK3N,SAAS,CACZiR,kBAAmB,KACnBhR,OAAQ,GAAF,eACD,EAAKG,MAAMH,QADV,CAEJ,CACEoB,QAAS,SACTC,MAAQ9J,EAAWI,WAEf,wDAAgBJ,EAAWG,OAD3B,sDAAgBH,EAAWG,OAE/B2O,aAAauH,EAAAA,EAAAA,IAAazF,EAAQuF,OAIzC,GACJ,GA7tBH,+BAk1BE,SAA0B3J,EAAiB2S,GACrCA,GACFziB,KAAK8L,SAAS,CACZC,OAAQ,GAAF,eAAM/L,KAAKkM,MAAMH,QAAjB,CAAyB,CAAEqB,MAAOqV,EAAStV,QAAS,eAG9DnN,KAAK8L,SAAS,CAAEqS,gBAAiBrO,GAClC,GAz1BH,wCA21BE,WAAmD,IAAhBpL,EAAgB,uDAAN,KAC3C1E,KAAK8L,SAAS,CACZkR,iBAAkBhd,KAAK4L,MAAMtI,WAC7ByZ,kBAAmBrY,EACnBsZ,eAAe,GAElB,GAj2BH,sBAu2BE,SAAiBlM,GACf9R,KAAK8L,SAAS,CACZC,OAAQ,GAAF,eAAM/L,KAAKkM,MAAMH,QAAjB,CAAyB+F,KAElC,GA32BH,sBA62BE,WACE,OAAOO,EAAgB,SACxB,KA/2BH,GAAsChB,EAAAA,Y,OAAzB8K,GAAAA,cAEUlD,EAAAA,G,gBClFVyJ,GAAuC,SAAC,GAAgB,QAAdhe,EAAc,EAAdA,QAC7C2W,IAAiC,QAAV,GAAAD,EAAAA,EAAAA,YAAA,eAAcjP,eAAgB,CAAC,GAAtDkP,mBACR,GAAwBK,EAAAA,EAAAA,WAAS,GAAjC,eAAOiH,EAAP,KAAaC,EAAb,KAGA,OAAKvH,IAAsB,UAAA3W,EAAQ9B,SAASigB,kBAAjB,eAA6BzR,QAAS,EACxD,KAIP,oCACE,kBAAC,EAAAsJ,SAAD,KACE,kBAAC,EAAAE,MAAD,CAAOH,WAAS,GACd,kBAAC,EAAAI,UAAD,CAAW/H,UAAU,iBAAiB,qBACtC,kBAAC,EAAA+H,UAAD,KACE,kBAAC,EAAA7H,OAAD,CACEjC,MAAO,CAAE+R,QAAS,GAClB3V,QAASmN,EAAAA,cAAAA,KACTvB,KAAM,kBAAC,MAAD,MACN,UAAQ,0BACR9F,QAAS,WACP2P,GAASD,EACV,GAEAA,EAAO,6BAAwB,iCAKxC,kBAAC,EAAAjI,SAAD,KACGiI,GACCje,EAAQ9B,SAASigB,WAAWnkB,KAAI,WAAgBqkB,GAAhB,IAAGC,EAAH,EAAGA,UAAH,OAC9B,kBAAC,EAAAC,UAAD,CAAWzU,IAAKuU,GACd,kBAAC,EAAAG,cAAD,KAAgBF,GAFY,KAQzC,EC1BM,IAAMG,GAAb,6B,IAAA,G,EAAA,E,gaAIE,WAAYvX,GAAO,6BACjB,cAAMA,IACDwX,gBAAkB/R,EAAAA,YAFN,CAGlB,CAPH,qCASE,WAAS,WACP,EAAoDrR,KAAK4L,MAAjDnI,EAAR,EAAQA,KAAMd,EAAd,EAAcA,eAAgBa,EAA9B,EAA8BA,UAAWnD,EAAzC,EAAyCA,OAErCgjB,EAAiB,qCAAH,OAAwC7f,EAAUC,KAAlD,YAA0DA,GAM5E,OAJIpD,EAAOqE,UACT2e,GAAkB,IAAJ,OAAQhjB,EAAOqE,UAI7B,uBAAKoO,UAAU,2BACb,0BAAK,mBACL,gBAAC,EAAA0H,KAAD,CAAMC,WAAW,GACf,gBAAC,EAAAC,SAAD,KAAW/X,EAAeC,SAASwP,aACnC,gBAAC,EAAAsI,SAAD,KACG/X,EAAeC,SAAS0gB,KAAK5kB,KAAI,SAACwJ,EAAK6J,GAAN,OAChC,gBAACwR,GAAD,CAAK/U,IAAKuD,GAAI7J,EADkB,KAKpC,gBAAC,EAAAwS,SAAD,KACE,gBAAC,EAAAE,MAAD,CAAOH,WAAW,GAChB,gBAAC,EAAAI,UAAD,CAAW/H,UAAU,iBAAiB,mBACtC,gBAAC,EAAA+H,UAAD,CAAW2I,UAAQ,GAAE7gB,EAAeC,SAAS6gB,WAGjD,gBAAC,EAAA/I,SAAD,KACE,gBAAC,EAAAE,MAAD,CAAOH,WAAW,GAChB,gBAAC,EAAAI,UAAD,CAAW/H,UAAU,iBAAiB,wBACtC,gBAAC,EAAA+H,UAAD,CAAW2I,UAAQ,GACjB,gBAACE,GAAD,CAAeC,YAAU,GAAEN,GAC3B,2BACE,mIACE,8BAIHrjB,KAAK4Y,QAAQ/M,KAAK+X,eAClB5jB,KAAK4Y,QAAQvM,SACXwX,kDACD,gBAAC,EAAAhW,MAAD,CACEiF,UAAW,gCACXhF,UAAQ,EACRX,QAAQ,UACRC,MACE,gBAAC,WAAD,KACG,uEAAiE,IAClE,gBAAC0W,GAAD,SAKN,2BACE,qBACEC,IAAK/jB,KAAKojB,gBACVrS,MAAO,CAAEa,QAAS,UAEpB,gBAAC,EAAAoB,OAAD,CACEF,UAAU,kBACV3F,QAAQ,OACR,UAAQ,qCACR4L,KAAM,gBAAC,MAAD,MACN9F,QAAS,kBACP,EAAK+Q,SACH,EAAKpL,QAAQxM,aACb5I,EACAC,EACAd,EALK,GASR,gCAOb,gBAAC+f,GAAD,CAA2Bhe,QAAS/B,IACnCA,EAAeshB,kBACd,gBAAC,EAAAvJ,SAAD,KACE,gBAAC,EAAAE,MAAD,CAAOH,WAAW,GAChB,gBAAC,EAAAI,UAAD,CAAW/H,UAAU,iBAClB,4BAEH,gBAAC,EAAA+H,UAAD,CAAW2I,UAAQ,EAAC,UAAQ,uBACzB7gB,EAAeshB,oBAMvBthB,EAAe4B,UAAU2f,kBACxB,gBAAC,EAAAxJ,SAAD,KACE,uBAAK5H,UAAU,wBACb,uBACEA,UAAU,eACVqR,wBAAyB,CACvBC,OAAQzhB,EAAe4B,UAAU2f,kBAAkBG,QAGvD,uBAAKvR,UAAU,kBAEjB,gBAAC,EAAAkC,KAAD,CACE5J,IAAIsL,EAAAA,EAAAA,IACF1L,EAAAA,GAAAA,0BACA,CACE1H,WAAYG,EACZD,UAAWA,EAAUC,KACrBV,KAAM/C,KAAK4Y,QAAQxM,cAErB/L,IAGD,gCAGH,MAIX,GAlIH,sBAoIE,SAAiBikB,EAAU9gB,EAAWC,EAAMd,GAAgB,WAC1DE,EAAAA,GAAAA,eACEyhB,EACA9gB,EAAUC,KACVA,EACAd,EAAe+B,SAEdzF,MAAK,SAACslB,GAML,EAAKnB,gBAAgBoB,QAAQ3X,KAAO0X,EACpC,EAAKnB,gBAAgBoB,QAAQC,OAC9B,IAdH,OAeS,SAACvlB,GACN,MAA+BA,EAAE+D,SAAzBiR,EAAR,EAAQA,OAAQuF,EAAhB,EAAgBA,WAChB,EAAK7N,MAAM8N,SACT,SACA,4DAAgBjW,KAChBkW,EAAAA,EAAAA,IAAazF,EAAQuF,GAExB,GACJ,KA5JH,GAAoCpI,EAAAA,Y,OAAvB8R,GAAAA,cAEUlK,EAAAA,GCJhB,IAAMyL,GAAb,6B,IAAA,G,EAAA,E,gaAGE,WAAY9Y,GAAO,6BACjB,cAAMA,IAEDM,MAAQ,CACXyY,UAAW/Y,EAAMvL,OAAO2X,UAAY,IAJrB,CAMlB,CATH,iDAWE,SAAmB4M,GACbA,EAAUvkB,OAAO2X,WAAahY,KAAK4L,MAAMvL,OAAX,UAChCL,KAAK8L,SAAS,CAAE6Y,UAAW3kB,KAAK4L,MAAMvL,OAAX,UAAiC,IAE/D,GAfH,oBAiBE,WAAS,aACP,EAAgDL,KAAK4L,MAA7CgH,EAAR,EAAQA,cAAevS,EAAvB,EAAuBA,OAAQwS,EAA/B,EAA+BA,aACvBwI,IAAuB,UAAArb,KAAK4Y,eAAL,eAAczM,eAAgB,CAAC,GAAtDkP,mBAEFwJ,EAAe,CACnB,CACEvlB,GAAI,WACJ8N,MAAO,oBAET,CACE9N,GAAI,OACJ8N,MAAO,cACP0X,UAAW,WACX9T,QAASlQ,EAAAA,EAAAA,uBAAAA,KAAqC,SAACoH,GAAD,MAAU,CACtD5I,GAAI4I,EACJkF,MAAOlF,EAFqC,KAKhDmT,GAAsB,CACpB/b,GAAI,aACJ8N,MAAO,qBACP0X,UAAW,SACX9T,QAAS,CACP,CAAE1R,GAAI,SAAU8N,MAAO,kBACvB,CAAE9N,GAAI,WAAY8N,MAAO,uBAG7B9K,OAAOqd,SAET,OACE,gBAAC,EAAAvH,QAAD,KACE,gBAAC,EAAA2M,eAAD,KACE,gBAAC,EAAA1M,aAAD,CAActH,MAAO,CAAEiU,WAAY,IACjC,gBAAC,EAAA1M,YAAD,KACE,gBAAC2M,GAAD,CACEN,UAAW3kB,KAAKkM,MAAMyY,UACtBnM,SAAU,SAACgD,GAAD,OAAU,EAAK1P,SAAS,CAAE6Y,UAAWnJ,GAArC,EACV3I,aAAcA,EACdxS,OAAQA,EACRwkB,aAAcA,IAEhB,gBAAC,EAAAvM,YAAD,KACE,gBAAC3F,EAAD,CACES,UAAW,CACTmC,WAAY,qBACZ+N,KAAM,eACNtL,SAAU,oBAEZjH,MAAO,CAAEmU,UAAW,QACpBrS,aAAcA,EACdxS,OAAQA,EACRuS,cAAeA,QAQ9B,KA5EH,GAAsCvB,EAAAA,Y,OAAzBqT,GAAAA,cACUzL,EAAAA,GCDhB,IAAMkM,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,EAQInlB,KAAK4L,MAPP4N,EADF,EACEA,YACAnZ,EAFF,EAEEA,OACAwS,EAHF,EAGEA,aACAD,EAJF,EAIEA,cACAwS,EALF,EAKEA,UACAC,EANF,EAMEA,aACAtiB,EAPF,EAOEA,KAGF,OACE,gBAAC,WAAD,KACE,gBAAC,EAAAuiB,SAAD,CAAU,aAAY,+BACnB9L,EAAYpI,OAAS,EACpBoI,EAAY9a,KAAI,SAACuZ,GAAD,OACd,gBAACsN,IAAD,QACEC,SACEH,EAAe,EAAKzZ,MAAM6Z,yBAAyBxN,GAAK,KAE1DzJ,IAAKyJ,EAAE3Y,IACH2Y,EALN,CAMElV,KAAMA,IAPM,IAWhB,gBAAC2iB,GAAD,CACExS,gBAAiB,WACf5S,EAAAA,EAAAA,gBAA4B,CAC1BD,OAAAA,EACAuS,cAAAA,EACAC,aAAAA,GAEH,KAIP,gBAAC6N,GAAD,CACErgB,OAAQA,EACRwS,aAAc,SAAClS,GAAD,OAAOkS,EAAalS,EAApB,EACd0C,MAAO+hB,IAId,KA7CH,GAAoC/T,EAAAA,WCK7B,IAAMkU,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAUIvlB,KAAK4L,MATPnI,EADF,EACEA,KAEAd,EAHF,EAGEA,eACAa,EAJF,EAIEA,UACAmiB,EALF,EAKEA,cACAH,EANF,EAMEA,SACA9hB,EAPF,EAOEA,WACAX,EARF,EAQEA,KACAwS,EATF,EASEA,WAGIqQ,EAAQ,GAERnQ,EAAUjS,EAAUiS,SAAWjS,EAAUC,KAE3CkiB,GACFC,EAAMza,KACJ,gBAAC,EAAA0a,aAAD,CAAcrC,UAAU,EAAOsC,YAAY,EAAOtX,IAAI,MACpD,gBAACsH,GAAD,CACEC,IAAK,iCAAIN,IACTO,mBAAiB,EACjBC,MAAOzS,EAAU0S,WACjB3B,KAAK,OACL4B,aAAW,EACX4P,MAAM,WAMd,IAAMrQ,GAAiBC,EAAAA,EAAAA,IAA4BhT,EAAeC,UA0DlE,OAxDAgjB,EAAMza,KACJ,gBAAC,EAAA0a,aAAD,CAAcrX,IAAI,WAChB,2BACE,gBAAC,EAAAwG,KAAD,CACE5J,IAAIsL,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,iBAAwB,CACrC1H,WAAYG,EACZD,UAAWA,EAAUC,KACrBV,KAAMA,IAER,UAAQ,uBAEPU,GAEFC,GAAc,gBAACsiB,GAAD,MACdL,EACC,gBAAC,EAAAtP,YAAD,KACE,gBAAC,EAAAM,KAAD,CAAM1L,UAAW2L,EAAAA,aAAAA,OACf,iEAAoBnB,OAGtB,MAEN,uBAAK3C,UAAU,aAAanQ,EAAeC,SAASwP,aACpD,uBAAKU,UAAU,iCACZrT,OAAOD,KAAKkW,EAAerT,UAAU3D,KAAI,SAAC+Y,GAAD,OACxC,uBAAKjJ,IAAKiJ,GACR,gBAACC,GAAD,CACErU,MAAOqS,EAAerT,SAASoV,GAC/BA,KAAMA,IAJ8B,KAS5C,uBAAK3E,UAAU,iCACb,gBAAC,EAAAmT,WAAD,KACGtjB,EAAeC,SAAS0gB,KAAK5kB,KAAI,SAACwJ,EAAK2M,GAAN,OAChC,gBAAC0O,GAAD,CAAK/U,IAAKqG,GAAQ3M,EADc,QAQ1C0d,EAAMza,KACJ,gBAAC,EAAA0a,aAAD,CAAcrC,UAAU,EAAOsC,YAAU,EAACtX,IAAI,SAC3CgX,EAAW,uBAAK1S,UAAU,aAAa0S,GAAkB,KAC1D,uBAAK1S,UAAU,2BACb,sDACU,gBAAC8G,EAAD,CAAeC,KAAMlX,EAAe+b,iBAGhD,uBAAK5L,UAAU,aAAf,IAA6BnQ,EAAe+B,SAC5C,gBAAC6R,EAAD,CAAgBzD,UAAU,YAAY2D,UAAWlB,MAKnD,gBAAC,EAAA2Q,aAAD,CAAc,UAAQ,sBACpB,gBAAC,EAAAC,gBAAD,KACE,gBAAC,EAAAC,kBAAD,CAAmBC,cAAeT,KAIzC,KAlGH,GAAwCvU,EAAAA,WCrBjC,IAAMiV,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAQItmB,KAAK4L,MAPPqV,EADF,EACEA,aACAnN,EAFF,EAEEA,SACAyS,EAHF,EAGEA,cACA1V,EAJF,EAIEA,WACAzD,EALF,EAKEA,MACAoZ,EANF,EAMEA,QACAC,EAPF,EAOEA,mBAGF,OACE,gBAAC,EAAAtM,MAAD,CACEE,QAAS,CACP,gBAAC,EAAArH,OAAD,CACExE,IAAI,UACJyE,QAASsT,EACTpZ,QAAQ,UACR0D,WAAYA,GAEX4V,GAA0C,cAC1CD,GAAW,gBAAC,EAAAlN,QAAD,CAAS/E,KAAK,QAE5B,gBAAC,EAAAvB,OAAD,CAAQxE,IAAI,SAASyE,QAASgO,EAAc9T,QAAQ,QACjD,mBAGL2C,QAAQ,EACRqC,QAAS8O,EACT7T,MAAOA,EACPsZ,iBAAiB,UACjBvZ,QAAQ,SAEP2G,EAGN,KArCH,GAAkCzC,EAAAA,WCI3B,IAAMsV,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,EAA6B3mB,KAAK4L,MAA1BtI,EAAR,EAAQA,WAAYP,EAApB,EAAoBA,KAEZ4a,EAAiBra,EAAWX,eAAeC,SAA3C+a,aAER,OAAKle,OAAOD,KAAKme,GAAcvM,OAU7B,gBAAC,EAAAwM,KAAD,CAAMzQ,QAASyZ,EAAAA,YAAAA,OAAoB9T,UAAU,2BAC1CrT,OAAOD,KAAKme,GAAcjf,KAAI,SAACmoB,EAAY9U,GAAb,OAC7B,gBAAC,EAAA8L,SAAD,CAAUrP,IAAKuD,EAAGhB,MAAO,CAAEuC,YAAa,SACtC,gBAAC,EAAA0B,KAAD,CACE5J,IAAIsL,EAAAA,EAAAA,IACF1L,EAAAA,GAAAA,iBACA,CACE1H,WAAY,EAAKwjB,oBAAoBD,GAAYvjB,WACjDE,UAAW,EAAKsjB,oBAAoBD,GAAYrjB,UAChDT,KAAAA,GAEF,EAAKgkB,gBAAgBpJ,EAAakJ,MAGnC,EAAKC,oBAAoBD,GAAYvjB,YAbb,KAT/B,gBAAC0jB,GAAD,CACE5Z,MAAO,0BACPgF,YAAa,kDA0BpB,GApCH,iCAsCE,SAA4ByU,GAC1B,MAAgCA,EAAWxZ,MAAM,KAAjD,eACA,MAAO,CAAE7J,UADT,KACoBF,WADpB,KAED,GAzCH,6BA2CE,SAAwBoB,GACtB,IAAM+O,EAAI/O,EAAQ6I,MAAM,eACxB,OAAOkG,EAAI,CAAE/O,QAAS+O,EAAE,IAAO,CAAC,CACjC,KA9CH,GAAgDpC,EAAAA,WCwBzC,IAAM4V,GAAb,6B,IAAA,G,EAAA,E,gaAAA,wLAC0B,CAAC,YAAa,OAAQ,OAAQ,oBADxD,uCAGE,WAAS,WACP,EAMIjnB,KAAK4L,MALPvL,EADF,EACEA,OACA6mB,EAFF,EAEEA,mBACA9B,EAHF,EAGEA,UACAvS,EAJF,EAIEA,aACAsU,EALF,EAKEA,0BAGF,OAAK/B,IAAcgC,EAAAA,EAAAA,IAAY/mB,EAAQ,CAAC,oBAUtC,gCACE,uBAAKyS,UAAU,kCACb,gBAAC,EAAAsF,QAAD,KACE,gBAAC,EAAAC,aAAD,KACE,gBAAC,EAAAC,YAAD,KACE,gBAAC,EAAAC,YAAD,CACE9K,MAAOpN,EAAOgnB,iBAAmB,GACjC7O,SAAU,SAACC,GAAD,OACR5F,EACEvS,EAAAA,GAAAA,SAAqBD,EAAQ,kBAAmBoY,GAF1C,EAKVhJ,QAAS,kBACPoD,EACEvS,EAAAA,GAAAA,SAAqBD,EAAQ,kBAAmB,IAF3C,EAKT,aAAW,yBACXqY,YAAa,4BAGjB,gBAAC,EAAAJ,YAAD,KACE,gBAACgP,GAAD,CACEtW,QAAS,CACP,CAAE5D,MAAO,qBAAe9N,GAAI,aAAcmY,KAAM,UAElDpX,OAAQA,EACRwS,aAAc,gBAAG0U,EAAH,EAAGA,KAAH,OACZ1U,EAAavS,EAAAA,GAAAA,SAAqBD,EAAQ,OAAQknB,GADtC,SAOnBnC,GACD,gBAAC1E,GAAD,CACErgB,OAAQA,EACRwS,aAAc,SAAClS,GAAD,OAAOkS,EAAalS,EAApB,EACd0C,MAAO+hB,EACPzE,OAAK,KAKVwG,EACC,gBAACK,GAAD,MAEA,gCACIpC,EAGA,gCACE,yBAAOtS,UAAU,+CACf,6BACGoU,EAAmBxoB,KAClB,WAAgDqT,GAAhD,IAAGtO,EAAH,EAAGA,KAAMD,EAAT,EAASA,UAAWkB,EAApB,EAAoBA,QAAS+iB,EAA7B,EAA6BA,gBAA7B,OACE,sBAAIjZ,IAAKuD,GACP,0BACE,gBAAC,EAAAiD,KAAD,CACE5J,IAAIsL,EAAAA,EAAAA,IACF1L,EAAAA,GAAAA,iBACA,CACE1H,WAAYG,EACZD,UAAAA,EACAT,KAAM0kB,EAAgB,IAExBnnB,EAAAA,GAAAA,WACE,CAAEoE,QAAAA,GACF,EAAKkO,iBAIRnP,EAdH,KAcWiB,IAjBjB,MAyBN,gBAACgc,GAAD,CACErgB,OAAQA,EACRwS,aAAc,SAACxS,GAAD,OAAYwS,EAAaxS,EAAzB,EACdgD,MAAO+hB,KAlCX,gBAACM,GAAD,QAzDN,gBAACsB,GAAD,CACE5Z,MAAO,oDACPgF,YAAa,2DAiGpB,KAjHH,GAAsDf,EAAAA,W,4BCWzC4T,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYrZ,GAAO,4BACjB,cAAMA,IADW,8BAwJA,WACjB,EAAKE,SAAS,CACZgE,QAAS,EAAK5D,MAAM4D,QAEvB,KA5JkB,sCA8JQ,SAACnD,GAC1B,IAAIrG,EAAY,EAAKsF,MAAMvL,OAAO,EAAK6L,MAAMwb,eAAepoB,IACvDgH,IACHA,EAAY,IAId,IAAMqhB,EAAahb,EAAMib,cAActoB,GAAGyN,QAAQ,oBAAqB,IACvE,GAAIzG,EAAU9D,SAASmlB,GAAa,CAClC,IAAM9S,EAAQvO,EAAUuhB,QAAQF,GAC5B9S,GAAS,GACXvO,EAAUmM,OAAOoC,EAAO,EAE3B,MACCvO,EAAU6E,KAAKwc,GAEjB,EAAKG,eAAexhB,EACrB,IA5KC,EAAK4F,MAAQ,CACXwb,eAAgB9b,EAAMiZ,aAAa,GACnCkD,YAAY,EACZC,aAAa,EACblY,QAAQ,EACRmY,mBAAmB,GARJ,CAUlB,CAXH,qCAaE,WAAS,WACCpD,EAAiB7kB,KAAK4L,MAAtBiZ,aACA6C,EAAmB1nB,KAAKkM,MAAxBwb,eAEFQ,EAAgBrD,EAAanmB,KAAI,SAAC+U,GAAD,OACrC,gBAAC,EAAA+L,aAAD,CACEvM,QAAS,WACP,EAAKrH,MAAM4M,SAAS,IACpB,EAAK1M,SAAS,CAAE4b,eAAgBjU,GACjC,EACDjF,IAAKiF,EAAEnU,IAENmU,EAAErG,MARgC,IAYvC,OACE,gBAAC,EAAA+a,WAAD,CAAY,UAAQ,mBACM,GAAvBtD,EAAazT,QACZ,gBAACoQ,GAAD,CACE4G,WAAW,WACXC,YACE,4BACE,gBAAC,MAAD,MACC,MACAX,EAAeta,OAGpBoE,SAAS,OACTiP,SAAS,EACTgB,MAAOyG,IAGVloB,KAAKsoB,YAAYZ,GAClB,gBAAC,EAAA1U,OAAD,CACEC,QAAS,kBAAM,EAAKsV,cAAX,EACTpb,QAASmN,EAAAA,cAAAA,QACTzJ,YAAa7Q,KAAK4L,MAAM+Y,UAAU6D,OAAOpX,QAEzC,gBAAC,MAAD,OAIP,GAxDH,yBA0DE,SAAoBsW,GAA8B,WAChD,OAAQA,EAAe5C,WACrB,IAAK,WACH,OACE,gBAAC,EAAAvU,OAAD,CACEpD,QAASmD,EAAAA,cAAAA,SACTG,SAAUzQ,KAAKyQ,SACfR,SAAUjQ,KAAKyoB,iBACf3Y,OAAQ9P,KAAKkM,MAAM4D,OACnBc,gBAAiB,0BAAc8W,EAAepoB,GAAGopB,gBACjDtY,WAAYpQ,KAAK4L,MAAMvL,OAAOL,KAAKkM,MAAMwb,eAAepoB,IACxDqpB,WAAS,GAER,CACC,gBAAC,EAAAC,YAAD,CACE3N,MAAO,0BAAcyM,EAAepoB,KACpCkP,IAAKkZ,EAAepoB,IAEnBooB,EAAe1W,QAAQtS,KAAI,SAACwS,GAAD,OAI1B,gBAAC,EAAAC,aAAD,CAAc3C,IAAK0C,EAAO5R,GAAImO,MAAOyD,EAAO5R,IAJlB,OAUtC,IAAK,SACH,OACE,gBAACkiB,GAAD,CACE4G,WAAW,WACXC,YACEroB,KAAK6oB,gBAAgB7oB,KAAK4L,MAAM+Y,UAAW+C,IAC3CA,EAAehP,aACfgP,EAAeta,MAEjBqT,SAAS,EACTjP,SAAS,OACTiQ,MAAOiG,EAAe1W,QAAQtS,KAAI,SAAC+U,GAAD,OAChC,gBAAC,EAAA+L,aAAD,CACEvM,QAAS,WACP,EAAKrH,MAAM4M,SAAS/E,EAAEnU,IACtB,EAAKipB,aAAa9U,EAAEnU,GACrB,EACDkP,IAAKiF,EAAEnU,IAENmU,EAAErG,MAR2B,MAaxC,QACE,OACE,gBAAC,EAAA0b,UAAD,CACE,aAAYpB,EAAepoB,GAC3BoZ,YACEgP,EAAehP,aACf,0BAAcgP,EAAeta,MAAMsb,gBAErCjb,MAAOzN,KAAK4L,MAAM+Y,UAClBnM,SAAU,SAACvB,GAAD,OAAO,EAAKrL,MAAM4M,SAASvB,EAA3B,EACV8R,WAAY,SAAC7pB,GAAD,OAAO,EAAK8pB,YAAY9pB,EAAxB,IAIrB,GA5HH,yBA8HE,SAAoBA,GAEJ,UAAVA,EAAEsP,KAAmBxO,KAAK4L,MAAM+Y,UAAU6D,OAAOpX,OAAS,GAC5DpR,KAAKuoB,cAER,GAnIH,4BAqIE,SAAuBU,GACrBjpB,KAAK4L,MAAMiH,aACTvS,EAAAA,GAAAA,SACEN,KAAK4L,MAAMvL,OACXL,KAAKkM,MAAMwb,eAAepoB,GAC1B2pB,GAGL,GA7IH,0BA+IE,WAAqC,IAAhB3pB,EAAgB,4DAAXuF,EACxB7E,KAAK4L,MAAMiH,aACTvS,EAAAA,GAAAA,SACEN,KAAK4L,MAAMvL,OACXL,KAAKkM,MAAMwb,eAAepoB,GAC1BA,GAAUU,KAAK4L,MAAM+Y,WAG1B,GAvJH,6BAkLE,SAAwBA,EAAmB+C,GACzC,OAAK/C,GAAc+C,SAAAA,EAAgB1W,QAI5B0W,EAAe1W,QAAQwN,MAAK,SAAC0K,GAAD,OAASA,EAAI5pB,KAAOqlB,CAApB,IAA+BvX,MAHzDuX,CAIV,KAxLH,GAAoCtT,EAAAA,WCvC7B,IAAM8X,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MACEnpB,KAAK4L,MADCqV,EAAR,EAAQA,aAAcnN,EAAtB,EAAsBA,SAAUoN,EAAhC,EAAgCA,aAAcrQ,EAA9C,EAA8CA,WAAYzD,EAA1D,EAA0DA,MAAOoZ,EAAjE,EAAiEA,QAGjE,OACE,gBAAC,EAAArM,MAAD,CACEE,QAAS,CACP,uBAAK,UAAQ,gBAAgB7L,IAAI,UAC/B,gBAAC,EAAAwE,OAAD,CACExE,IAAI,SACJyE,QAASiO,EACT/T,QAAQ,SACR0D,WAAYA,GAEX,iBACA2V,GAAW,gBAAC,EAAAlN,QAAD,CAAS/E,KAAK,SAG9B,gBAAC,EAAAvB,OAAD,CAAQxE,IAAI,SAASyE,QAASgO,EAAc9T,QAAQ,QACjD,mBAGL2C,QAAQ,EACRqC,QAAS8O,EACT7T,MAAOA,EACPsZ,iBAAiB,UACjBvZ,QAAQ,QACR,UAAQ,kBAEP2G,EAGN,KAjCH,GAAiCzC,EAAAA,WCOoBA,EAAAA,UCNfA,EAAAA,UCG/B,IAAM+X,GAAb,6B,IAAA,G,EAAA,E,gaAGE,WAAYxd,GAAO,4BACjB,cAAMA,IADW,uCAwCS,SAACC,GAC3B,OAAOA,EAAKwd,cAAgBxd,EAAKvM,KAAO,EAAKsZ,QAAQ/M,KAAKvM,EAC3D,KA1CkB,gCA4CE,WACnB,EAAKwM,SAAS,CAAEwd,sBAAsB,IAAQ,kBAC5C1jB,EAAAA,GAAAA,OAAe,EAAKgG,MAAMC,KAAKvM,IAC5BL,MAAK,kBAAM,EAAKsqB,qBAAqB,EAAK3d,MAAMC,KAAKvM,GAAhD,IADR,OAES,SAACsF,GACN,EAAKgH,MAAM8N,SACT,6CAAU,EAAK9N,MAAMC,KAAKzG,WAC1B,UACAokB,EAAAA,EAAAA,IAAiB5kB,GAAjB,WAEF,EAAKgH,MAAM6d,YAAW,EACvB,IATH,SAUW,kBAAM,EAAK3d,SAAS,CAAEwd,sBAAsB,GAA5C,GAXiC,GAa/C,IAvDC,EAAKpd,MAAQ,CAAEod,sBAAsB,GAHpB,CAIlB,CAPH,qCASE,WAAS,WACP,EAAqCtpB,KAAK4L,MAAlCkE,EAAR,EAAQA,OAAQjE,EAAhB,EAAgBA,KAAM4d,EAAtB,EAAsBA,WACdH,EAAyBtpB,KAAKkM,MAA9Bod,qBACR,OAAKzd,GAASiE,EAKZ,gBAACqZ,GAAD,CACElI,aAAc,kBAAMwI,GAAW,EAAjB,EACdvI,aAAc,kBAAM,EAAKwI,YAAX,EACd7Y,WAAYyY,GAAwBtpB,KAAK2pB,kBAAkB9d,GAC3D2a,QAAS8C,EACTlc,MAAO,wBAENpN,KAAK4pB,qBAAqB/d,IAXtB,IAcV,GA3BH,kCA6BE,SAA6BA,GAC3B,OAAIA,EAAKwd,aACA,+CACExd,EAAKvM,KAAOU,KAAK4Y,QAAQ/M,KAAKvM,GAChC,4CAIP,6EACMuM,EAAKzG,UADX,cACE,4BAGL,GAzCH,kCAiEE,SAA6ByG,GAAM,WACjCjG,EAAAA,GAAAA,IAAYiG,GACT5M,MADH,iBACQ,8FAEE,IAAIF,SAAQ,SAAC8qB,GAAD,OAAOC,WAAWD,EAAG,IAArB,IAFd,OAGJ,EAAKN,qBAAqB1d,GAHtB,4CADR,OAMS,SAACjH,GACN,MAA+BA,EAAI3B,SAA3BiR,EAAR,EAAQA,OAAQuF,EAAhB,EAAgBA,WACY,MAAxB7U,EAAI3B,SAASiR,QACf,EAAKtI,MAAM8N,SACT,+EACc,EAAK9N,MAAMC,KAAKzG,YAG9B,WAEF,EAAKwG,MAAM6d,YAAW,IAEtB,EAAK7d,MAAM8N,SACT,6CAAU,EAAK9N,MAAMC,KAAKzG,WAC1B,UACAuU,EAAAA,EAAAA,IAAazF,EAAQuF,IAIzB,EAAK3N,SAAS,CAAEwd,sBAAsB,GACvC,GACJ,KA7FH,GAAqCjY,EAAAA,Y,OAAxB+X,GAAAA,cACUnQ,EAAAA,GChBhB,IAAM+M,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,uBACEjV,MAAO,CACLa,QAAS,eACTmY,OAAQ,MACRC,gBAAiB,UACjBzO,MAAO,QACP0O,SAAU,OACVC,YAAa,MACbC,aAAc,MACdC,cAAe,MACfC,WAAY,MACZC,aAAc,QAGf,qBAGN,KApBH,GAAmCjZ,EAAAA,WCiB5B,IAAMyH,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGAKE,WACE,OACE,gBAAC,EAAAyR,WAAD,CACEpd,QAASqd,EAAAA,kBAAkBxqB,KAAK4L,MAAMuB,SACtC,UAAQ,cAER,gBAAC,EAAAsd,eAAD,CAAgB1R,KAAM/Y,KAAK4L,MAAMmN,OACjC,gBAAC,EAAA1E,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BvU,KAAK4L,MAAMwB,OAEd,gBAAC,EAAAsd,eAAD,KAAiB1qB,KAAK4L,MAAMwG,aAC3BpS,KAAK4L,MAAM+e,QACV,gBAAC,EAAAC,kBAAD,KAAoB5qB,KAAK4L,MAAM+e,QAItC,KArBH,GAAsCtZ,EAAAA,Y,OAAzByH,GAAAA,eACW,CACpB3L,QAAS,UCZN,IAAMuY,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC5M,GAAD,CACE1L,MAAO,2BACPgF,YAAa,mFACb2G,KAAM8R,GAAAA,GACNF,OACE3qB,KAAK4L,MAAMsH,gBACT,gBAAC,EAAAF,OAAD,CAAQC,QAASjT,KAAK4L,MAAMsH,gBAAiB/F,QAAQ,QAClD,6BAED,MAIX,KAhBH,GAAsCkE,EAAAA,W,uBCC/B,IAAM2V,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAClO,GAAD,CACEC,KAAM/Y,KAAK4L,MAAM+e,OAASG,GAAAA,GAAiBC,GAAAA,GAC3C3d,MAAOpN,KAAK4L,MAAMwB,MAClBgF,YAAapS,KAAK4L,MAAMwG,YACxBuY,OAAQ3qB,KAAK4L,MAAM+e,QAGxB,KAVH,GAAsCtZ,EAAAA,W,YCL/B,IAAM2Z,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAClS,GAAD,CACEC,KAAMkS,GAAAA,GACN7d,MAAO,mDACPgF,YACE,gCACG,wEACD,2BACA,2BACA,gBAAC0R,GAAD,CAAW6G,QAAM,MAK1B,KAhBH,GAA4CtZ,EAAAA,W,+NCWIA,EAAAA,UCOhBA,EAAAA,UCXzB,IAAM6Z,GAAuB,SAAC,GAA0C,IAAxCznB,EAAwC,EAAxCA,KAAM0nB,EAAkC,EAAlCA,oBAC3C,GAAwBzP,EAAAA,EAAAA,UAAS,MAAjC,eAAOjT,EAAP,KAAa2iB,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRjlB,EAAAA,GAAAA,KAAa,CAAE3C,KAAAA,IAAQxE,MAAK,YAAc,IAAXmC,EAAW,EAAXA,KACtBkqB,GAAP,OAAuBlqB,EAAK6P,QAA5B,MACAma,EAAQE,EACT,GACF,GAAE,IAEE7iB,GAIA0iB,IACHA,E,uWAAsB,CAAH,GAAQrqB,EAAAA,EAAAA,oBAI3B,oCACE,2BAAI2H,EAAK2J,aACT,kBAACmZ,GAAD,CACEJ,oBAAqBA,EACrBK,oBAAqB/iB,EAAKgjB,YAC1BC,YAAY,EACZC,WAAW,MAdR,kBAACnE,GAAD,KAkBV,E,YC9BM,IAAMoE,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC,EAAAC,QAAD,CACE,aAAY,0BACZra,SAAUsa,EAAAA,gBAAAA,IACVC,YAAa/rB,KAAK4L,MAAMmL,QACxBiV,cAAehsB,KAAK4L,MAAMqgB,QAE1B,gBAAC,EAAAjZ,OAAD,CAAQkZ,aAAc,OAAQ/e,QAAS,QAAS2F,UAAW,UACzD,gBAAC,MAAD,OAIP,KAdH,GAAgCzB,EAAAA,WCoBzB,IAAM8a,GAAb,6B,IAAA,G,EAAA,E,gaAIE,WAAYvgB,GAAO,4BACjB,cAAMA,IADW,+BAFP,GAKV,EAAKwgB,WAAa/a,EAAAA,YAHD,CAIlB,CARH,iDAUE,WACErR,KAAKqsB,YACN,GAZH,+BAcE,WACErsB,KAAKqsB,YACN,GAhBH,oBAkBE,WAAS,WACP,EAAoDrsB,KAAK4L,MAAjD0gB,EAAR,EAAQA,eAAgBlP,EAAxB,EAAwBA,KAAMmP,EAA9B,EAA8BA,SAE9B,OAFA,EAAwCnT,SAEzBmT,EAEX,uBAAKzZ,UAAU,sBACZwZ,EAAiBtsB,KAAKwsB,YAAYF,GAAkB,KACrD,uBAAKxZ,UAAU,wBACZyZ,EAAW,uBAAKzZ,UAAU,WAAWyZ,GAAkB,gBAAC,EAAAjT,QAAD,SAMhEtZ,KAAKysB,UACHH,EAAepgB,QAAUnH,EAAAA,GAAAA,SACzBunB,EAAepgB,QAAUnH,EAAAA,GAAAA,QAGzB,uBACE+N,UAAU,kCACV,UAAS,iBAER9S,KAAKwsB,YAAYF,GAClB,uBAAKxZ,UAAU,gBACb,uBACEA,UAAWsB,IAAG,CACZ,gBAAiBpU,KAAK4L,MAAM8gB,eAC5B,qBAAqB,KAGvB,gBAAC,EAAA5V,QAAD,CACEtF,SAAS,OACTuF,QAAS/W,KAAKysB,UAAY,sBAAiB,yBAE3C,wBACExZ,QAAS,kBAAM,EAAK0Z,mBAAX,EACT7Z,UAAU,wCAKfsK,EAAKhP,SAAS1P,KAAI,SAACme,EAAG9K,GACrB,OAAO,EAAK6a,cAAc/P,EAAG9K,EAC9B,IAEyB,IAAzBqL,EAAKhP,SAASgD,OACb,uBAAK0B,UAAU,WACb,wBAAMA,UAAU,SAAS,uCAEzB,KAEHsK,EAAKlR,QAAUnH,EAAAA,GAAAA,WACd,uBAAK+N,UAAU,WACb,2BACA,wBAAMA,UAAU,WAAW,iBAI9BsK,EAAKlR,QAAUnH,EAAAA,GAAAA,QACd,uBAAK+N,UAAU,WACb,2BACA,wBAAMA,UAAU,UAAU,oBAIhC,uBAAKA,UAAU,eAAetE,IAAK,OAAQuV,IAAK/jB,KAAKosB,cAG1D,GAvFH,2BAyFE,SAAsB7pB,EAAMwP,GAC1B,OACE,uBAAKe,UAAU,UAAUtE,IAAKuD,GAC5B,wBAAMe,UAAWvQ,EAAKsqB,MAAMnE,eAAgBnmB,EAAKuqB,QAAjD,KAGL,GA/FH,yBAiGE,SAAoBR,GAClB,MAAwDtsB,KAAK4L,MAArDwR,EAAR,EAAQA,KAAM2P,EAAd,EAAcA,mBAAoBhQ,EAAlC,EAAkCA,kBAE9BiQ,EACF,gCACGV,EAAe9oB,UADlB,IAC8B8oB,EAAe7oB,MAG3CwpB,EAAiB,uCAErB,GAAIlQ,EAAmB,CACrB,IAAMmQ,EAAQnQ,EAAkB0K,gBAE9BwF,EADEC,EAAM1qB,SAAS1B,EAAAA,EAAAA,cACA,mBACRosB,EAAM1qB,SAAS1B,EAAAA,EAAAA,aACP,+BACRosB,EAAM1qB,SAAS1B,EAAAA,EAAAA,WACP,mBAEA,sCAGnBksB,EACE,gBAAC,EAAAhY,KAAD,CACElC,UAAU,QACV1H,IAAIsL,EAAAA,EAAAA,IACF1L,EAAAA,GAAAA,iBACA,CACExH,UAAW8oB,EAAe9oB,UAC1BF,WAAYgpB,EAAe7oB,KAC3BV,KAAMmqB,EAAM,IAEd,CACExoB,QAAS4nB,EAAe5nB,WAI3B4nB,EAAe9oB,UAdlB,IAc8B8oB,EAAe7oB,KAGhD,CAED,OACE,4BACIspB,GACA,uBAAKja,UAAU,mBAAmBka,GAGpC,uBAAKla,UAAU,aACb,2BACE,wBAAMA,UAAU,cAAc,mBAAmB,IACjD,gBAACqa,GAAD,CAAiB1V,KAAK,YAAYvD,OAAQoY,EAAepgB,SAE3D,2BACE,wBAAM4G,UAAU,cAAc,4BAA4B,IACzDma,GAEH,2BACE,wBAAMna,UAAU,cAAc,oBAAoB,IACjDwZ,EAAe5nB,SAGjB0Y,GAAQA,EAAKR,MACZ,2BACE,wBAAM9J,UAAU,cAAc,0BAA0B,IACvDsK,EAAKR,MAAMxd,KACZ,2BACE,4BAAOge,EAAKR,MAAMxK,cAEpB,2BACE,4BAAOgL,EAAKR,MAAMwQ,aAGpB,MAIX,GA9KH,+BAgLE,WACMptB,KAAKysB,UACPzsB,KAAK4L,MAAMyhB,mBAAmBrtB,KAAK4L,MAAM8gB,gBAEzC1sB,KAAKosB,WAAW5H,QAAQ8I,eAAe,CAAEC,SAAU,UAEtD,GAtLH,wBAwLE,WAAqB,WACfvtB,KAAK4L,MAAM8gB,gBAAkB1sB,KAAKosB,WAAW5H,SAC/C/iB,OAAO+rB,uBAAsB,WAC3B,EAAKpB,WAAW5H,QAAQ8I,eAAe,CAAEC,SAAU,WAE9C,EAAKd,WACR,EAAK7gB,MAAMyhB,mBAAkB,EAEhC,GAEJ,KAlMH,GAAmChc,EAAAA,W,ykBCW5B,IC7BFoc,GD6BQC,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAY9hB,GAAO,6BACjB,cAAMA,IAEDM,MAAQ,CACXyhB,QAAS,GACThJ,UAAW,IALI,CAOlB,CARH,qCAUE,WAAS,WACP,EASI3kB,KAAK4L,MARPgiB,EADF,EACEA,aACAC,EAFF,EAEEA,WACAvB,EAHF,EAGEA,eACAwB,EAJF,EAIEA,WACAC,EALF,EAKEA,gBACA1tB,EANF,EAMEA,OACAwS,EAPF,EAOEA,aACAuG,EARF,EAQEA,QAGF,OACE,uBAAKtG,UAAU,eACZ9S,KAAKguB,sBAAsBF,GAC5B,gBAAC,EAAA1V,QAAD,KACE,gBAAC6M,GAAD,CACEN,UAAW3kB,KAAKkM,MAAMyY,UACtBnM,SAAU,SAACgD,GAAD,OAAU,EAAK1P,SAAS,CAAE6Y,UAAWnJ,GAArC,EACV3I,aAAc,SAAClS,GACbA,EAAC,KAAW,EACZ,EAAKiL,MAAMiH,aAAalS,EACzB,EACDN,OAAQA,EACRwkB,aAAc,CACZ,CACEvlB,GAAI,WACJ8N,MAAO,gBAET,CACE9N,GAAI,QACJ8N,MAAO,iBACP0X,UAAW,SACX9T,QAAS,CACP,CACE1R,GAAI,YACJ8N,MAAO,qBAET,CACE9N,GAAI,SACJ8N,MAAO,kBAET,CACE9N,GAAI,UACJ8N,MAAO,mBAET,CACE9N,GAAI,UACJ8N,MAAO,yBAQnB,gBAACuF,EAAD,CACEE,aAAc,SAAClS,GACbA,EAAC,KAAW,EACZ,EAAKiL,MAAMiH,aAAalS,GACxB,EAAKmL,SAAS,CAAE6Y,UAAW,IAC5B,EACDtkB,OAAQA,EACRuS,cAAe,CAAC,YAAa,OAAQ,OAAQ,WAAY,aACzDQ,UAAW,CACT4E,SAAU,eACV9L,MAAO,oBAIX,uBAAK,UAAQ,oBACVlM,KAAKiuB,WAAWL,EAAcC,EAAYvB,EAAgBlT,IAE7D,gBAAC,EAAAsH,WAAD,CACE0E,UAAW2I,EACXG,QAAS7tB,EAAO+b,WAAatb,EAAAA,EAAAA,kBAC7BC,KAAMV,EAAOU,MAAQ,EACrBotB,UAAW,SAACC,EAAGztB,GAAJ,OACTkS,EAAavS,EAAAA,EAAAA,SAAqBD,EAAQ,OAAQM,GADzC,EAGX0tB,gBAAiB,SAACD,EAAGztB,GACnBkS,EAAa,SAAKxS,GAAN,IAAcU,KAAM,EAAGqb,UAAWzb,IAC/C,EACD6V,WAAW,IAIlB,GAjGH,wBAmGE,SAAmBoX,EAAcC,EAAYvB,EAAgBlT,GAAS,WACpE,OAAIA,EAEA,uBAAKtG,UAAU,WACb,gBAAC0U,GAAD,OAKkB,IAAtBqG,EAAWzc,SACVgW,EAAAA,EAAAA,IAAYpnB,KAAK4L,MAAMvL,OAAQ,CAAC,WAAY,UAQd,IAAtBwtB,EAAWzc,OACb,gBAACsU,GAAD,MAIP,2BACGmI,EAAWnvB,KAAI,SAAC6D,GACf,OACE,uBACE0Q,QAAS,kBAAM2a,EAAarrB,EAAnB,EACTiM,IAAKjM,EAAKjD,GACVwT,UAAWsB,IAAG,CACZuE,WAAW,EACX,kBAAkB,EAClB,oCACEpW,EAAKkV,OAAS6U,EAAe7U,MAC7BlV,EAAKjD,KAAOgtB,EAAehtB,KAE/B,mCAA2BiD,EAAKkB,OAEhC,uBAAKqP,UAAU,QACb,qBAAGA,UAAW,EAAKwb,eAAe/rB,EAAK2J,UAEzC,uBAAK4G,UAAU,SAAS,EAAKyb,kBAAkBhsB,IAGpD,KA/BD,gBAACykB,GAAD,CACE5Z,MAAO,qBACPgF,YAAa,8DAgCpB,GAlJH,+BAoJE,SAA0B7P,GACxB,OACE,2BACE,2BACE,wBAAM,UAAQ,aAAaA,EAAKkB,MAAa,IAC5ClB,EAAKmC,QAAU,IAAMnC,EAAKmC,QAAU,IAEvC,uBAAKoO,UAAU,YAAf,WACWvQ,EAAK2J,MAAO,IACpB3J,EAAKisB,YAAc,gBAAC5U,EAAD,CAAeC,KAAMtX,EAAKisB,cAAkB,MAIvE,GAjKH,4BAmKE,SAAuBtiB,GACrB,IAAMuiB,EAAc,kBAEpB,OAAQviB,GACN,KAAKnH,EAAAA,GAAAA,QAEL,KAAKA,EAAAA,GAAAA,QACH,OAAO0pB,EAAc,6BACvB,KAAK1pB,EAAAA,GAAAA,UACH,OAAO0pB,EAAc,oBACvB,QACE,OAAOA,EAAc,mBAE1B,GAhLH,mCAkLE,SAA8BX,GAAY,WACxC,OACE,uBAAKhb,UAAU,8BACb,uBAAKA,UAAU,SAAS,qBACxB,uBAAKA,UAAU,YACb,gBAAC,EAAAoI,WAAD,CACE1C,SAAU,SAACC,GACT,IAAMpY,EAASC,EAAAA,EAAAA,SACb,EAAKsL,MAAMvL,OACX,YACAoY,GAEFpY,EAAM,KAAW,EACjB,EAAKuL,MAAMiH,aAAaxS,EACzB,EACDoN,MAAOzN,KAAK4L,MAAMvL,OAAOmD,UACzB,aAAY,4BAEXsqB,EAAWpvB,KAAI,SAACgwB,GAAD,OACd,gBAAC,EAAAvT,iBAAD,CAAkB3M,IAAKkgB,EAAGjrB,KAAMwX,MAAOyT,EAAGjrB,KAAMgK,MAAOihB,EAAGjrB,MAD5C,MAOzB,KA3MH,GAAgC4N,EAAAA,W,mKC7B3Boc,GAAAA,EAAAA,UAAAA,YAAAA,EAAAA,QAAAA,S,EAAAA,KAAAA,GAAAA,CAAAA,IAqBE,IAAM7N,GAAb,6B,IAAA,G,EAAA,E,gaAKE,WAAYhU,GAAO,4BACjB,cAAMA,IADW,sCAJC,CAAC,qBAAsB,sBAIxB,0CAFK,yCAKtB,EAAKM,MAAQ,CACXjI,UAAMY,EACN8pB,OAAQ,GACRC,eAAgB,EAChBC,aAAcpB,GAAOqB,SAPN,CASlB,CAdH,qCAeE,WAAS,WACP,EAA+B9uB,KAAK4L,MAA5BkE,EAAR,EAAQA,OAAQxM,EAAhB,EAAgBA,WAEhB,EAAuDtD,KAAKkM,MAApDjI,EAAR,EAAQA,KAAM0qB,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,eAAgBC,EAAtC,EAAsCA,aACtC,OACE,gBAAC,EAAA1U,MAAD,CACEhN,QAAQ,QACRC,MACE9J,EAAa,+BAAmBA,EAAWG,OAAS,yBAEtDqM,OAAQA,EACRqC,QAAS,kBAAM,EAAK4c,aAAX,EACT1U,QAAS,CACP,gBAAC,EAAArH,OAAD,CACExE,IAAI,UACJrB,QAAQ,UACR8F,QAAS,kBAAM,EAAK+b,UAAX,EACTne,YAAa7Q,KAAKivB,YAClB,UAAS,kBAER,kBAEH,gBAAC,EAAAjc,OAAD,CACExE,IAAI,SACJrB,QAAQ,YACR8F,QAAS,kBAAM,EAAK8b,aAAX,GAER,oBAIL,uBAAKjc,UAAU,qBACb,4BACE,yBACEoc,SAAUL,IAAiBpB,GAAOqB,QAClChc,UAAU,cACV2E,KAAK,OACLnY,GAAG,oBACHkZ,SAAU,SAACtZ,GAAD,OAAO,EAAKiwB,iBAAiBjwB,EAAE0Q,OAAOwf,MAAtC,IAEZ,yBAAOtc,UAAU,oBAAoBuc,QAAQ,qBAC3C,uBAAKvc,UAAU,cACb,uBAAKA,UAAU,iBAAiB9S,KAAKsvB,kBACrC,uBAAKxc,UAAU,eACJ,MAAR7O,EAAeA,EAAKR,KAAO,sBAC5B,uBACEqP,UAAU,cACV/B,MAAO,CACLgV,MAAwB,IAAjB6I,EAAuB,WAOzCD,EACC,wBAAM7b,UAAU,uBACd,qBAAGA,UAAU,0BADf,IAC2C6b,GAEzC,MAIX,GA9EH,uBAgFE,WACE,OAAI3uB,KAAKkM,MAAMyiB,QAIX3uB,KAAKkM,MAAM2iB,eAAiBpB,GAAOqB,WAIlC9uB,KAAKkM,MAAMjI,IAKjB,GA9FH,4BAgGE,WACE,OAAQjE,KAAKkM,MAAM2iB,eACZpB,GAAO8B,UACH,gBAAC,MAAD,CAAazc,UAAU,YAEvB,gBAAC,MAAD,KAEZ,GAvGH,8BAyGE,SAAyBsc,GAGvB,IAAMI,EAAgBJ,EAAM,GACpB9rB,EAAetD,KAAK4L,MAApBtI,WAEJ8rB,EAAMhe,OAAS,EACjBpR,KAAK8L,SAAS,CACZ6iB,OAAQ,iDAEA3uB,KAAKyvB,kBAAkBjtB,SAASgtB,EAAc/X,MAM9CzX,KAAK0vB,sBAAsBC,KAAKH,EAAc/rB,MAOxDH,GACAA,EAAWG,OAAS+rB,EAAc/rB,KAAK4J,MAAM,KAAK,GAElDrN,KAAK8L,SAAS,CACZ6iB,OAAQ,yEAA6DrrB,EAAWG,OAChFQ,KAAMurB,EACNZ,eAAgB,IAET5uB,KAAK4L,MAAMpI,WAAagsB,EAAc/rB,KAAK4J,MAAM,KAAK,GAC/DrN,KAAK8L,SAAS,CACZ6iB,OAAQ,0EACR1qB,KAAMurB,EACNZ,eAAgB,IAGlB5uB,KAAK8L,SAAS,CACZ6iB,OAAQ,GACR1qB,KAAMurB,EACNZ,eAAgB,IAxBlB5uB,KAAK8L,SAAS,CACZ6iB,OAAQ,gGACR1qB,KAAMurB,EACNZ,eAAgB,IATlB5uB,KAAK8L,SAAS,CACZ6iB,OAAQ,+BACR1qB,KAAMurB,EACNZ,eAAgB,GA8BrB,GArJH,sBAuJE,WAAW,WACT5uB,KAAK8L,SAAS,CAAE+iB,aAAcpB,GAAO8B,YACrC,IAAMK,EAAW,CACf3rB,KAAMjE,KAAKkM,MAAMjI,KACjB4rB,OAAQ,IAGV7vB,KAAK6D,YAAchB,EAAAA,GAAAA,iBAEnBA,EAAAA,GAAAA,OACE,WAAa7C,KAAK4L,MAAMpI,UACxBosB,GACA,SAAC1wB,GACC,EAAK4M,SAAS,CACZ8iB,eAAgB1vB,EAAE4wB,OAAS5wB,EAAE6wB,OAEhC,GACD/vB,KAAK6D,aAEJ5E,MAAK,SAACgE,GACL,EAAK2I,MAAMiU,gBAAgB5c,EAC5B,IAZH,OAaS,SAAC0rB,GACN,IAAIhV,EAAe,GAGnB,IAAKzZ,KAAAA,SAAeyuB,GAElB,GAAIA,EAAO1rB,SAAS7B,KAAKutB,OAAQ,CAC/B,IAD+B,EACzBvgB,EAAW,GADc,E,65BAAA,CAEbugB,EAAO1rB,SAAS7B,KAAKutB,QAFR,IAE/B,IAAK,EAAL,qBAA+C,KAApC/pB,EAAoC,QAC7CwJ,EAASjD,KACPvG,EAAI6Y,QACF7Y,EAAIwI,OACJxI,EAAIxF,MACJ,wCAA4BwF,EAAIsP,SAErC,CAT8B,+BAU/ByF,EAAevL,EAAS4hB,KAAK,KAC9B,MACCrW,EAAe,wCAA4BgV,EAAO1rB,SAASiR,SAI/D,EAAKpI,SAAS,CACZ+iB,aAAcpB,GAAOqB,QACrBH,OAAQhV,GAEX,IAvCH,SAwCW,WACP,EAAK9V,YAAc,IACpB,GACJ,GA3MH,yBA6ME,WAAc,WACRqJ,EAAM,KACNlN,KAAK6D,aAAe7D,KAAKkM,MAAM2iB,eAAiBpB,GAAO8B,YACzDriB,EAAM,qCACNlN,KAAK6D,YAAYosB,OAAO/iB,IAG1BlN,KAAK8L,SACH,CACE7H,UAAMY,EACN8pB,OAAQ,GACRC,eAAgB,EAChBC,aAAcpB,GAAOqB,UAEvB,kBAAM,EAAKljB,MAAMkU,SAAQ,EAAO5S,EAAhC,GAEH,KA7NH,GAAiCmE,EAAAA,WCpB1B,IAAM+Q,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,OACE,uBAAKtP,UAAU,aACb,sBAAIA,UAAU,mBACX9S,KAAK4L,MAAMuW,KAAKzjB,KAAI,SAACwxB,GAAD,OAAS,EAAKC,UAAUD,EAAxB,KAI5B,GATH,uBAWE,YAAmD,IAA/Bvb,EAA+B,EAA/BA,KAAMvH,EAAyB,EAAzBA,MAAyB,IAAlB2U,OAAAA,OAAkB,SACjD,OACE,sBACEjP,UAAWsB,IAAG,CACZ,mBAAmB,EACnB,eAAgB2N,IAElBvT,IAAKpB,GAEL,gBAAC,EAAA4H,KAAD,CAAM5J,GAAIuJ,EAAM7B,UAAU,mBACxB,wBAAMA,UAAU,wBAAwB1F,IAI/C,KAzBH,GAA8BiE,EAAAA,WCZvB,IAAMmW,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC,EAAA4I,SAAD,CAAUrf,MAAO,CAAEgV,MAAO,OAAQsK,OAAQ,SACxC,gBAAC,EAAA/W,QAAD,MAGL,KAPH,GAAwCjI,EAAAA,WCGjC,IAAMxG,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC,WAAD,KACE,2BACEiI,UACE,gGAGF,gBAAC,EAAAuB,MAAD,CAAOC,aAAa,MAClB,gBAAC,EAAAgc,SAAD,QAGJ,gBAACC,GAAD,KACE,+BACE,gBAAC/I,GAAD,QAKT,KApBH,GAA2CnW,EAAAA,WCepC,IAAMmf,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAY5kB,GAAO,kCACXA,EACP,CAHH,qCAKE,WACE,IAAQ6kB,EAAiBzwB,KAAK4L,MAAtB6kB,aACR,OAA4B,IAAxBA,EAAarf,OAEb,gBAAC4V,GAAD,CACE5Z,MAAO,oCACPgF,YAAa,KAIZpS,KAAK0wB,YAAYD,EACzB,GAhBH,yBAkBE,SAAoBA,GAAc,WAE1BE,EAAmB,CACvB7uB,QAAS,CACP,CACEsL,MAAO,4BACPqK,KAAM,OACNnY,GAAI,gBAEN,CACE8N,MAAO,0BACPqK,KAAM,OACNnY,GAAI,cAEN,CACE8N,MAAO,2BACPqK,KAAM,OACNnY,GAAI,WAEN,CACE8N,MAAO,uBACPqK,KAAM,OACNnY,GAAI,cAEN,CACE8N,MAAO,2BACPqK,KAAM,OACNnY,GAAI,mBAEN,CACE8N,MAAO,4BACPqK,KAAM,OACNnY,GAAI,gBAWV,MANIkC,aAAoBV,EAAAA,EAAAA,2BACtB6vB,EAAiB7uB,QAAU6uB,EAAiB7uB,QAAQQ,QAAO,SAACsuB,GAC1D,MAAqB,eAAdA,EAAOtxB,IAAqC,eAAdsxB,EAAOtxB,EAC7C,KAID,yBACE,aAAY,8BACZwT,UAAU,kCAEV,gBAAC+d,GAAD,CACE7f,QAAS2f,EACTtwB,OAjDS,CAAEknB,KAAM,cAkDjB1U,aAAc,SAAClS,GAAD,OAAOmwB,QAAQC,IAAIpwB,EAAnB,IAEhB,6BACG8vB,EAAa/xB,KAAI,SAACuI,GAAD,OAAkB,EAAK+pB,UAAU/pB,EAAjC,KAIzB,GA5EH,uBA8EE,SAAkBA,GAChB,IAAMgqB,EAAY,CAChB,WADgB,wBAEChqB,EAAa8B,WAAWtF,KAFzB,SAGhB,GAHgB,yBAIEwD,EAAa8B,WAAWtF,KAJ1B,yBAKTytB,EAAAA,EAAAA,IAAWjqB,EAAakqB,YAC/B,+BAGF,OACE,sBAAI3iB,IAAKvH,EAAaxD,MACpB,0BAAKwD,EAAaxD,MAClB,0BAAKwD,EAAa8B,WAAWtF,MAC7B,0BACE,gBAACyV,EAAD,CAAiBhW,iBAAkB+D,EAAakqB,aAEjD3vB,aACDV,EAAAA,EAAAA,yBAAqC,KAAOmG,EAAa8B,WACpDqoB,kBACH,0BACE,gBAACxX,EAAD,CAAeC,KAAM5S,EAAa8B,WAAWqoB,qBAG/C,0BAAK,OAEP,0BACE,gBAAC1N,GAAD,CAAeC,YAAU,IACtBuN,EAAAA,EAAAA,IAAWjqB,EAAakqB,aAG5B3vB,aAAoBV,EAAAA,EAAAA,yBAAqC,KACxD,0BACE,gBAAC4iB,GAAD,CAAe2N,QAAM,EAAC1N,YAAU,EAACxW,QAAS,aACvC8jB,EAAUjB,KAAK,QAM3B,KAtHH,GAA0C3e,EAAAA,WCVnC,IAAMyS,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGAGE,WACE,MAAyB9jB,KAAK4L,MAAtB+e,EAAR,EAAQA,OAAQ2G,EAAhB,EAAgBA,KACRnlB,EAAiBnM,KAAK4Y,QAAtBzM,aACF2G,EAAY6X,EAAS,2BAA6B,GAGxD,OAAIxe,SAAAA,EAAcolB,wBAEd,qBAAGze,UAAWA,EAAWjG,KAAM2kB,UAAwB,iBAIvD,gBAAC,EAAAxc,KAAD,CACElC,UAAWA,EACX1H,IAAIsL,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,MAAa,CAAC,EAAG,CAAEsmB,KAAAA,KAClC,gBAGP,KArBH,GAA+BjgB,EAAAA,Y,OAAlByS,GAAAA,cACU7K,EAAAA,G,sCCQhB,IAAMnD,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYlK,GAAO,6BACjB,cAAMA,IACDM,MAAQ,CAAEulB,QAAQ,GAFN,CAGlB,CAJH,qCAME,WAAS,WACP,EASIzxB,KAAK4L,MARPmK,EADF,EACEA,IACAjD,EAFF,EAEEA,UACAkD,EAHF,EAGEA,kBACAC,EAJF,EAIEA,MACA1B,EALF,EAKEA,KACA4B,EANF,EAMEA,YACA4P,EAPF,EAOEA,MACA3P,EARF,EAQEA,SAEMqb,EAAWzxB,KAAKkM,MAAhBulB,OAEF1gB,EAAQ,CACZsf,OAAQ9b,EACR3C,QAAS,OACT8f,eAAgB,aAChBC,WAAY,SACZ5L,MAAOA,GAcT,OAXI3P,IACFrF,EAAK,SAAe,GAGlBoF,EACFpF,EAAK,SAAewD,EAEpBxD,EAAK,MAAYwD,EAKjB,uBAAKzB,UAAWA,EAAW/B,MAAOA,GAChC,uBACEA,MAAO,CAAE6gB,UAAW,UAAWC,UAAWtd,GAC1Cud,IAAKL,EAASM,GAAc9b,GAAS8b,GACrChc,IAAKA,EACLic,QACEhc,EACI,kBAAM,EAAKlK,SAAS,CAAE2lB,QAAQ,GAA9B,EACA,kBAAM,IAAN,IAKb,KApDH,GAA0BpgB,EAAAA,W,4BCZnB,IAAMkf,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA0CvwB,KAAK4L,MAAvCkI,EAAR,EAAQA,SAAUhB,EAAlB,EAAkBA,UAAcmf,GAAhC,aACA,OACE,mCACEnf,UAAWsB,IACT,0BACA,0BACAtB,IAEEmf,GAEHne,EAGN,KAfH,GAA0BzC,EAAAA,W,YCOnB,IAAM6gB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA+DlyB,KAAK4L,MAA5D4P,EAAR,EAAQA,KAAM9C,EAAd,EAAcA,YAAayZ,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,WAAYC,EAAnD,EAAmDA,QAEnD,OACE,gBAAC,EAAAvX,KAAD,KACE,uBAAKhI,UAAU,mBACZuf,GACC,uBAAKvf,UAAU,iBACb,gBAAC,EAAAiI,UAAD,CAAWC,QAAQ,YAAYoX,WAAYA,GACzC,uBAAK9yB,GAAG,kBAAkB,wBAC1B,gBAAC,EAAAgzB,SAAD,CACE,kBAAgB,iBAChBhzB,GAAG,YACHmO,MAAO+N,EACPhD,SAAU,SAAC/K,GAAD,OAAW0kB,EAAW1kB,EAAtB,EACViL,YAAaA,MAKrB,uBAAK5F,UAAU,4BACZuf,GAAW,kBACZ,uBAAKvf,UAAWuf,EAAU,uBAAyB,gBACjD,gBAAC,KAAD,KAAgB7W,GAAQ9C,MAMnC,KA9BH,GAAoCrH,EAAAA,WCW7B,IAAMkhB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,iMAC2B,IAD3B,uCAEE,WACE,MAAoDvyB,KAAK4L,MAAjDsK,EAAR,EAAQA,WAAYzS,EAApB,EAAoBA,KAAMgS,EAA1B,EAA0BA,QAAS+c,EAAnC,EAAmCA,aACnC,OACE,gBAAC,EAAA5c,KAAD,CAAM9C,UAAU,2BACd,gBAAC,EAAA+C,WAAD,KACE,gBAAC,EAAA4c,eAAD,KACE,gBAAC3c,GAAD,CACEC,IAAK,iCAAIN,IACTO,mBAAiB,EACjBC,MAAOC,EACP3B,KAAK,OACL4B,aAAW,MAIjB,gBAAC,EAAAW,QAAD,CAASC,QAAStB,GAAWhS,GAC3B,gBAAC,EAAAivB,UAAD,KAAY1yB,KAAKgX,eAAevB,GAAWhS,KAE7C,gBAAC,EAAAqT,QAAD,CAASC,QAAStT,GAChB,gBAAC,EAAAoT,SAAD,KAAW7W,KAAKgX,eAAevT,KAGhC+uB,GACC,gBAAC,EAAArb,WAAD,KACE,gBAAC,EAAAnC,KAAD,CAAM5J,GAAIonB,GAAe,6BAKlC,GA/BH,4BAiCE,SAAuBlb,GACrB,OAAKA,EAGDA,EAAElG,OAASpR,KAAKuX,uBACXD,EAAEE,MAAM,EAAGxX,KAAKuX,wBAA0B,MAE1CD,EALA,EAOV,KA1CH,GAAmCjG,EAAAA,W,qlBCI5B,IAAMshB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,EAAqC3yB,KAAK4L,MAAlCpI,EAAR,EAAQA,UAAWovB,EAAnB,EAAmBA,cAEnB,OAAKpvB,EAKH,gBAAC,EAAAsX,KAAD,KACE,uBAAKhI,UAAU,gBACb,uBAAKA,UAAU,UACb,gBAAC,EAAAiI,UAAD,CAAWC,QAAQ,OAAOC,MAAO,eAAS4X,YAAU,GAClD,gBAAC,EAAA/J,UAAD,CACE+J,YAAU,EACVhiB,YAAU,EACVvR,GAAG,OACHmY,KAAK,OACLhK,MAAOjK,EAAUC,QAIrB,2BAEA,gBAAC,EAAAsX,UAAD,CACEC,QAAQ,UACRC,MAAO,uBACP6X,kBAAmBF,EAAa,QAChCG,UAAW/yB,KAAKgzB,UAAU,YAAaJ,KAEvC,gBAAC,EAAA9J,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,YAAaJ,IACvCtzB,GAAG,UACHmY,KAAK,OACLhK,MAAOjK,EAAUiS,QACjB+C,SAAU,SAAC/K,EAAOd,GAAR,OAAkB,EAAKsmB,YAAYxlB,EAAOd,EAA1C,MAIhB,uBAAKmG,UAAU,QACb,gBAACyf,GAAkB/uB,KAIvB,gBAAC,EAAAuX,UAAD,CAAWC,QAAQ,OAAOC,MAAO,4BAC/B,gBAAC,EAAApN,MAAD,CACEC,UAAQ,EACRX,QAAQ,OACRC,MACE,uFAEE,gBAAC,EAAA4H,KAAD,CACEpF,OAAO,SACPxE,IAAIsL,EAAAA,EAAAA,IACF1L,EAAAA,GAAAA,cACA,CACExH,UAAWA,EAAUC,MAEvB,CAAEysB,IAAK,aATb,EAcE,gBAAC,KAAD,YAMR,gBAAC,EAAAnV,UAAD,CACEC,QAAQ,aACRC,MAAO,mBACP6X,kBAAmBF,EAAa,WAChCG,UAAW/yB,KAAKgzB,UAAU,eAAgBJ,KAE1C,gBAAC,EAAA9J,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,eAAgBJ,IAC1CtzB,GAAG,aACHmY,KAAK,OACLhK,MAAOjK,EAAU0S,WACjBsC,SAAU,SAAC/K,EAAOd,GAAR,OAAkB,EAAKsmB,YAAYxlB,EAAOd,EAA1C,KAId,gBAAC,EAAAoO,UAAD,CACEC,QAAQ,cACRC,MAAO,sBACP6X,kBAAmBF,EAAa,YAChCG,UAAW/yB,KAAKgzB,UAAU,gBAAiBJ,KAE3C,gBAAC,EAAAN,SAAD,CACES,UAAW/yB,KAAKgzB,UAAU,gBAAiBJ,IAC3CtzB,GAAG,cACHmY,KAAK,OACLhK,MAAOjK,EAAU4O,YACjBoG,SAAU,SAAC/K,EAAOd,GAAR,OAAkB,EAAKsmB,YAAYxlB,EAAOd,EAA1C,KAId,gBAAC,EAAAoO,UAAD,CACEC,QAAQ,QACRC,MAAO,uBACP6X,kBAAmB9yB,KAAKkzB,kBAAkBN,GAC1CG,UAAW/yB,KAAKgzB,UACZ,eAAgBJ,GAAiB,gBAAiBA,KAGrDpvB,EAAUkR,MAAMhW,KAAI,SAACiW,EAAME,GAAP,OACnB,EAAKse,gBAAgBxe,EAAME,EADR,IAIO,IAA3BrR,EAAUkR,MAAMtD,QACf,gBAAC,MAAD,CACE0B,UAAU,YACVG,QAAS,kBAAM,EAAKmgB,SAAX,EACT7e,KAAK,SA9GN,IAoHV,GAzHH,+BA2HE,SAA0Bqe,GACxB,IAAM1lB,EAAgB,GAQtB,MAPI,gBAAiB0lB,GACnB1lB,EAAI/B,KAAK,sBAAUynB,EAAa,eAE9B,eAAgBA,GAClB1lB,EAAI/B,KAAK,qBAASynB,EAAa,cAG1B1lB,EAAI8iB,KAAK,IACjB,GArIH,qBAuIE,SAAgB+C,GACd,OAAIA,EACK,UAEA,OAEV,GA7IH,yBA+IE,SAAoBtlB,EAAOd,GACzB,IAAM0mB,EAAS,MAAKrzB,KAAK4L,MAAMpI,WAC/B6vB,EAAO1mB,EAAMiD,OAAOtQ,IAAMmO,EAC1BzN,KAAK4L,MAAM0nB,gBAAgBD,EAC5B,GAnJH,wBAqJE,SAAmBxe,EAAOpH,EAAOd,GAC/B,IAAM0mB,EAAS,MAAKrzB,KAAK4L,MAAMpI,WAC/B6vB,EAAO3e,MAAMG,GAAOlI,EAAMiD,OAAOtQ,IAAMmO,EACvCzN,KAAK4L,MAAM0nB,gBAAgBD,EAC5B,GAzJH,wBA2JE,SAAmBxe,GACjB,IAAMwe,EAAS,MAAKrzB,KAAK4L,MAAMpI,WAC/B6vB,EAAO3e,MAAMjC,OAAOoC,EAAO,GAC3B7U,KAAK4L,MAAM0nB,gBAAgBD,EAC5B,GA/JH,qBAiKE,WACE,IAAMA,EAAS,MAAKrzB,KAAK4L,MAAMpI,WAC/B6vB,EAAO3e,MAAMvJ,KAAK,CAChB1H,KAAM,GACNvB,IAAK,KAGPlC,KAAK4L,MAAM0nB,gBAAgBD,EAC5B,GAzKH,6BA8ME,SAAwB1e,EAAME,GAAO,WAC7B0e,EAAO1e,IAAU7U,KAAK4L,MAAMpI,UAAUkR,MAAMtD,OAAS,EAC3D,OACE,uBAAK0B,UAAU,eAAetE,IAAKqG,GACjC,uBAAK/B,UAAU,aACb,gBAAC,EAAAiI,WAAD,QAAWC,QAAS,QAAY2X,EAAca,aAAa7e,IACzD,gBAAC,EAAAmU,UAAD,CACExpB,GAAG,OACHmY,KAAK,OACLiB,YAAa,oBACbjL,MAAOkH,EAAKlR,KACZ+U,SAAU,SAAC/K,EAAOd,GAAR,OAAkB,EAAK8mB,WAAW5e,EAAOpH,EAAOd,EAAhD,EACVomB,UAAWJ,EAAca,aAAa7e,GAAMoe,cAIlD,uBAAKjgB,UAAU,YACb,gBAAC,EAAAiI,WAAD,QAAWC,QAAS,QAAY2X,EAAce,YAAY/e,IACxD,gBAAC,EAAAmU,UAAD,CACExpB,GAAG,MACHmY,KAAK,OACLiB,YAAa,mBACbjL,MAAOkH,EAAKzS,IACZsW,SAAU,SAAC/K,EAAOd,GAAR,OAAkB,EAAK8mB,WAAW5e,EAAOpH,EAAOd,EAAhD,EACVomB,UAAWJ,EAAce,YAAY/e,EAAKzS,KAAK6wB,cAIrD,uBAAKjgB,UAAU,eACb,uBAAKA,UAAU,kBACb,gBAAC,MAAD,CACEA,UAAU,YACVG,QAAS,kBAAM,EAAK0gB,WAAW9e,EAAtB,EACTN,KAAK,QAIT,uBAAKzB,UAAU,kBACZygB,GACC,gBAAC,MAAD,CACEzgB,UAAU,YACVG,QAAS,kBAAM,EAAKmgB,SAAX,EACT7e,KAAK,SAOlB,IA/PH,2BA2KE,SAA2BI,GAIzB,OAAIA,EAAKzS,IACHyS,EAAKlR,KACA,CAAEsvB,UAAW,WAEb,CACLA,UAAW,QACXD,kBAAmB,mCAMlB,CAAEC,UAAW,UACrB,GA5LH,yBA8LE,SAA0Bpe,GACxB,OAAIA,EAAKzS,KAEA0xB,EAAAA,EAAAA,SAAkB/uB,EAAW8P,EAAKzS,KAGvCyS,EAAKlR,KACA,CACLsvB,UAAW,QACXD,kBAAmB,kCAIhB,CAAEC,UAAW,UACrB,KA5MH,GAAmC1hB,EAAAA,W,2GCF5B,IAAMwiB,GAAb,6B,IAAA,G,EAAA,E,gaAGE,WAAYjoB,GAAO,4BACjB,cAAMA,IADW,kCAiCI,WACrB,IAAMxK,EAAO,CACXqC,KAAM,EAAKyI,MAAM4nB,iBACjBC,OAAQ,IAEV/uB,EAAAA,GAAAA,OAAoB5D,GACjBnC,MAAK,WACJ,EAAK+0B,cACL,EAAKloB,SAAS,CACZgoB,iBAAkB,GAClBlB,cAAe,CAAC,IAElB,EAAKhnB,MAAMqoB,gBAAgB7yB,EAC5B,IARH,OASS,SAACwb,GACN,IADgB,EACVzZ,EAASyZ,EAAM3Z,SACfmL,EAAW,EAAKlC,MAAM0mB,cAFZ,E,65BAAA,CAGAzvB,EAAO/B,KAAKutB,QAHZ,IAGhB,IAAK,EAAL,qBAAoC,KAAzBzvB,EAAyB,QAClCkP,EAASlP,EAAEg1B,OAAOC,WAAaj1B,EAAEue,MAClC,CALe,+BAMhB,EAAK3R,SAAS,CACZ8mB,cAAexkB,EACfgmB,wBAAyB,SAAUhmB,IAEtC,GACJ,IAvDC,EAAK4lB,YAAc,EAAKpoB,MAAMooB,YAC9B,EAAK9nB,MAAQ,CACX4nB,iBAAkB,GAClBM,uBAAuB,EACvBxB,cAAe,CAAC,GAPD,CASlB,CAZH,sDAcE,WACE,IAAMhW,EAAQ5c,KAAKkM,MAAM0mB,cACnBnvB,EAAezD,KAAKkM,MAAM4nB,iBAEpB,IAARrwB,EACFmZ,EAAK,KAAW,6CACN,kBAAkB+S,KAAKlsB,GAExBA,EAAK2N,QAAU,EACxBwL,EAAK,KAAW,gDACPnZ,EAAK4wB,WAAW,KACzBzX,EAAK,KAAW,4CAETA,EAAK,KANZA,EAAK,KAAW,oDASlB5c,KAAK8L,SAAS,CACZsoB,wBAAyB,SAAUxX,GACnCgW,cAAehW,GAElB,GAlCH,oBA+DE,WAAS,WACP,EAAoD5c,KAAKkM,MAAjD4nB,EAAR,EAAQA,iBAAkBM,EAA1B,EAA0BA,sBAE1B,OACE,gBAAC,EAAAja,MAAD,CACEhN,QAASiN,EAAAA,aAAAA,OACThN,MAAO,iCACP0C,OAAQ9P,KAAK4L,MAAMkE,OACnBqC,QAASnS,KAAKg0B,YACd3Z,QAAS,CACP,gBAAC,EAAArH,OAAD,CACExE,IAAI,UACJrB,QAAQ,UACR8F,QAASjT,KAAKs0B,aACdzjB,YAAaijB,IAAqBM,GAEjC,kBAEH,gBAAC,EAAAphB,OAAD,CAAQxE,IAAI,SAASrB,QAAQ,OAAO8F,QAASjT,KAAKg0B,aAC/C,oBAIL,gBAAC,EAAAlZ,KAAD,KACE,gBAAC,EAAAC,UAAD,CACEE,MAAO,eACP4X,YAAU,EACV7X,QAAQ,OACR8X,kBAAmB9yB,KAAKkM,MAAM0mB,cAAX,KACnBG,UAAW/yB,KAAKgzB,QAAQhzB,KAAKkM,MAAMkoB,uBACnCG,UACE,gBAAC3I,GAAD,CACE7U,QAAS,2JACTkV,OAAQ,4BAIZ,gBAAC,EAAA9D,WAAD,KACE,gBAAC,EAAAW,UAAD,CACEiK,UAAW/yB,KAAKgzB,QAAQhzB,KAAKkM,MAAMkoB,uBACnCvB,YAAU,EACVpb,KAAK,OACLnY,GAAG,mBACHmE,KAAK,mBACLgK,MAAOqmB,EACPtb,SAAU,SAAC/K,GACT,EAAK3B,SAAS,CAAEgoB,iBAAkBrmB,IAAS,WACzC,EAAK+mB,yBACN,GACF,OAOd,GAvHH,qBAyHE,SAAgBzB,GACd,OAAIA,EACK,UAEA,OAEV,KA/HH,GAAoC1hB,EAAAA,W,ybCnB7B,IAAMojB,GAAb,qIACE,WACE,MAAmCz0B,KAAK4L,MAAhC8oB,EAAR,EAAQA,OAAQ/c,EAAhB,EAAgBA,QAASsD,EAAzB,EAAyBA,MAErB0Z,EACF,wBAAMnmB,IAAI,UAAUimB,EAAaG,YAAYF,GAA7C,KAEEG,EACF,wBAAMrmB,IAAI,QAAQsE,UAAU,2BACzBmI,GASL,OALItD,IACFgd,EAAa,2BAAMA,GACnBE,EAAY,2BAAMA,IAIlB,2BACGF,EACAE,EAGN,IAxBH,0BA4BE,SAAmBC,GACjB,OAAIA,EAAI,IAECA,EAAEhU,WACAgU,EAAI,KAELC,KAAKC,MAAMF,EAAI,KAAO,IAAIhU,WAAa,IACtCgU,EAAI,IAENC,KAAKC,MAAMF,EAAI,KAAMhU,WAAa,IAChCgU,EAAI,KAELC,KAAKC,MAAMF,EAAI,KAAU,IAAIhU,WAAa,IACzCgU,EAAI,IACNC,KAAKC,MAAMF,EAAI,KAAShU,WAAa,IAIvC,KACR,KA/CH,GAAkCzP,EAAAA,WAwDrBqG,GAAb,qIACE,WACE,MAAiC1X,KAAK4L,MAA9BvI,EAAR,EAAQA,MAAOsU,EAAf,EAAeA,QAASF,EAAxB,EAAwBA,KAElBwD,EACJ,CACEvb,OAAQ,8DAAO2D,IAIfoF,KAAM,0DAAOpF,IAIb4xB,OAAQ,8DAAO5xB,IAIfwjB,WAAY,uEAAOxjB,KAInBoU,IAASA,EAEb,OAAO,gBAACgd,GAAD,CAAcC,OAAQrxB,EAAOsU,QAASA,EAASsD,MAAOA,GAC9D,KAzBH,GAA4C5J,EAAAA,W,gmBCdrC,IAAM6jB,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYtpB,GAAO,6BACjB,cAAMA,IAEDM,MAAQ,CACXipB,qBAAsB,KACtBC,sBAAuB,KACvBC,oBAAqB,KACrBC,qBAAsB,MAPP,CASlB,CAVH,qCAYE,WAAS,WACP,EAA4Bt1B,KAAK4L,MAAzBmoB,EAAR,EAAQA,OAAQxrB,EAAhB,EAAgBA,QAChB,EAAwDvI,KAAKkM,MAArDipB,EAAR,EAAQA,qBAAsBC,EAA9B,EAA8BA,sBACxBhc,GAAW2a,EACXwB,EAA4B,KAAnBxB,aAAA,EAAAA,EAAQ3iB,QAEjBokB,EACJ,gBAAC,EAAAxiB,OAAD,CACEC,QAAS,kBACP,EAAKnH,SAAS,CACZspB,sBAAuB,CAAC,GAFnB,GAMR,0BAIL,OAAOhc,EACL,gBAACoO,GAAD,MAEA,gCACG2N,EAAuBn1B,KAAKy1B,yBAA2B,KACvDL,EAAwBp1B,KAAK01B,0BAA4B,KAExD11B,KAAK4Y,QAAQ/M,KAAKwd,cACnBrpB,KAAK4Y,QAAQ/M,KAAKwT,kBAAkBsW,WAMjCJ,EACF,gBAACvO,GAAD,CACE5Z,MAAO,kDACPgF,YAAa,yDACbuY,OAAQ6K,IAERjtB,EACFvI,KAAK41B,YAAY,CAAErtB,QAAAA,IAEnBvI,KAAK61B,aAAa,CAAEL,UAAAA,EAAWzB,OAAAA,IAd/B,gBAACjb,GAAD,CACE1L,MAAO,oDACPgF,YAAa,4EACb2G,KAAMC,EAAAA,KAef,GAzDH,0BA2DE,YAA4C,WAArBwc,EAAqB,EAArBA,UAAWzB,EAAU,EAAVA,OAC1B+B,EAAe,KAAO/B,EAAQ,QAEpC,OACE,gCACE,2BACE,gBAAC,EAAA3b,QAAD,KACE,gBAAC,EAAA2M,eAAD,KACE,gBAAC,EAAAzM,YAAD,KAAckd,MAKpB,yBACE,aAAY,qBACZ1iB,UAAU,kCAEV,gBAAC+d,GAAD,CACE7f,QAAS,CACPlP,QAAS,CACP,CACEsL,MAAO,gBACPqK,KAAM,OACNnY,GAAI,QAEN,CACE8N,MAAO,GACPqK,KAAM,OACNnY,GAAI,WAIVe,OAAQ,CAAC,EACTwS,aAAc,kBAAM,IAAN,IAEhB,6BACGijB,EAAap3B,KAAI,SAAC2R,EAAO0B,GAAR,OAAc,EAAKgkB,eAAe1lB,EAAO0B,EAAzC,MAK3B,GApGH,4BAsGE,SAAuB1B,EAAOwE,GAAe,WACnCmhB,EAAch2B,KAAK4L,MAAnBoqB,UAEF7W,EAAgB,CACpBnf,KAAK4Y,QAAQ/M,KAAKwT,kBAAkB4W,2BAClC,gBAAC,EAAAzW,aAAD,CACEhR,IAAI,SACJyE,QAAS,WACP,EAAKnH,SAAS,CACZqpB,qBAAsB9kB,GAEzB,GAED,4CAKN,OACE,sBAAI,kCAA0BA,EAAM5M,MAAQ+K,IAAKqG,GAC/C,0BACE,gBAAC,EAAAG,KAAD,CACE5J,GACE4qB,EACA,IACA11B,EAAAA,GAAAA,eAA2B,CAAE+P,MAAOA,EAAM/Q,GAAI4wB,IAAK,YAGpD7f,EAAM5M,OAGX,gBAACyyB,GAAD,CAAiBC,WAAYhX,IAGlC,GAxIH,yBA0IE,YAAiC,WAAX5W,EAAW,EAAXA,QACpB,EAAsDvI,KAAKkM,MAAnDmpB,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,qBACvBjlB,EAAQrQ,KAAK4L,MAAMmoB,OAAOvV,MAAK,gBAAGlf,EAAH,EAAGA,GAAH,OAAY82B,OAAO7tB,KAAajJ,CAAhC,IAC/B+2B,EAAQhmB,aAAH,EAAGA,EAAOimB,aACfC,EAAc,KAAOF,GAE3B,IAAKhmB,EACH,OAAO,KAGT,IAAMmlB,EAAYx1B,KAAK4Y,QAAQ/M,KAAKwd,cAClC,gBAAC,EAAArW,OAAD,CACEC,QAAS,kBACP,EAAKnH,SAAS,CACZwpB,qBAAsB,CAAC,GAFlB,GAMR,qBAIL,OACE,gCACGD,EAAsBr1B,KAAKw2B,sBAAsBnmB,GAAS,KAC1DilB,EAAuBt1B,KAAKy2B,uBAAuBpmB,GAAS,KAE7D,2BACE,gBAAC,EAAA+H,QAAD,KACE,gBAAC,EAAA2M,eAAD,KACE,gBAAC,EAAAzM,YAAD,KAAckd,MAKpB,gBAACkB,GAAD,CACEr2B,OAAQ,CAAC,EACTwS,aAAc,kBAAM,IAAN,EACd8jB,YAAa,CACX70B,QAAS,CACP,CACEsL,MAAO,GACPqK,KAAM,OACNnY,GAAI,YAEN,CACE8N,MAAO,eACPqK,KAAM,OACNnY,GAAI,QAEN,CACE8N,MAAO,GACPqK,KAAM,OACNnY,GAAI,YAKTi3B,EAAY73B,KAAI,SAAC+J,EAAMsJ,GAAP,OACf,gBAAC6kB,GAAD,CACEpoB,IAAKuD,EACL8kB,SAAU9kB,EACV+kB,qBAAsB,gBAAC5L,GAAD,CAAsBznB,KAAMgF,IAClD,oDAA4CA,IAE5C,0BAAKA,GACL,gBAACytB,GAAD,CACEC,WAAY,CACV,EAAKvd,QAAQ/M,KAAKwd,cAChB,gBAAC,EAAA7J,aAAD,CACEhR,IAAI,cACJyE,QAAS,kBACP,EAAKnH,SAAS,CAAEupB,oBAAqB5sB,GAD9B,GAIR,0BAjBI,KA2BxB,GA/NH,oCAiOE,WAAiC,WACzB4H,EAAQrQ,KAAKkM,MAAMipB,qBACnB4B,EAAY1mB,EAAM5M,KAClBA,EAAOzD,KAAK4L,MAAMnI,KAExB,OACE,gBAAC0lB,GAAD,CACElI,aAAc,kBAAM,EAAKnV,SAAS,CAAEqpB,qBAAsB,MAA5C,EACdjU,aAAc,kBAAM,EAAK8V,YAAY3mB,EAAvB,EACdjD,MAAO,8CAAiB2pB,KAExB,iKAC8BA,EAD9B,KACsDtzB,GADtD,cAC0B,0BAD1B,EACkD,0BADlD,EAEE,8BAKP,GAnPH,mCAqPE,SAA8B4M,GAAO,WAC7B0mB,EAAY1mB,EAAM5M,KAClBA,EAAOzD,KAAK4L,MAAMnI,KAClBgF,EAAOzI,KAAKkM,MAAMmpB,oBAExB,OACE,gBAAClM,GAAD,CACElI,aAAc,kBAAM,EAAKnV,SAAS,CAAEupB,oBAAqB,MAA3C,EACdnU,aAAc,kBAAM,EAAK+V,WAAWxuB,EAAM4H,EAA5B,EACdjD,MAAO,mCAAgB3E,KAEvB,8KAC8BA,EAD9B,UACiDsuB,EADjD,KAEMtzB,GAFN,cAC0B,0BAD1B,EAC6C,0BAD7C,EAEE,0BAFF,EAGE,8BAKP,GAxQH,qCA0QE,WAAkC,WAChC,EAAuDzD,KAAK4L,MAApDmoB,EAAR,EAAQA,OAAQmD,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,mBAChC,EAEIn3B,KAAKkM,MADPkpB,sBAAyB/kB,EAD3B,EAC2BA,MAD3B,IACkCgmB,MAAAA,OADlC,MAC0C,GAD1C,EAIMe,IAAa/mB,EACbgnB,IAAahB,UAAAA,EAAOjlB,QAKpBkmB,EAAQ,CACZ,CACEh4B,GAAI,EACJmE,KAAM,yBACNwH,UACE,gBAAC2d,GAAD,CACE2O,eAAgBxD,EAChByD,cAAennB,EACfonB,YAAa,SAACpnB,GAAD,OACX,EAAKvE,SAAS,CAAEspB,sBAAuB,CAAE/kB,MAAAA,EAAOgmB,MAAAA,IADrC,IAKjBqB,eAAgB,iBAChBC,WAAYP,GAEd,CACE93B,GAAI,EACJmE,KAAM,yBACNwH,UACE,gBAAC2sB,GAAD,CACEC,cAvBc,GAwBdC,cAAezB,EACf0B,cAAe,SAAC1B,GAAD,OACb,EAAKvqB,SAAS,CAAEspB,sBAAuB,CAAE/kB,MAAAA,EAAOgmB,MAAAA,IADnC,EAGfvJ,QAASqK,EACTD,eAAgBA,IAGpBc,UAAWZ,EACXO,WAAYP,GAAYC,GAE1B,CACE/3B,GAAI,EACJmE,KAAM,kBACNwH,UAAW,gBAACgtB,GAAD,CAAc5nB,MAAOA,EAAOynB,cAAezB,IACtD6B,eAAgB,cAChBF,UAAWZ,GAAYC,EACvBc,YAAY,IAIhB,OACE,gBAACC,GAAD,CACEd,MAAOA,EACPlqB,MAAO,yBACP+E,QAAS,kBACP,EAAKrG,SAAS,CACZspB,sBAAuB,MAFlB,EAKTiD,OAAQ,kBAAM,EAAKC,SAASjoB,EAAOgmB,EAA3B,GAGb,GA7UH,oCA+UE,SAA+BhmB,GAAO,aAC5B6mB,EAAmBl3B,KAAK4L,MAAxBsrB,eACR,EAEIl3B,KAAKkM,MADPopB,qBAAwBe,MAAAA,OAD1B,MACkC,GADlC,EAIMgB,IAAahB,UAAAA,EAAOjlB,QAEpBymB,GACJxnB,SAAA,UAAAA,EAAOimB,oBAAP,eAAqB53B,KAAI,SAAC+E,GAAD,MAAW,CAAEgF,KAAMhF,EAAnB,MAA+B,GAEpD6zB,EAAQ,CACZ,CACEh4B,GAAI,EACJmE,KAAM,yBACNwH,UACE,gBAAC2sB,GAAD,CACEC,cAAeA,EACfC,cAAezB,EACf0B,cAAe,SAAC1B,GAAD,OACb,EAAKvqB,SAAS,CAAEwpB,qBAAsB,CAAEe,MAAAA,IAD3B,EAGfa,eAAgBA,IAGpBQ,eAAgB,iBAChBC,WAAYN,GAEd,CACE/3B,GAAI,EACJmE,KAAM,kBACNwH,UAAW,gBAACgtB,GAAD,CAAc5nB,MAAOA,EAAOynB,cAAezB,IACtD6B,eAAgB,cAChBF,UAAWX,EACXc,YAAY,IAIhB,OACE,gBAACC,GAAD,CACEd,MAAOA,EACPlqB,MAAO,yBACP+E,QAAS,kBACP,EAAKrG,SAAS,CACZwpB,qBAAsB,MAFjB,EAKT+C,OAAQ,kBAAM,EAAKZ,YAAYpnB,EAAOgmB,EAA9B,GAGb,GAjYH,0BAmYE,YAA2E,WAApDtC,EAAoD,EAApDA,OAAQwE,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aACzD,EAAiCz4B,KAAK4L,MAA9B4W,EAAR,EAAQA,OAER,OAAOkW,EAFP,EAAgBA,cAEI3E,GACjB90B,MAAK,WACJ,EAAK6M,SAAS2sB,GACd,EAAK7sB,MAAM8N,SAAS,CAClBtM,MAAOmrB,EACPprB,QAAS,YAEXqV,GACD,IARI,OASE,YAA0C,QAAvCvf,SAAYiR,EAA2B,EAA3BA,OAAQuF,EAAmB,EAAnBA,WAC5B,EAAK7N,MAAM8N,SAAS,CAClBtM,MAAOorB,EACPrrB,QAAS,SACTiF,aAAauH,EAAAA,EAAAA,IAAazF,EAAQuF,IAErC,GACJ,GAtZH,sBAwZE,SAAiBpJ,EAAOgmB,GACtB,MAAyBr2B,KAAK4L,MAAtBnI,EAAR,EAAQA,KAAMswB,EAAd,EAAcA,OACR4E,EAAW,SACZtoB,GADS,IAEZimB,aAAcD,EAAM33B,KAAI,qBAAG+E,IAAH,MAEpBm1B,EAAY,GAAH,eAAO7E,GAAP,CAAe4E,IAE9B,OAAO34B,KAAK04B,aAAa,CACvB3E,OAAQ6E,EACRH,aAAc,CACZrD,sBAAuB,MAEzBmD,aAAc,iEAAWloB,EAAM5M,KAAjB,KAA0DA,IACxE+0B,aAAc,wDAAWnoB,EAAM5M,KAAjB,KAAiDA,KAElE,GAxaH,yBA0aE,SAAoB4M,GAClB,MAAyBrQ,KAAK4L,MAAtBnI,EAAR,EAAQA,KACFm1B,EADN,EAAc7E,OACWzxB,QAAO,SAACu2B,GAAD,OAAOA,IAAMxoB,CAAb,IAEhC,OAAOrQ,KAAK04B,aAAa,CACvB3E,OAAQ6E,EACRH,aAAc,CACZtD,qBAAsB,MAExBoD,aAAc,qEAAWloB,EAAM5M,KAAjB,KAA8DA,IAC5E+0B,aAAc,4DAAWnoB,EAAM5M,KAAjB,KAAqDA,KAEtE,GAtbH,yBAwbE,SAAoB4M,EAAOgmB,GACzB,MAAyBr2B,KAAK4L,MAAtBnI,EAAR,EAAQA,KAAMswB,EAAd,EAAcA,OACR4E,EAAW,SACZtoB,GADS,IAEZimB,aAAc,GAAF,eAAMjmB,EAAMimB,eAAZ,OAA6BD,EAAM33B,KAAI,qBAAG+E,IAAH,QAE/Cm1B,EAAY7E,EAAOr1B,KAAI,SAACm6B,GAAD,OAAQA,IAAMxoB,EAAQsoB,EAAWE,CAAjC,IAE7B,OAAO74B,KAAK04B,aAAa,CACvB3E,OAAQ6E,EACRH,aAAc,CAAEnD,qBAAsB,MACtCiD,aAAc,gEAAWloB,EAAM5M,KAAjB,KAAyDA,IACvE+0B,aAAc,+DAAWnoB,EAAM5M,KAAjB,KAAwDA,KAEzE,GAtcH,wBAwcE,SAAmBgF,EAAM4H,GACvB,MAAyBrQ,KAAK4L,MAAtBnI,EAAR,EAAQA,KAAMswB,EAAd,EAAcA,OACR4E,EAAW,SACZtoB,GADS,IAEZimB,aAAcjmB,EAAMimB,aAAah0B,QAAO,SAACmB,GAAD,OAAUA,IAASgF,CAAnB,MAEpCmwB,EAAY7E,EAAOr1B,KAAI,SAACm6B,GAAD,OAAQA,IAAMxoB,EAAQsoB,EAAWE,CAAjC,IAE7B,OAAO74B,KAAK04B,aAAa,CACvB3E,OAAQ6E,EACRH,aAAc,CAAEpD,oBAAqB,MACrCkD,aAAc,gEAAWloB,EAAM5M,KAAjB,KAAyDA,IACvE+0B,aAAc,+DAAWnoB,EAAM5M,KAAjB,KAAwDA,KAEzE,KAtdH,GAA+B4N,EAAAA,W,ykBAwd/B6jB,GAAU4D,YAAc7f,EAAAA,ECxejB,IAAMyH,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MACE1gB,KAAK4L,MADCvI,EAAR,EAAQA,MAAOhD,EAAf,EAAeA,OAAQwS,EAAvB,EAAuBA,aAAc8N,EAArC,EAAqCA,MAAOoY,EAA5C,EAA4CA,eAAgBviB,EAA5D,EAA4DA,UAGtDwiB,EAAa,CAAC,EAMpB,OALKrY,IACHqY,EAAU,SAAe,iCACzBA,EAAU,QAAcC,EAAAA,kBAAAA,QAIxB,gBAAC,EAAAvY,YAAD,QACE0E,UAAW/hB,EACX6qB,QAAS7tB,EAAO+b,WAAatb,EAAAA,EAAAA,kBAC7BC,KAAMV,EAAOU,MAAQ,EACrBotB,UAAW,SAACC,EAAGztB,GAAJ,OACTkS,EAAavS,EAAAA,EAAAA,SAAqBD,EAAQ,OAAQM,GADzC,EAGX0tB,gBAAiB,SAACD,EAAGztB,GACnBkS,EAAa,SAAKxS,GAAN,IAAcU,KAAM,EAAGqb,UAAWzb,IAC/C,GACGq4B,EAVN,CAWExiB,UAAWmK,GAASnK,EACpBuiB,eAAgB/4B,KAAKk5B,kBACnBH,GAAkBj4B,EAAAA,EAAAA,4BAEpBq4B,OAAQ,CACNC,OAAQ,aACRC,cAAe,mBACf5X,MAAO,MAET6X,eAAgB,SAAC1tB,GAAD,OAAW,gBAAC,EAAA2tB,gBAAD,QAAgBH,OAAQ,cAAWxtB,GAA9C,IAGrB,GAnCH,+BAqCE,SAA0BoF,GACxB,OAAOA,EAAQtS,KAAI,SAACwS,GAAD,MAAa,CAC9B9D,MAAOosB,OAAOtoB,GACdzD,MAAOyD,EAFU,GAIpB,KA1CH,GAAgCG,EAAAA,WCPzB,IAAMooB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MASIz5B,KAAK4L,MARPmI,EADF,EACEA,YACAC,EAFF,EAEEA,gBACA0lB,EAHF,EAGEA,QACAl2B,EAJF,EAIEA,UACAqQ,EALF,EAKEA,aACAxT,EANF,EAMEA,OACA8hB,EAPF,EAOEA,KACAtP,EARF,EAQEA,aAGI4C,EAAUjS,EAAUiS,SAAWjS,EAAUC,KAE/C,OACE,gBAACkQ,EAAD,CACEvG,MAAOqI,EACP7B,KACEpQ,EAAU0S,YACR,gBAACJ,GAAD,CACEC,IAAK,iCAAIN,IACT3C,UAAU,QACVkD,mBAAiB,EACjBC,MAAOzS,EAAU0S,WACjB3B,KAAK,OACL4B,aAAW,IAIjBpC,YAAa,gBAACS,EAAD,CAAaE,MAAOX,IACjCF,aAAcA,EACdG,gBAAiBA,EACjBlB,UAAU,UAETtP,EAAU4O,YAAc,2BAAM5O,EAAU4O,aAAqB,KAE9D,uBAAKU,UAAU,0BACb,uBAAKA,UAAU,QACb,gBAAC6mB,GAAD,CACExX,KAAMA,EACN9hB,OAAQA,EACRwS,aAAc,SAAClS,GAAD,OAAOkS,EAAalS,EAApB,KAGjB6C,EAAUkR,MAAMtD,OAAS,EACxB,uBAAK0B,UAAU,SACb,2BACE,gBAAC,KAAD,OAEDtP,EAAUkR,MAAMhW,KAAI,SAACme,EAAG9K,GACvB,OACE,uBAAKe,UAAU,OAAOtE,IAAKuD,GACzB,qBAAGlF,KAAMgQ,EAAE3a,IAAK0N,OAAO,SACpBiN,EAAEpZ,MAIV,KAED,MAGLi2B,GAAW,KAGjB,KAlEH,GAAmCroB,EAAAA,WCC5B,IAAMuoB,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYhuB,GAAO,4BACjB,cAAMA,IADW,oCAsEM,WACvB,EAAKA,MAAMiuB,YAAY,GACxB,KAxEkB,8BA0EA,SAAC/pB,GAClB,EAAKhE,SAAS,CACZgE,OAAQA,GAEX,KA9EkB,8BAgFA,SAACnD,EAAOoD,GAMzB,GAJI,EAAKnE,MAAMkuB,cAAgB/pB,EAAUtC,QACvCsC,EAAYA,EAAUtC,OAGpB,EAAK7B,MAAMqE,SACb,EAAKrE,MAAMqE,SAAStD,EAAOoD,OACtB,CACL,IAAMgqB,EAAW,IAAIC,IAAI,EAAKpuB,MAAM4f,qBAChCuO,EAASE,IAAIlqB,GACfgqB,EAAQ,OAAQhqB,GAEhBgqB,EAASG,IAAInqB,GAGf,EAAKnE,MAAMiuB,YAAYprB,MAAM0rB,KAAKJ,GACnC,CACF,IAhGC,EAAK7tB,MAAQ,CAAE4D,QAAQ,GAFN,CAGlB,CAJH,qCAME,WAAS,WACP,GAAI9P,KAAK4L,MAAMwuB,WAAY,CACzB,IAAM3Y,EAAQzhB,KAAK4L,MAAM4f,oBAAoBpa,OACzCpR,KAAK4L,MAAM4f,oBACX,CAACxrB,KAAK4Q,mBACV,OACE,gBAAC,EAAAqV,WAAD,KACGxE,EAAM/iB,KAAI,SAAC8c,GAAD,OACT,gBAAC,EAAAF,MAAD,CAAO9M,IAAKgN,GACT,EAAK5P,MAAMkuB,aAAenrB,EAAAA,GAAAA,EAAO6M,GAAQA,EAFnC,IAOhB,CAED,IAAIpL,EAYJ,OAVEA,EADEpQ,KAAK4L,MAAMkuB,aACA95B,KAAK4L,MAAM4f,oBAAoB9sB,KAAI,SAAC+O,GAAD,MAAY,CAE1DA,MAAAA,EAEAqT,SAAU,kBAAMnS,EAAAA,GAAAA,EAAOlB,EAAb,EAJoC,IAOnCzN,KAAK4L,MAAM4f,oBAIxB,gBAAC,EAAAjb,OAAD,CACEC,aAAcxQ,KAAK4L,MAAM4E,aACzBrD,QAASmD,EAAAA,cAAAA,eACT+pB,mBAAoB,6BACpB5pB,SAAUzQ,KAAKyQ,SACfR,SAAUjQ,KAAKiQ,SACfR,QAASzP,KAAK4L,MAAM6D,QAAUzP,KAAK4L,MAAM6D,QAAUzP,KAAKs6B,eACxDlqB,WAAYA,EACZN,OAAQ9P,KAAKkM,MAAM4D,OACnBc,gBAAiB5Q,KAAK4Q,kBACtBC,aAAc7Q,KAAK4L,MAAMiF,YAEmB,IAA3C7Q,KAAK4L,MAAM2uB,qBAAqBnpB,OAC7B,CACE,gBAAC,EAAAD,aAAD,CACEN,YAAY,EACZrC,IAAK,YACLf,MAAO,uBAGXzN,KAAK4L,MAAM2uB,qBAAqB77B,KAAI,SAACwS,EAAQ2D,GAAT,OAClC,gBAAC,EAAA1D,aAAD,CAAc3C,IAAKqG,EAAOpH,MAAOyD,GAC9B,EAAKtF,MAAMkuB,aAAenrB,EAAAA,GAAAA,EAAOuC,GAAUA,EAFZ,IAO7C,GA9DH,6BAgEE,WACE,OAAKlR,KAAK4L,MAAMiF,YAAe7Q,KAAK4L,MAAMwuB,WAGO,IAA1Cp6B,KAAK4L,MAAM4f,oBAAoBpa,OAAe,wBAAmB,GAF/D,4BAGV,KArEH,GAA4CC,EAAAA,W,SC8B5C,I,IAe8CA,EAAAA,U,0mDCfvC,IAAMmpB,GAAb,6B,IAAA,G,EAAA,E,gaAGE,WAAY5uB,GAAO,sBACjB,cAAMA,GAEN,MACEA,EAAMnF,QAAU,CAAC,EADXg0B,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,YAAaC,EAApD,EAAoDA,QAHnC,OAMjB,EAAK1uB,MAAQ,CACX2uB,UAAW,CACTJ,kBAAmB,CACjBh3B,KAAMg3B,EAAoB,mBAAqB,GAC/CK,WAAYL,GAEdC,WAAY,CACVj3B,KAAMi3B,EAAa,aAAe,GAClCI,WAAYJ,GAEdC,YAAa,CACXl3B,KAAMk3B,EAAc,cAAgB,GACpCG,WAAYH,GAEdC,QAAS,CACPn3B,KAAMm3B,EAAU,UAAY,GAC5BE,WAAYF,KAOU,aAA1B,EAAKhvB,MAAMmvB,YACgC,OAA3C,EAAKnvB,MAAMnF,OAAOu0B,sBAElB,EAAKC,aAAa,GAAI,wBAhCP,CAkClB,CArCH,qCAuCE,WAAS,WACCx0B,EAAWzG,KAAK4L,MAAhBnF,OACR,IAAKA,EACH,OAAO,KAGT,IAAMs0B,EAAa/6B,KAAK4L,MAAMmvB,YAAc/6B,KAAKk7B,cAAcz0B,EAAOvE,KAElEi5B,EAAiB,CAAC,OAAQ,OAC1BC,EAAiBp7B,KAAK4L,MAAMyvB,cAAgB,GAAK,CAAC,QAqBtD,MAnBmB,cAAfN,IACFI,EAAiBA,EAAe7Y,OAAO,CAAC,aACxC8Y,EAAiBA,EAAe9Y,OAAO,CAAC,uBAGvB,cAAfyY,IACFI,EAAiBA,EAAe7Y,OAAO,CAAC,sBACxC8Y,EAAiBA,EAAe9Y,OAAO,CAAC,WAAY,WAGnC,aAAfyY,IACFK,EAAiBA,EAAe9Y,OAAO,CACrC,WACA,QACA,oBACA,iBAKF,gBAAC,EAAAnI,MAAD,CACErK,OAAQ9P,KAAK4L,MAAM0vB,UACnBluB,MAAOpN,KAAK4L,MAAMwB,OAAS,sBAC3BD,QAAQ,QACRgF,QAAS,kBAAM,EAAKvG,MAAM6d,YAAjB,EACTpP,QAAS,CACP,gBAAC,EAAArH,OAAD,CACEnC,YAAa7Q,KAAKu7B,QAAQJ,EAAgBJ,GAC1CvsB,IAAI,UACJrB,QAAQ,UACR8F,QAAS,kBAAM,EAAKrH,MAAM4vB,YAAjB,GAER,gBAEH,gBAAC,EAAAxoB,OAAD,CACExE,IAAI,SACJrB,QAAQ,OACR8F,QAAS,kBAAM,EAAKrH,MAAM6d,YAAjB,GAER,oBAIJzpB,KAAKy7B,WAAWN,EAAgBC,GAGtC,GAhGH,wBAkGE,SAAmBD,EAAgBC,GAAgB,aACjD,EAAkCp7B,KAAK4L,MAA/BnF,EAAR,EAAQA,OAAQmsB,EAAhB,EAAgBA,cACRiI,EAAc76B,KAAKkM,MAAnB2uB,UACAa,IAAuB,UAAA17B,KAAK4Y,eAAL,eAAczM,eAAgB,CAAC,GAAtDuvB,mBAEFC,EACJ,qBACE/rB,OAAO,SACP/C,KAAK,kIACL8U,IAAI,cAHN,oBASIhG,EAAW,SAAC5U,GAAD,OACf8zB,EAAU9zB,GAAO+zB,SAAW,qBAAgBD,EAAU9zB,GAAOtD,IAD9C,EAEXm4B,EAAe,SAAC70B,GAAD,OAAW,SAAC0G,EAAOhK,GACtC,EAAKqI,SACH,CACE+uB,UAAW,SACNA,GADI,cAEN9zB,EAAQ,CACPtD,KAAAA,EACAq3B,UAAU,OAIhB,kBAAM,EAAKG,aAAaxtB,EAAO1G,EAA/B,GAEH,CAboB,EAerB,OACE,gBAAC,EAAA+T,KAAD,KACE,gBAAC,EAAAC,UAAD,CACEC,QAAS,OACTC,MAAO,eACP4X,WAAYsI,EAAe34B,SAAS,QACpCuwB,UAAW/yB,KAAKgzB,UAAU,SAAUJ,IACpCE,kBAAmBF,EAAa,MAEhC,gBAAC,EAAA9J,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,SAAUJ,IACpCC,WAAYsI,EAAe34B,SAAS,QACpCqO,WAAYuqB,EAAe54B,SAAS,QACpClD,GAAG,OACHmY,KAAK,OACLhK,MAAOhH,EAAOhD,MAAQ,GACtB+U,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,OAApC,KAId,gBAAC,EAAAsN,WAAD,QACEC,QAAS,MACTC,MAAO,cACPsZ,UACE,gBAAC3I,GAAD,CAAY7U,QAAS,mDAEvB8b,WAAYsI,EAAe34B,SAAS,SAChCoxB,EAAAA,EAAAA,IAAkBhB,EAAa,IAASnsB,EAAOvE,KAPrD,CAQE25B,eAAgB,gBAAC,KAAD,MAChBC,sBAAuB,gBAAC,MAAD,QAEvB,gBAAC,EAAAhT,UAAD,CACEiK,WACEa,EAAAA,EAAAA,IAAkBhB,EAAa,IAASnsB,EAAOvE,KAAK6wB,UAEtDF,WAAYsI,EAAe34B,SAAS,OACpCqO,WAAYuqB,EAAe54B,SAAS,OACpClD,GAAG,MACHmY,KAAK,OACLhK,MAAOhH,EAAOvE,KAAO,GACrBsW,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,MAApC,MAIZ2tB,EAAe54B,SAAS,gBAAkBk5B,EAC1C,gBAAC,EAAA3gB,UAAD,CACEC,QAAS,cACTvX,KAAM,sBACNwX,MAAO,4CAEP,gBAAC,EAAAnQ,OAAD,CACExL,GAAG,cACHy8B,UAAWt1B,EAAOu1B,YAClBxjB,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,cAApC,KAGZ,MAEF2tB,EAAe54B,SAAS,UACxB,gBAAC,EAAAuY,UAAD,CACEC,QAAS,QACTC,MAAO,gBACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QAAS,wDAGb8b,WAAYsI,EAAe34B,SAAS,SACpCuwB,UAAW/yB,KAAKgzB,UAAU,UAAWJ,IACrCE,kBAAmBF,EAAa,OAEhC,gBAACqJ,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IAAW,QAAS11B,EAAOI,mBACvC4I,QAAS,kBAAM,EAAK2sB,YAAY,SAAS,EAAhC,GAET,gBAAC,EAAAtT,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,UAAWJ,IACrCC,WAAYsI,EAAe34B,SAAS,SACpCiV,KAAK,WACLnY,GAAG,QACHmO,MAAOhH,EAAOrC,OAAS,GACvBoU,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,QAApC,OAMhB2tB,EAAe54B,SAAS,aACxB,gBAAC,EAAAuY,UAAD,CACEC,QAAS,WACTC,MAAO,kBACPsZ,UAAW,gBAAC3I,GAAD,CAAY7U,QAAS,gCAChC8b,WAAYsI,EAAe34B,SAAS,YACpCuwB,UAAW/yB,KAAKgzB,UAAU,aAAcJ,IACxCE,kBAAmBF,EAAa,UAEhC,gBAAC,EAAA9J,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,aAAcJ,IACxCC,WAAYsI,EAAe34B,SAAS,YACpClD,GAAG,SACHmY,KAAK,OACLhK,MAAOzN,KAAK4L,MAAMnF,OAAOK,UAAY,GACrC0R,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,WAApC,MAKd2tB,EAAe54B,SAAS,sBACxB,gBAAC,EAAAuY,UAAD,CACEC,QAAS,OACTC,MAAO,4BACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QACE,gNACsB4kB,OAO5B9I,WAAYsI,EAAe34B,SAAS,qBACpCuwB,UAAW/yB,KAAKgzB,UAAU,sBAAuBJ,IACjDE,kBAAmBF,EAAa,mBAEhC,gBAAC,EAAAyJ,KAAD,KACE,gBAAC,EAAAC,SAAD,CAAUC,KAAM,CAAEC,QAAS,SACzB,gBAAC1gB,GAAD,CACEiX,UAAW/yB,KAAKgzB,UACZ,sBAAuBJ,IAE3BC,WAAYsI,EAAe34B,SAAS,qBACpClD,GAAG,OACHmY,KAAK,OACLkE,SAAUA,EAAS,qBACnBlO,MAAOzN,KAAK4L,MAAMnF,OAAOg0B,mBAAqB,GAC9CgC,oBAAkB,EAClBjkB,SAAUojB,EAAa,wBAG3B,gBAAC,EAAAU,SAAD,KACE,gBAAC,EAAAtpB,OAAD,CACEnC,YAAa7Q,KAAK4L,MAAMnF,OAAOg0B,kBAC/BxnB,QAAS,WACPypB,GAAAA,OACE,IAAIC,KAAK,CAAC,EAAK/wB,MAAMnF,OAAOg0B,mBAAoB,CAC9ChjB,KAAM,6BAERojB,EAAUJ,kBAAkBh3B,KAE/B,EACD0J,QAAQ,QACR,aAAY,sCAEZ,gBAAC,MAAD,UAOV,gBAAC,EAAA4N,UAAD,CACE,UAAQ,WACRC,QAAS,WACTC,MAAO,mBACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QACEqkB,EAAe54B,SAAS,SACpB,mEACA,8GAIVqwB,WAAYsI,EAAe34B,SAAS,YACpCuwB,UAAW/yB,KAAKgzB,UAAU,aAAcJ,IACxCE,kBAAmBF,EAAa,UAEhC,gBAACqJ,GAAD,CACEC,YACEU,EAAAA,EAAAA,IAAY,WAAYn2B,EAAOI,qBAC/Bs1B,EAAAA,EAAAA,IAAW,WAAY11B,EAAOI,mBAEhC4I,QAAS,kBAAM,EAAK2sB,YAAY,YAAY,EAAnC,GAET,gBAAC,EAAAtT,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,aAAcJ,IACxCC,WAAYsI,EAAe34B,SAAS,YACpCqO,WAAYuqB,EAAe54B,SAAS,YACpClD,GAAG,WACHmY,KAAK,OACLhK,MAAOhH,EAAOrB,UAAY,GAC1BoT,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,WAApC,MAKhB,gBAAC,EAAAsN,UAAD,CACEC,QAAS,WACTC,MAAO,mBACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QACEqkB,EAAe54B,SAAS,SACpB,mEACA,8GAIVqwB,WAAYsI,EAAe34B,SAAS,YACpCuwB,UAAW/yB,KAAKgzB,UAAU,aAAcJ,IACxCE,kBAAmBF,EAAa,UAEhC,gBAACqJ,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IAAW,WAAY11B,EAAOI,mBAC1C4I,QAAS,kBAAM,EAAK2sB,YAAY,YAAY,EAAnC,GAET,gBAAC,EAAAtT,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,aAAcJ,IACxCC,WAAYsI,EAAe34B,SAAS,YACpCqO,WAAYuqB,EAAe54B,SAAS,YACpClD,GAAG,WACHmY,KAAK,WACLhK,MAAOhH,EAAOpB,UAAY,GAC1BmT,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,WAApC,MAKhB,gBAAC,EAAAovB,kBAAD,CACEC,mBAAoB,gCACpBC,oBAAqB,iCAErB,uBAAKjqB,UAAU,aACb,gBAAC,EAAAiI,UAAD,CACEC,QAAS,YACTC,MAAO,oBACP4X,WAAYsI,EAAe34B,SAAS,aACpCuwB,UAAW/yB,KAAKgzB,UAAU,cAAeJ,IACzCE,kBAAmBF,EAAa,WAEhC,gBAAC,EAAA9J,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,cAAeJ,IACzCC,WAAYsI,EAAe34B,SAAS,aACpCqO,WAAYuqB,EAAe54B,SAAS,aACpClD,GAAG,YACHmY,KAAK,OACLhK,MAAOhH,EAAOu2B,WAAa,GAC3BxkB,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,YAApC,KAId,gBAAC,EAAAsN,UAAD,CACE,UAAQ,iBACRC,QAAS,iBACTC,MAAO,yBACP4X,WAAYsI,EAAe34B,SAAS,kBACpCuwB,UAAW/yB,KAAKgzB,UAAU,mBAAoBJ,IAC9CE,kBAAmBF,EAAa,gBAEhC,gBAACqJ,GAAD,CACEC,YACEU,EAAAA,EAAAA,IAAY,iBAAkBn2B,EAAOI,qBACrCs1B,EAAAA,EAAAA,IAAW,iBAAkB11B,EAAOI,mBAEtC4I,QAAS,kBAAM,EAAK2sB,YAAY,kBAAkB,EAAzC,GAET,gBAAC,EAAAtT,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,mBAAoBJ,IAC9CC,WAAYsI,EAAe34B,SAAS,kBACpCqO,WAAYuqB,EAAe54B,SAAS,kBACpClD,GAAG,iBACHmY,KAAK,OACLhK,MAAOhH,EAAOw2B,gBAAkB,GAChCzkB,SAAU,SAAC/K,GAAD,OACR,EAAKwtB,aAAaxtB,EAAO,iBADjB,MAOhB,gBAAC,EAAAsN,UAAD,CACEC,QAAS,iBACTC,MAAO,yBACP4X,WAAYsI,EAAe34B,SAAS,kBACpCuwB,UAAW/yB,KAAKgzB,UAAU,mBAAoBJ,IAC9CE,kBAAmBF,EAAa,gBAEhC,gBAACqJ,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IACV,iBACA11B,EAAOI,mBAET4I,QAAS,kBAAM,EAAK2sB,YAAY,kBAAkB,EAAzC,GAET,gBAAC,EAAAtT,UAAD,CACEiK,UAAW/yB,KAAKgzB,UAAU,mBAAoBJ,IAC9CC,WAAYsI,EAAe34B,SAAS,kBACpCqO,WAAYuqB,EAAe54B,SAAS,kBACpClD,GAAG,iBACHmY,KAAK,WACLhK,MAAOhH,EAAOy2B,gBAAkB,GAChC1kB,SAAU,SAAC/K,GAAD,OACR,EAAKwtB,aAAaxtB,EAAO,iBADjB,MAOhB,gBAAC,EAAAsN,UAAD,CACEC,QAAS,iBACTC,MAAO,yBACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QAAS,gEAGb8b,WAAYsI,EAAe34B,SAAS,kBACpCuwB,UAAW/yB,KAAKgzB,UAAU,mBAAoBJ,IAC9CE,kBAAmBF,EAAa,gBAEhC,gBAAC,EAAAuK,SAAD,CACE3kB,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,iBAApC,EACVnO,GAAG,iBACHy8B,UAAWt1B,EAAO22B,kBAItB,gBAAC,EAAAriB,UAAD,CACEC,QAAS,aACTC,MAAO,qBACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QAAS,+DAGb8b,WAAYsI,EAAe34B,SAAS,cACpCuwB,UAAW/yB,KAAKgzB,UAAU,eAAgBJ,IAC1CE,kBAAmBF,EAAa,YAEhC,gBAACqJ,GAAD,CACEC,YAAYC,EAAAA,EAAAA,IAAW,aAAc11B,EAAOI,mBAC5C4I,QAAS,kBAAM,EAAK2sB,YAAY,cAAc,EAArC,GAET,gBAACtgB,GAAD,CACE,UAAQ,aACRiX,UAAW/yB,KAAKgzB,UAAU,eAAgBJ,IAC1CC,WAAYsI,EAAe34B,SAAS,cACpClD,GAAG,OACHmY,KAAK,OACLkE,SAAUA,EAAS,cACnBlO,MAAOzN,KAAK4L,MAAMnF,OAAOi0B,YAAc,GACvC+B,oBAAkB,EAClBjkB,SAAUojB,EAAa,kBAK7B,gBAAC,EAAA7gB,UAAD,CACEC,QAAS,cACTC,MAAO,6BACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QAAS,sEAGb8b,WAAYsI,EAAe34B,SAAS,eACpCuwB,UAAW/yB,KAAKgzB,UAAU,gBAAiBJ,IAC3CE,kBAAmBF,EAAa,aAEhC,gBAAC,EAAAyJ,KAAD,KACE,gBAAC,EAAAC,SAAD,CAAUC,KAAM,CAAEC,QAAS,SACzB,gBAAC1gB,GAAD,CACEiX,UAAW/yB,KAAKgzB,UAAU,gBAAiBJ,IAC3CC,WAAYsI,EAAe34B,SAAS,eACpClD,GAAG,OACHmY,KAAK,OACLkE,SAAUA,EAAS,eACnBlO,MAAOzN,KAAK4L,MAAMnF,OAAOk0B,aAAe,GACxC8B,oBAAkB,EAClBjkB,SAAUojB,EAAa,kBAG3B,gBAAC,EAAAU,SAAD,KACE,gBAAC,EAAAtpB,OAAD,CACE,UAAQ,cACRnC,YAAa7Q,KAAK4L,MAAMnF,OAAOk0B,YAC/B1nB,QAAS,WACPypB,GAAAA,OACE,IAAIC,KAAK,CAAC,EAAK/wB,MAAMnF,OAAOk0B,aAAc,CACxCljB,KAAM,6BAERojB,EAAUF,YAAYl3B,KAEzB,EACD0J,QAAQ,QACR,aAAY,8CAEZ,gBAAC,MAAD,UAMR,gBAAC,EAAA4N,UAAD,CACEC,QAAS,UACTC,MAAO,yBACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QAAS,sEAGb8b,WAAYsI,EAAe34B,SAAS,WACpCuwB,UAAW/yB,KAAKgzB,UAAU,YAAaJ,IACvCE,kBAAmBF,EAAa,SAEhC,gBAAC,EAAAyJ,KAAD,KACE,gBAAC,EAAAC,SAAD,CAAUC,KAAM,CAAEC,QAAS,SACzB,gBAAC1gB,GAAD,CACEiX,UAAW/yB,KAAKgzB,UAAU,YAAaJ,IACvCC,WAAYsI,EAAe34B,SAAS,WACpClD,GAAG,OACHmY,KAAK,OACLkE,SAAUA,EAAS,WACnBlO,MAAOzN,KAAK4L,MAAMnF,OAAOm0B,SAAW,GACpC6B,oBAAkB,EAClBjkB,SAAUojB,EAAa,cAG3B,gBAAC,EAAAU,SAAD,KACE,gBAAC,EAAAtpB,OAAD,CACE,UAAQ,UACRnC,YAAa7Q,KAAK4L,MAAMnF,OAAOm0B,QAC/B3nB,QAAS,WACPypB,GAAAA,OACE,IAAIC,KAAK,CAAC,EAAK/wB,MAAMnF,OAAOm0B,SAAU,CACpCnjB,KAAM,6BAERojB,EAAUD,QAAQn3B,KAErB,EACD0J,QAAQ,QACR,aAAY,0CAEZ,gBAAC,MAAD,UAMR,gBAAC,EAAA4N,UAAD,CACEC,QAAS,uBACTC,MAAO,+BACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QAAS,sDAGbgc,WACG/yB,KAAKq9B,aAAa52B,EAAOu0B,uBAC1Bv0B,EAAOu0B,qBAAuB,EAC1B,UACA,QAENlI,kBAAmB,yCAEnB,gBAAC,EAAAhK,UAAD,CACExpB,GAAG,uBACHmY,KAAK,SACLhK,MAAOhH,EAAOu0B,sBAAwB,GACtCjI,WACG/yB,KAAKq9B,aAAa52B,EAAOu0B,uBAC1Bv0B,EAAOu0B,qBAAuB,EAC1B,UACA,QAENxiB,SAAU,SAAC/K,GAAD,OACR,EAAKwtB,aAAaxtB,EAAO,uBADjB,KAMd,gBAAC,EAAAsN,UAAD,CACEC,QAAS,aACTC,MAAO,qBACPsZ,UACE,gBAAC3I,GAAD,CACE7U,QAAS,+DAGbgc,WACG/yB,KAAKq9B,aAAa52B,EAAO62B,aAC1BlH,OAAOmH,UAAU92B,EAAO62B,YACpB,UACA,QAENxK,kBAAmB,+BAEnB,gBAAC,EAAAhK,UAAD,CACExpB,GAAG,aACHmY,KAAK,SACLhK,MAAOhH,EAAO62B,YAAc,GAC5B9kB,SAAU,SAAC/K,GAAD,OAAW,EAAKwtB,aAAaxtB,EAAO,aAApC,OAKjBmlB,EAAa,UACZ,wBACE7hB,MAAO,CACLwK,MAAO,wCAGRqX,EAAa,WAEd,KAGT,GAzoBH,qBA2oBE,SAAgBuI,EAAgBJ,GAC9B,IAD0C,EAClCt0B,EAAWzG,KAAK4L,MAAhBnF,OADkC,KAGtB00B,GAHsB,IAG1C,IAAK,EAAL,qBAAoC,KAAzBp0B,EAAyB,QAClC,IAAKN,EAAOM,IAA4B,KAAlBN,EAAOM,GAC3B,OAAO,CAEV,CAPyC,+BAS1C,QAAI,CAAC,YAAa,YAAa,QAAQvE,SAASu4B,IAE1Ct0B,EAAOu0B,qBAAuB,IAKiB,UAAjDpH,EAAAA,EAAAA,IAAkB,KAAMntB,EAAOvE,KAAK6wB,SAKzC,GAhqBH,2BAkqBE,SAAsB7wB,GAAiD,WAClDpB,EAAAA,EAAAA,gBADkD,IACrE,IAAK,EAAL,qBAA6C,KAAlC08B,EAAkC,QAC3C,GAAIt7B,EAAIM,SAASg7B,GACf,MAAO,WAEV,CALoE,0CAOlD18B,EAAAA,EAAAA,kBAPkD,IAOrE,IAAK,EAAL,qBAA+C,KAApC08B,EAAoC,QAC7C,GAAIt7B,EAAIM,SAASg7B,GACf,MAAO,WAEV,CAXoE,+BAarE,MAAO,MACR,GAhrBH,yBAkrBE,SAAoBC,EAAmBhwB,GACrC,IADqD,EAE/CiwB,EAAkC,GAFa,KAC7B19B,KAAK4L,MAAMnF,OAAOI,mBADW,IAIrD,IAAK,EAAL,qBAAqC,KAA1BE,EAA0B,QAC/BA,EAAMtD,OAASg6B,IACjB12B,EAAM42B,OAASlwB,GAGjBiwB,EAAUvyB,KAAKpE,EAChB,CAVoD,+BAYrD,IAAMssB,EAAS,MAAKrzB,KAAK4L,MAAMnF,QAC/B4sB,EAAOxsB,kBAAoB62B,EAC3BrK,EAAOoK,GAAa,KAEpBz9B,KAAK4L,MAAMqvB,aAAa5H,EACzB,GAnsBH,0BAqsBE,SAAqB5lB,EAAO1G,GACJ,CAAC,uBAAwB,cAC7BvE,SAASuE,KACzB0G,EAAQ2oB,OAAOmH,UAAU9vB,GACrBA,EACA2oB,OAAOwH,MAAM/8B,SAAS4M,EAAO,KAC7B,KACA5M,SAAS4M,EAAO,KAGtB,IAAM4lB,EAAS,MAAKrzB,KAAK4L,MAAMnF,QAC/B4sB,EAAOtsB,GAAS0G,EAChBzN,KAAK4L,MAAMqvB,aAAa5H,EACzB,GAltBH,qBAotBE,SAAgBN,GACd,OAAIA,EACK,UAEA,OAEV,GA1tBH,0BA4tBE,SAAqBtlB,GACnB,OAAgB,MAATA,GAA2B,KAAVA,CACzB,KA9tBH,GAAgC4D,EAAAA,W,mhCAAnBmpB,GAAAA,cACUvhB,EAAAA,GCxChB,IAAM4kB,GAAb,6B,IAAA,G,EAAA,E,gaAIE,WAAYjyB,GAAO,4BACjB,cAAMA,IADW,sCAFC,CAAC7G,EAAAA,GAAAA,QAAoBA,EAAAA,GAAAA,UAEtB,CAElB,CANH,gDAQE,WAAoB,WAClB/E,KAAK89B,QAAUC,aAAY,WACzB,IAD+B,EAE3BC,GAAU,EAFiB,KACX,EAAKpyB,MAAjBqyB,SADuB,IAG/B,IAAK,EAAL,qBAA8B,oBACFxN,cADE,IAC5B,IAAK,EAAL,qBAAwC,KAA7B1tB,EAA6B,QACtC,GAAIA,EAAKm7B,gBACH,EAAKC,kBAAkB37B,SAASO,EAAKm7B,eAAehyB,OAAQ,CAC9D8xB,GAAU,EACV,KACD,CAEJ,CAR2B,+BAS7B,CAZ8B,+BAc3BA,GACF,EAAKpyB,MAAMwyB,gBAEd,GAAE,IACJ,GA3BH,kCA6BE,WACEC,cAAcr+B,KAAK89B,QACpB,GA/BH,oBAiCE,WACE,IAAQG,EAAYj+B,KAAK4L,MAAjBqyB,QACR,OAAOj+B,KAAK0wB,YAAYuN,EACzB,GApCH,yBAsCE,SAAoBA,GAAS,WAErBtN,EAAmB,CACvB7uB,QAAS,CACP,CACEsL,MAAO,sBACPqK,KAAM,OACNnY,GAAI,UAEN,CACE8N,MAAO,uBACPqK,KAAM,OACNnY,GAAI,cAEN,CACE8N,MAAO,uBACPqK,KAAM,OACNnY,GAAI,cAEN,CACE8N,MAAO,sBACPqK,KAAM,OACNnY,GAAI,8BAEN,CACE8N,MAAO,sBACPqK,KAAM,OACNnY,GAAI,wBAEN,CACE8N,MAAO,GACPqK,KAAM,OACNnY,GAAI,cAKV,OACE,yBACE,aAAY,8BACZwT,UAAU,kCAEV,gBAAC+d,GAAD,CACE7f,QAAS2f,EACTtwB,OA3CS,CAAEknB,KAAM,cA4CjB1U,aAAc,kBAAM,IAAN,IAEhB,6BAAQorB,EAAQv/B,KAAI,SAAC+H,EAAQsL,GAAT,OAAe,EAAKif,UAAUvqB,EAAQsL,EAAtC,KAGzB,GAxFH,uBA0FE,SAAkBtL,EAAQsL,GAAG,aACnBlG,EAAS7L,KAAK4L,MAAdC,KACFyyB,EAAU73B,EAAOgqB,aAAarf,OAChCpR,KAAKu+B,yBAAyB93B,GAC9B,CACE,gBAAC,EAAAqQ,QAAD,CACEC,QAAS,0DACTvI,IAAI,SAEJ,gBAAC,EAAAwE,OAAD,CAAQ7F,QAAQ,SACd,gBAAC,MAAD,SAIJgS,EAAgB,CACpB1Y,EAAOgqB,aAAarf,SAAUvF,SAA9B,UAA8BA,EAAMwT,yBAApC,aAA8B,EAAyBmf,gBACrD,gBAAC,EAAAhf,aAAD,CAAchR,IAAI,OAAOyE,QAAS,kBAAM,EAAKrH,MAAM6yB,WAAWh4B,EAA5B,GAC/B,iBAIP,OACE,sBAAI+H,IAAKuD,GACP,0BAAKtL,EAAOhD,MACZ,0BAAKgD,EAAOgqB,aAAa/xB,KAAI,SAACmrB,GAAD,OAAOA,EAAEpmB,IAAT,IAAeusB,KAAK,OAChDvpB,EAAOi4B,WACN,0BACE,gBAAC9kB,EAAD,CAAeC,KAAMpT,EAAOi4B,cAG9B,0BAAK,OAEP,2BAAKC,EAAAA,EAAAA,IAAWl4B,IAAW,OAC3B,2BAAKm4B,EAAAA,EAAAA,IAAen4B,IAAW,OAC/B,gBAACyvB,GAAD,CAAiBC,WAAYhX,EAAemf,QAASA,IAG1D,GA/HH,sCAiIE,SAAiC73B,GAAoB,aAC3CoF,EAAS7L,KAAK4L,MAAdC,KACR,GAAKA,SAAD,UAACA,EAAMwT,yBAAP,QAAC,EAAyBmf,cAC5B,OAAO,KAET,IALmD,EAK7CK,EAAe,CACnB,gBAAC,EAAA7rB,OAAD,CACExE,IAAI,SACJyE,QAAS,kBAAM,EAAKrH,MAAM6yB,WAAWh4B,EAA5B,EACT0G,QAAQ,aAEP,sBAIC2xB,EAAa,CACjB,gBAAC,EAAA9rB,OAAD,CACExE,IAAI,OACJqC,WACiC,IAA/BpK,EAAOgqB,aAAarf,QACnB3K,EAAOy3B,gBACN,CAAC,UAAW,WAAW17B,SAASiE,EAAOy3B,eAAehyB,OAE1D+G,QAAS,kBACP,EAAKrH,MAAMmzB,WACTt4B,EAAOgqB,aAAa,GAAGuO,cAAc,GAAG7N,UAFnC,EAKThkB,QAAQ,aAEP,iBAID4tB,EAAa,OAlCkC,KAoChCj6B,EAAAA,EAAAA,gBApCgC,IAoCnD,IAAK,EAAL,qBAA6C,KAAlC08B,EAAkC,QAC3C,GAAI/2B,EAAOvE,IAAIM,SAASg7B,GAAO,CAC7BzC,EAAa,YACb,KACD,CACF,CAzCkD,0CA2ChCj6B,EAAAA,EAAAA,kBA3CgC,IA2CnD,IAAK,EAAL,qBAA+C,KAApC08B,EAAoC,QAC7C,GAAI/2B,EAAOvE,IAAIM,SAASg7B,GAAO,CAC7BzC,EAAa,YACb,KACD,CACF,CAhDkD,+BAkDnD,MACiB,cAAfA,GACAt0B,EAAOvE,KACPuE,EAAOhD,MACPgD,EAAOg0B,mBAMQ,cAAfM,GACAt0B,EAAOvE,KACPuE,EAAOhD,MACPgD,EAAOK,UAKU,SAAfi0B,GAAyBt0B,EAAOvE,IAZ3B48B,EAgBFD,CACR,KA1MH,GAA2CxtB,EAAAA,W,ykBCYpC,IAAMgQ,GAAb,6B,IAAA,G,EAAA,E,gaAGE,WAAYzV,GAAO,6BACjB,cAAMA,IAEDM,MAAQ,CAAE+yB,gBAAgB,GAHd,CAIlB,CAPH,qCASE,WAAS,WACDC,EAAYp+B,EAAAA,EAAAA,gBAElB,OACE,gBAAC,EAAAu7B,KAAD,KACE,gBAAC,EAAAC,SAAD,KACE,gBAAC,EAAAnU,WAAD,KACE,gBAAC,EAAAgX,eAAD,CACEpuB,MAAO,CAAEmZ,YAAa,GACtB/c,QAAQ,QACR2F,UAAU,gCAET,gCAEH,gBAAC,EAAAvC,OAAD,CACEuC,UAAU,aACVjC,WAAY7Q,KAAK4L,MAAMiF,WACvBf,OAAQ9P,KAAKkM,MAAM+yB,eACnBxe,SAAS,EACTxQ,SAAU,SAACtD,GACT,IAAMnH,EAAe,EAAKoG,MAAMQ,aAC1BgzB,EAAU,EAAKC,YAAY1yB,EAAMiD,OAAOnM,MAI9C,GAFA,EAAKqI,SAAS,CAAEmzB,gBAAgB,IAE5BG,IAAY55B,EAAc,CAC5B,IAAMxC,GAAO0T,EAAAA,EAAAA,IAAW,EAAK9K,MAAM5I,KAAZ,GAAC,MACnB,EAAK4I,MAAMoW,YADO,IAErBjf,KAAM4J,EAAMiD,OAAOnM,QAErB,EAAKmV,QAAQjL,QAAQ3K,EACtB,CACF,EACDyN,SAAU,SAACsX,GACT,EAAKjc,SAAS,CAAEmzB,eAAgBlX,GACjC,EACD3X,WAAYpQ,KAAKq/B,YAAYr/B,KAAK4L,MAAMQ,cACxCe,QAAQ,UAEP1N,OAAOD,KAAK0/B,GAAWxgC,KAAI,SAACwS,GAAD,OAC1B,gBAAC,EAAAC,aAAD,CACE1N,KAAMyN,EACN1C,IAAK0C,EACLzD,MAAOkB,EAAAA,GAAAA,EAAOuwB,EAAUhuB,KAJA,OAYvC,GA5DH,yBA8DE,SAAoBouB,GAClB,IAAMv8B,EAAOjC,EAAAA,EAAAA,gBAA0Bw+B,GACvC,OAAO3wB,EAAAA,GAAAA,EAAO5L,EACf,KAjEH,GAAkCsO,EAAAA,W,ilBAArBgQ,GAAAA,cACUpI,EAAAA,GC8Ba5H,EAAAA,UCtBNA,EAAAA,UC/BEA,EAAAA,UCMzB,IAAMka,GAAoC,SAAC,GAM5C,IALJJ,EAKI,EALJA,oBACAK,EAII,EAJJA,oBACA+T,EAGI,EAHJA,eACA7T,EAEI,EAFJA,WACAC,EACI,EADJA,UASM6T,EAAc,SAACnvB,GAAD,OAPAkqB,EAOsBlqB,EAAMovB,mBAN9CjU,EACGlpB,QAAO,SAAC6N,GAAD,OACNoqB,EAAqB/b,MAAK,SAACkhB,GAAD,OAAUvvB,IAAauvB,CAAvB,GADpB,IAGPhhC,KAAI,SAAC+O,GAAD,wBAAWkyB,EAAAA,EAAAA,IAAalyB,EAAO0d,UAA/B,QAAuD1d,CAAvD,IALU,IAAC8sB,CAOA,EAEdqF,EAAoBpU,EAAoBlpB,QAC5C,SAACo9B,GAAD,OAAWjgC,OAAOD,KAAK2rB,GAAqB3oB,SAASk9B,EAArD,IAGIG,EAAa/+B,EAAAA,EAAAA,YAAAA,KAA0B,SAACuP,GAAD,UAAC,MACzCA,GADwC,IAE3C4K,MAAOtM,EAAAA,GAAAA,EAAO0B,EAAM4K,QAFuB,IAIvC6kB,EAAYpU,EAAU,kBAEnBmU,GAFmB,CAGtB,CACEp8B,KAAM,SACNwX,MAAO,6BACPwkB,mBAAoBG,KAGxBC,EACE9L,EAASpI,EACXmU,EACAA,EAAUx9B,QAAO,SAAC+N,GAAD,OAAWmvB,EAAYnvB,GAAOe,MAA9B,IAErB,OACE,gCACG2iB,EAAOr1B,KAAI,SAAC2R,GAAD,OACV,gBAAC,EAAAgsB,KAAD,CACEtrB,MAAO,CAAEmU,UAAW,QACpByM,WAAY,CAAE6K,QAAS,oBACvBhuB,IAAK6B,EAAM5M,KACXqP,UAAWzC,EAAM5M,MAEjB,gBAAC,EAAA64B,SAAD,CAAUvrB,MAAO,CAAEgvB,SAAU,UAAY1vB,EAAM4K,OAC/C,gBAAC,EAAAqhB,SAAD,CAAUC,KAAM,CAAEC,QAAS,SACzB,gBAAC5C,IAAD,QACEQ,YAAamF,EACb/uB,aAAa,SACbspB,cAAc,EACdtO,oBAAqBgU,EAAYnvB,GAAO/N,OAAOqd,UAC1C4f,EACD,CACEhF,qBAAsBlqB,EAAMovB,mBACzBn9B,QACC,SAACo9B,GAAD,OACGlU,EAAoBhN,MACnB,SAACrO,GAAD,OAAcA,IAAauvB,CAA3B,GAFJ,IAKDhhC,KAAI,SAAC+O,GAAD,OAAWkyB,EAAAA,EAAAA,IAAalyB,EAAO0d,EAA/B,IACJ5D,OACHsS,YAAa0F,EACb9vB,QAAS,WACP,IAAMuwB,EAAqB3vB,EAAMovB,mBACjCF,EACE/T,EAAoBlpB,QAClB,SAACua,GAAD,OAAQmjB,EAAmBx9B,SAASqa,EAApC,IAGL,EACD5M,SAAU,SAACtD,EAAOoD,GAChB,IAAMkwB,EAAiB,IAAIjG,IAAIxO,GAE7ByU,EAAehG,KACb0F,EAAAA,EAAAA,IAAa5vB,EAAWob,IAG1B8U,EAAc,QACZN,EAAAA,EAAAA,IAAa5vB,EAAWob,IAG1B8U,EAAe/F,KACbyF,EAAAA,EAAAA,IAAa5vB,EAAWob,IAG5BoU,EAAe9wB,MAAM0rB,KAAK8F,GAC3B,GAEH,CAAC,KApDD,IA2DjB,E,+NC7GD,IAmBaC,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACC18B,EAAcxD,KAAK4L,MAAnBpI,UAER,OACE,gBAAC0uB,GAAD,CACE1W,KAAMhY,EAAU28B,UAChBznB,YA1BY,oQA2BZ0Z,WAAY,oGACZD,WAAY,SAAC1kB,GAAD,OAAW,EAAK2yB,gBAAgB3yB,EAAhC,EACZ4kB,SAAS,GAGd,GAbH,6BAeE,SAAwBjxB,GACtB,IAAMiyB,E,uWAAS,IAAKrzB,KAAK4L,MAAMpI,WAC/B6vB,EAAO8M,UAAY/+B,EACnBpB,KAAK4L,MAAM0nB,gBAAgBD,EAC5B,KAnBH,GAAmChiB,EAAAA,WCmCGA,EAAAA,UClD/B,IAAMgvB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA+BrgC,KAAK4L,MAA5BnE,EAAR,EAAQA,OAAQ64B,EAAhB,EAAgBA,KAAMC,EAAtB,OAEA,OACE,gBAAC,EAAAzpB,QAAD,CAASC,QAAStP,GAChB,gBAAC,EAAA6T,MAAD,CAAOC,MAAO+kB,EAAO,OAAS,QAC3BC,EAAO94B,GAAS+4B,EAAAA,EAAAA,IAAY/4B,IAIpC,KAXH,GAA8B4J,EAAAA,W,ICHCA,EAAAA,UAAxB,I,gDCOA,IAwBMiW,GAAb,6B,IAAA,G,EAAA,E,gaAME,WAAY1b,GAAO,6BACjB,cAAMA,IAEDM,MAAQ,CACX6b,YAAY,GAJG,CAMlB,CAZH,uCAcE,SAAiBA,GACf/nB,KAAK8L,SAAS,CACZic,WAAAA,GAEH,GAlBH,sBAoBE,SAAiBtkB,GAAM,WACjBg9B,EAAezgC,KAAK0gC,gBAAgB1gC,KAAK4L,MAAMvL,QAE7C6Q,EAASlR,KAAK4L,MAAMoF,QAAQwN,MAAK,SAACzM,GAAD,OAAOA,EAAE3E,QAAU3J,CAAnB,IAInB,UAAhByN,EAAOuG,OACTgpB,GAAgBA,GAElB,IAAME,EAAOF,EAAe,IAAM,GAElCzgC,KAAK8L,SAAS,CAAEic,YAAY,IAAS,kBACnC,EAAKnc,MAAMiH,aACTvS,EAAAA,EAAAA,SACE,EAAKsL,MAAMvL,OACX,EAAKuL,MAAMg1B,cACXD,EAAOzvB,EAAO5R,IALiB,GAStC,GAzCH,2BA2CE,WACE,IAAMyH,EAAQ/G,KAAKw/B,YAAYx/B,KAAK4L,MAAMvL,QACpCwgC,GAAc7gC,KAAK0gC,gBAAgB1gC,KAAK4L,MAAMvL,QAEpDL,KAAK4L,MAAMiH,aACTvS,EAAAA,EAAAA,SACEN,KAAK4L,MAAMvL,OACXL,KAAK4L,MAAMg1B,eACVC,EAAa,IAAM,IAAM95B,EAAMzH,IAGrC,GAtDH,6BAwDE,SAAwBe,GACtB,IAAMknB,EAAOlnB,EAAOL,KAAK4L,MAAMg1B,eAI/B,OAAKrZ,GAGEA,EAAK8M,WAAW,IACxB,GAjEH,yBAmEE,SAAoBh0B,GAClB,IAAIknB,EAAOlnB,EAAOL,KAAK4L,MAAMg1B,eACvBE,EAAM9gC,KAAK4L,MAAMoF,QAAQ,GAE/B,OAAKuW,GAIDA,EAAK8M,WAAW,OAClB9M,EAAOA,EAAKwZ,UAAU,EAAGxZ,EAAKnW,SAGjBpR,KAAK4L,MAAMoF,QAAQwN,MAAK,SAAC3B,GAAD,OAAOA,EAAEvd,KAAOioB,CAAhB,KAEduZ,GAThBA,CAUV,GAlFH,oBAoFE,WAAS,IAMHE,EACAC,EAPG,OACP,EAA4BjhC,KAAK4L,MAAzBoF,EAAR,EAAQA,QAAS3Q,EAAjB,EAAiBA,OACT0nB,EAAe/nB,KAAKkM,MAApB6b,WAEFmZ,EAAiBlhC,KAAKw/B,YAAYn/B,GAaxC,MAR4B,UAAxB6gC,EAAezpB,MACjBwpB,EAAUE,GAAAA,GACVH,EAAWI,GAAAA,KAEXJ,EAAWK,GAAAA,GACXJ,EAAUK,GAAAA,IAIV,uBAAKxuB,UAAU,oBACZ9B,EAAQI,OAAS,EAChB,gBAAC,EAAAb,OAAD,CACEpD,QAASmD,EAAAA,cAAAA,OACT,aAAY,uBACZG,SAAU,SAACvR,GAAD,OAAO,EAAKuR,SAASvR,EAArB,EACV+Q,SAAU,SAACme,EAAG3qB,GAAJ,OAAa,EAAKwM,SAASxM,EAA3B,EACV2M,WAAY8wB,EAAe9zB,MAC3B0C,OAAQiY,GAEP/W,EAAQtS,KAAI,SAACwS,GAAD,OACX,gBAAC,EAAAC,aAAD,CAAc3C,IAAK0C,EAAO5R,GAAImO,MAAOyD,EAAO9D,OADjC,KAIb,KAEHpN,KAAK0gC,gBAAgBrgC,GACpB,gBAAC2gC,EAAD,CACEluB,UAAU,uBACVyB,KAAK,KACLtB,QAAS,kBAAM,EAAKsuB,eAAX,IAGX,gBAACN,EAAD,CACEnuB,UAAU,uBACVyB,KAAK,KACLtB,QAAS,kBAAM,EAAKsuB,eAAX,IAKlB,KArIH,GAA0BlwB,EAAAA,Y,OAAbiW,GAAAA,eAEW,CACpBsZ,cAAe,S,uCClBZ,IAAM/P,GAAb,6B,IAAA,G,EAAA,E,gaAAA,8FACE,SAAavxB,EAAIkiC,GAGfA,GAAWA,EACXxhC,KAAK4L,MAAMiH,aACTvS,EAAAA,GAAAA,SACEN,KAAK4L,MAAMvL,OACX,QACCmhC,EAAU,IAAM,IAAMliC,GAG5B,GAZH,qBAaE,SAAgBmY,EAAMnY,GAAI,WACxB,GAAY,QAARmY,EAAJ,CAGA,IAAIgqB,EACEC,IACF1hC,KAAK4L,MAAMvL,OAAX,MACFf,GAAMU,KAAK4L,MAAMvL,OAAX,KAA0B0M,QAAQ,IAAK,IAC3Cy0B,GAAU,EACd,GAAIE,EAAY,CAEd,IAAIC,EADJH,EAAUxhC,KAAK4L,MAAMvL,OAAX,KAA0BmC,SAAS,KAEjC,SAARiV,IACFkqB,GAAMA,GAERF,EAAOE,EAAKC,GAAAA,GAAuBC,GAAAA,EACpC,MACCJ,EAAOK,GAAAA,GAGT,OACE,gBAACL,EAAD,CACE,UAAS,QAAUniC,EACnBiV,KAAK,KACLtB,QAAS,kBAAM,EAAKsU,KAAKjoB,EAAIkiC,EAApB,EACT1uB,UAAW,cAAgB4uB,EAAa,SAAW,aAtBtD,CAyBF,GAzCH,2BA2CE,SAAsBn/B,GACpB,OACE,sBAAIiM,IAAKjM,EAAKjD,GAAIwT,UAAWvQ,aAAF,EAAEA,EAAMuQ,WAChCvQ,EAAK6K,MADR,IACgBpN,KAAK+hC,QAAQx/B,EAAKkV,KAAMlV,EAAKjD,IAGhD,GAjDH,oBAmDE,WAAS,WACP,OACE,6BACE,sBAAIwT,UAAU,wBAAwB,UAAQ,qBAC3C9S,KAAK4L,MAAMoF,QAAX,QAA8BtS,KAAI,SAACsjC,GAAD,OACjC,EAAKC,cAAcD,EADc,KAM1C,KA7DH,GAA+B3wB,EAAAA,WCcxB,IAAMmQ,GAAb,6B,IAAA,G,EAAA,E,gaAME,WAAY5V,GAAO,6BACjB,cAAMA,IACDM,MAAQ,CACX4D,QAAQ,EACRK,cAAUtL,GAJK,CAMlB,CAZH,qCAcE,WAAS,WACCiL,EAAW9P,KAAKkM,MAAhB4D,OACR,EACE9P,KAAK4L,MADC6V,EAAR,EAAQA,MAAO2G,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,YAAa7W,EAAxC,EAAwCA,SAAUiP,EAAlD,EAAkDA,QAASyhB,EAA3D,EAA2DA,UAG3D,OACE,gBAAC,EAAAC,SAAD,CACElyB,SAAU,SAAC/Q,GAAD,OAAO,EAAK+Q,SAAS/Q,EAArB,EACVkjC,OAAQpiC,KAAKqiC,aAAaja,EAAYC,GACtCvY,OAAQA,EACR2Q,QAASA,EACTtB,cAAesC,EACfjQ,SAAUA,GAAY8wB,EAAAA,iBAAAA,MACtBC,WAAW,EACX,aAAYL,GAGjB,GA/BH,0BAiCE,SAAqB9Z,EAAYC,GAAa,WAC5C,OAAQD,GACN,IAAK,WACH,OACE,gBAAC,EAAAoa,eAAD,CAAgB/xB,SAAU,SAACvR,GAAD,OAAO,EAAKuR,SAASvR,EAArB,GACvBc,KAAKkM,MAAMiE,SACRnQ,KAAKkM,MAAMiE,SACXkY,GAAe,oBAGzB,IAAK,OACH,OACE,gBAAC,EAAAma,eAAD,CACEC,gBAAiB,KACjBhyB,SAAU,SAACvR,GAAD,OAAO,EAAKuR,SAASvR,EAArB,GAETc,KAAKkM,MAAMiE,SACRnQ,KAAKkM,MAAMiE,SACXkY,GAAe,oBAGzB,IAAK,QACH,OAAO,gBAAC,EAAAqa,YAAD,CAAajyB,SAAU,SAACvR,GAAD,OAAO,EAAKuR,SAASvR,EAArB,IAEnC,GAzDH,sBA2DE,SAAiB4Q,GACf9P,KAAK8L,SAAS,CACZgE,OAAAA,GAEH,GA/DH,sBAiEE,SAAiBnD,GAAO,WACtB3M,KAAK8L,SACH,CACEgE,QAAS9P,KAAKkM,MAAM4D,OACpBK,SAAUxD,EAAMib,cAAcna,QAEhC,WACM,EAAK7B,MAAMqE,UACb,EAAKrE,MAAMqE,SAAStD,EAEvB,GAEJ,KA7EH,GAAsC0E,EAAAA,Y,OAAzBmQ,GAAAA,eACW,CACpBf,SAAS,EACT2H,WAAY,U,wCCdT,IAAM+E,GAAb,6B,IAAA,G,EAAA,E,gaAAA,2LAK4D,CACxDwV,QAAS,UACTC,UAAW,WAPf,uCAUE,WACE,IAAIC,EACJ,EAAyB7iC,KAAK4L,MAAtBsI,EAAR,EAAQA,OAAQuD,EAAhB,EAAgBA,KAEhB,OAAQvD,GACN,KAAKnP,EAAAA,GAAAA,QACH89B,EAAa,CACXtnB,MAAO,OACPC,KAAM,kBACNzC,KAAM,gBAAC,MAAD,OAER,MAGF,KAAKhU,EAAAA,GAAAA,QACL,KAAKA,EAAAA,GAAAA,SACH89B,EAAa,CACXtnB,MAAO,SACPC,KAAM,mBACNzC,KAAM,gBAAC,MAAD,OAER,MAEF,KAAKhU,EAAAA,GAAAA,QACH89B,EAAa,CAAEtnB,MAAO,OAAQC,KAAM,kBAAYzC,KAAM,gBAAC,MAAD,OACtD,MAEF,KAAKhU,EAAAA,GAAAA,UACH89B,EAAa,CACXtnB,MAAO,QACPC,KAAM,oBACNzC,KAAM,gBAAC,KAAD,OAER,MAEF,KAAKhU,EAAAA,GAAAA,OACH89B,EAAa,CACXtnB,MAAO,MACPC,KAAM,iBACNzC,KAAM,gBAAC,MAAD,OAER,MACF,QACE,MAAO,MAGX,OACE,gBAAC,EAAAuC,MAAD,CACEnO,QAASnN,KAAK8iC,iBAAiBrrB,GAC/B8D,MAAOsnB,EAAWtnB,MAClBxC,KAAM8pB,EAAW9pB,KACjBjG,UAAW9S,KAAK4L,MAAMkH,WAErB+vB,EAAWrnB,KAGjB,KAlEH,GAAqCnK,EAAAA,Y,OAAxB8b,GAAAA,eACW,CACpB1V,KAAM,Y,mnDCyBGsrB,GAAb,6B,IAAA,G,EAAA,E,gaAKE,WAAYn3B,GAAO,6BACjB,cAAMA,IAEDM,MAAQ,CACX82B,oBAAqB,IAJN,CAMlB,CAXH,qCAaE,WAAS,WACP,EAAuDhjC,KAAK4L,MAApDkH,EAAR,EAAQA,UAAWvO,EAAnB,EAAmBA,UAAWsO,EAA9B,EAA8BA,aAAcxS,EAA5C,EAA4CA,OAUvCL,KAAKijC,YAAcjjC,KAAKkjC,gBAAkB3+B,IAC7CvE,KAAKijC,WAAajjC,KAAKmjC,WAAW5+B,GAClCvE,KAAKkjC,cAAgB3+B,GAGvB,IAAM6+B,EAAQpjC,KAAKijC,WAEnB,OACE,uBAAKnwB,UAAWA,GACd,gBAAC,EAAAsF,QAAD,KACE,gBAAC,EAAAC,aAAD,KACE,gBAAC,EAAAC,YAAD,KACE,gBAAC,EAAAC,YAAD,CACEwL,IAAK/jB,KAAK4L,MAAMy3B,aAChB51B,MAAOpN,EAAO2X,SACdQ,SAAU,SAACC,GACT5F,EAAavS,EAAAA,GAAAA,SAAqBD,EAAQ,WAAYoY,GACvD,EACDhJ,QAAS,kBACPoD,EAAavS,EAAAA,GAAAA,SAAqBD,EAAQ,WAAY,IAD/C,EAGT,aAAY,uBACZqY,YAAa,4BAKrB,gBAAC,EAAA4qB,IAAD,CAAKC,MAAM,SACT,gBAAC,EAAAC,QAAD,KACG/jC,OAAOD,KAAK4jC,GAAO1kC,KAAI,SAAC8P,GAAD,OACA,IAAtB40B,EAAM50B,GAAK4C,OACP,KACA,EAAKqyB,YACHL,EAAM50B,GACNA,EACA,EAAK5C,MAAMvL,OAAO2X,UAAY,GANd,MAajC,GAlEH,wBAoEE,SAAmBzT,GACjB,MAAkCvE,KAAK4L,MAEjC83B,EAAgB,CACpBlgC,UAHF,EAAQA,UAINF,WAJF,EAAmBA,WAKjBP,KAAM/C,KAAK4Y,QAAQxM,cAGfg3B,EAAQ,CACZO,cAAe,GACfC,QAAS,GACTvN,MAAO,GACPwN,QAAS,GACTC,UAAW,IAUb,GAPAV,EAAMO,cAAcx4B,KAAK,CACvByG,QAAS,iBACT1P,KAAKwU,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,0BAAiC04B,GACjDjsB,KAAM,OACNhU,KAAM,WAGJc,EAAUw/B,oBAAqB,YACdx/B,EAAUw/B,qBADI,IACjC,IAAK,EAAL,qBAAkD,KAAvC9/B,EAAuC,QAC1C/B,GAAM8hC,EAAAA,EAAAA,IAAiB//B,EAAKR,MAClC2/B,EAAMO,cAAcx4B,KAAK,CACvByG,QAAS5R,KAAKikC,WACZhgC,EAAKR,KAAK4J,MAAM,KAAK,GAAGA,MAAM,KAAK2iB,KAAK,MAE1C9tB,KAAKwU,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,yBAAD,GAAC,MACX04B,GADU,IAEb3iC,KAAMmB,KAGRuV,KAAM,OACNhU,KAAMvB,GAET,CAfgC,+BAgBlC,CAED,GAAIqC,EAAUlC,SAAU,YACAkC,EAAUlC,UADV,IACtB,IAAK,EAAL,qBAA0C,KAA/B0U,EAA+B,QACxC,OAAQA,EAAQtU,cACd,IAAK,OACH2gC,EAAM/M,MAAMlrB,KAAKnL,KAAKkkC,gBAAgBntB,EAAS2sB,IAC/C,MACF,IAAK,SACHN,EAAMQ,QAAQz4B,KAAKnL,KAAKkkC,gBAAgBntB,EAAS2sB,IACjD,MACF,IAAK,WACHN,EAAMU,UAAU34B,KAAKnL,KAAKkkC,gBAAgBntB,EAAS2sB,IACnD,MACF,QACEN,EAAMS,QAAQ14B,KAAKnL,KAAKkkC,gBAAgBntB,EAAS2sB,IAGtD,CAhBqB,+BAiBvB,CAGD,IAAK,IAAL,MAAgBjkC,OAAOD,KAAK4jC,GAA5B,eACEA,EADU,MACD7b,MAAK,SAAC4c,EAAGC,GAGhB,OAAID,EAAEvyB,QAAQyiB,WAAW,OAAS+P,EAAExyB,QAAQyiB,WAAW,KAC9C,GAEJ8P,EAAEvyB,QAAQyiB,WAAW,MAAQ+P,EAAExyB,QAAQyiB,WAAW,MAC7C,EAEH8P,EAAEvyB,QAAUwyB,EAAExyB,QAAU,GAAK,CACrC,IAGH,OAAOwxB,CACR,GAjJH,yBAmJE,SAAoB1uB,EAAoBtH,EAAOi3B,GAAsB,WAC7Dtc,GAAc/nB,KAAKkM,MAAM82B,oBAAoBxgC,SAAS4K,GACtDk3B,EAAgB5vB,EAAMpS,QAAO,SAACqS,GAAD,OACjCA,EAAK/C,QAAQ8W,cAAclmB,SAAS6hC,EAAa3b,cADhB,IAGnC,OACE,gBAAC,EAAA6b,cAAD,CACE/1B,IAAKpB,EACLA,MAAO,eAAcA,EAAd,aAAwBk3B,EAAclzB,OAAtC,MACP2W,WAAYA,EACZhT,SAAU/U,KAAKwkC,wBAA0Bp3B,GAExCk3B,EAAc5lC,KAAI,SAACiW,EAAiBE,GAAlB,OACjB,gBAAC,EAAA4vB,QAAD,CAASj2B,IAAKqG,EAAOE,SAAU,EAAK2vB,WAAW/vB,IAC7C,gBAAC,EAAAK,KAAD,CACEjE,MAAO,CACL4zB,aAAc,WACdC,SAAU,SACVC,WAAY,UAEdz5B,GACEuJ,EAAKzS,KACqC,GAAzCzC,OAAOD,KAAK,EAAKoM,MAAMvL,QAAQ+Q,OAC5B,IAAM9Q,EAAAA,GAAAA,eAA2B,EAAKsL,MAAMvL,QAC5C,KAGN,wBACE0Q,MAAO,CACL4zB,aAAc,WACdC,SAAU,SACVC,WAAY,SACZjzB,QAAS,UAGV+C,EAAK/C,UAvBK,IA8BxB,GA7LH,wBA+LE,SAAmBkzB,GAEjB,OAAK9kC,KAAK4L,MAAMm5B,cAA+B,WAAfD,EAAMrhC,MAOpCzD,KAAK4L,MAAMm5B,eAAiBD,EAAMrhC,MAClCzD,KAAK4L,MAAMo5B,eAAiBF,EAAMrtB,IAErC,GA3MH,iCA6ME,WACE,IAAQutB,EAAiBhlC,KAAK4L,MAAtBo5B,aACR,OAAKA,GAAiC,SAAjBA,EAIA,SAAjBA,EACK,QAGY,WAAjBA,EACK,UAGF,UAXE,eAYV,GA5NH,wBA8NE,SAAmBC,GACjB,OAAOA,EAAEztB,MAAM,EAAG,GAAG0tB,cAAgBD,EAAEztB,MAAM,EAC9C,GAhOH,6BAkOE,SAAwBT,EAASouB,GAC/B,MAAO,CACLvzB,QAASmF,EAAQquB,aACjBljC,KAAKwU,EAAAA,EAAAA,IAAW1L,EAAAA,GAAAA,4BAAD,GAAC,MACXm6B,GADU,IAEb1tB,KAAMV,EAAQtU,aACdgB,KAAMsT,EAAQquB,gBAEhB3hC,KAAMsT,EAAQquB,aACd3tB,KAAMV,EAAQtU,aAEjB,KA7OH,GAAqC4O,EAAAA,Y,OAAxB0xB,GAAAA,cAGU9pB,EAAAA,GClDhB,IAoBM0gB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MACE35B,KAAK4L,MADCuW,EAAR,EAAQA,KAAM9hB,EAAd,EAAcA,OAAQwS,EAAtB,EAAsBA,aAAchC,EAApC,EAAoCA,WAAYw0B,EAAhD,EAAgDA,cAEhD,OACE,gBAAC,OAAD,CACEC,UAAWtlC,KAAKulC,eAChBt1B,SAAU,SAACme,EAAG5f,GAAJ,OACPqC,GACDgC,EACEvS,EAAAA,EAAAA,SAAqBD,EAAQ,MAAO8hB,EAAK3T,GAAKlP,GAAGopB,eAH3C,GAOTvG,EAAKzjB,KAAI,SAACwxB,EAAKne,GAAN,OACR,gBAAC,EAAAyzB,IAAD,CACEh3B,IAAKuD,EACL0zB,SAAU1zB,EACV3E,MACE,gBAAC,EAAAs4B,aAAD,CAAct4B,MAAOyD,EAAaw0B,EAAgB,MAC/CnV,EAAIzsB,MAGTqP,UAAWjC,EAAa,WAAa,MAT/B,IAcf,GA5BH,0BA8BE,WACE,MAAyB7Q,KAAK4L,MAAtBvL,EAAR,EAAQA,OAAQ8hB,EAAhB,EAAgBA,KAChB,GAAI9hB,EAAO6vB,IAAK,CACd,IAAMne,EAAIoQ,EAAKwjB,WACb,SAAC9oB,GAAD,OAAOA,EAAEvd,GAAGopB,gBAAkBroB,EAAO6vB,IAAIxH,aAAzC,IAIF,OAAW,IAAP3W,EACK,EAEAA,CAEV,CACC,OAAO,CAEV,KA9CH,GAA0BV,EAAAA,WChBnB,IAAMkS,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC,EAAAjI,MAAD,CAAOxI,UAAU,kBAAkB8yB,UAAQ,EAAC,UAAQ,OACjD5lC,KAAK4L,MAAMkI,SAGjB,KAPH,GAAyBzC,EAAAA,WCFKA,EAAAA,UCAvB,IAAMyF,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA8B9W,KAAK4L,MAA3BmL,EAAR,EAAQA,QAASjD,EAAjB,EAAiBA,SACjB,OACE,gBAAC,UAAD,CAAWiD,QAASA,GAClB,4BAAOjD,GAGZ,KARH,GAA6BzC,EAAAA,W,wBCLhBw0B,GAAc,SAAC,GAAD,IAAGrqB,EAAH,EAAGA,KAAS5P,GAAZ,oBACzB,mCAASA,EAAT,CAAgBuY,wBAAyB,CAAEC,OAAQ,WAAF,OAAU5I,EAAV,cADxB,EAI3BqqB,GAAYx6B,UAAY,CAAEmQ,K,OAAMjQ,GAAAA,QAEzB,IAAMu6B,GAAY,kBACvB,kBAACD,GAAD,CACE/yB,UAAU,iBACV0I,KAAI,yBAAoBuqB,6CAHH,ECoBlB,IAAMC,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,WACP,EASIhmC,KAAK4L,MARPgnB,EADF,EACEA,cACAqT,EAFF,EAEEA,WACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,WACAC,EANF,EAMEA,MACAlL,EAPF,EAOEA,eACAlI,EARF,EAQEA,YAGIqT,EAASL,EAAWvnC,KAAI,SAACqI,GAC7B,IAAKA,EACH,OAAO,KAGT,IAAMgsB,EAAYhsB,EAAMzH,MAAMszB,EAAgB,QAAU,UAExD,OACE,gBAAC,EAAA7X,UAAD,CACEC,QAASjU,EAAMzH,GACfwzB,kBAAmBF,EAAc7rB,EAAMzH,IACvCuzB,YAAauT,GAAcjL,EAAe34B,SAASuE,EAAMzH,IACzDkP,IAAKzH,EAAMzH,GACX2b,MAAOlU,EAAMqG,MACbmnB,WAAY6R,GAAcr/B,EAAMw/B,mBAChCxT,UAAWqT,EAAa,UAAYrT,EACpC,mCAA2BhsB,EAAMzH,KAEhC8mC,EACCC,EAAMt/B,EAAMzH,IAEZ,gBAAC,EAAAwpB,UAAD,CACExpB,GAAIyH,EAAMzH,GACVkZ,SAAUya,EACVva,YAAa3R,EAAM2R,YACnBjB,KAAM1Q,EAAM0Q,MAAQ,OACpBsb,UAAWA,EACXtlB,MAAO44B,EAAMt/B,EAAMzH,MAK5B,IAED,OACE,gBAAC,EAAAwb,KAAD,CACEb,SAAU,SAAC/a,GACTA,EAAEsnC,iBACF,EAAK56B,MAAMysB,QACZ,GAEA6N,EACAI,EACAH,EAGN,KA3DH,GAA8B90B,EAAAA,W,ykBCsBvB,IAAMo1B,GAAb,6B,IAAA,G,EAAA,E,gaAME,WAAY76B,GAAO,4BACjB,cAAMA,IADW,iCA8MG,WACpB,IAAM86B,EAAU,MAAK,EAAK96B,MAAMC,MAChC66B,EAAQ3S,OAAS,GACjB,EAAKnoB,MAAM+6B,WAAWD,EAAS,EAAK96B,MAAMgnB,cAC3C,KAlNkB,mCAoNK,SAACjmB,EAAOoD,GAC9B,IAAQlE,EAAS,EAAKD,MAAdC,KAEF66B,EAAU,MAAK76B,GAEfkG,EAAIlG,EAAKkoB,OAAO4R,WAAU,SAAC9M,GAAD,OAAOA,EAAEp1B,OAASsM,CAAlB,IAChC,IAAW,IAAPgC,EAAU,CACZ,IAAM60B,EAAa,EAAK16B,MAAM26B,aAAaroB,MACzC,SAACqa,GAAD,OAAOA,EAAEp1B,OAASsM,CAAlB,IAEFlE,EAAKkoB,OAAO5oB,KAAKy7B,EAClB,MACC/6B,EAAKkoB,OAAOthB,OAAOV,EAAG,GAGxB,EAAKnG,MAAM+6B,WAAWD,EAAS,EAAK96B,MAAMgnB,cAC3C,KApOkB,gCAsOE,SAACnvB,GACpBsC,EAAAA,GAAAA,KAAc,CAAE+gC,eAAgBrjC,EAAM2Y,UAAW,IAC9Cnd,MAAK,SAACkE,GAAD,OAAY,EAAK2I,SAAS,CAAE+6B,aAAc1jC,EAAO/B,KAAKA,MAAtD,IADR,OAES,SAAClC,GACN,MAA+BA,EAAE+D,SAAzBiR,EAAR,EAAQA,OAAQuF,EAAhB,EAAgBA,WAChB,EAAK3N,SAAS,CACZi7B,WAAY,SACP,EAAK76B,MAAM66B,YADN,IAERhT,OAAQ,CACN5mB,QAAS,SACTC,MAAO,8CACPgF,aAAauH,EAAAA,EAAAA,IAAazF,EAAQuF,OAIzC,GACJ,KAtPkB,iCA6RG,SAAChM,EAAOd,GAC5B,EAAKq6B,sBAAsBv5B,EAAOd,EAAMiD,OAAOtQ,GAChD,IA5RC,EAAK4M,MAAQ,CACX+6B,gBAAiB,GACjBJ,aAAc,GACdE,WAAY,CACVhT,OAAQ,OAPK,CAUlB,CAhBH,gDAkBE,WACE/zB,KAAKknC,WAAW,GACjB,GApBH,oBAsBE,WAAS,WACP,EAQIlnC,KAAK4L,MAPPC,EADF,EACEA,KACA+mB,EAFF,EAEEA,cACAwT,EAHF,EAGEA,WACAe,EAJF,EAIEA,SACAjtB,EALF,EAKEA,SACAktB,EANF,EAMEA,UACAC,EAPF,EAOEA,KAEF,EAAwCrnC,KAAKkM,MAArC+6B,EAAR,EAAQA,gBAAiBF,EAAzB,EAAyBA,WACnBO,EAAYtnC,KAAK4Y,QAAQvM,SAASk7B,gCAAkC,EAEpEtB,EAAa,CACjB,CAAE3mC,GAAI,WAAY8N,MAAO,oBACzB,CAAE9N,GAAI,aAAc8N,MAAO,sBAC3B,CAAE9N,GAAI,YAAa8N,MAAO,qBAC1B,CAAE9N,GAAI,QAAS8N,MAAO,kBACrBg5B,GAAc,CACb9mC,GAAI,WACJ8N,MAAO,mBACPqK,KAAM+vB,EAAAA,eAAAA,SACN9uB,YAAa0uB,EAAY,GAAK,yBAC9Bb,mBACE,gBAAC3a,GAAD,CACE7U,QAAS,gKAAqCuwB,QAKhDnM,EAAiB,CAAC,YAAJ,eAAoBiM,EAAY,CAAC,YAAc,KAiF7DK,EACJ,gBAAC,EAAA1sB,UAAD,CACEgY,UAAW/yB,KAAKgzB,UAAU,iBAAkBJ,IAC5C5X,QAAQ,eACRxM,IAAI,iBACJyM,MAAO,oBACP6X,kBAAmBF,EAAa,aAChCR,WAAYpyB,KAAK0nC,uBAAuB77B,IAExC,gBAAC,EAAAiL,QAAD,CACEC,QAAS,0FAET,gBAAC,EAAAjM,OAAD,CACE+F,YACG7Q,KAAK4Y,QAAQ/M,KAAKwd,cACnB+c,GACApmC,KAAK4Y,QAAQ/M,KAAKvM,KAAOuM,EAAKvM,GAEhC2b,MAAO,qBACP0sB,SAAU,2BACV5L,UAAWlwB,EAAKwd,aAChB7Q,SAAU,kBACR,EAAKwuB,uBAAuBn7B,EAAKwd,aAAc,eADvC,MAyBZ8c,EAAa,EAChBC,GA7HD,gBAAC,EAAArrB,UAAD,CACEC,QAAQ,mBACR8X,kBAAmB,iCACnBD,WAAYuU,KAAev7B,EAAKxG,SAChCmJ,IAAI,gBACJyM,MAAO,gCACP8X,UAAW,EAAKC,QACd,EAAK4U,WAAW/7B,EAAKxG,SAAU4hC,KAGjC,gBAAC,EAAAne,UAAD,CACEpQ,YAAa0uB,EAAY,GAAK,yBAC9BrU,UAAW,EAAKC,QACd,EAAK4U,WAAW/7B,EAAKxG,SAAU4hC,IAEjCp2B,WAAYu1B,EACZ9mC,GAAG,mBACHmO,MAAOw5B,EACPzuB,SAAU,SAAC/K,GACT,EAAK3B,SAAS,CAAEm7B,gBAAiBx5B,GAClC,EACDgK,KAAK,cAyGT4vB,GAAQjB,EAvFR,gBAAC,EAAArrB,UAAD,CACEC,QAAQ,SACRxM,IAAI,iBACJyM,MAAO,iBACP,UAAQ,4BAEPpP,EAAKkoB,OAAOr1B,KAAI,SAAC2R,GAAD,OACf,gBAAC,EAAAiL,MAAD,CAAO9M,IAAK6B,EAAM5M,MAAO4M,EAAM5M,KADhB,KAOnB,gBAAC,EAAAsX,UAAD,CACEC,QAAQ,SACR8X,kBAAmBF,EAAa,OAChCpkB,IAAI,aACJyM,MAAO,iBACP8X,UAAW,EAAKC,UAAU,WAAYJ,KAErCmU,EAAWhT,OACV,gBAAC,EAAAlmB,MAAD,CAAOT,MAAO25B,EAAWhT,OAAO3mB,MAAOD,QAAQ,SAASW,UAAQ,GAC7Di5B,EAAWhT,OAAO3hB,aAGrB,gBAAC7C,EAAD,CACE0B,QAAS,EAAK/E,MAAM26B,aACpBr3B,YAAa,EAAK03B,WAClBj3B,SAAU,EAAK43B,cACfj3B,gBAAiB,wBACjBR,WAAYvE,EAAKkoB,OACjB7jB,UAAU,EACVT,QAAS,EAAKq4B,YACdj3B,WAAYu1B,KAuDlBiB,GAAQjB,GApGR,gBAAC,EAAArrB,UAAD,CACEC,QAAQ,gBACRxM,IAAI,eACJyM,MAAO,mCAENpP,EAAKk8B,cAAcrpC,KAAI,SAACspC,GAAD,OACtB,gBAAC,EAAA1sB,MAAD,CAAO9M,IAAKw5B,GAAWA,EADD,KAgG1BP,GACCrB,GArBD,gBAAC,EAAA6B,YAAD,CAAaz5B,IAAI,WACf,gBAAC,EAAAwE,OAAD,CACEyE,KAAK,SACL5G,YACG,EAAKq3B,YAAYr8B,EAAKxG,SAAU4hC,KAChC,EAAKkB,eAAet8B,IAGtB,gBAEH,gBAAC,EAAAmH,OAAD,CAAQxE,IAAI,SAASyE,QAAS,kBAAMiH,GAAN,EAAkB/M,QAAQ,QACrD,oBAaP,OACE,gBAAC64B,GAAD,CACEpT,cAAeA,EACfqT,WAAYA,EACZE,WAAY,gCAAGA,GACfC,WAAYA,EACZC,MAAOx6B,EACPsvB,eAAgBA,EAChBlI,YAAa,SAACxf,EAAGvU,GAAJ,OAAU,EAAK+zB,YAAYxf,EAAGvU,EAA9B,EACbm5B,OAAQ,kBAAM8O,GAAN,GAGb,GAvMH,oCAyME,SAA+Bt7B,GAC7B,OAAK7L,KAAK4Y,QAAQ/M,KAAKwd,aAGnBrpB,KAAK4Y,QAAQ/M,KAAKvM,KAAOuM,EAAKvM,GACzB,gDAGF,KANE,kDAOV,GAlNH,qBA8PE,SAAgByzB,GACd,OAAIA,EACK,UAEA,OAEV,GApQH,wBAuQE,SAAmBqV,EAAMC,GACvB,OAAQA,GAAWD,IAASC,CAC7B,GAzQH,yBA4QE,SAAoBD,EAAMC,GACxB,QAASD,GAAQC,IAAYD,IAASC,CACvC,GA9QH,4BAgRE,SAAuBx8B,GACrB,OAAI7L,KAAK4L,MAAMw7B,YACJv7B,EAAKxG,YAAcwG,EAAKzG,WAExByG,EAAKzG,QAEjB,GAtRH,mCAwRE,SAA8BqI,EAAO1G,GACnC,IAAM6rB,EAAgB,MAAK5yB,KAAK4L,MAAMgnB,eAEhCS,EAAS,MAAKrzB,KAAK4L,MAAMC,MAC/BwnB,EAAOtsB,GAAS0G,EACZ1G,KAAS6rB,UACJA,EAAc7rB,GAEvB/G,KAAK4L,MAAM+6B,WAAWtT,EAAQT,EAC/B,KAjSH,GAA8BvhB,EAAAA,Y,OAAjBo1B,GAAAA,eACkB,CAC3BL,YAAY,K,OAFHK,GAAAA,cAIUxtB,EAAAA,GC5BhB,IAAMqvB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGAIE,WACE,MAYItoC,KAAK4L,MAXPC,EADF,EACEA,KACAkI,EAFF,EAEEA,YACA3G,EAHF,EAGEA,MACAu5B,EAJF,EAIEA,WACA/T,EALF,EAKEA,cACAuU,EANF,EAMEA,SACAf,EAPF,EAOEA,WACAmC,EARF,EAQEA,cACAruB,EATF,EASEA,SACAktB,EAVF,EAUEA,UACAC,EAXF,EAWEA,KAGF,OACE,gBAAC,WAAD,KACE,gBAAC1zB,EAAD,CACEI,YAAa,gBAACS,EAAD,CAAaE,MAAOX,IACjCF,aAAc00B,EACdn7B,MAAOA,IAET,gBAACmjB,GAAD,KACE,2BAASzd,UAAU,QACjB,gBAAC2zB,GAAD,CACEY,KAAMA,EACNjB,WAAYA,EACZv6B,KAAMA,EACN86B,WAAYA,EACZ/T,cAAeA,EACfuU,SAAUA,EACVjtB,SAAUA,EACVktB,UAAWA,MAMtB,KA1CH,GAAkC/1B,EAAAA,Y,OAArBi3B,GAAAA,eACkB,CAC3BC,cAAe,O,4MCFN7R,GAAiC,SAAC,GAOzC,IANJ5iB,EAMI,EANJA,SACAzT,EAKI,EALJA,OACAwS,EAII,EAJJA,aACA2D,EAGI,EAHJA,UACAmgB,EAEI,EAFJA,YAEI,IADJ6R,eAAAA,OACI,SACEC,EAAqB,CACzB3mC,QAAS,CACP,CACEsL,MAAO,GACPqK,KAAM,OACNnY,GAAI,YAEN,CACE8N,MAAO,eACPqK,KAAM,QACNnY,GAAI,QAEN,CACE8N,MAAO,sBACPqK,KAAM,OACNnY,GAAI,eAEN,CACE8N,MAAO,mBACPqK,KAAM,OACNnY,GAAI,UAEN,CACE8N,MAAO,GACPqK,KAAM,OACNnY,GAAI,WAKV,OACE,kBAAC,GAAAopC,gBAAD,CACE,aAAW,kBACX,UAAQ,gBACRv7B,QAASqJ,EAAY,eAAY3R,EACjC2jC,eAAgBA,GAEhB,kBAAC3X,GAAD,CACE7f,QAAS2lB,QAAAA,EAAe8R,EACxBpoC,OAAQA,EACRwS,aAAcA,IAEfiB,EAGN,EAEY8iB,GAKR,SAAC,GAAoE,IAAlEC,EAAkE,EAAlEA,SAAU/iB,EAAwD,EAAxDA,SAAUgjB,EAA8C,EAA9CA,qBAAsB6R,EAAwB,EAAxBA,QAAY/8B,GAAY,aACxE,GAAoC8P,EAAAA,EAAAA,WAAS,GAA7C,eAAOqM,EAAP,KAAmB6gB,EAAnB,KAEA,OACE,kBAAC,GAAAC,MAAD,CAAO9gB,WAAYA,GACjB,kBAAC,GAAA+gB,GAAD,CAAI,UAASl9B,EAAM,YACjB,kBAAC,GAAAm9B,GAAD,CACEC,OAAQ,CACNv4B,SAAU,kBAAMm4B,GAAe7gB,EAArB,EACVA,WAAAA,EACA8O,SAAAA,KAGH/iB,GAEFgjB,GACC,kBAAC,GAAAgS,GAAD,CAAI/gB,WAAYA,GACd,kBAAC,GAAAghB,GAAD,CAAIJ,QAASA,QAAAA,EAAW,GACrB5gB,GACC,kBAAC,GAAAkhB,qBAAD,KACGnS,KAQhB,EAEYoS,GAMR,SAAC,GAAD,IAAGrS,EAAH,EAAGA,SAAU/iB,EAAb,EAAaA,SAAU4wB,EAAvB,EAAuBA,WAAYz0B,EAAnC,EAAmCA,SAAUY,EAA7C,EAA6CA,WAAejF,GAA5D,oBACH,kBAAC,GAAAi9B,MAAD,KACE,kBAAC,GAAAC,GAAD,CAAI,UAASl9B,EAAM,YACjB,kBAAC,GAAAm9B,GAAD,CACEI,OAAQ,CACNC,QAASv4B,EACT1D,QAAS,WACT0pB,SAAAA,EACA5mB,SAAAA,EACAy0B,WAAAA,KAGH5wB,GAZF,EAiBQu1B,GAMR,SAAC,GAAD,IAAGxS,EAAH,EAAGA,SAAU/iB,EAAb,EAAaA,SAAU4wB,EAAvB,EAAuBA,WAAYz0B,EAAnC,EAAmCA,SAAUY,EAA7C,EAA6CA,WAAejF,GAA5D,oBACH,kBAAC,GAAAi9B,MAAD,KACE,kBAAC,GAAAC,GAAD,CAAI,UAASl9B,EAAM,YACjB,kBAAC,GAAAm9B,GAAD,CACEI,OAAQ,CACNC,QAASv4B,EACT1D,QAAS,QACT0pB,SAAAA,EACA5mB,SAAAA,EACAy0B,WAAAA,KAGH5wB,GAZF,ECnIE,IAAMmoB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA0Cj8B,KAAK4L,MAAvC6D,EAAR,EAAQA,QAASysB,EAAjB,EAAiBA,WAAYpoB,EAA7B,EAA6BA,SAE7B,OAAKooB,EAKH,gBAAC,EAAA/T,WAAD,KACE,gBAAC,EAAAW,UAAD,CACE,aAAY,uBACZpQ,YAAY,yBACZjB,KAAK,WACL5G,WAAYqrB,IAEbA,GACC,gBAAC,EAAAlpB,OAAD,CAAQC,QAAS,kBAAMxD,GAAN,EAAiBtC,QAAQ,WACvC,kBAbA2G,CAkBV,KAvBH,GAAoCzC,EAAAA,W,gBCL7B,IAAMqS,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAA+B1jB,KAAK4L,MAA5BkI,EAAR,EAAQA,SAAalI,GAArB,aACA,OACE,gBAAC,iBAAD,QACE09B,SAAU,4BACVC,SAAU,6CACN39B,GAEHkI,EAGN,KAZH,GAAmCzC,EAAAA,WCF5B,IAAMyK,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,OACE,gBAAC,cAAD,QACEE,iBAAkB,oBAClBwtB,gBAAiB,gBACjBztB,oBAAqB,gDACjB/b,KAAK4L,OAGd,KAVH,GAAgCyF,EAAAA,WCAzB,IAAM6kB,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WAAS,QACDoI,EAAO,UAAGt+B,KAAK4L,MAAM0yB,eAAd,aAAG,EAAoBh8B,OAAOqd,SACrCwW,EAAU,UAAGn2B,KAAK4L,MAAMuqB,kBAAd,aAAG,EAAuB7zB,OAAOqd,SAEjD,OACE,wBACE5O,MAAO,CACLoZ,aAAc,MACdsf,UAAW,QACX73B,QAAS,OACT8f,eAAgB,aAGjB4M,SAAAA,EAASltB,OACR,oCACE,kBAAC,EAAAwM,KAAD,KAAO0gB,GAAgB,KAEvB,KACHnI,SAAAA,EAAY/kB,OACX,yBAAK,UAAQ,gBACX,kBAACoQ,GAAD,CAAkBC,MAAO0U,IAAe,KAExC,KAGT,KA1BH,GAAqC9kB,IAAAA,WCQ9B,IAAM0P,GAAb,6B,IAAA,G,EAAA,E,gaAAA,gGACE,WACE,MAQI/gB,KAAK4L,MAPPoR,EADF,EACEA,iBACAO,EAFF,EAEEA,kBACAS,EAHF,EAGEA,cACAjB,EAJF,EAIEA,kBACAkE,EALF,EAKEA,aACAC,EANF,EAMEA,aACAF,EAPF,EAOEA,iBAGF,OACEhE,GACE,kBAACmM,GAAD,CACE3C,QAASjJ,EACT0D,aAAc,kBAAMA,GAAN,EACdC,aAAc,kBAAMA,GAAN,EACdrQ,YAAamN,GAAiBT,EAC9BnQ,MACE2P,EACI,qCACA,8BAGN,kBAAC,EAAApG,KAAD,CAAM5F,MAAO,CAAEqZ,cAAe,iCAC3BrN,EACC,oCAEgB,IADZC,EAA0CK,aACzCjM,OACD,mKAGK4L,EAAiBvZ,KAHtB,kBAG8BsZ,GAH9B,cAEE,+BAOF,2GAGKC,EAAiBvZ,KAHtB,kBAG8BsZ,GAH9B,cAEE,gCAQN,sFACeC,EAAiBvZ,MADhC,cACW,gCAKf,kBAAC,EAAA05B,SAAD,CACEpB,UAAW/d,EACXxF,SAAUwI,EACV/F,MAAO,0DACP3b,GAAG,mBAKZ,KAhEH,GAA2C+R,IAAAA,WCC9B+mB,GAAc,SAAC,GAAD,IACzBd,EADyB,EACzBA,MACAlqB,EAFyB,EAEzBA,MACA+E,EAHyB,EAGzBA,QACAkmB,EAJyB,EAIzBA,OACAlrB,EALyB,EAKzBA,QALyB,OAOzB,kBAAC,EAAAgN,MAAD,CACErK,QAAM,EACN3C,QAASA,QAAAA,EAAWiN,EAAAA,aAAAA,MACpBsvB,WAAW,EACX,aAAYt8B,EACZu8B,kBAAgB,GAEhB,kBAAC,SAAD,CACEC,kBAAgB,EAChBC,aAAc,8BAAIz8B,IAClB08B,cAAe,gCAAI18B,IACnB28B,QAAQ,qBACRC,cAAc,2BACd58B,MAAOA,EACPkqB,MAAOA,EACPnlB,QAASA,EACTkmB,OAAQA,IAvBa,ECKdJ,GAAe,SAAC,GAAD,IAAG5nB,EAAH,EAAGA,MAAOynB,EAAV,EAAUA,cAAV,OAC1B,yBAAKhlB,UAAU,4BACb,2BACE,gGAEWzC,EAAM5M,MAFjB,cAEE,qCAGJ,kBAAC,EAAA44B,KAAD,CAAM4N,UAAW,CAAEzN,QAAS,UAAY1pB,UAAU,qBAC/CglB,EAAcp5B,KAAI,SAAC+J,GAAD,OACjB,kBAAC,aAAD,CAAgB+F,IAAK/F,EAAKhF,MACxB,kBAAC,EAAA64B,SAAD,KACE,gCAAS7zB,EAAKhF,MAAe,KAC5BgF,aAAA,EAAAA,EAAM2J,cAAN,YAA0B3J,aAA1B,EAA0BA,EAAM2J,aACjC,kBAAC,EAAAiqB,KAAD,CAAMvpB,UAAU,mBACbrK,EAAKgjB,YAAY/sB,KAAI,SAACwrC,GAAD,OACpB,kBAAC,EAAA5N,SAAD,CACE9tB,IAAK07B,EACLp3B,UAAU,iBACV,kCAA0Bo3B,IAE1B,kBAACpzB,GAAD,CACEC,QACEjW,EAAAA,EAAAA,kBAA4BopC,IAAeA,GAG7C,kBAAC,EAAA5uB,MAAD,KApCD,SAACokB,GAClB,MAA+BA,EAAKryB,MAAM,IAAK,GAA/C,eAAO88B,EAAP,KAAiBD,EAAjB,KACME,EAAWD,EAASE,OAAO,GAAGnF,cAAgBiF,EAAS3yB,MAAM,GACnE,OACE,oCACE,gCAAS4yB,EAAT,KADF,IACqCF,EAGxC,CA4B2BI,CAAWJ,KAXH,MAiB1B,kBAAC,EAAA5N,SAAD,KACE,kBAAC,EAAAiO,QAAD,OAxBa,KATG,E,+NCErB,IAAM3S,GAA0C,SAAC,GAMlD,IALJC,EAKI,EALJA,cACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,cACAjL,EAEI,EAFJA,QACAoK,EACI,EADJA,eAEA,GAAkCxb,EAAAA,EAAAA,UAAiB,IAAnD,eAAOiJ,EAAP,KAAkB6lB,EAAlB,KACA,GAA0B9uB,EAAAA,EAAAA,UAAqB,IAA/C,eAAO2a,EAAP,KAAcoU,EAAd,KACA,GAA4C/uB,EAAAA,EAAAA,UAAiB,GAA7D,eAAOgvB,EAAP,KAAuBC,EAAvB,KAEA,GAA8BjvB,EAAAA,EAAAA,WAAkB,GAAhD,eAAOtC,EAAP,KAAgBwxB,EAAhB,KACA,GAAsClvB,EAAAA,EAAAA,UAAS,CAC7C3a,KAAM,EACNqb,UAAW,GACXmL,KAAM,SAHR,eAAOsjB,EAAP,KAAoBC,EAApB,MAMAzf,EAAAA,EAAAA,YAAU,WACR0f,GACD,GAAE,CAACF,IAEJ,IAAME,EAAa,WACjBH,GAAW,GACXxkC,EAAAA,GAAAA,K,uWAAA,EACI4kC,iBAAkB,WAAcH,GAClC3T,GACAj4B,MAAK,YAAc,IAAXmC,EAAW,EAAXA,KACRqpC,EAASrpC,EAAK6P,SACd05B,EAAkBvpC,EAAKiC,OACvBunC,GAAW,EACZ,GACF,EAED,GAAIxxB,EACF,OACE,yBAAKtG,UAAU,+CACb,kBAAC0U,GAAD,OAKN,IAAMyjB,EAAiB,SAACxnC,GAAD,OACrBq0B,EAAcp5B,KAAI,SAACmrB,GAAD,OAAOA,EAAEpmB,IAAT,IAAejB,SAASiB,EADrB,EAGjB8xB,EAA0B,IAAjBc,EAAMjlB,OAErB,GAAImkB,KAAWnO,EAAAA,EAAAA,IAAYyjB,EAAa,CAAC,oBACvC,OACE,yBAAK/3B,UAAU,wCACb,kBAACkU,GAAD,CACE5Z,MAAO,+BACPgF,YAAa,8EAMrB,IAAM84B,EAAa,SAACznC,GAAD,OAAUo0B,EAAcsT,MAAK,SAAC1iC,GAAD,OAAUA,EAAKA,OAAShF,CAAxB,GAA7B,EAEb2nC,EAAY,CAChBtpC,QAAS,CACP,CACEsL,MAAO,GACPqK,KAAM,OACNnY,GAAI,YAEN,CACE8N,MAAO,eACPqK,KAAM,QACNnY,GAAI,QAEN,CACE8N,MAAO,sBACPqK,KAAM,OACNnY,GAAI,iBAKV,OACE,yBAAKwT,UAAU,4BACb,kBAAC,EAAAupB,KAAD,CACE3K,eAAgB,CACd8K,QAASjH,EACL,0BACA,8BAEN0U,UAAW,CAAEzN,QAAS,WAEtB,kBAAC,EAAAF,SAAD,CAAUxpB,UAAU,4BAClB,kBAAC,EAAAupB,KAAD,CACE3K,eAAgB,CACd8K,QAASjH,EACL,0BACA,8BAEN0U,UAAW,CAAEzN,QAAS,WAErB1P,GACC,kBAAC,EAAAwP,SAAD,KACE,kBAAC,EAAAD,KAAD,KACE,kBAAC,EAAAC,SAAD,KAAWxP,KAKsB,IAAtCrtB,OAAOD,KAAKs4B,GAAe1mB,QAC1B,kBAAC,EAAAkrB,SAAD,KACE,kBAAC,EAAAD,KAAD,KACE,kBAAC,EAAAC,SAAD,KACE,gCACE,gDAIJ,kBAAC,EAAAA,SAAD,CAAU+O,KAAM,CAAE7O,QAAS,WACzB,kBAAC,EAAAH,KAAD,KACGvE,EAAcp5B,KAAI,SAAC+J,GAAD,OACjB,kBAAC,EAAA6zB,SAAD,CACE9tB,IAAK/F,EAAKhF,KACVqP,UAAU,iBACV,kCAA0BrK,EAAKhF,OAE/B,kBAAC,EAAA6X,MAAD,CACEnJ,QAAS,kBACP4lB,EACED,EAAcx1B,QACZ,SAACunB,GAAD,OAAOA,EAAEpmB,OAASgF,EAAKhF,IAAvB,IAHG,GAQRgF,EAAKhF,MAfO,QAyB7B,kBAAC,EAAA64B,SAAD,KACE,yBAAKxpB,UAAU,cACb,kBAACmS,GAAD,CACEN,UAAWA,EACXnM,SAAU,SAACmM,GAAD,OAAe6lB,EAAa7lB,EAA5B,EACVtkB,OAAQwqC,EACRh4B,aAAc,SAAClS,GAAD,OAAOmqC,EAAenqC,EAAtB,EACdkkB,aAAc,CACZ,CACEvlB,GAAI,kBACJ8N,MAAO,oBAMf,kBAACuF,EAAD,CACEE,aAAc,SAAClS,GACbmqC,EAAenqC,GACf6pC,EAAa,GACd,EACDnqC,OAAQwqC,EACRz3B,UAAW,CAAEiU,gBAAiB,gBAC9BzU,cAAe,CAAC,OAAQ,YAAa,QACrC7B,MAAO,CAAEmU,UAAW,UAIxB,kBAAC,EAAAoX,SAAD,CAAUvrB,MAAO,CAAEqF,SAAU,IAC1Bmf,IAAUnO,EAAAA,EAAAA,IAAYyjB,EAAa,CAAC,oBACnC,yBAAK/3B,UAAU,sBACb,kBAAC4S,GAAD,OAGF,yBAAK5S,UAAU,2BACb,kBAAC4jB,GAAD,CACE8R,gBAAc,EACdnoC,OAAQwqC,EACRh4B,aAAc,SAAClS,GACbmqC,EAAenqC,EAChB,EACDg2B,YAAayU,GAEZ/U,EAAM33B,KAAI,SAAC+J,EAAMsJ,GAAP,OACT,kBAACm3B,GAAD,CACErS,SAAU9kB,EACVvD,IAAK/F,EAAKhF,KACVihC,WACEuG,EAAexiC,EAAKhF,OAASynC,EAAWziC,EAAKhF,MAE/CwM,SAAU,kBACR8nB,EACEkT,EAAexiC,EAAKhF,MAChBq0B,EAAcx1B,QACZ,SAACunB,GAAD,OAAOA,EAAEpmB,OAASgF,EAAKhF,IAAvB,IAFN,kBAIQq0B,GAJR,CAIuBrvB,IANjB,EASVoI,WAAYq6B,EAAWziC,EAAKhF,MAC5B,kDAA0CgF,EAAKhF,OAE/C,4BAAKgF,EAAKhF,MACV,4BAAKgF,EAAK2J,aApBH,UA8BrBmjB,GACA,kBAAC,EAAA+G,SAAD,KACE,kBAAC5b,GAAD,CACErgB,OAAQwqC,EACRh4B,aAAc,SAAClS,GAAD,OAAOmqC,EAAenqC,EAAtB,EACd0C,MAAOqnC,MAOpB,ECtOY9hB,GAAgC,SAAC,GAIxC,IAHJ2O,EAGI,EAHJA,eACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEA,GAAkC/b,EAAAA,EAAAA,UAAiB,IAAnD,eAAOiJ,EAAP,KAAkB6lB,EAAlB,KACA,GAA4B9uB,EAAAA,EAAAA,UAAsB,IAAlD,eAAOqY,EAAP,KAAeuX,EAAf,KACA,GAAsC5vB,EAAAA,EAAAA,UAAiB,GAAvD,eAAO6vB,EAAP,KAAoBC,EAApB,KAEA,GAA8B9vB,EAAAA,EAAAA,WAAkB,GAAhD,eAAOtC,EAAP,KAAgBwxB,EAAhB,KACA,GAAsClvB,EAAAA,EAAAA,UAAS,CAC7C3a,KAAM,EACNqb,UAAW,KAFb,eAAOyuB,EAAP,KAAoBC,EAApB,MAKAzf,EAAAA,EAAAA,YAAU,WACRogB,GACD,GAAE,CAACZ,IAEJ,IAAMY,EAAc,WAClBb,GAAW,GACX7kC,EAAAA,GAAAA,KAAc8kC,GAAa5rC,MAAK,YAAc,IAAXmC,EAAW,EAAXA,KACjCkqC,EAAUlqC,EAAKA,MACfoqC,EAAepqC,EAAKgC,KAAKC,OACzBunC,GAAW,EACZ,GACF,EAED,GAAIxxB,EACF,OACE,yBAAKtG,UAAU,+CACb,kBAAC0U,GAAD,OAKN,IAAMkd,EAAa,SAAC,GAAD,IAAGjhC,EAAH,EAAGA,KAAH,OAAc+zB,aAAA,EAAAA,EAAe/zB,QAASA,CAAtC,EAEb8xB,EAA2B,IAAlBxB,EAAO3iB,OAEtB,GAAImkB,KAAWnO,EAAAA,EAAAA,IAAYyjB,EAAa,CAAC,mBACvC,OACE,yBAAK/3B,UAAU,wCACb,kBAACkU,GAAD,CACE5Z,MAAO,gCACPgF,YAAa,mFAMrB,IAAM84B,EAAa,SAAC,GAAD,IAAGznC,EAAH,EAAGA,KAAH,OACjB8zB,EAAe4T,MAAK,SAAC96B,GAAD,OAAWA,EAAM5M,OAASA,CAA1B,GADH,EAGb2nC,EAAY,CAChBtpC,QAAS,CACP,CACEsL,MAAO,GACPqK,KAAM,OACNnY,GAAI,YAEN,CACE8N,MAAO,gBACPqK,KAAM,QACNnY,GAAI,UAKV,OACE,yBAAKwT,UAAU,4BACb,kBAAC,EAAAupB,KAAD,CACE3K,eAAgB,CACd8K,QAASjH,EACL,0BACA,8BAEN0U,UAAW,CAAEzN,QAAS,WAEtB,kBAAC,EAAAF,SAAD,CAAUxpB,UAAU,4BAClB,kBAAC,EAAAupB,KAAD,CACE3K,eAAgB,CACd8K,QAASjH,EACL,0BACA,8BAEN0U,UAAW,CAAEzN,QAAS,WAErBhF,EACC,kBAAC,EAAA8E,SAAD,KACE,kBAAC,EAAAD,KAAD,KACE,kBAAC,EAAAC,SAAD,KACE,gCACE,gDAIJ,kBAAC,EAAAA,SAAD,CAAU+O,KAAM,CAAE7O,QAAS,WACzB,kBAAC,EAAAH,KAAD,KACE,kBAAC,EAAAC,SAAD,CACE9tB,IAAKgpB,EAAc/zB,KACnBqP,UAAU,kBAEV,kBAAC,EAAAwI,MAAD,KAAQkc,EAAc/zB,WAM9B,KAEJ,kBAAC,EAAA64B,SAAD,KACE,yBAAKxpB,UAAU,cACb,kBAACmS,GAAD,CACEN,UAAWA,EACXnM,SAAU,SAACmM,GAAD,OAAe6lB,EAAa7lB,EAA5B,EACVtkB,OAAQwqC,EACRh4B,aAAc,SAAClS,GAAD,OAAOmqC,EAAenqC,EAAtB,EACdkkB,aAAc,CACZ,CACEvlB,GAAI,iBACJ8N,MAAO,oBAMf,kBAACuF,EAAD,CACEE,aAAc,SAAClS,GACbmqC,EAAenqC,GACf6pC,EAAa,GACd,EACDnqC,OAAQwqC,EACRz3B,UAAW,CAAE0zB,eAAgB,gBAC7Bl0B,cAAe,CAAC,OAAQ,YAAa,QACrC7B,MAAO,CAAEmU,UAAW,UAIxB,kBAAC,EAAAoX,SAAD,CAAUvrB,MAAO,CAAEqF,SAAU,IAC1Bmf,IAAUnO,EAAAA,EAAAA,IAAYyjB,EAAa,CAAC,mBACnC,yBAAK/3B,UAAU,sBACb,kBAAC4S,GAAD,OAGF,yBAAK5S,UAAU,2BACb,kBAAC4jB,GAAD,CACE8R,gBAAc,EACdnoC,OAAQwqC,EACRh4B,aAAc,SAAClS,GACbmqC,EAAenqC,EAChB,EACDg2B,YAAayU,GAEZrX,EAAOr1B,KAAI,SAAC2R,EAAO0B,GAAR,OACV,kBAACs3B,GAAD,CACExS,SAAU9kB,EACVvD,IAAK6B,EAAM5M,KACXihC,WAAYA,EAAWr0B,GACvBJ,SAAU,kBAAMwnB,EAAYpnB,EAAlB,EACVQ,WAAYq6B,EAAW76B,GACvB,mDAA2CA,EAAM5M,OAEjD,4BAAK4M,EAAM5M,MATH,UAmBtB8xB,GACA,kBAAC,EAAA+G,SAAD,KACE,kBAAC5b,GAAD,CACErgB,OAAQwqC,EACRh4B,aAAc,SAAClS,GAAD,OAAOmqC,EAAenqC,EAAtB,EACd0C,MAAOkoC,MAOpB,C,+FC7MYzqC,GAAb,yC,OAAaA,EAAAA,6BACkC,qB,OADlCA,EAAAA,oBAEyB,K,OAFzBA,EAAAA,6BAGkC,CAAC,GAAI,GAAI,GAAI,O,OAH/CA,EAAAA,yBAK8B,K,OAL9BA,EAAAA,kCAMuC,CAAC,GAAI,GAAI,GAAI,O,OANpDA,EAAAA,2BAOgC,a,OAPhCA,EAAAA,6BAQkC,e,OARlCA,EAAAA,cAUmB,6B,OAVnBA,EAAAA,YAWQ,c,OAXRA,EAAAA,iBAcTU,aAAoBV,EAAU4qC,yBAC1B,YACA,iB,OAhBK5qC,EAAAA,eAkBW,a,OAlBXA,EAAAA,cAmBU,Y,OAnBVA,EAAAA,cAqBU,CACnB,CACE2C,KAAM,aACNwX,MAAqB,6BACrBwkB,mBAAoB,CAClB,uBACA,0BACA,0BACA,+BAGJ,CACEh8B,KAAM,cACNwX,MAAqB,mBACrBwkB,mBAAoB,CAClB,sCACA,8BAGJ,CACEh8B,KAAM,QACNwX,MAAqB,aACrBwkB,mBAAoB,CAClB,mBACA,qBACA,kBACA,uBAGJ,CACEh8B,KAAM,SACNwX,MAAqB,cACrBwkB,mBAAoB,CAClB,oBACA,sBACA,mBACA,wBAGJ,CACEh8B,KAAM,UACNwX,MAAqB,0BACrBwkB,mBAAoB,CAClB,kCACA,kCAKJ,CACEh8B,KAAM,aACNwX,MAAqB,kBACrBwkB,mBAAoB,CAOlB,uCAEA,mDACA,6DACA,iDAEA,mCACA,wCAIJ,CACEh8B,KAAM,aACNwX,MAAqB,yBACrBwkB,mBAAoB,CAClB,qCACA,wCACA,0CAGJ,CACEh8B,KAAM,kBACNwX,MAAqB,uBACrBwkB,mBAAoB,CAClB,mBACA,mBACA,sB,OA1GK3+B,EAAAA,8BA8I0B,CACnC,qBACA,kBACA,qBACA,sBACA,sB,OAnJSA,EAAAA,oBAsJgB,CACzB,kCAAmC,mCACnC,+BAAgC,gCAChC,qCAAsC,sCACtC,kCAAmC,mCACnC,qCAAsC,sCACtC,4BAA6B,4BAC7B,kCAAmC,mCACnC,sCAAuC,sCACvC,mCAAoC,oCACpC,gCAAiC,iCACjC,sCAAuC,qCACvC,mCAAoC,gCACpC,oCAAqC,mCACrC,yCAA0C,wCAC1C,sCAAuC,iDACvC,uCAAwC,sCACxC,yCAA0C,wCAC1C,sCAAuC,qCACvC,uCAAwC,sCACxC,mDAAoD,4BACpD,6DAA8D,4BAC9D,iDAAkD,kCAClD,iDAAkD,sCAClD,iDAAkD,kCAClD,mBAAoB,sBACpB,mBAAoB,sBACpB,iBAAkB,yBAClB,qCAAsC,8BACtC,mBAAoB,oBACpB,uBAAwB,wBACxB,sBAAuB,uBACvB,kBAAmB,mBACnB,wCAAyC,iCACzC,sBAAuB,uBACvB,0BAA2B,2BAC3B,yBAA0B,0BAC1B,qBAAsB,sBACtB,wCAAyC,iCACzC,sBAAuB,uBACvB,0BAA2B,2BAC3B,yBAA0B,0BAC1B,qBAAsB,sBACtB,6BAA8B,8BAC9B,oBAAqB,qBACrB,uBAAwB,wBACxB,mBAAoB,uB,OApMXA,EAAAA,0BAuMsB,CAC/B6qC,iBAAkB,2BAClBC,oBAAqB,8BACrBC,uBAAwB,gCACxBC,qCAAsC,kCACtCC,uCAAwC,uCACxCC,qCAAsC,kCACtCC,iDAAkD,4BAClDhW,0BAA2B,iDAC3BiW,qCAAsC,6CACtCC,wBAAyB,qCACzBC,0BAA2B,uCAC3BC,uCAAwC,0CACxCC,uCAAwC,sCACxCC,oCAAqC,8BACrCC,6BAA8B,8BAC9BC,6BAA8B,8BAC9BC,2BAA4B,4BAC5BC,2BAA4B,4BAC5BC,2BAA4B,+B,OA1NnB9rC,EAAAA,kCA6N8B,CACvC,4BACA,uCACA,yCACA,mDACA,yC,OAlOSA,EAAAA,iBAoOa,CACtB,qBACA,yBACA,2B,OAvOSA,EAAAA,mBAyOe,CAExB,mBACA,yBACA,sBACA,sBAEA,qBACA,2BACA,wBACA,2B,OAnPSA,EAAAA,kBAsPc,CACvB+rC,UAAyB,iBACzB,eAA8B,yBAC9BC,UAAyB,oB,OAzPhBhsC,EAAAA,eA4PW,CAAC,YAAa,YAAa,kB,OA5PtCA,EAAAA,yBA8PqB,CAC9B,cACA,QACA,WACA,iBACA,QACA,aACA,aACA,WACA,UACA,QACA,a,OAzQSA,EAAAA,aA4QS,CAClB,gEACgB,sCAChB,yDAAwE,+BAGxE,iDAAgE,kCAGhE,iDAAgE,kCAGhE,8CAA6D,+BAG7D,qDAAoE,sCAGpE,gEACgB,wCAChB,0CAAyD,sCAGzD,2CAA0D,kCAG1D,qDAAoE,qCAGpE,2CAA0D,uCAG1D,8DACgB,8CAChB,uDAAsE,uCAGtE,qCAAoD,iCAGpD,uCAAsD,oCAGtD,uCAAsD,yCAGtD,iDAAgE,6CAGhE,oDAAmE,gDAGnE,0DAAyE,sDAGzE,gDAA+D,4CAG/D,mDAAkE,2CAGlE,wCAAuD,gCAGvD,8CAA6D,sCAG7D,6CAA4D,gCAG5D,6CAA4D,gCAG5D,6CAA4D,gCAG5D,wCAAuD,6BAGvD,iCAAgD,6BAGhD,+CAA8D,gCAG9D,+CAA8D,gCAG9D,mCAAkD,+BAGlD,+CAA8D,gCAG9D,yCAAwD,kC,OA1W/CA,EAAAA,eA+WW,CACpBisC,UAAW,oBACXtb,OAAQ,iBACRub,QAAS,kBACTle,QAAS,mB,uECtWA7V,EAAa5H,EAAAA,mBAAqCxM,GAClDuW,EAAa,kBAAM/J,EAAAA,WAAiB4H,EAAvB,C,uECKdjO,E,sBAlBL,SAAS0L,EACd1T,EACA5B,EACAf,GAIA,IAFA,IAAI6B,EAAMc,EAEV,MAAgBvD,OAAOD,KAAK4B,GAA5B,eAAmC,CAA9B,IAAM6V,EAAC,KACV/U,EAAMA,EAAI6K,QAAQ,IAAMkK,EAAI,IAAK7V,EAAK6V,IAAIlK,QAAQ,IAAMkK,EAAG7V,EAAK6V,GACjE,CAED,OAAI5W,EACK,GAAP,OAAU6B,EAAV,YAAiB5B,EAAAA,EAAAA,eAA2BD,IAErC6B,CAEV,E,SAEW8I,GAAAA,EAAAA,qCAAAA,4CAAAA,EAAAA,iCAAAA,0CAAAA,EAAAA,iCAAAA,0CAAAA,EAAAA,2BAAAA,0BAAAA,EAAAA,sBAAAA,cAAAA,EAAAA,6BAAAA,kDAAAA,EAAAA,gCAAAA,cAAAA,EAAAA,SAAAA,cAAAA,EAAAA,SAAAA,SAAAA,EAAAA,WAAAA,gBAAAA,EAAAA,UAAAA,cAAAA,EAAAA,YAAAA,gBAAAA,EAAAA,WAAAA,cAAAA,EAAAA,cAAAA,4BAAAA,EAAAA,aAAAA,iBAAAA,EAAAA,cAAAA,iCAAAA,EAAAA,UAAAA,cAAAA,EAAAA,MAAAA,SAAAA,EAAAA,OAAAA,UAAAA,EAAAA,OAAAA,IAAAA,EAAAA,aAAAA,cAAAA,EAAAA,oBAAAA,uCAAAA,EAAAA,iBAAAA,qCAAAA,EAAAA,mBAAAA,qCAAAA,EAAAA,oBAAAA,+BAAAA,EAAAA,sBAAAA,8CAAAA,EAAAA,sBAAAA,kCAAAA,EAAAA,oBAAAA,qCAAAA,EAAAA,yBAAAA,gDAAAA,EAAAA,0BAAAA,0CAAAA,EAAAA,4BAAAA,yDAAAA,EAAAA,4BAAAA,6CAAAA,EAAAA,0BAAAA,gDAAAA,EAAAA,6BAAAA,kDAAAA,EAAAA,gBAAAA,yBAAAA,EAAAA,WAAAA,0BAAAA,EAAAA,UAAAA,cAAAA,EAAAA,SAAAA,YAAAA,EAAAA,WAAAA,cAAAA,EAAAA,SAAAA,aAAAA,EAAAA,MAAAA,SAAAA,EAAAA,kBAAAA,sBAAAA,EAAAA,SAAAA,SAAAA,EAAAA,WAAAA,gBAAAA,EAAAA,SAAAA,sBAAAA,EAAAA,WAAAA,iBAAAA,EAAAA,oBAAAA,yBAAAA,EAAAA,aAAAA,gBAAAA,EAAAA,SAAAA,Q,EAAAA,IAAAA,EAAAA,CAAAA,IAoDL,IAAMiiC,EAAsB,CACjCxpC,MACc,qBACF,oBAEZvB,IAAK8I,EAAK,S,yICjEL,SAAS2K,EACd/S,GAEA,IADS,EACSmU,EAA0BnU,EAApCP,SAAmBsb,EAAiB/a,EAAjB+a,aACrB7F,EAAmB,CACvBo1B,YAAan2B,EAAQ3F,OACrB/O,SAAU,CACR3C,OAAQ,EACR+I,KAAM,EACNwsB,OAAQ,EACRpO,WAAYpnB,OAAOD,KAAKme,GAAcvM,SARjC,E,25BAAA,CAYO2F,GAZP,IAYT,IAAK,EAAL,qBAAyB,KAAdkB,EAAc,QACA,SAAnBA,EAAExV,aACJqV,EAAQzV,SAASoG,OACW,WAAnBwP,EAAExV,aACXqV,EAAQzV,SAAS3C,SAEjBoY,EAAQzV,SAAS4yB,QAEpB,CApBQ,+BAsBT,OAAOnd,CACR,C,gNCpCM,SAASksB,EAAiB9hC,GAC/B,OAAOA,EAAI6K,QAAQ,MAAO,GAC3B,C,0GCGM,SAASyc,EAAiB5kB,GAC/B,IAAMwJ,EAAW,CAAC,EAGlB,GAAiC,iBAAtBxJ,EAAI3B,SAAS7B,KAEtB,OADAgN,EAAQ,UAAgBxJ,EAAI3B,SAAS7B,KAC9BgN,EAN8C,Q,25BAAA,CASvCxJ,EAAI3B,SAAS7B,KAAKutB,QATqB,IASvD,IAAK,EAAL,qBAA0C,KAA/BzvB,EAA+B,QACpCA,EAAEg1B,OACJ9lB,EAASlP,EAAEg1B,OAAOC,WAAaj1B,EAAEue,OAIjCrP,EAAQ,UAAgBlP,EAAEue,QAAUve,EAAEkO,KAEzC,CAjBsD,+BAmBvD,OAAOgB,CACR,CC1BM,SAAS8iB,EAAWhuB,GAGzB,IAAMs6B,EAA6B/7B,OAAO+J,SAAS2hC,OAEnD,OAAOjqC,EAAgB,UAChBs6B,GADgB,OACTv7B,uBADS,mBACeiB,EADf,eAEhBs6B,GAFgB,OAETv7B,uBACf,CAGM,SAASmrC,IACd,OAAO3rC,OAAO+J,SAASqB,KAAKQ,MAAM,OAAO,GAAGA,MAAM,OAAO,EAC1D,CCbM,SAASsyB,EAAalyB,EAAe4/B,GAC1C,OAAI5tC,OAAO6tC,OAAOD,GAAQ7qC,SAASiL,GAC1BhO,OAAOD,KAAK6tC,GAAQ7uB,MAAK,SAAChQ,GAAD,OAAS6+B,EAAO7+B,KAASf,CAAzB,IAE9BhO,OAAOD,KAAK6tC,GAAQ7qC,SAASiL,GACxB4/B,EAAO5/B,QADhB,CAID,C,sVCPM,SAASmvB,EACdn5B,EACA8pC,GAGA,QADcA,EAAgB/uB,MAAK,SAACgvB,GAAD,OAAQA,EAAG/pC,OAASA,CAApB,GAEpC,CAEM,SAAS04B,EACd14B,EACA8pC,GAEA,IAAMxmC,EAAQwmC,EAAgB/uB,MAAK,SAACgvB,GAAD,OAAQA,EAAG/pC,OAASA,CAApB,IACnC,GAAIsD,EACF,OAAOA,EAAM42B,OAEb,KAAM,yCAET,CAIM,SAAS/2B,EACdxF,EACAmsC,GAEA,IADQ,EACFE,E,qWAAS,CAAH,GAAQrsC,GADZ,E,25BAAA,CAGYmsC,GAHZ,IAGR,IAAK,EAAL,qBAAqC,KAA1BxmC,EAA0B,QAC/BA,EAAM42B,eACD8P,EAAO1mC,EAAMtD,KAEvB,CAPO,+BASR,OAAOgqC,CACR,C,wBCnCM,SAASrmB,EAAY/mB,EAAQq5B,GAClC,OAAO,IAAKA,GAAS,SAACp3B,GAAD,OAAYA,KAAUjC,CAAtB,GACtB,CCJM,SAASmgC,EAAYkN,GAC1B,IAAMC,EAAWD,EAAIrgC,MAAM,KAC3B,OAAOsgC,EAAS,GAAK,IAAMA,EAAS,GAAGn2B,MAAM,EAAG,EACjD,C,yDCAM,SAASmnB,EAAWiP,GACzB,OAAKA,EAAO1P,gBAAmB0P,EAAO1P,eAAe1P,YAKnD,gCACE,gBAAC,KAAD,CAAe3U,KAAM+zB,EAAO1P,eAAe1P,eALtC,IAQV,CAEM,SAASoQ,EAAegP,GAC7B,IAAKA,EAAO1P,eACV,OAAO,KAGT,IAAIvkB,EAAe,KAOnB,OANIi0B,EAAO1P,eAAethB,QACxBjD,EACE,gBAAC,KAAD,CAAY5C,QAAS62B,EAAO1P,eAAethB,MAAtB,eAKvB,gCACE,gBAAC,KAAD,CAAiB1I,OAAQ05B,EAAO1P,eAAehyB,QADjD,IAC4DyN,EAG/D,C,eC7BM,SAAS+C,EAAYU,GAAsB,IAAhBywB,EAAgB,uDAAJ,GAC5C,OAAO/nC,EAAAA,GAAAA,IAAYsX,GAAMne,MAAK,SAACkE,GAC7B,IAEyC,IAAzC,MAFgB,CAAC,UAAW,SAAU,YAE1BX,SAASW,EAAO/B,KAAK8K,OACxBnN,QAAQ4F,OAAR,oBACLxB,EAAO/B,KAAKwb,aADP,aACL,EAAmBxK,mBADd,QAC6B,8CAIZ,cAAtBjP,EAAO/B,KAAK8K,MACT2hC,EAME,IAAI9uC,SAAQ,SAAC8qB,GAAD,OAAOC,WAAWD,EAAG,IAArB,IAA4B5qB,MAAK,kBAClDyd,EAAYU,EAAMywB,EAAY,EADoB,IAL3C9uC,QAAQ4F,OACb,IAAIxF,MAAM,+DAHhB,CAWD,GACF,CCxBM,SAASwa,EAAam0B,EAAoBr0B,GAC/C,IAAMrL,EAAW,CACf,IAAK,iIAAU0/B,EAAV,WAA0Br0B,IAC/B,IAAK,iMAAUq0B,EAAV,WAA0Br0B,IAC/B,IAAK,4MAAUq0B,EAAV,WAA0Br0B,IAC/B,IAAK,qGAAUq0B,EAAV,WAA0Br0B,IAC/B,IAAK,wGAAUq0B,EAAV,WAA0Br0B,IAC/B+iB,QAAS,uDAAUsR,EAAV,WAA0Br0B,KAErC,OAAOrL,EAAS0/B,IAAe1/B,EAAQ,OACxC,CCTM,SAASwlB,EACdma,EACA7rC,GAMA,GAAI6rC,EACF,MAAO,CAAEhb,UAAW,QAASD,kBAAmBib,GAGlD,IACE,IAAQC,EAAa,IAAIC,IAAI/rC,GAArB8rC,SACR,GAAiB,UAAbA,EACF,MAAO,CACLjb,UAAW,UACXX,WAAY,mDAIhB,GAAiB,WAAb4b,EACF,MAAO,CAAEjb,UAAW,UAIvB,CAFC,MAAO3E,GAER,CAED,MAAO,CACL2E,UAAW,QACXD,kBAAmB,sDAEtB,CClCM,IAAM7T,EAAU,SAAC,EAAkBzb,GAAc,MAC9C0qC,GAD8C,EAA9B/hC,cAC0B,CAAC,GAA3C+hC,sBACFziB,GAAcjoB,SAAA,UAAAA,EAAWqe,sBAAX,eAA2BC,iBAAkB,GACjE,OACEosB,GACAziB,EAAYjpB,SAAS,4BACrBipB,EAAYjpB,SAAS,6BAExB,E,4CCFY8b,EAAb,iGACE,SAAoChb,GAClC,IAAQG,EAAoBH,EAApBG,KAAMD,EAAcF,EAAdE,UACd,OAAOX,EAAAA,GAAAA,gCAA8CW,EAAUC,KAAMA,GAClExE,MAAK,mBAAmC,IAAnC,EAAGmC,KAAgBA,KAAKgQ,MAAxB,IADD,OAEE,SAACxM,GACN,MAA+BA,EAAI3B,SAA3BiR,EAAR,EAAQA,OAAQuF,EAAhB,EAAgBA,WAChB,OAAO1a,QAAQ4F,OAAO,CACpByI,MAAO,4EAAiC3J,IACxC0J,QAAS,SACTiF,YAAauH,EAAazF,EAAQuF,IAErC,GACJ,GAbH,8BAeE,YAIG,IAHD2F,EAGC,EAHDA,oBACAnB,EAEC,EAFDA,eACAhL,EACC,EADDA,QAEA,OAAKmM,GAIkB,IAAnBnB,EAEA,kBAAC,EAAAnH,QAAD,CACEtI,IAAI,6BACJgD,SAAS,OACTuF,QACE,qIACkC,6BADlC,EAEiC,iCAKnC,kBAAC,EAAAyI,aAAD,CAAc3O,YAAU,GAAE,qCAM9B,kBAAC,EAAA2O,aAAD,CACEhR,IAAI,4BACJyE,QAASA,EACT,UAAQ,8BAEP,oCA3BI,IA8BV,GAnDH,2CAqDE,YAIG,IAHDyG,EAGC,EAHDA,SACA5N,EAEC,EAFDA,SACAxI,EACC,EADDA,WAEAgb,EAAsB6vB,sBAAsB7qC,GACzCrE,MAAK,SAACgf,GAAD,OACJK,EAAsBiB,2BAA2B,CAC/C7F,SAAAA,EACA5N,SAAAA,EACAmS,eAAAA,EACA3a,WAAAA,GALE,IADR,OASS,SAACwO,GAAD,OAAW4H,EAAS5H,EAApB,GACV,GApEH,wCAsEE,YAKG,IAJD4H,EAIC,EAJDA,SACA5N,EAGC,EAHDA,SACAmS,EAEC,EAFDA,eACA3a,EACC,EADDA,WAEI2a,GAMFvE,EAAS,CACPtM,MACE,qIACkC,6BADlC,EAEiC,gCAInCD,QAAS,YAbXrB,EAAS,CACPkR,iBAAkB1Z,EAClB0a,eAAe,GAmBpB,GAlGH,8BAoGE,YAOG,IAND1a,EAMC,EANDA,WACAwI,EAKC,EALDA,SACAsV,EAIC,EAJDA,KACA5D,EAGC,EAHDA,SACApR,EAEC,EAFDA,aACAsN,EACC,EADDA,SAEA7W,EAAAA,GAAAA,iBAA+BuJ,EAAc9I,GAC1CrE,MAAK,SAACge,GACL,IAAMC,GAASC,EAAAA,EAAAA,GAAmBF,EAAI7b,KAAKgc,MACrC3Z,EAAOH,EAAWG,KAExBiZ,EAAYQ,GAAQje,MAAK,WACvBya,EAAS,CACPvM,QAAS,UACTC,MACE,6FACoB3J,OAMpB+Z,GACF1R,EAAS,CAAE0R,SAAAA,IAGT4D,GACFA,GAEH,GACF,IAxBH,OAyBS,SAACxc,GACN,MAA+BA,EAAI3B,SAA3BiR,EAAR,EAAQA,OAAQuF,EAAhB,EAAgBA,WAEhBC,EAAS,CACPvM,QAAS,SACTC,MAAO,2DACPgF,YAAauH,EAAazF,EAAQuF,IAErC,IAjCH,SAkCW,kBACP3N,EAAS,CACPkR,iBAAkB,KAClBO,mBAAmB,GAHd,GAMZ,KApJH,I,+mCCJO,IAAMjd,EAAb,4FAME,SAAwB8tC,EAAqBC,GAC3C,IAEI56B,EAFApT,EAAS,CAAC,EAwBd,OAvBiB,IAAIiuC,gBAAgBF,GAG5B7/B,SAAQ,SAACkK,EAAKjK,GAEI,GAArBiK,EAAI+P,OAAOpX,SAUbqC,EADE46B,GAAgBA,EAAa7rC,SAASgM,GACpC4nB,OAAO3d,GAEPA,EAGNpY,EAASC,EAAYiuC,YAAYluC,EAAQmO,EAAKiF,GAC/C,IAEMpT,CACR,GAhCH,sBAmCE,SACEM,EACA6N,EACAf,GAEA,IAAMpN,EAAS,IAAUM,GAGzB,OAFAN,EAAOmO,GAAOf,EAEPpN,CACR,GA5CH,yBA+CE,SAAmBM,EAAW6N,EAAaf,GACzC,IAAMpN,EAAS,IAAUM,GAWzB,OAVIN,EAAOmO,GACLC,MAAMC,QAAQrO,EAAOmO,IACvBnO,EAAOmO,GAAKrD,KAAKsC,GAEjBpN,EAAOmO,GAAO,CAACnO,EAAOmO,GAAMf,GAG9BpN,EAAOmO,GAAOf,EAGTpN,CACR,GA5DH,wBAgEE,SAAkBM,EAAWnB,GAC3B,IAD2C,EACrCa,EAAS,IAAUM,GADkB,IAE3BnB,GAF2B,IAE3C,IAAK,EAAL,4BACSa,EADa,QAFqB,+BAM3C,OAAOA,CACR,GAvEH,yBA0EE,SAAmBM,EAAG6N,EAAaf,GACjC,IAAMpN,EAAS,IAAUM,GACzB,GAAI8M,GAASgB,MAAMC,QAAQrO,EAAOmO,KAASnO,EAAOmO,GAAK4C,OAAS,EAAG,CACjE,IAAMW,EAAI1R,EAAOmO,GAAKqZ,QAAQpa,IACnB,IAAPsE,GACF1R,EAAOmO,GAAKiE,OAAOV,EAAG,EAEzB,aACQ1R,EAAOmO,GAGhB,OAAOnO,CACR,GAtFH,yBAyFE,SAAmBA,EAAgBmO,EAAaf,GAC9C,IAAM+gC,EAAQnuC,EAAOmO,GAErB,QAAIggC,IACE//B,MAAMC,QAAQ8/B,GACTA,EAAMhsC,SAASiL,GAEf+gC,IAAU/gC,EAKtB,GArGH,4BAwGE,SAAsBpN,EAAgB6hB,GAGpC,IAFA,IAAMksB,EAAc,GAEpB,MAAkB3uC,OAAOD,KAAKa,GAA9B,eAAuC,CAAlC,IAAMmO,EAAG,KAEZ,IAAI0T,IAAgBA,EAAa1f,SAASgM,GAG1C,GAAIC,MAAMC,QAAQrO,EAAOmO,IAAO,WACZnO,EAAOmO,IADK,IAC9B,IAAK,EAAL,qBAA+B,KAApBiK,EAAoB,QAC7B21B,EAAYjjC,KAAKqD,EAAM,IAAMigC,mBAAmBh2B,GACjD,CAH6B,+BAI/B,MACC21B,EAAYjjC,KAAKqD,EAAM,IAAMigC,mBAAmBpuC,EAAOmO,IAE1D,CAED,OAAO4/B,EAAYpe,KAAK,IACzB,GA1HH,+BA8HE,SAAyB9N,GACvB,OAAO,SAAU7hB,EAAgBquC,GAM/B1uC,KAAK8L,SAAS,CAAEzL,OAAQA,GAAUquC,GAClC1uC,KAAK4L,MAAMoB,QAAQ7B,KAAK,CACtBM,SAAUzL,KAAK4L,MAAMJ,SAASC,SAC9BkjC,OAAQ,IAAMruC,EAAYsuC,eAAevuC,EAAQ6hB,GAAgB,KAEpE,CACF,GA3IH,6BA8IE,YAKE,IAL8D,IAAvC7hB,EAAuC,EAAvCA,OAAQuS,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,aAK9C,MAJmBpT,OAAOD,KACxBc,EAAYuuC,WAAWxuC,EAAQuS,IAGjC,eAA8B,CAAzB,IAAMpE,EAAG,KACZnO,EAASC,EAAYwuC,YAAYzuC,EAAQmO,EAC1C,CAEDqE,EAAaxS,EACd,KAxJH,M,OAAaC,EAAAA,mBA2Jc,SAACinB,EAAMwnB,EAAYC,GAC1C,IAAMC,EAAS1nB,EAAK/kB,SAAS,KAEvB0sC,EAAUD,EAAS1nB,EAAKxa,QAAQ,IAAK,IAAMwa,EAEjD,OAAIwnB,EAAWvsC,SAAS0sC,GACfD,EAAS1nB,EAAO2nB,EAGlBF,CACR,G,0JCvKH,IAAMG,EACJ,wEAEK,SAAShyB,EAAmBjb,GAAqB,Q,25BAAA,CAChCA,EAAImL,MAAM,MADsB,IACtD,IAAK,EAAL,qBAAsC,KAA3B+hC,EAA2B,QACpC,GAAIA,EAAQ7hC,MAAM4hC,GAChB,OAAOC,CAEV,CALqD,+BAOtD,OAAO,IACR,C","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/store/index.js","webpack:///./src/loaders/insights/Routes.tsx","webpack:///./src/loaders/insights/insights-loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/l10n.ts","webpack:///./src/app-entry.js","webpack:///./src/utilities/getBaseName.js","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/about-modal/about-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/delete-modal/delete-execution-environment-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/owners-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-header.tsx","webpack:///./src/components/rbac/role-permissions.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/constants.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: (params) => ParamHelper.getQueryString(params),\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: string,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n}\n\nexport const NamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = this.getUIPath('execution-environments/repositories/');\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/repositories/');\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/namespaces/');\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n}\n\nexport const Repositories = new API();\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (!registry) {\n    registry = new ReducerRegistry({}, [promise, ...middleware]);\n  }\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paths } from 'src/paths';\nimport { LoadingPageWithHeader } from 'src/components';\n\nconst EditNamespace = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/edit-namespace/edit-namespace'\n    ),\n);\n\nconst CollectionDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-detail'\n    ),\n);\n\nconst CollectionContent = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-content'\n    ),\n);\n\nconst CollectionDocs = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-docs'\n    ),\n);\n\nconst CollectionImportLog = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-import-log'\n    ),\n);\n\nconst CollectionDependencies = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-dependencies'\n    ),\n);\n\nconst NotFound = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"not_found\" */\n      '../../containers/not-found/not-found'\n    ),\n);\n\nconst MyNamespaces = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_list\" */\n      '../../containers/namespace-list/my-namespaces'\n    ),\n);\n\nconst ManageNamespace = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/namespace-detail/namespace-detail'\n    ),\n);\n\nconst PartnerDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/namespace-detail/namespace-detail'\n    ),\n);\n\nconst Partners = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_list\" */\n      '../../containers/namespace-list/' + NAMESPACE_TERM\n    ),\n);\n\nconst MyImports = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"my_imports\" */\n      '../../containers/my-imports/my-imports'\n    ),\n);\n\nconst Search = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"search\" */\n      '../../containers/search/search'\n    ),\n);\n\nconst TokenPage = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/token/token-insights'\n    ),\n);\n\nconst TaskListView = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/task-management/task-list-view'\n    ),\n);\n\nconst TaskDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/task-management/task_detail'\n    ),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/certification-dashboard/certification-dashboard'\n    ),\n);\n\nconst Repository = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"repository-list\" */\n      '../../containers/repositories/repository-list'\n    ),\n);\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n  return (\n    <Suspense fallback={LoadingPageWithHeader}>\n      <Switch>\n        <Route path={Paths.repositories} component={Repository} />\n        <Route\n          path={Paths.approvalDashboard}\n          component={CertificationDashboard}\n        />\n        <Route path={Paths.notFound} component={NotFound} />\n        <Route path={Paths.token} component={TokenPage} />\n        <Route path={Paths[NAMESPACE_TERM]} component={Partners} />\n        <Route path={Paths.editNamespace} component={EditNamespace} />\n        <Route path={Paths.myCollections} component={ManageNamespace} />\n        <Route path={Paths.myCollectionsByRepo} component={ManageNamespace} />\n        <Route path={Paths.myNamespaces} component={MyNamespaces} />\n        <Route path={Paths.taskList} component={TaskListView} />\n        <Route path={Paths.taskDetail} component={TaskDetail} />\n        <Route\n          path={Paths.collectionDocsPageByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionDocsIndexByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentDocsByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentListByRepo}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLogByRepo}\n          component={CollectionImportLog}\n        />\n        <Route\n          path={Paths.collectionDependenciesByRepo}\n          component={CollectionDependencies}\n        />\n        <Route path={Paths.collectionByRepo} component={CollectionDetail} />\n        <Route path={Paths.namespaceByRepo} component={PartnerDetail} />\n        <Route path={Paths.searchByRepo} component={Search} />\n        <Route path={Paths.collectionDocsPage} component={CollectionDocs} />\n        <Route path={Paths.collectionDocsIndex} component={CollectionDocs} />\n        <Route path={Paths.collectionContentDocs} component={CollectionDocs} />\n        <Route\n          path={Paths.collectionContentList}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLog}\n          component={CollectionImportLog}\n        />\n        <Route path={Paths.myImports} component={MyImports} />\n        <Route path={Paths.collection} component={CollectionDetail} />\n        <Route path={Paths.namespace} component={PartnerDetail} />\n        <Route path={Paths.search} component={Search} />\n        <Route>\n          <Redirect push to={Paths.notFound} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n};\n","import { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { RouteComponentProps, withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Alert } from '@patternfly/react-core';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { Paths } from 'src/paths';\nimport { AlertType, UIVersion } from 'src/components';\n\nconst DEFAULT_REPO = 'published';\n\ninterface IProps {\n  basename: string;\n  history: RouteComponentProps['history'];\n  location: RouteComponentProps['location'];\n  match: RouteComponentProps['match'];\n}\n\ninterface IState {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  selectedRepo: string;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      alerts: [],\n      featureFlags: null,\n      selectedRepo: DEFAULT_REPO,\n      settings: null,\n      user: null,\n    };\n  }\n\n  appNav: () => void;\n\n  componentDidMount() {\n    window.insights.chrome.init();\n    window.insights.chrome.identifyApp('automation-hub', APPLICATION_NAME);\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = window.insights.chrome.on('APP_NAVIGATION', (event) => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent?.href) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, no trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename.replace(/^\\/beta\\//, '/');\n\n      // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n      // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n      const href = event.domEvent.href.replace(basename, '') || '/';\n\n      this.props.history.push(href);\n    });\n\n    loadContext().then((data) => this.setState(data));\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate() {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user) {\n      return null;\n    }\n\n    return (\n      <AppContext.Provider\n        value={{\n          alerts: this.state.alerts,\n          featureFlags: this.state.featureFlags,\n          selectedRepo: this.state.selectedRepo,\n          setAlerts: this.setAlerts,\n          setRepo: this.setRepo,\n          setUser: this.setUser,\n          settings: this.state.settings,\n          user: this.state.user,\n        }}\n      >\n        <Alert\n          isInline\n          variant='info'\n          title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n        />\n        <Routes childProps={this.props} />\n        <UIVersion />\n      </AppContext.Provider>\n    );\n  }\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  setAlerts = (alerts) => {\n    this.setState({ alerts });\n  };\n\n  isRepoURL = (location) => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n\n  setRepo = (_repo: string) => {\n    throw new Error('RepoSelector & setRepo only available in standalone');\n  };\n}\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  UserType,\n  SettingsType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags?._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// Accept-Language\nexport const userLanguage =\n  navigator.languages\n    .map((lang) => lang.replace(/[-_].*/, ''))\n    .filter((lang) => availableLanguages.includes(lang))[0] || 'en';\n\nasync function activate(locale: string) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (window.localStorage.test_l10n === 'true') {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(locale);\n}\n\nactivate(userLanguage);\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { I18nProvider } from '@lingui/react';\nimport { i18n } from '@lingui/core';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport getBaseName from './utilities/getBaseName';\nimport 'src/l10n';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst basename = getBaseName(window.location.pathname);\n\nconst AnsibleHub = () => (\n  <Provider store={init().getStore()}>\n    <Router basename={basename}>\n      <I18nProvider i18n={i18n}>\n        <App basename={basename} />\n      </I18nProvider>\n    </Router>\n  </Provider>\n);\n\nexport default AnsibleHub;\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport class AlertList extends React.Component<IProps> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n        data-cy='AlertList'\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams(ParamHelper.deleteParam(params, key, v))\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  AboutModal,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from '@patternfly/react-core';\nimport Logo from 'src/../static/images/logo_large.svg';\nimport { ApplicationInfoAPI, UserType } from 'src/api';\nimport { detect } from 'detect-browser';\n\ninterface IProps {\n  isOpen: boolean;\n  trademark: string;\n  brandImageSrc: string;\n  onClose: () => void;\n  brandImageAlt: string;\n  productName: string;\n  user: UserType;\n  userName: string;\n}\n\ninterface IState {\n  applicationInfo: {\n    galaxy_ng_commit: string;\n    pulp_ansible_version: string;\n    server_version: string;\n  };\n}\n\nexport class AboutModalWindow extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicationInfo: {\n        galaxy_ng_commit: '',\n        pulp_ansible_version: '',\n        server_version: '',\n      },\n    };\n  }\n\n  componentDidMount() {\n    ApplicationInfoAPI.get().then((result) => {\n      this.setState({\n        applicationInfo: {\n          galaxy_ng_commit: result.data.galaxy_ng_commit,\n          pulp_ansible_version: result.data.pulp_ansible_version,\n          server_version: result.data.server_version,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { isOpen, onClose, brandImageAlt, productName, user, userName } =\n      this.props;\n    const browser = detect();\n\n    const Label = ({ children }) => (\n      <TextListItem component={TextListItemVariants.dt}>\n        {children}\n      </TextListItem>\n    );\n    const Value = ({ children }) => (\n      <TextListItem component={TextListItemVariants.dd}>\n        {children}\n      </TextListItem>\n    );\n\n    return (\n      <AboutModal\n        isOpen={isOpen}\n        trademark=''\n        brandImageSrc={Logo}\n        onClose={onClose}\n        brandImageAlt={brandImageAlt}\n        productName={productName}\n      >\n        <TextContent>\n          <TextList component={TextListVariants.dl}>\n            <Label>{t`Server version`}</Label>\n            <Value>\n              {this.state.applicationInfo.server_version}\n              <br />\n              {this.state.applicationInfo.galaxy_ng_commit}\n            </Value>\n\n            <Label>{t`Pulp Ansible Version`}</Label>\n            <Value>{this.state.applicationInfo.pulp_ansible_version}</Value>\n\n            <Label>{t`UI Version`}</Label>\n            <Value>{UI_COMMIT_HASH}</Value>\n\n            <Label>{t`Username`}</Label>\n            <Value>{userName}</Value>\n\n            <Label>{t`User Groups`}</Label>\n            <Value>{user.groups.map((group) => group.name).join()}</Value>\n\n            <Label>{t`Browser Version`}</Label>\n            <Value>{browser.name + ' ' + browser.version}</Value>\n\n            <Label>{t`Browser OS`}</Label>\n            <Value>{browser.os}</Value>\n          </TextList>\n        </TextContent>\n      </AboutModal>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <span data-cy='view_type_card'>\n          <ThLargeIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'card' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n            }\n          />\n        </span>\n        <span data-cy='view_type_list'>\n          <ListIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'list' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n            }\n          />\n        </span>\n      </div>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      className,\n      footer,\n      repo,\n      sign_state,\n      menu,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    return (\n      <Card className={cx('hub-c-card-collection-container ', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            flexGrow\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n          <SignatureBadge isCompact signState={sign_state} />\n          {menu}\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{t`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <CollectionNumericLabel count={count} newline type={type} />\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport { EmptyStateCustom } from 'src/components';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    const toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (const c of contents) {\n      summary[c.content_type] ||= 0;\n\n      const keywordMatch = c.name.match(keywords);\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n      // count only items matching keyword\n      if (keywordMatch) {\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n\n      // show only items matching keyword + type\n      if (keywordMatch && typeMatch) {\n        toShow.push(c);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label={t`find-content`}\n                  placeholder={t`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{t`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'hub-c-toolbar__item-selected-item': key === showing,\n                    'hub-c-toolbar__item-type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='hub-c-table-content pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{t`Name`}</th>\n              <th>{t`Type`}</th>\n              <th>{t`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {summary.all <= 0 &&\n          this.context.selectedRepo === 'community' &&\n          this.renderCommunityWarningMessage()}\n      </div>\n    );\n  }\n\n  private renderCommunityWarningMessage() {\n    return (\n      <EmptyStateCustom\n        title={t`Warning`}\n        description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n        icon={ExclamationTriangleIcon}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { Spinner } from '@patternfly/react-core';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\ninterface IState {\n  collectionCount: number;\n  alerts: AlertType[];\n  loading: boolean;\n}\n\nexport class CollectionCount extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collectionCount: null,\n      alerts: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getCollectionCount(this.props.distributionPath);\n  }\n\n  render() {\n    const { collectionCount, loading } = this.state;\n    return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n  }\n\n  private getCollectionCount(repo) {\n    const { distributionPath } = this.props;\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        this.setState({ collectionCount: count, loading: false });\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n        const { status, statusText } = err.response;\n        this.addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n        );\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  numberOfAffected: number;\n  affectedUnsigned: number;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport React, { FC } from 'react';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n\n  if (!display_signatures) {\n    return null;\n  }\n\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { errorMessage, DeleteCollectionUtils } from 'src/utilities';\nimport './header.scss';\n\nimport { Redirect } from 'react-router-dom';\n\nimport * as moment from 'moment';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  List,\n  ListItem,\n  Modal,\n  Alert,\n  Text,\n  Button,\n  DropdownItem,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  BreadcrumbType,\n  LinkTabs,\n  Logo,\n  RepoSelector,\n  Pagination,\n  AlertList,\n  AlertType,\n  closeAlertMixin,\n  StatefulDropdown,\n  SignSingleCertificateModal,\n  SignAllCertificatesModal,\n  UploadSingCertificateModal,\n  ImportModal,\n  DeleteCollectionModal,\n} from 'src/components';\n\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  SignCollectionAPI,\n  CollectionListType,\n  MyNamespaceAPI,\n  CollectionVersion,\n  Repositories,\n  CertificateUploadAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  waitForTask,\n  canSign as canSignNS,\n  parsePulpIDFromURL,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { Constants } from 'src/constants';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context?.featureFlags || {};\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Redirect push to={redirect} />;\n    }\n\n    const canSign = canSignNS(this.context, namespace);\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          this.context.user.model_permissions.delete_collection,\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      this.context.user.model_permissions.delete_collection && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              numberOfAffected={collection.total_versions}\n              affectedUnsigned={collection.unsigned_versions}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={collectionVersion}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceByRepo, {\n                      repo: this.context.selectedRepo,\n                      namespace: deleteCollection.namespace.name,\n                    }),\n                    selectedRepo: this.context.selectedRepo,\n                    addAlert: (alert) =>\n                      this.context.setAlerts([...this.state.alerts, alert]),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={Paths.searchByRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              <SignatureBadge\n                isCompact\n                signState={collection.latest_version.sign_state}\n              />\n            </div>\n          }\n          pageControls={\n            dropdownItems.length > 0 ? (\n              <div data-cy='kebab-toggle'>\n                <StatefulDropdown items={dropdownItems} />\n              </div>\n            ) : null\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`API Error: ${status}`,\n      description: t`Failed to sign all versions in the collection.`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`API Error: ${status}`,\n      description: t`Failed to sign the version.`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import React, { FC, useState } from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { t } from '@lingui/macro';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem: FC<Props> = ({ version }) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-info.scss';\nimport { errorMessage } from 'src/utilities';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  Button,\n  Alert,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag, ClipboardCopy, LoginLink } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: React.RefObject<HTMLAnchorElement>;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const { name, latest_version, namespace, params } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{t`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>{latest_version.metadata.license}</SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Installing collections with ansible-galaxy is\n                    only supported in ansible 2.9+\n                  </Trans>\n                </div>\n                {this.context.user.is_anonymous &&\n                !this.context.settings\n                  .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                  <Alert\n                    className={'hub-collection-download-alert'}\n                    isInline\n                    variant='warning'\n                    title={\n                      <React.Fragment>\n                        {t`You have to be logged in to be able to download the tarball.`}{' '}\n                        <LoginLink />\n                      </React.Fragment>\n                    }\n                  />\n                ) : (\n                  <div>\n                    <a\n                      ref={this.downloadLinkRef}\n                      style={{ display: 'none' }}\n                    ></a>\n                    <Button\n                      className='download-button'\n                      variant='link'\n                      data-cy='download-collection-tarball-button'\n                      icon={<DownloadIcon />}\n                      onClick={() =>\n                        this.download(\n                          this.context.selectedRepo,\n                          namespace,\n                          name,\n                          latest_version,\n                        )\n                      }\n                    >\n                      {t`Download tarball`}\n                    </Button>\n                  </div>\n                )}\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <DownloadSignatureGridItem version={latest_version} />\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {t`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled data-cy='ansible-requirement'>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='hub-readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='hub-fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {t`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    )\n      .then((downloadURL: string) => {\n        // By getting a reference to a hidden <a> tag, setting the href and\n        // programmatically clicking it, we can hold off on making the api\n        // calls to get the download URL until it's actually needed. Clicking\n        // the <a> tag also gets around all the problems using a popup with\n        // window.open() causes.\n        this.downloadLinkRef.current.href = downloadURL;\n        this.downloadLinkRef.current.click();\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.props.addAlert(\n          'danger',\n          t`Collection \"${name}\" could not be downloaded.`,\n          errorMessage(status, statusText),\n        );\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\ninterface IState {\n  inputText: string;\n}\n\nexport class CollectionFilter extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: props.params.keywords || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.keywords !== this.props.params['keywords']) {\n      this.setState({ inputText: this.props.params['keywords'] || '' });\n    }\n  }\n\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n    const { display_signatures } = this.context?.featureFlags || {};\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as const,\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n      display_signatures && {\n        id: 'sign_state',\n        title: t`Sign state`,\n        inputType: 'select' as const,\n        options: [\n          { id: 'signed', title: t`Signed` },\n          { id: 'unsigned', title: t`Unsigned` },\n        ],\n      },\n    ].filter(Boolean);\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup style={{ marginLeft: 0 }}>\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={this.state.inputText}\n                onChange={(text) => this.setState({ inputText: text })}\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  niceNames={{\n                    sign_state: t`sign state`,\n                    tags: t`tags`,\n                    keywords: t`keywords`,\n                  }}\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './list.scss';\n\nimport { DataList } from '@patternfly/react-core';\nimport { CollectionListType } from 'src/api';\n\nimport {\n  CollectionListItem,\n  Pagination,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  repo?: string;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.props.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n        <Pagination\n          params={params}\n          updateParams={(p) => updateParams(p)}\n          count={itemCount}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  CollectionNumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps> {\n  render() {\n    const {\n      name,\n      // download_count,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n      sign_state,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n            data-cy='CollectionList-name'\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='hub-entry'>{latest_version.metadata.description}</div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          {Object.keys(contentSummary.contents).map((type) => (\n            <div key={type}>\n              <CollectionNumericLabel\n                count={contentSummary.contents[type]}\n                type={type}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='hub-entry'>{controls}</div> : null}\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>v{latest_version.version}</div>\n        <SignatureBadge className='hub-entry' signState={sign_state} />\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='CollectionListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\n\nimport { EmptyStateNoData } from 'src/components';\n\nimport { CollectionDetailType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  repo: string;\n}\n\nexport class CollectionDependenciesList extends React.Component<IProps> {\n  render() {\n    const { collection, repo } = this.props;\n\n    const { dependencies } = collection.latest_version.metadata;\n\n    if (!Object.keys(dependencies).length) {\n      return (\n        <EmptyStateNoData\n          title={t`No dependencies`}\n          description={t`Collection does not have dependencies.`}\n        />\n      );\n    }\n\n    return (\n      <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n        {Object.keys(dependencies).map((dependency, i) => (\n          <ListItem key={i} style={{ marginRight: '70px' }}>\n            <Link\n              to={formatPath(\n                Paths.collectionByRepo,\n                {\n                  collection: this.splitDependencyName(dependency).collection,\n                  namespace: this.splitDependencyName(dependency).namespace,\n                  repo,\n                },\n                this.separateVersion(dependencies[dependency]),\n              )}\n            >\n              {this.splitDependencyName(dependency).collection}\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n\n  private splitDependencyName(dependency) {\n    const [namespace, collection] = dependency.split('.');\n    return { namespace, collection };\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CollectionUsedByDependencies } from 'src/api';\n\nimport {\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup,\n  SearchInput,\n} from '@patternfly/react-core';\n\nimport {\n  Pagination,\n  EmptyStateNoData,\n  EmptyStateFilter,\n  Sort,\n  LoadingPageSpinner,\n} from 'src/components';\n\nimport { ParamHelper, filterIsSet } from 'src/utilities';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionUsedbyDependenciesList extends React.Component<IProps> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  render() {\n    const {\n      params,\n      usedByDependencies,\n      itemCount,\n      updateParams,\n      usedByDependenciesLoading,\n    } = this.props;\n\n    if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n      return (\n        <EmptyStateNoData\n          title={t`Not required for use by other collections`}\n          description={t`Collection is not being used by any collection.`}\n        />\n      );\n    }\n\n    return (\n      <>\n        <div className='hub-usedby-dependencies-header'>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.name__icontains || ''}\n                  onChange={(val) =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', val),\n                    )\n                  }\n                  onClear={() =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', ''),\n                    )\n                  }\n                  aria-label='filter-collection-name'\n                  placeholder={t`Filter by name`}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Sort\n                  options={[\n                    { title: t`Collection`, id: 'collection', type: 'alpha' },\n                  ]}\n                  params={params}\n                  updateParams={({ sort }) =>\n                    updateParams(ParamHelper.setParam(params, 'sort', sort))\n                  }\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n          {!!itemCount && (\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n              isTop\n            />\n          )}\n        </div>\n\n        {usedByDependenciesLoading ? (\n          <LoadingPageSpinner />\n        ) : (\n          <>\n            {!itemCount ? (\n              <EmptyStateFilter />\n            ) : (\n              <>\n                <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                  <tbody>\n                    {usedByDependencies.map(\n                      ({ name, namespace, version, repository_list }, i) => (\n                        <tr key={i}>\n                          <td>\n                            <Link\n                              to={formatPath(\n                                Paths.collectionByRepo,\n                                {\n                                  collection: name,\n                                  namespace,\n                                  repo: repository_list[0],\n                                },\n                                ParamHelper.getReduced(\n                                  { version },\n                                  this.ignoredParams,\n                                ),\n                              )}\n                            >\n                              {name} v{version}\n                            </Link>\n                          </td>\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n                <Pagination\n                  params={params}\n                  updateParams={(params) => updateParams(params)}\n                  count={itemCount}\n                />\n              </>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, strgin | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length != 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n    );\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n    );\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, children, deleteAction, isDisabled, title, spinner } =\n      this.props;\n\n    return (\n      <Modal\n        actions={[\n          <div data-cy='delete-button' key='delete'>\n            <Button\n              key='delete'\n              onClick={deleteAction}\n              variant='danger'\n              isDisabled={isDisabled}\n            >\n              {t`Delete`}\n              {spinner && <Spinner size='sm'></Spinner>}\n            </Button>\n          </div>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n        data-cy='modal_checkbox'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { ExecutionEnvironmentAPI } from 'src/api';\nimport { waitForTask } from 'src/utilities';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\n\nimport { Checkbox, Text } from '@patternfly/react-core';\n\ninterface IState {\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\ninterface IProps {\n  closeAction: () => void;\n  selectedItem: string;\n  addAlert: (message, variant, description?) => void;\n  afterDelete: () => void;\n}\n\nexport class DeleteExecutionEnvironmentModal extends React.Component<\n  IProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  render() {\n    const { selectedItem, closeAction } = this.props;\n    const { isDeletionPending, confirmDelete } = this.state;\n\n    return (\n      <DeleteModal\n        spinner={isDeletionPending}\n        title={t`Delete container?`}\n        cancelAction={() => closeAction()}\n        deleteAction={() => this.deleteContainer(selectedItem)}\n        isDisabled={!confirmDelete || isDeletionPending}\n      >\n        <Text className='delete-container-modal-message'>\n          <Trans>\n            Deleting <b>{selectedItem}</b> and its data will be lost.\n          </Trans>\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={(value) => this.setState({ confirmDelete: value })}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    );\n  }\n\n  deleteContainer(selectedItem: string) {\n    const { addAlert, closeAction, afterDelete } = this.props;\n    this.setState({ isDeletionPending: true }, () =>\n      ExecutionEnvironmentAPI.deleteExecutionEnvironment(selectedItem)\n        .then((result) => {\n          const taskId = result.data.task.split('tasks/')[1].replace('/', '');\n          waitForTask(taskId).then(() => {\n            this.setState({\n              confirmDelete: false,\n              isDeletionPending: false,\n            });\n            closeAction();\n            addAlert(\n              <Trans>\n                Execution environment &quot;{selectedItem}&quot; has been\n                successfully deleted.\n              </Trans>,\n              'success',\n            );\n            afterDelete();\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            confirmDelete: false,\n            isDeletionPending: false,\n          });\n          addAlert(\n            t`Execution environment \"${selectedItem}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n          closeAction();\n        }),\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { List, ListItem, Spinner, Alert } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserType, UserAPI } from 'src/api';\nimport { mapErrorMessages } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nexport class DeprecatedTag extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {t`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    return (\n      <EmptyState\n        variant={EmptyStateVariant[this.props.variant]}\n        data-cy='EmptyState'\n      >\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, CubesIcon } from '@patternfly/react-icons';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { LoginLink } from 'src/components';\n\nexport class EmptyStateUnauthorized extends React.Component {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={\n          <>\n            {t`Contact your organization administrator for more information.`}\n            <br />\n            <br />\n            <LoginLink button />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Paths, formatPath } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'owners', name: t`Owners` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'owners'\n                    ? formatPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'owners'\n                ? {\n                    name: t`Owners`,\n                    url: groupId\n                      ? formatPath(Paths.executionEnvironmentDetailOwners, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'owners' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={(p) => {\n                if (tab !== p.tab) {\n                  this.props.updateState({ redirect: p.tab });\n                }\n              }}\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { RoleAPI } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { RolePermissions, LoadingPageSpinner } from 'src/components';\n\ninterface IProps {\n  name: string;\n  filteredPermissions?: {\n    [key: string]: string;\n  };\n}\n\nexport const GroupRolePermissions = ({ name, filteredPermissions }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  if (!filteredPermissions) {\n    filteredPermissions = { ...Constants.HUMAN_PERMISSIONS };\n  }\n\n  return (\n    <>\n      <p>{role.description}</p>\n      <RolePermissions\n        filteredPermissions={filteredPermissions}\n        selectedPermissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion } = this.props;\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport {\n  Pagination,\n  FormSelect,\n  FormSelectOption,\n  Toolbar,\n} from '@patternfly/react-core';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { PulpStatus, NamespaceType, ImportListType } from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  namespaces: NamespaceType[];\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n    };\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      namespaces,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderNamespacePicker(namespaces)}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => {\n              p['page'] = 1;\n              this.props.updateParams(p);\n            }}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            p['page'] = 1;\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        <Pagination\n          itemCount={numberOfResults}\n          perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n          page={params.page || 1}\n          onSetPage={(_, p) =>\n            updateParams(ParamHelper.setParam(params, 'page', p))\n          }\n          onPerPageSelect={(_, p) => {\n            updateParams({ ...params, page: 1, page_size: p });\n          }}\n          isCompact={true}\n        />\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private renderNamespacePicker(namespaces) {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <FormSelect\n            onChange={(val) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                val,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            value={this.props.params.namespace}\n            aria-label={t`Select namespace`}\n          >\n            {namespaces.map((ns) => (\n              <FormSelectOption key={ns.name} label={ns.name} value={ns.name} />\n            ))}\n          </FormSelect>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from 'src/api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { DateComponent, EmptyStateNoData, SortTable, ClipboardCopy } from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { CollectionCount } from 'src/components';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport class LoginLink extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { button, next } = this.props;\n    const { featureFlags } = this.context;\n    const className = button ? 'pf-c-button pf-m-primary' : '';\n\n    // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n    if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n      return (\n        <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>\n      );\n    } else {\n      return (\n        <Link\n          className={className}\n          to={formatPath(Paths.login, {}, { next })}\n        >{t`Login`}</Link>\n      );\n    }\n  }\n}\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport class Main extends React.Component<IProps> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='hub-c-card-ns-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              alt={t`${company} logo`}\n              fallbackToDefault\n              image={avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{t`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\n\nimport {\n  Alert,\n  Form,\n  FormGroup,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  ExternalLinkAltIcon,\n  PlusCircleIcon,\n  TrashIcon,\n} from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\n\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup fieldId='none' label={t`Namespace owners`}>\n          <Alert\n            isInline\n            variant='info'\n            title={\n              <Trans>\n                Moved to the{' '}\n                <Link\n                  target='_blank'\n                  to={formatPath(\n                    Paths.myCollections,\n                    {\n                      namespace: namespace.name,\n                    },\n                    { tab: 'owners' },\n                  )}\n                >\n                  Namespace owners\n                </Link>{' '}\n                <ExternalLinkAltIcon /> tab\n              </Trans>\n            }\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\nimport { plural } from '@lingui/macro';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nexport class NumericLabel extends React.Component<IProps> {\n  render() {\n    const { number, newline, label } = this.props;\n\n    let numberElem = (\n      <span key='number'>{NumericLabel.roundNumber(number)} </span>\n    );\n    let labelElem = (\n      <span key='label' className='hub-numeric-label-label'>\n        {label}\n      </span>\n    );\n\n    if (newline) {\n      numberElem = <div>{numberElem}</div>;\n      labelElem = <div>{labelElem}</div>;\n    }\n\n    return (\n      <div>\n        {numberElem}\n        {labelElem}\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nexport class CollectionNumericLabel extends React.Component<ICNLProps> {\n  render() {\n    const { count, newline, type } = this.props;\n\n    const label =\n      {\n        module: plural(count, {\n          one: 'Module',\n          other: 'Modules',\n        }),\n        role: plural(count, {\n          one: 'Role',\n          other: 'Roles',\n        }),\n        plugin: plural(count, {\n          one: 'Plugin',\n          other: 'Plugins',\n        }),\n        dependency: plural(count, {\n          one: 'Dependency',\n          other: 'Dependencies',\n        }),\n      }[type] || type;\n\n    return <NumericLabel number={count} newline={newline} label={label} />;\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { sortBy } from 'lodash';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n  EmptyStateCustom,\n} from 'src/components';\nimport { ParamHelper, errorMessage } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  addAlert: (alert) => void;\n  groupId?: number;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  reload: () => void;\n  selectRolesMessage: string;\n  updateGroups: (groups: GroupType[]) => Promise<void>;\n  urlPrefix: string;\n}\n\ninterface IState {\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n}\n\nexport class OwnersTab extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n    };\n  }\n\n  render() {\n    const { groups, groupId } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.state;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.setState({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {!this.context.user.is_superuser &&\n        !this.context.user.model_permissions.view_group ? (\n          <EmptyStateCustom\n            title={t`You do not have the required permissions.`}\n            description={t`Please contact the server administrator for elevated permissions.`}\n            icon={ExclamationTriangleIcon}\n          />\n        ) : noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={t`Please add an owner by using the button below.`}\n            button={buttonAdd}\n          />\n        ) : groupId ? (\n          this.renderRoles({ groupId })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        <div>\n          <Toolbar>\n            <ToolbarContent>\n              <ToolbarItem>{buttonAdd}</ToolbarItem>\n            </ToolbarContent>\n          </Toolbar>\n        </div>\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix } = this.props;\n\n    const dropdownItems = [\n      this.context.user.model_permissions.change_containernamespace && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.setState({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`OwnersTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({ group: group.id, tab: 'owners' })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ groupId }) {\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.state;\n    const group = this.props.groups.find(({ id }) => Number(groupId) === id);\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = this.context.user.is_superuser && (\n      <Button\n        onClick={() =>\n          this.setState({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        <div>\n          <Toolbar>\n            <ToolbarContent>\n              <ToolbarItem>{buttonAdd}</ToolbarItem>\n            </ToolbarContent>\n          </Toolbar>\n        </div>\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  this.context.user.is_superuser && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.setState({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.state.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() => this.setState({ showGroupRemoveModal: null })}\n        deleteAction={() => this.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.state.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() => this.setState({ showRoleRemoveModal: null })}\n        deleteAction={() => this.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.state;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.setState({ showGroupSelectWizard: { group, roles } })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.setState({ showGroupSelectWizard: { group, roles } })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.setState({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.state;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.setState({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.setState({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.updateGroup(group, roles)}\n      />\n    );\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateSuccess }) {\n    const { reload, updateGroups } = this.props;\n\n    return updateGroups(groups)\n      .then(() => {\n        this.setState(stateSuccess);\n        this.props.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        reload(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.props.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  private addGroup(group, roles) {\n    const { name, groups } = this.props;\n    const newGroup = {\n      ...group,\n      object_roles: roles.map(({ name }) => name),\n    };\n    const newGroups = [...groups, newGroup];\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: {\n        showGroupSelectWizard: null,\n      },\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n    });\n  }\n\n  private removeGroup(group) {\n    const { name, groups } = this.props;\n    const newGroups = groups.filter((g) => g !== group);\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: {\n        showGroupRemoveModal: null,\n      },\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n    });\n  }\n\n  private updateGroup(group, roles) {\n    const { name, groups } = this.props;\n    const newGroup = {\n      ...group,\n      object_roles: [...group.object_roles, ...roles.map(({ name }) => name)],\n    };\n    const newGroups = groups.map((g) => (g === group ? newGroup : g));\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: { showRoleSelectWizard: null },\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n    });\n  }\n\n  private removeRole(role, group) {\n    const { name, groups } = this.props;\n    const newGroup = {\n      ...group,\n      object_roles: group.object_roles.filter((name) => name !== role),\n    };\n    const newGroups = groups.map((g) => (g === group ? newGroup : g));\n\n    return this.updateGroups({\n      groups: newGroups,\n      stateSuccess: { showRoleRemoveModal: null },\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n    });\n  }\n}\nOwnersTab.contextType = AppContext;\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n  ToggleTemplate,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n        titles={{\n          ofWord: t`of`,\n          perPageSuffix: t`per page`,\n          items: null,\n        }}\n        toggleTemplate={(props) => <ToggleTemplate ofWord={t`of`} {...props} />}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport {\n  BaseHeader,\n  Logo,\n  Tabs,\n  TabsType,\n  Breadcrumbs,\n  BreadcrumbType,\n} from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  customPermissions?: string[];\n  setSelected?: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n  multilingual?: boolean;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map((text) => (\n            <Label key={text}>\n              {this.props.multilingual ? i18n._(text) : text}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    let selections = [];\n    if (this.props.multilingual) {\n      selections = this.props.selectedPermissions.map((value) => ({\n        // orginal english value\n        value,\n        // translated\n        toString: () => i18n._(value),\n      }));\n    } else {\n      selections = this.props.selectedPermissions;\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        onClear={this.props.onClear ? this.props.onClear : this.clearSelection}\n        selections={selections}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option}>\n                {this.props.multilingual ? i18n._(option) : option}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return t`Select permissions`;\n    }\n    return this.props.selectedPermissions.length === 0 ? t`No permission` : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    // value contains orginal key in english\n    if (this.props.multilingual && selection.value) {\n      selection = selection.value;\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(event, selection);\n    } else {\n      const newPerms = new Set(this.props.selectedPermissions);\n      if (newPerms.has(selection)) {\n        newPerms.delete(selection);\n      } else {\n        newPerms.add(selection);\n      }\n\n      this.props.setSelected(Array.from(newPerms));\n    }\n  };\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n  inputText: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n  inputText: '',\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Controllers list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-pulp_created',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Tags could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, digest, tag } = this.state;\n    const url = getContainersURL();\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const imageUrl = `${url}/${tag ? `${image}:${tag}` : digest}`;\n          const href = `${host}/#/execution_environments/add?image=${encodeURIComponent(\n            imageUrl,\n          )}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    const docsLink =\n      'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank' rel='noreferrer'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that\n              Controller&apos;s console. Log in (if necessary) and follow the\n              steps to complete the configuration.\n            </Trans>\n            <br />\n            {!unsafeLinksSupported && (\n              <Trans>\n                <b>Note:</b> The following links may be blocked by your browser.\n                Copy and paste the external link manually.\n              </Trans>\n            )}\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  inputText={this.state.inputText}\n                  onChange={(text) => this.setState({ inputText: text })}\n                  updateParams={(controllerParams) => {\n                    controllerParams.page = 1;\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText, FileUpload } from 'src/components';\n\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  DownloadIcon,\n  ExclamationTriangleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet, isWriteOnly, ErrorMessagesType } from 'src/utilities';\n\nimport { validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const { remote } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n        'signed_only',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='link'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const { filenames } = this.state;\n    const { signatures_enabled } = this.context?.featureFlags || {};\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && signatures_enabled ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      filenames.requirements_file.name,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.client_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.ca_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, SortTable, ListItemActions } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { lastSynced, lastSyncStatus } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { user } = this.props;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length && user?.model_permissions?.change_remote && (\n        <DropdownItem key='edit' onClick={() => this.props.editRemote(remote)}>\n          {t`Edit`}\n        </DropdownItem>\n      ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { user } = this.props;\n    if (!user?.model_permissions?.change_remote) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    const repoNames = Constants.REPOSITORYNAMES;\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              style={{ paddingLeft: 0 }}\n              variant='plain'\n              className='hub-input-group-text-no-wrap'\n            >\n              {t`Filter by repository`}\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoName(event.target.name);\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: event.target.name,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={(isExpanded) => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              {Object.keys(repoNames).map((option) => (\n                <SelectOption\n                  name={option}\n                  key={option}\n                  value={i18n._(repoNames[option])}\n                />\n              ))}\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoName(repoName) {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return i18n._(repo);\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { AlertType, APISearchTypeAhead, HelperText } from 'src/components';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remotePulpId?: string;\n  addAlert?: (variant, title, description?) => void;\n  formError: { title: string; detail: string }[];\n}\n\ninterface IState {\n  name: string;\n  description: string;\n\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors?: {\n    registries?: AlertType;\n  };\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {\n        registries: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              registries: {\n                title: t`Registries list could not be displayed.`,\n                description: errorMessage(status, statusText),\n                variant: 'danger',\n              },\n            },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`}\n                validated={this.validateName(name)}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => this.setState({ name: value })}\n                  validated={this.validateName(name)}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n              >\n                {formErrors?.registries ? (\n                  <Alert\n                    title={formErrors.registries.title}\n                    variant='danger'\n                    isInline\n                  >\n                    {formErrors.registries.description}\n                  </Alert>\n                ) : (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n\n          <FormGroup fieldId='none' label={t`Groups with access`}>\n            <Alert\n              isInline\n              variant='info'\n              title={\n                isNew ? (\n                  <Trans>\n                    Moved to the <b>Owners</b> tab\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Moved to the{' '}\n                    <Link\n                      target='_blank'\n                      to={formatPath(Paths.executionEnvironmentDetailOwners, {\n                        container: name,\n                      })}\n                    >\n                      Owners\n                    </Link>{' '}\n                    <ExternalLinkAltIcon /> tab\n                  </Trans>\n                )\n              }\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n    const nameValid = name && this.validateName(name) === 'default';\n    return nameValid && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ pk, name }) => ({ id: pk, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remotePulpId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    if (isRemote && isNew) {\n      return ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    }\n\n    return Promise.all([\n      // remote edit - upstream, tags, registry\n      isRemote &&\n        !isNew &&\n        ExecutionEnvironmentRemoteAPI.update(remotePulpId, {\n          name: originalName, // readonly but required\n          upstream_name,\n          registry,\n          include_tags,\n          exclude_tags,\n        }),\n      // remote edit or local edit - description, if changed\n      description !== originalDescription &&\n        ContainerDistributionAPI.patch(distributionPulpId, { description }),\n    ]);\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { i18n } from '@lingui/core';\nimport { PermissionChipSelector } from 'src/components';\nimport {\n  ActionGroup,\n  Button,\n  Flex,\n  FlexItem,\n  Form,\n  TextInput,\n  InputGroup,\n  FormGroup,\n  Title,\n  Divider,\n  Spinner,\n} from '@patternfly/react-core';\n\nimport { twoWayMapper } from 'src/utilities';\n\nimport { Constants } from 'src/constants';\ninterface IState {\n  permissions: string[];\n}\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions: selectedPermissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n    const groups = Constants.PERMISSIONS;\n\n    const filteredPermissions = { ...Constants.HUMAN_PERMISSIONS };\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder='Role name'\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder='Add a role description here'\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>Permissions</Title>\n\n            {groups.map((group) => (\n              <Flex\n                style={{ marginTop: '16px' }}\n                alignItems={{ default: 'alignItemsCenter' }}\n                key={group.name}\n                className={group.name}\n                data-cy={`RoleForm-Permissions-row-${group.name}`}\n              >\n                <FlexItem style={{ minWidth: '200px' }}>\n                  {i18n._(group.label)}\n                </FlexItem>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <PermissionChipSelector\n                    availablePermissions={group.object_permissions\n                      .filter(\n                        (perm) =>\n                          !selectedPermissions.find(\n                            (selected) => selected === perm,\n                          ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))\n                      .sort()}\n                    selectedPermissions={selectedPermissions\n                      .filter((selected) =>\n                        group.object_permissions.find(\n                          (perm) => selected === perm,\n                        ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))}\n                    setSelected={(perms) =>\n                      this.setState({ permissions: perms })\n                    }\n                    menuAppendTo='inline'\n                    multilingual={true}\n                    isViewOnly={false}\n                    onClear={() => {\n                      const clearedPerms = group.object_permissions;\n                      this.setState({\n                        permissions: this.state.permissions.filter(\n                          (x) => !clearedPerms.includes(x),\n                        ),\n                      });\n                    }}\n                    onSelect={(event, selection) => {\n                      const newPerms = new Set(this.state.permissions);\n                      if (\n                        newPerms.has(\n                          twoWayMapper(selection, filteredPermissions),\n                        )\n                      ) {\n                        newPerms.delete(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      } else {\n                        newPerms.add(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      }\n                      this.setState({\n                        permissions: Array.from(newPerms),\n                      });\n                    }}\n                  />\n                </FlexItem>\n              </Flex>\n            ))}\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(selectedPermissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { BaseHeader, Breadcrumbs, BreadcrumbType } from 'src/components';\n\ninterface IProps {\n  title: string;\n  subTitle?: string;\n  breadcrumbs: BreadcrumbType[];\n}\n\nexport class RoleHeader extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title, subTitle, breadcrumbs } = this.props;\n    return (\n      <BaseHeader\n        breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n        title={title}\n      >\n        {' '}\n        <div style={{ paddingBottom: '10px' }}>\n          <Trans>{subTitle}</Trans>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\nimport * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { PermissionChipSelector } from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\n\ninterface IProps {\n  filteredPermissions: { [key: string]: string };\n  selectedPermissions: string[];\n  setPermissions?: (permissions) => void;\n  showEmpty: boolean;\n  showCustom: boolean;\n}\n\nexport const RolePermissions: React.FC<IProps> = ({\n  filteredPermissions,\n  selectedPermissions,\n  setPermissions,\n  showCustom,\n  showEmpty,\n}) => {\n  const permFilter = (availablePermissions) =>\n    selectedPermissions\n      .filter((selected) =>\n        availablePermissions.find((perm) => selected === perm),\n      )\n      .map((value) => twoWayMapper(value, filteredPermissions) ?? value);\n\n  const getSelected = (group) => permFilter(group.object_permissions);\n\n  const customPermissions = selectedPermissions.filter(\n    (perm) => !Object.keys(filteredPermissions).includes(perm),\n  );\n\n  const origGroups = Constants.PERMISSIONS.map((group) => ({\n    ...group,\n    label: i18n._(group.label),\n  }));\n  const allGroups = showCustom\n    ? [\n        ...origGroups,\n        {\n          name: 'custom',\n          label: t`Custom permissions`,\n          object_permissions: customPermissions,\n        },\n      ]\n    : origGroups;\n  const groups = showEmpty\n    ? allGroups\n    : allGroups.filter((group) => getSelected(group).length);\n\n  return (\n    <>\n      {groups.map((group) => (\n        <Flex\n          style={{ marginTop: '16px' }}\n          alignItems={{ default: 'alignItemsCenter' }}\n          key={group.name}\n          className={group.name}\n        >\n          <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n          <FlexItem grow={{ default: 'grow' }}>\n            <PermissionChipSelector\n              isViewOnly={!setPermissions}\n              menuAppendTo='inline'\n              multilingual={true}\n              selectedPermissions={getSelected(group).filter(Boolean)}\n              {...(setPermissions\n                ? {\n                    availablePermissions: group.object_permissions\n                      .filter(\n                        (perm) =>\n                          !selectedPermissions.find(\n                            (selected) => selected === perm,\n                          ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))\n                      .sort(),\n                    setSelected: setPermissions,\n                    onClear: () => {\n                      const clearedPermissions = group.object_permissions;\n                      setPermissions(\n                        selectedPermissions.filter(\n                          (x) => !clearedPermissions.includes(x),\n                        ),\n                      );\n                    },\n                    onSelect: (event, selection) => {\n                      const newPermissions = new Set(selectedPermissions);\n                      if (\n                        newPermissions.has(\n                          twoWayMapper(selection, filteredPermissions),\n                        )\n                      ) {\n                        newPermissions.delete(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      } else {\n                        newPermissions.add(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      }\n                      setPermissions(Array.from(newPermissions));\n                    },\n                  }\n                : {})}\n            />\n          </FlexItem>\n        </Flex>\n      ))}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { AlertType } from 'src/components';\n\nimport {\n  Button,\n  Modal,\n  Spinner,\n  Label,\n  LabelGroup,\n  Form,\n  FormGroup,\n  TextInput,\n  InputGroup,\n  Alert,\n  AlertActionLink,\n} from '@patternfly/react-core';\n\nimport { TagIcon } from '@patternfly/react-icons';\n\nimport {\n  ContainerManifestType,\n  ExecutionEnvironmentAPI,\n  ContainerTagAPI,\n  ContainerRepositoryType,\n  TaskAPI,\n  PulpStatus,\n} from 'src/api';\n\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup id='remove-tag' defaultIsOpen={true}>\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.pulp_id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.pulp_id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    const { digest, grey, long } = this.props;\n\n    return (\n      <Tooltip content={digest}>\n        <Label color={grey ? 'grey' : 'blue'}>\n          {long ? digest : truncateSha(digest)}\n        </Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams(\n        ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n      ),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n    );\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams(\n      ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n    );\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    const activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNodeArray;\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap: Record<string, LabelProps['variant']> = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: t`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: t`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: t`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: t`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type]}\n        color={labelProps.color}\n        icon={labelProps.icon}\n        className={this.props.className}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: t`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab.name}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps> {\n  render() {\n    return (\n      <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HTMLComment = ({ text, ...props }) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nHTMLComment.propTypes = { text: PropTypes.string };\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import * as React from 'react';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n  Alert,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { AlertType, APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport {\n  BaseHeader,\n  Main,\n  Breadcrumbs,\n  BreadcrumbType,\n  UserForm,\n} from 'src/components';\nimport { UserType } from 'src/api';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\n\nimport React, { useState } from 'react';\n\nimport { SortTable } from 'src/components';\n\nimport {\n  TableComposable,\n  Tr,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n} from '@patternfly/react-table';\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label={t`hidden value`}\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {t`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport class ClipboardCopy extends React.Component<IProps> {\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <PFClipboardCopy\n        hoverTip={t`Copy to clipboard`}\n        clickTip={t`Successfully copied to clipboard!`}\n        {...props}\n      >\n        {children}\n      </PFClipboardCopy>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  FileUpload as PFFileUpload,\n  FileUploadProps,\n} from '@patternfly/react-core';\n\nexport class FileUpload extends React.Component<FileUploadProps> {\n  render() {\n    return (\n      <PFFileUpload\n        browseButtonText={t`Browse...`}\n        clearButtonText={t`Clear`}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        {...this.props}\n      />\n    );\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n\n    return (\n      <td\n        style={{\n          paddingRight: '0px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {buttons?.length ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {kebabItems?.length ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { Text, Checkbox } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components';\nimport { CollectionDetailType, CollectionListType } from 'src/api';\n\ninterface IProps {\n  deleteCollection: CollectionDetailType | CollectionListType;\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport class DeleteCollectionModal extends React.Component<IProps> {\n  render() {\n    const {\n      deleteCollection,\n      isDeletionPending,\n      confirmDelete,\n      collectionVersion,\n      cancelAction,\n      deleteAction,\n      setConfirmDelete,\n    } = this.props;\n\n    return (\n      deleteCollection && (\n        <DeleteModal\n          spinner={isDeletionPending}\n          cancelAction={() => cancelAction()}\n          deleteAction={() => deleteAction()}\n          isDisabled={!confirmDelete || isDeletionPending}\n          title={\n            collectionVersion\n              ? t`Delete collection version?`\n              : t`Delete collection?`\n          }\n        >\n          <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n            {collectionVersion ? (\n              <>\n                {(deleteCollection as CollectionDetailType).all_versions\n                  .length === 1 ? (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost and this will cause the entire\n                    collection to be deleted.\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost.\n                  </Trans>\n                )}\n              </>\n            ) : (\n              <Trans>\n                Deleting <b>{deleteCollection.name}</b> and its data will be\n                lost.\n              </Trans>\n            )}\n          </Text>\n          <Checkbox\n            isChecked={confirmDelete}\n            onChange={setConfirmDelete}\n            label={t`I understand that this action cannot be undone.`}\n            id='delete_confirm'\n          />\n        </DeleteModal>\n      )\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Flex, FlexItem, Label, Divider } from '@patternfly/react-core';\nimport { RoleType, GroupType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { Constants } from 'src/constants';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => (\n  <div className='hub-custom-wizard-layout'>\n    <p>\n      <Trans>\n        The following roles will be applied to group:{' '}\n        <strong>{group.name}</strong>\n      </Trans>\n    </p>\n    <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n      {selectedRoles.map((role) => (\n        <React.Fragment key={role.name}>\n          <FlexItem>\n            <strong>{role.name}</strong>{' '}\n            {role?.description && `- ${role?.description}`}\n            <Flex className='hub-permissions'>\n              {role.permissions.map((permission) => (\n                <FlexItem\n                  key={permission}\n                  className='hub-permission'\n                  data-cy={`HubPermission-${permission}`}\n                >\n                  <Tooltip\n                    content={\n                      Constants.HUMAN_PERMISSIONS[permission] || permission\n                    }\n                  >\n                    <Label>{splitByDot(permission)}</Label>\n                  </Tooltip>\n                </FlexItem>\n              ))}\n            </Flex>\n          </FlexItem>\n          <FlexItem>\n            <Divider />\n          </FlexItem>\n        </React.Fragment>\n      ))}\n    </Flex>\n  </div>\n);\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { RoleType, RoleAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  CheckboxRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>{role.description}</td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { GroupType, GroupAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  RadioRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__contains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__contains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__contains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__contains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t, defineMessage } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      label: defineMessage({ message: `Collection Namespaces` }),\n      object_permissions: [\n        'galaxy.add_namespace', // model_permissions.add_namespace\n        'galaxy.change_namespace', // (model_permissions.change_namespace)\n        'galaxy.delete_namespace', // model_permissions.delete_namespace\n        'galaxy.upload_to_namespace', // (model_permissions.upload_to_namespace)\n      ],\n    },\n    {\n      name: 'collections',\n      label: defineMessage({ message: `Collections` }),\n      object_permissions: [\n        'ansible.modify_ansible_repo_content', // model_permissions.move_collection\n        'ansible.delete_collection', // model_permissions.delete_collection\n      ],\n    },\n    {\n      name: 'users',\n      label: defineMessage({ message: `Users` }),\n      object_permissions: [\n        'galaxy.view_user', // model_permissions.view_user\n        'galaxy.delete_user', // model_permissions.delete_user\n        'galaxy.add_user', // model_permissions.add_user\n        'galaxy.change_user', // model_permissions.change_user\n      ],\n    },\n    {\n      name: 'groups',\n      label: defineMessage({ message: `Groups` }),\n      object_permissions: [\n        'galaxy.view_group', // model_permissions.view_group\n        'galaxy.delete_group', // model_permissions.delete_group\n        'galaxy.add_group', // model_permissions.add_group\n        'galaxy.change_group', // model_permissions.change_group\n      ],\n    },\n    {\n      name: 'remotes',\n      label: defineMessage({ message: `Collection Remotes` }),\n      object_permissions: [\n        'ansible.change_collectionremote', // model_permissions.change_remote\n        'ansible.view_collectionremote',\n        // 'ansible.add_collectionremote', // (model_permissions.add_remote)\n        // 'ansible.delete_collectionremote', // (model_permissions.delete_remote)\n      ],\n    },\n    {\n      name: 'containers',\n      label: defineMessage({ message: `Containers` }),\n      object_permissions: [\n        // Turning off private container permissions since they aren't supported yet\n        // 'container.namespace_pull_containerdistribution',\n        // 'container.namespace_view_containerdistribution',\n\n        // 'container.add_containerrepository', // (model_permissions.add_containerrepository)\n        // 'container.change_containerrepository', // (model_permissions.change_containerrepository)\n        'container.delete_containerrepository', // model_permissions.delete_containerrepository\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.namespace_push_containerdistribution',\n\n        'container.add_containernamespace', // (model_permissions.add_containernamespace)\n        'container.change_containernamespace', // (model_permissions.change_containernamespace)\n        // 'container.delete_containernamespace', // (model_permissions.delete_containernamespace)\n      ],\n    },\n    {\n      name: 'registries',\n      label: defineMessage({ message: `Remote Registries` }),\n      object_permissions: [\n        'galaxy.add_containerregistryremote', // model_permissions.add_containerregistry\n        'galaxy.change_containerregistryremote', // model_permissions.change_containerregistry\n        'galaxy.delete_containerregistryremote', // model_permissions.delete_containerregistry\n      ],\n    },\n    {\n      name: 'task_management',\n      label: defineMessage({ message: `Task Management` }),\n      object_permissions: [\n        'core.change_task',\n        'core.delete_task',\n        'core.view_task',\n      ],\n    },\n\n    // These aren't currently used. Removing them to reduce confusion in the UI\n    // {\n    //   name: 'distribution',\n    //   label: '...',\n    //   object_permissions: [\n    //     'ansible.view_ansibledistribution', // (model_permissions.view_distribution)\n    //     'ansible.add_ansibledistribution', // (model_permissions.add_distribution)\n    //     'ansible.change_ansibledistribution', // (model_permissions.change_distribution)\n    //     'ansible.delete_ansibledistribution', // (model_permissions.delete_distribution)\n    //   ],\n    // },\n    // {\n    //   name: 'synclists',\n    //   label: '...',\n    //   object_permissions: [\n    //     'galaxy.delete_synclist',\n    //     'galaxy.change_synclist',\n    //     'galaxy.view_synclist',\n    //     'galaxy.add_synclist',\n    //   ],\n    // },\n    // {\n    //   name: 'container_distribution',\n    //   label: '...',\n    //   object_permissions: [\n    //     'container.add_containerdistribution', // (model_permissions.add_containerdistribution)\n    //     'container.change_containerdistribution', // (model_permissions.change_containerdistribution)\n    //     'container.delete_containerdistribution', // (model_permissions.delete_containerdistribution)\n    //   ],\n    // },\n  ];\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static HUMAN_PERMISSIONS = {\n    'ansible.add_ansibledistribution': t`Add Ansible distribution`,\n    'ansible.add_collectionremote': t`Add collection remote`,\n    'ansible.change_ansibledistribution': t`Change Ansible distribution`,\n    'ansible.change_collectionremote': t`Change collection remote`,\n    'ansible.delete_ansibledistribution': t`Delete Ansible distribution`,\n    'ansible.delete_collection': t`Delete collection`,\n    'ansible.delete_collectionremote': t`Delete collection remote`,\n    'ansible.modify_ansible_repo_content': t`Modify Ansible repo content`,\n    'ansible.view_ansibledistribution': t`View Ansible distribution`,\n    'ansible.view_collectionremote': t`View collection remote`,\n    'container.add_containerdistribution': t`Add container distribution`,\n    'container.add_containernamespace': t`Create new containers`,\n    'container.add_containerrepository': t`Add container repository`,\n    'container.change_containerdistribution': t`Change container distribution`,\n    'container.change_containernamespace': t`Change container namespace permissions`,\n    'container.change_containerrepository': t`Change container repository`,\n    'container.delete_containerdistribution': t`Delete container distribution`,\n    'container.delete_containernamespace': t`Delete container namespace`,\n    'container.delete_containerrepository': t`Delete container repository`,\n    'container.namespace_change_containerdistribution': t`Change containers`,\n    'container.namespace_modify_content_containerpushrepository': t`Change image tags`,\n    'container.namespace_pull_containerdistribution': t`Pull private containers`,\n    'container.namespace_push_containerdistribution': t`Push to existing containers`,\n    'container.namespace_view_containerdistribution': t`View private containers`,\n    'core.change_task': t`Change task`,\n    'core.delete_task': t`Delete task`,\n    'core.view_task': t`View all tasks`,\n    'galaxy.add_containerregistryremote': t`Add remote registry`,\n    'galaxy.add_group': t`Add group`,\n    'galaxy.add_namespace': t`Add namespace`,\n    'galaxy.add_synclist': t`Add synclist`,\n    'galaxy.add_user': t`Add user`,\n    'galaxy.change_containerregistryremote': t`Change remote registry`,\n    'galaxy.change_group': t`Change group`,\n    'galaxy.change_namespace': t`Change namespace`,\n    'galaxy.change_synclist': t`Change synclist`,\n    'galaxy.change_user': t`Change user`,\n    'galaxy.delete_containerregistryremote': t`Delete remote registry`,\n    'galaxy.delete_group': t`Delete group`,\n    'galaxy.delete_namespace': t`Delete namespace`,\n    'galaxy.delete_synclist': t`Delete synclist`,\n    'galaxy.delete_user': t`Delete user`,\n    'galaxy.upload_to_namespace': t`Upload to namespace`,\n    'galaxy.view_group': t`View group`,\n    'galaxy.view_synclist': t`View synclist`,\n    'galaxy.view_user': t`View user`,\n  };\n\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: t`Change namespace`,\n    upload_to_namespace: t`Upload to namespace`,\n    add_containernamespace: t`Create new containers`,\n    namespace_pull_containerdistribution: t`Pull private containers`,\n    namespace_change_containerdistribution: t`Update container information`,\n    namespace_view_containerdistribution: t`View private containers`,\n    namespace_modify_content_containerpushrepository: t`Change image tags`,\n    change_containernamespace: t`Change container namespace permissions`,\n    namespace_push_containerdistribution: t`Push images to existing containers`,\n    view_containernamespace: t`View container's namespace`,\n    delete_containernamespace: t`Delete container's namespace`,\n    namespace_delete_containerdistribution: t`Delete container's distribution`,\n    namespace_view_containerpushrepository: t`View container's repository`,\n    namespace_add_containerdistribution: t`Push new containers`,\n    change_containerdistribution: t`Change distribution`,\n    delete_containerdistribution: t`Delete distribution`,\n    push_containerdistribution: t`Push distribution`,\n    pull_containerdistribution: t`Pull distribution`,\n    view_containerdistribution: t`View distribution`,\n  };\n\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n}\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType, SettingsType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(\n  path: Paths,\n  data,\n  params?: Record<string, string | boolean>,\n) {\n  let url = path as string;\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    return `${url}?${ParamHelper.getQueryString(params)}`;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetailOwners = '/containers/:container+/_content/owners',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\nexport function getContainersURL() {\n  return window.location.href.split('://')[1].split('/ui')[0];\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: object) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find((key) => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  const splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\n\nexport function waitForTask(task, bailAfter = 10) {\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, 5000)).then(() =>\n        waitForTask(task, bailAfter - 1),\n      );\n    }\n  });\n}\n","import { t } from '@lingui/macro';\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","export const canSign = ({ featureFlags }, namespace) => {\n  const { can_create_signatures } = featureFlags || {};\n  const permissions = namespace?.related_fields?.my_permissions || [];\n  return (\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React from 'react';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { CollectionAPI } from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection) {\n    const { name, namespace } = collection;\n    return CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    selectedRepo,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(selectedRepo, collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams(params);\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","reject","err","undefined","ImportMessageCodes","PulpStatus","NamespaceAPI","API","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","for_object_type","newParams","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","RemoteAPI","distribution","_id","_obj","ApplicationInfoAPI","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","ControllerAPI","TaskManagementAPI","groupId","roleId","role","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","CertificateUploadAPI","repository","signed_collection","Repositories","registry","init","middleware","ReducerRegistry","promise","EditNamespace","lazy","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","CollectionDependencies","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","TaskListView","TaskDetail","CertificationDashboard","Repository","Routes","Suspense","fallback","LoadingPageWithHeader","Switch","Route","Paths","component","Redirect","push","to","propTypes","childProps","PropTypes","location","pathname","DEFAULT_REPO","App","props","user","setState","alerts","matchPath","_repo","state","featureFlags","selectedRepo","settings","getFeatureFlags","identifyApp","APPLICATION_NAME","appNav","on","event","domEvent","href","basename","replace","history","_messages","msg","variant","title","split","all","match","isRepoURL","value","setAlerts","setRepo","setUser","Alert","isInline","Component","withRouter","connect","availableLanguages","locale","messages","localStorage","test_l10n","forEach","key","Array","isArray","i18n","plurals","moment","activate","navigator","languages","lang","release","pathName","shift","store","getStore","APISearchTypeAhead","loadResults","onClear","evt","textInput","target","getOptions","isOpen","selection","isPlaceholder","onSelect","multiple","selected","selections","group","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","options","results","option","SelectOption","length","React","AlertList","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","marginBottom","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","showRepoSelector","cx","Title","headingLevel","size","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","Link","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","getCertification","SignatureBadge","isCompact","signState","formatPath","Text","TextVariants","CardBody","Tooltip","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","CollectionNumericLabel","newline","CollectionContentList","toShow","summary","showing","keywords","c","keywordMatch","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","renderCommunityWarningMessage","EmptyStateCustom","icon","ExclamationTriangleIcon","AppContext","CollectionCount","collectionCount","loading","getCollectionCount","Spinner","promises","collections","statusText","addAlert","errorMessage","DateComponent","date","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","useContext","display_signatures","Label","color","text","UploadSingCertificateModal","useState","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","page_size","modalPagination","errorAlert","isOpenSignAllModal","signing_service","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","redirect","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","activeTab","find","created","created_at","urlKeys","latestVersion","can_upload_signatures","isLatestVersion","signedString","collectionName","canSign","canSignNS","dropdownItems","canDeleteCollection","model_permissions","delete_collection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","numberOfAffected","total_versions","affectedUnsigned","unsigned_versions","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","toString","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","loadingVariant","renderSelectVersions","StatefulDropdown","items","renderTabs","rel","include_related","related_fields","my_permissions","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","concat","pulp_href","reload","warning","DownloadSignatureGridItem","show","setShow","signatures","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","downloadLinkRef","installCommand","tags","Tag","isFilled","license","ClipboardCopy","isReadOnly","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","inputText","prevProps","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","ListVariant","dependency","splitDependencyName","separateVersion","EmptyStateNoData","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","selectedFilter","selectedID","currentTarget","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","trim","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteModal","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","filteredPermissions","setRole","useEffect","selectedRole","RolePermissions","selectedPermissions","permissions","showCustom","showEmpty","HelperText","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","renderMessage","level","message","hideCollectionName","collectionHead","approvalStatus","rlist","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","selectImport","importList","namespaces","numberOfResults","renderNamespacePicker","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","ns","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","artifact","sha256","loaded","total","join","cancel","tab","renderTab","Bullseye","height","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","cliConfig","getRepoUrl","base_path","pulp_last_updated","isCode","next","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","roundNumber","labelElem","n","Math","floor","plugin","OwnersTab","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","noData","buttonAdd","renderGroupRemoveModal","renderGroupSelectWizard","view_group","renderRoles","renderGroups","sortedGroups","renderGroupRow","urlPrefix","change_containernamespace","ListItemActions","kebabItems","Number","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","pulpObjectType","selectRolesMessage","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addGroup","alertSuccess","alertFailure","stateSuccess","updateGroups","newGroup","newGroups","g","contextType","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","titles","ofWord","perPageSuffix","toggleTemplate","ToggleTemplate","String","PartnerHeader","filters","Tabs","PermissionChipSelector","setSelected","multilingual","newPerms","Set","has","add","from","isViewOnly","typeAheadAriaLabel","clearSelection","availablePermissions","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","getRemoteType","requiredFields","disabledFields","allowEditName","showModal","isValid","saveRemote","renderForm","signatures_enabled","docsAnsibleLink","fileOnChange","helperTextIcon","helperTextInvalidIcon","isChecked","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","Flex","FlexItem","grow","default","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","isNumericSet","rate_limit","isInteger","host","fieldName","newFields","is_set","isNaN","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","change_remote","editRemote","updated_at","lastSynced","lastSyncStatus","configButton","syncButton","syncRemote","distributions","selectExpanded","repoNames","InputGroupText","newRepo","getRepoName","repoName","setPermissions","getSelected","object_permissions","perm","twoWayMapper","customPermissions","origGroups","allGroups","minWidth","clearedPermissions","newPermissions","ResourcesForm","resources","updateResources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","ariaLabel","Dropdown","toggle","renderToggle","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","content_name","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","preventDefault","UserForm","newUser","updateUser","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","isStickyHeader","defaultTableHeader","TableComposable","colSpan","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","select","disable","RadioRow","hoverTip","clickTip","clearButtonText","textAlign","showClose","hasNoBodyWrapper","hasNoBodyPadding","navAriaLabel","mainAriaLabel","titleId","descriptionId","direction","permission","category","catTitle","charAt","splitByDot","Divider","setInputText","setRoles","rolesItemCount","setRolesItemCount","setLoading","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","published","community","completed","running","namespaceBreadcrumb","total_count","origin","getContainersURL","mapper","values","writeOnlyFields","el","newObj","sha","splitSha","entity","bailAfter","statusCode","outsideError","protocol","URL","can_create_signatures","getUsedbyDependencies","paramString","numericTypes","URLSearchParams","appendParam","param","encodeURIComponent","callback","search","getQueryString","getReduced","deleteParam","sortParams","defaultSort","isDesc","ascSort","UUIDRegEx","section"],"sourceRoot":""}