{"version":3,"file":"js/6289.98c134acfd312e97f698.js","mappings":"w1BAiBA,IAAMA,EAAkB,CAEtBC,EAAAA,GAEAC,EAAAA,GAEAC,EAAAA,GAEAC,EAAAA,IAmGF,SAhG8BC,EAAAA,EAAAA,IAAgC,CAC5DC,UAAWC,EAAAA,GACXC,gBAAiB,GACjBC,YAAa,gBACbC,YAAa,wBACbC,WAAYC,EAAAA,GAAAA,EAAA,wCACZC,WAAY,CAAC,EACbC,aAAc,CACZ,CACEC,GAAI,kBACJC,MAAOJ,EAAAA,GAAAA,EAAA,oBAET,CACEG,GAAI,SACJC,MAAOJ,EAAAA,GAAAA,EAAA,UACPK,UAAW,SACXC,QAAS,CACP,CACEH,GAAII,EAAAA,EAAAA,aACJH,MAAOJ,EAAAA,GAAAA,EAAA,aAET,CACEG,GAAII,EAAAA,EAAAA,YACJH,MAAOJ,EAAAA,GAAAA,EAAA,iBAET,CACEG,GAAII,EAAAA,EAAAA,SACJH,MAAOJ,EAAAA,GAAAA,EAAA,gBAKfQ,cAAe,CAACC,EAAAA,IAChBrB,gBAAAA,EACAsB,aAAcD,EAAAA,GAAAA,OACdE,kBAAmBX,EAAAA,GAAAA,EAAA,0CACnBY,YAAaZ,EAAAA,GAAAA,EAAA,uBACba,MAAO,SAAAC,GAAgB,IACfC,EAAWC,EAAA,GADHF,EAANG,QAGR,GAAIF,EAAoB,OAAG,CACzB,IAAMG,EAASH,EAAoB,cAC5BA,EAAoB,OAC3BA,EAA+B,kBAAI,YAAHI,OAAeD,EACjD,CACA,OAAOE,EAAAA,GAAAA,KAA0BL,EACnC,EACAM,eAAc,SAACC,EAA6BC,EAAeC,GACzD,IAAQC,EAAkCH,EAAlCG,KAAMC,EAA4BJ,EAA5BI,aAAcC,EAAcL,EAAdK,UACtBxB,GAAKyB,EAAAA,EAAAA,IAAmBD,GAExBE,EAAazC,EAAgB0C,KAAI,SAACC,GAAM,OAC5CA,EAAOC,aAAYhB,EAAAA,EAAC,CAAC,EAAIM,GAAI,IAAEnB,GAAAA,IAAMqB,EAAc,IAGrD,OACES,IAAAA,cAAA,MAAIC,IAAKX,GACPU,IAAAA,cAAA,UACEA,IAAAA,cAACE,EAAAA,KAAI,CAACC,IAAIC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,wBAA+B,CAAEb,KAAAA,KACnDA,IAGLQ,IAAAA,cAAA,WAAKM,EAAAA,EAAAA,IAAejB,IAAS,OAC7BW,IAAAA,cAAA,WAAKO,EAAAA,EAAAA,IAAWlB,IAAS,OACzBW,IAAAA,cAAA,UACEA,IAAAA,cAACQ,EAAAA,GAAa,CAACC,KAAMhB,KAEvBO,IAAAA,cAACU,EAAAA,GAAe,CAACd,WAAYA,IAGnC,EACAe,YAAa,CACX,CACExC,MAAOJ,EAAAA,GAAAA,EAAA,mBACP6C,KAAM,QACN1C,GAAI,QAEN,CACEC,MAAOJ,EAAAA,GAAAA,EAAA,eACP6C,KAAM,OACN1C,GAAI,kBAEN,CACEC,MAAOJ,EAAAA,GAAAA,EAAA,eACP6C,KAAM,OACN1C,GAAI,cAEN,CACEC,MAAOJ,EAAAA,GAAAA,EAAA,gBACP6C,KAAM,UACN1C,GAAI,iBAGRC,MAAOJ,EAAAA,GAAAA,EAAA,iB","sources":["webpack:///./src/containers/ansible-repository/list.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ansibleRepositoryCopyAction,\n  ansibleRepositoryCreateAction,\n  ansibleRepositoryDeleteAction,\n  ansibleRepositoryEditAction,\n  ansibleRepositorySyncAction,\n} from 'src/actions';\nimport { AnsibleRepositoryAPI, AnsibleRepositoryType } from 'src/api';\nimport { DateComponent, ListItemActions, ListPage } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRepositories } from 'src/permissions';\nimport { lastSyncStatus, lastSynced, parsePulpIDFromURL } from 'src/utilities';\n\nconst listItemActions = [\n  // Edit\n  ansibleRepositoryEditAction,\n  // Sync\n  ansibleRepositorySyncAction,\n  // Copy CLI configuration\n  ansibleRepositoryCopyAction,\n  // Delete\n  ansibleRepositoryDeleteAction,\n];\n\nconst AnsibleRepositoryList = ListPage<AnsibleRepositoryType>({\n  condition: canViewAnsibleRepositories,\n  defaultPageSize: 10,\n  defaultSort: '-pulp_created',\n  displayName: 'AnsibleRepositoryList',\n  errorTitle: t`Repositories could not be displayed.`,\n  extraState: {},\n  filterConfig: [\n    {\n      id: 'name__icontains',\n      title: t`Repository name`,\n    },\n    {\n      id: 'status',\n      title: t`Status`,\n      inputType: 'select',\n      options: [\n        {\n          id: Constants.NOTCERTIFIED,\n          title: t`Rejected`,\n        },\n        {\n          id: Constants.NEEDSREVIEW,\n          title: t`Needs Review`,\n        },\n        {\n          id: Constants.APPROVED,\n          title: t`Approved`,\n        },\n      ],\n    },\n  ],\n  headerActions: [ansibleRepositoryCreateAction], // Add repository\n  listItemActions,\n  noDataButton: ansibleRepositoryCreateAction.button,\n  noDataDescription: t`Repositories will appear once created.`,\n  noDataTitle: t`No repositories yet`,\n  query: ({ params }) => {\n    const queryParams = { ...params };\n\n    if (queryParams['status']) {\n      const status = queryParams['status'];\n      delete queryParams['status'];\n      queryParams['pulp_label_select'] = `pipeline=${status}`;\n    }\n    return AnsibleRepositoryAPI.list(queryParams);\n  },\n  renderTableRow(item: AnsibleRepositoryType, index: number, actionContext) {\n    const { name, pulp_created, pulp_href } = item;\n    const id = parsePulpIDFromURL(pulp_href);\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem({ ...item, id }, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </td>\n        <td>{lastSyncStatus(item) || '---'}</td>\n        <td>{lastSynced(item) || '---'}</td>\n        <td>\n          <DateComponent date={pulp_created} />\n        </td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  },\n  sortHeaders: [\n    {\n      title: t`Repository name`,\n      type: 'alpha',\n      id: 'name',\n    },\n    {\n      title: t`Sync status`,\n      type: 'none',\n      id: 'lastSyncStatus',\n    },\n    {\n      title: t`Last synced`,\n      type: 'none',\n      id: 'lastSynced',\n    },\n    {\n      title: t`Created date`,\n      type: 'numeric',\n      id: 'pulp_created',\n    },\n  ],\n  title: t`Repositories`,\n});\n\nexport default AnsibleRepositoryList;\n"],"names":["listItemActions","ansibleRepositoryEditAction","ansibleRepositorySyncAction","ansibleRepositoryCopyAction","ansibleRepositoryDeleteAction","ListPage","condition","canViewAnsibleRepositories","defaultPageSize","defaultSort","displayName","errorTitle","i18n","extraState","filterConfig","id","title","inputType","options","Constants","headerActions","ansibleRepositoryCreateAction","noDataButton","noDataDescription","noDataTitle","query","_ref","queryParams","_objectSpread","params","status","concat","AnsibleRepositoryAPI","renderTableRow","item","index","actionContext","name","pulp_created","pulp_href","parsePulpIDFromURL","kebabItems","map","action","dropdownItem","React","key","Link","to","formatPath","Paths","lastSyncStatus","lastSynced","DateComponent","date","ListItemActions","sortHeaders","type"],"sourceRoot":""}