{"version":3,"file":"js/namespace_list.1640905224659.0fcab61aef90b6d6a8f4.js","mappings":"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","sources":["webpack:///./src/containers/namespace-list/my-namespaces.tsx","webpack:///./src/containers/namespace-list/namespace-list.tsx","webpack:///./src/containers/namespace-list/partners.tsx"],"sourcesContent":["import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\nimport { EmptyStateUnauthorized } from 'src/components';\n\nclass MyNamespaces extends React.Component<RouteComponentProps, {}> {\n  render() {\n    if (!this.context.user || this.context.user.is_anonymous) {\n      return <EmptyStateUnauthorized />;\n    }\n    return (\n      <NamespaceList\n        {...this.props}\n        namespacePath={Paths.myCollectionsByRepo}\n        filterOwner={true}\n      />\n    );\n  }\n}\n\nexport default withRouter(MyNamespaces);\nMyNamespaces.contextType = AppContext;\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-list.scss';\n\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport {\n  BaseHeader,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LinkTabs,\n  LoadingPageSpinner,\n  LoadingPageWithHeader,\n  NamespaceCard,\n  NamespaceModal,\n  Pagination,\n  Toolbar,\n  AlertList,\n} from 'src/components';\nimport { Button, ToolbarItem } from '@patternfly/react-core';\nimport { NamespaceAPI, NamespaceListType, MyNamespaceAPI } from 'src/api';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { Constants } from 'src/constants';\nimport { filterIsSet } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IState {\n  namespaces: NamespaceListType[];\n  itemCount: number;\n  params: {\n    name?: string;\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tenant?: string;\n  };\n  hasPermission: boolean;\n  isModalOpen: boolean;\n  loading: boolean;\n  redirect?: string;\n}\n\ninterface IProps extends RouteComponentProps {\n  namespacePath: Paths;\n  filterOwner?: boolean;\n}\n\nexport class NamespaceList extends React.Component<IProps, IState> {\n  nonURLParams = ['tenant'];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = 20;\n    }\n\n    if (!params['sort']) {\n      params['sort'] = 'name';\n    }\n\n    this.state = {\n      namespaces: undefined,\n      itemCount: 0,\n      params: params,\n      hasPermission: true,\n      isModalOpen: false,\n      loading: true,\n    };\n  }\n\n  private handleModalToggle = () => {\n    this.setState(({ isModalOpen }) => ({\n      isModalOpen: !isModalOpen,\n    }));\n  };\n\n  componentDidMount() {\n    if (this.props.filterOwner) {\n      // Make a query with no params and see if it returns results to tell\n      // if the user can edit namespaces\n      MyNamespaceAPI.list({})\n        .then((results) => {\n          if (results.data.meta.count !== 0) {\n            this.loadNamespaces();\n          } else {\n            this.setState({\n              hasPermission: false,\n              namespaces: [],\n              loading: false,\n            });\n          }\n        })\n        .catch((e) =>\n          this.setState(\n            {\n              namespaces: [],\n              itemCount: 0,\n              loading: false,\n            },\n            () =>\n              this.context.setAlerts([\n                ...this.context.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Error loading my namespaces.`,\n                  description: e?.message,\n                },\n              ]),\n          ),\n        );\n    } else {\n      this.loadNamespaces();\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.setAlerts([]);\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to={this.state.redirect} />;\n    }\n\n    const { namespaces, params, itemCount, loading } = this.state;\n    const { filterOwner } = this.props;\n    const { user, alerts } = this.context;\n    const noData =\n      !filterIsSet(this.state.params, ['keywords']) &&\n      namespaces !== undefined &&\n      namespaces.length === 0;\n\n    if (loading) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    let extra = [];\n\n    if (user?.model_permissions?.add_namespace) {\n      extra.push(\n        <ToolbarItem key='create-button'>\n          <Button variant='primary' onClick={this.handleModalToggle}>\n            {t`Create`}\n          </Button>\n        </ToolbarItem>,\n      );\n    }\n\n    const title = namespaceBreadcrumb.name;\n    const titleLowerCase = title.toLowerCase();\n    const search = filterOwner\n      ? t`Search my namespaces`\n      : t`Search all ${titleLowerCase}`;\n\n    return (\n      <div className='hub-namespace-page'>\n        <NamespaceModal\n          isOpen={this.state.isModalOpen}\n          toggleModal={this.handleModalToggle}\n          onCreateSuccess={(result) =>\n            this.setState({\n              redirect: formatPath(Paths.myCollections, {\n                namespace: result['name'],\n              }),\n            })\n          }\n        ></NamespaceModal>\n        <AlertList alerts={alerts} closeAlert={() => this.closeAlert()} />\n        <BaseHeader title={title}>\n          {!this.context.user.is_anonymous && (\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <LinkTabs\n                  tabs={[\n                    {\n                      title: t`All`,\n                      link: Paths[NAMESPACE_TERM],\n                      active: !filterOwner,\n                    },\n                    {\n                      title: t`My namespaces`,\n                      link: Paths.myNamespaces,\n                      active: filterOwner,\n                    },\n                  ]}\n                />\n              </div>\n            </div>\n          )}\n          {noData ? null : (\n            <div className='toolbar'>\n              <Toolbar\n                params={params}\n                sortOptions={[{ title: t`Name`, id: 'name', type: 'alpha' }]}\n                searchPlaceholder={search}\n                updateParams={(p) =>\n                  this.updateParams(p, () => this.loadNamespaces())\n                }\n                extraInputs={extra}\n              />\n              <div>\n                <Pagination\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(p, () => this.loadNamespaces())\n                  }\n                  count={itemCount}\n                  isCompact\n                  perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                />\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        <section className='card-area'>{this.renderBody()}</section>\n        {noData || loading ? null : (\n          <section className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) =>\n                this.updateParams(p, () => this.loadNamespaces())\n              }\n              perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n              count={itemCount}\n            />\n          </section>\n        )}\n      </div>\n    );\n  }\n\n  private renderBody() {\n    const { namespaces, loading } = this.state;\n    const { namespacePath, filterOwner } = this.props;\n    const { user } = this.context;\n\n    const noDataTitle = t`No namespaces yet`;\n    const noDataDescription = !filterOwner\n      ? t`Namespaces will appear once created`\n      : t`This account is not set up to manage any namespaces`;\n\n    const noDataButton = user?.model_permissions?.add_namespace ? (\n      <Button variant='primary' onClick={() => this.handleModalToggle()}>\n        {t`Create`}\n      </Button>\n    ) : null;\n\n    if (loading) {\n      return (\n        <section>\n          <LoadingPageSpinner></LoadingPageSpinner>;\n        </section>\n      );\n    }\n\n    if (namespaces.length === 0) {\n      return (\n        <section>\n          {filterIsSet(this.state.params, ['keywords']) ? (\n            <EmptyStateFilter />\n          ) : (\n            <EmptyStateNoData\n              title={noDataTitle}\n              description={noDataDescription}\n              button={noDataButton}\n            />\n          )}\n        </section>\n      );\n    }\n\n    return (\n      <section className='card-layout'>\n        {namespaces.map((ns, i) => (\n          <div key={i} className='card-wrapper'>\n            <NamespaceCard\n              namespaceURL={formatPath(namespacePath, {\n                namespace: ns.name,\n                repo: this.context.selectedRepo,\n              })}\n              key={i}\n              {...ns}\n            ></NamespaceCard>\n          </div>\n        ))}\n      </section>\n    );\n  }\n\n  private loadNamespaces() {\n    let apiFunc: any;\n\n    if (this.props.filterOwner) {\n      apiFunc = (p) => MyNamespaceAPI.list(p);\n    } else {\n      apiFunc = (p) => NamespaceAPI.list(p);\n    }\n    this.setState({ loading: true }, () => {\n      apiFunc(this.state.params)\n        .then((results) => {\n          this.setState({\n            namespaces: results.data.data,\n            itemCount: results.data.meta.count,\n            loading: false,\n          });\n        })\n        .catch((e) =>\n          this.setState(\n            {\n              namespaces: [],\n              itemCount: 0,\n              loading: false,\n            },\n            () =>\n              this.context.setAlerts([\n                ...this.context.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Error loading namespaces.`,\n                  description: e?.message,\n                },\n              ]),\n          ),\n        );\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonURLParams);\n  }\n\n  private closeAlert() {\n    this.context.setAlerts([]);\n  }\n}\n\nNamespaceList.contextType = AppContext;\n","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from 'src/paths';\n\nclass Partners extends React.Component<RouteComponentProps, {}> {\n  render() {\n    return (\n      <NamespaceList\n        {...this.props}\n        namespacePath={Paths.namespaceByRepo}\n        filterOwner={false}\n      />\n    );\n  }\n}\n\nexport default withRouter(Partners);\n"],"names":["MyNamespaces","this","context","user","is_anonymous","props","namespacePath","Paths","filterOwner","React","withRouter","contextType","AppContext","NamespaceList","setState","isModalOpen","params","ParamHelper","location","search","state","namespaces","undefined","itemCount","hasPermission","loading","MyNamespaceAPI","then","results","data","meta","count","loadNamespaces","e","setAlerts","alerts","variant","title","description","message","redirect","Redirect","push","to","noData","filterIsSet","length","extra","model_permissions","add_namespace","ToolbarItem","key","Button","onClick","handleModalToggle","namespaceBreadcrumb","titleLowerCase","toLowerCase","className","isOpen","toggleModal","onCreateSuccess","result","formatPath","namespace","closeAlert","tabs","link","active","sortOptions","id","type","searchPlaceholder","updateParams","p","extraInputs","isCompact","perPageOptions","Constants","renderBody","noDataTitle","noDataDescription","noDataButton","button","map","ns","i","namespaceURL","name","repo","selectedRepo","apiFunc","NamespaceAPI","nonURLParams","Partners"],"sourceRoot":""}