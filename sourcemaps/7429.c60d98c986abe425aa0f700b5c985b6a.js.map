{"version":3,"file":"js/7429.44fc9dbc0a65ec4a7c68.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Checkbox,\n  DropdownItem,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionFilter,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  Pagination,\n  PartnerHeader,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoUrl,\n  waitForTask,\n} from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\nimport './namespace-detail.scss';\n\ninterface IState {\n  canSign: boolean;\n  collections: CollectionVersionSearch[];\n  allCollections: CollectionVersionSearch[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n    group?: number;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionVersionSearch;\n  showControls: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  confirmDelete: boolean;\n  isNamespacePending: boolean;\n  alerts: AlertType[];\n  deleteCollection: CollectionVersionSearch;\n  isDeletionPending: boolean;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  group: GroupType;\n}\n\nexport class NamespaceDetail extends React.Component<RouteProps, IState> {\n  nonAPIParams = ['tab', 'group'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.routeParams.namespace;\n\n    this.state = {\n      canSign: false,\n      collections: [],\n      allCollections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      confirmDelete: false,\n      isNamespacePending: false,\n      alerts: [],\n      deleteCollection: null,\n      isDeletionPending: false,\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      group: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.loadAllCollections();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = ParamHelper.parseParamString(this.props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      params['namespace'] = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params['group'], this.state.namespace.groups),\n      });\n    }\n  }\n\n  filterGroup(groupId, groups) {\n    return groupId ? groups.find(({ id }) => Number(groupId) === id) : null;\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateUpdate }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  render() {\n    const {\n      canSign,\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showControls,\n      showImportModal,\n      warning,\n      updateCollection,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      confirmDelete,\n      isNamespacePending,\n      alerts,\n      deleteCollection,\n      isDeletionPending,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'access', name: t`Access` },\n    ].filter(Boolean);\n\n    const tab = params['tab'] || 'collections';\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access'\n        ? {\n            name: t`Access`,\n            url: params.group\n              ? formatPath(\n                  Paths.namespaceDetail,\n                  {\n                    namespace: namespace.name,\n                  },\n                  { tab: 'access' },\n                )\n              : null,\n          }\n        : null,\n      tab === 'access' && params.group\n        ? { name: t`Group ${params.group}` }\n        : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoUrl();\n\n    const noData = itemCount === 0 && !filterIsSet(params, ['keywords']);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'repository__name',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'view_type',\n    ];\n\n    const { hasPermission } = this.context;\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || hasPermission('galaxy.change_namespace');\n\n    // remove ?group (access tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection?.collection_version}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          filters={\n            tab === 'collections' ? (\n              <div className='hub-toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        ></PartnerHeader>\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      {t`Upload collection`}\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  showControls={this.state.showControls}\n                  renderCollectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                  displaySignatures={\n                    this.context.featureFlags.display_signatures\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <AccessTab\n              showGroupRemoveModal={this.state.showGroupRemoveModal}\n              showGroupSelectWizard={this.state.showGroupSelectWizard}\n              showRoleRemoveModal={this.state.showRoleRemoveModal}\n              showRoleSelectWizard={this.state.showRoleSelectWizard}\n              canEditOwners={canEditOwners}\n              group={this.state.group}\n              groups={namespace.groups}\n              name={namespace.name}\n              pulpObjectType='pulp_ansible/namespaces'\n              selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n              updateProps={(prop) => {\n                this.setState(prop);\n              }}\n              addGroup={(group, roles) => {\n                const { groups, name } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: roles.map(({ name }) => name),\n                };\n                const newGroups = [...groups, newGroup];\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                  stateUpdate: { showGroupSelectWizard: null },\n                });\n              }}\n              removeGroup={(group) => {\n                const { name, groups } = namespace;\n                const newGroups = groups.filter((g) => g !== group);\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                  stateUpdate: { showGroupRemoveModal: null },\n                });\n              }}\n              addRole={(group, roles) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: [\n                    ...group.object_roles,\n                    ...roles.map(({ name }) => name),\n                  ],\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleSelectWizard: null },\n                });\n              }}\n              removeRole={(role, group) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: group.object_roles.filter(\n                    (name) => name !== role,\n                  ),\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleRemoveModal: null },\n                });\n              }}\n              urlPrefix={formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => {\n              this.signAllCertificates(namespace);\n            }}\n            onCancel={() => {\n              this.setState({ isOpenSignModal: false });\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(pulp_href, action) {\n    const collection = this.state.collections.find(\n      (c) => c.collection_version.pulp_href === pulp_href,\n    );\n    const { name } = collection.collection_version;\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(collection)\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.is_deprecated\n                ? t`Collection \"${name}\" has been successfully undeprecated.`\n                : t`Collection \"${name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType) {\n    // get the repository from first collection\n    // all collections are in same repo, so this should be fine.\n    const [collection] = this.state.collections;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    const { name } = collection.collection_version;\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: collection.repository,\n      namespace: namespace.name,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.load();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  }\n\n  private loadCollections() {\n    CollectionVersionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      repository_label: '!hide_from_search',\n      namespace: this.props.routeParams.namespace,\n    }).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        repository_label: '!hide_from_search',\n        namespace: this.props.routeParams.namespace,\n        is_highest: true,\n      }),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // TODO this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then((val) => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n          canSign: canSignNamespace(this.context, val[2]?.data),\n          group: this.filterGroup(\n            this.state.params['group'],\n            val[1].data['groups'],\n          ),\n        });\n      })\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private loadAllCollections() {\n    CollectionVersionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      namespace: this.props.routeParams.namespace,\n    }).then((result) => {\n      this.setState({\n        allCollections: result.data.data,\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections } = this.state;\n    const { can_upload_signatures } = this.context.featureFlags;\n    const { ai_deny_index } = this.context.featureFlags;\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='1'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      hasPermission('galaxy.delete_namespace') && (\n        <React.Fragment key={'2'}>\n          {this.state.allCollections.length === 0 ? (\n            <DropdownItem\n              onClick={() => this.setState({ isOpenNamespaceModal: true })}\n            >\n              {t`Delete namespace`}\n            </DropdownItem>\n          ) : (\n            <Tooltip\n              isVisible={false}\n              content={\n                <Trans>\n                  Cannot delete namespace until <br />\n                  collections&apos; dependencies have <br />\n                  been deleted\n                </Trans>\n              }\n              position='left'\n            >\n              <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n            </Tooltip>\n          )}\n        </React.Fragment>\n      ),\n      <DropdownItem\n        key='3'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign &&\n        !can_upload_signatures &&\n        this.state.collections.length >= 1 && (\n          <DropdownItem\n            key='sign-collections'\n            data-cy='sign-all-collections-button'\n            onClick={() => this.setState({ isOpenSignModal: true })}\n          >\n            {t`Sign all collections`}\n          </DropdownItem>\n        ),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Wisdom settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls'></div>;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            {t`Upload collection`}\n          </Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb.url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionVersionSearch) {\n    const { hasPermission } = this.context;\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button\n          onClick={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'upload',\n            )\n          }\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection: hasPermission('ansible.delete_collection'),\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                }),\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(\n                  collection.collection_version.pulp_href,\n                  'deprecate',\n                )\n              }\n              key='deprecate'\n            >\n              {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      </div>\n    );\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","confirmDelete","context","queueAlert","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","alerts","concat","_toConsumableArray","i18n","description","errorMessage","params","ParamHelper","location","search","routeParams","canSign","collections","allCollections","itemCount","showImportModal","warning","updateCollection","showControls","isOpenSignModal","isOpenWisdomModal","deleteCollection","isDeletionPending","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","group","_createClass","key","value","this","load","loadAllCollections","setAlerts","prevProps","filterGroup","groups","groupId","find","_ref","Number","_ref2","_this2","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","_objectSpread","addAlert","_ref3","_ref3$response","_this$state$namespace","_this3","_this$state","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","url","formatPath","Paths","repositoryUrl","getRepoUrl","noData","filterIsSet","updateParams","loadCollections","ignoredParams","hasPermission","canEditOwners","related_fields","my_permissions","includes","tabParams","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","setOpen","warn","toggleImportModal","collection","collection_version","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","className","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","Alert","actionClose","AlertActionCloseButton","onClose","PartnerHeader","p","pageControls","renderPageControls","filters","CollectionFilter","Pagination","count","isTop","Main","EmptyStateNoData","button","Button","onClick","CollectionList","renderCollectionControls","displaySignatures","featureFlags","display_signatures","href","target","rel","ExternalLinkAltIcon","ClipboardCopy","isReadOnly","renderResources","AccessTab","pulpObjectType","selectRolesMessage","updateProps","prop","addGroup","roles","newGroup","object_roles","map","_ref4","newGroups","updateGroups","removeGroup","g","addRole","_ref5","removeRole","role","urlPrefix","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","pulp_href","action","_this4","c","CollectionAPI","result","taskId","parsePulpIDFromURL","data","task","waitForTask","is_deprecated","ReactMarkdown","_this5","_slicedToArray","errorAlert","arguments","length","undefined","SignCollectionAPI","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","repository","task_id","error","x","_this6","CollectionVersionAPI","nonAPIParams","repository_label","meta","_this7","Promise","all","is_highest","include_related","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_val$","canSignNamespace","_this8","get","nonQueryStringParams","_this9","_this$state2","can_upload_signatures","ai_deny_index","dropdownItems","DropdownItem","component","Link","Tooltip","isVisible","content","position","StatefulDropdown","items","newState","closeAlertMixin","_this10","style","display","alignItems","handleCollectionAction","canDeleteCollection","noDependencies","ariaLabel","contextType","AppContext","withRouter"],"sourceRoot":""}