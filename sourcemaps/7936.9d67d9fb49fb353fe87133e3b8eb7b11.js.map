{"version":3,"file":"js/7936.2276419aa8aa3abb3ab1.js","mappings":"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","sources":["webpack:///./src/actions/action.tsx","webpack:///./src/actions/ansible-remote-create.tsx","webpack:///./src/actions/ansible-remote-delete.tsx","webpack:///./src/actions/ansible-remote-download-ca.tsx","webpack:///./src/actions/ansible-remote-download-client.tsx","webpack:///./src/actions/ansible-remote-download-requirements.tsx","webpack:///./src/actions/ansible-remote-edit.tsx","webpack:///./src/actions/ansible-repository-copy.tsx","webpack:///./src/actions/ansible-repository-create.tsx","webpack:///./src/actions/ansible-repository-delete.tsx","webpack:///./src/actions/ansible-repository-edit.tsx","webpack:///./src/actions/ansible-repository-sync.tsx","webpack:///./src/actions/ansible-repository-version-revert.tsx","webpack:///./src/containers/ansible-remote/list.tsx","webpack:///./src/permissions.ts"],"sourcesContent":["import { Button, DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { type PermissionContextType } from 'src/permissions';\n\ntype ModalType = ({ addAlert, state, setState, query }) => React.ReactNode;\n\ninterface ActionParams {\n  buttonVariant?: 'primary' | 'secondary';\n  condition?: PermissionContextType;\n  disabled?: (item, actionContext) => string | null;\n  modal?: ModalType;\n  onClick: (item, actionContext) => void;\n  title: string;\n  visible?: (item, actionContext) => boolean;\n}\n\nexport class ActionType {\n  button: (item, actionContext) => React.ReactNode | null;\n  disabled: (item, actionContext) => string | null;\n  dropdownItem: (item, actionContext) => React.ReactNode | null;\n  modal?: ModalType;\n  title: string;\n  visible: (item, actionContext) => boolean;\n}\n\nexport const Action = ({\n  buttonVariant,\n  condition = () => true,\n  disabled = () => null,\n  modal = null,\n  onClick,\n  title,\n  visible = () => true,\n}: ActionParams): ActionType => ({\n  title,\n  button: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <Tooltip content={disabled(item, actionContext)} key={title}>\n          <Button variant={buttonVariant} isDisabled>\n            {title}\n          </Button>\n        </Tooltip>\n      ) : (\n        <Button\n          variant={buttonVariant}\n          key={title}\n          onClick={() => onClick(item, actionContext)}\n        >\n          {title}\n        </Button>\n      )\n    ) : null,\n  dropdownItem: (item, actionContext) =>\n    condition(actionContext, item) && visible(item, actionContext) ? (\n      disabled(item, actionContext) ? (\n        <DropdownItem\n          key={title}\n          description={disabled(item, actionContext)}\n          isDisabled\n        >\n          {title}\n        </DropdownItem>\n      ) : (\n        <DropdownItem key={title} onClick={() => onClick(item, actionContext)}>\n          {title}\n        </DropdownItem>\n      )\n    ) : null,\n  modal,\n  visible,\n  disabled,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteCreateAction = Action({\n  condition: canAddAnsibleRemote,\n  title: t`Add remote`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRemoteAPI } from 'src/api';\nimport { DeleteAnsibleRemoteModal } from 'src/components';\nimport { canDeleteAnsibleRemote } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDeleteAction = Action({\n  condition: canDeleteAnsibleRemote,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRemoteModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRemote(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRemote({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRemoteAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for remote ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(t`Failed to remove remote ${name}`, () => null, addAlert),\n    );\n}\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadCAAction = Action({\n  title: t`Download CA certificate`,\n  onClick: ({ ca_cert }) => downloadString(ca_cert, 'ca_cert'),\n  visible: ({ ca_cert }) => !!ca_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadClientAction = Action({\n  title: t`Download client certificate`,\n  onClick: ({ client_cert }) => downloadString(client_cert, 'client_cert'),\n  visible: ({ client_cert }) => !!client_cert,\n});\n","import { t } from '@lingui/macro';\nimport { downloadString } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRemoteDownloadRequirementsAction = Action({\n  title: t`Download requirements YAML`,\n  onClick: ({ requirements_file }) =>\n    downloadString(requirements_file, 'requirements.yml'),\n  visible: ({ requirements_file }) => !!requirements_file,\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemote } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRemoteEditAction = Action({\n  condition: canEditAnsibleRemote,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRemoteEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { getRepoUrl } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCopyAction = Action({\n  title: t`Copy CLI configuration`,\n  onClick: (item, { addAlert }) => {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${item.name}_repo`,\n      '',\n      `[galaxy_server.${item.name}_repo]`,\n      `url=${getRepoUrl()}`,\n      'token=<put your token here>',\n    ].join('\\n');\n\n    navigator.clipboard.writeText(cliConfig);\n    addAlert({\n      title: t`Successfully copied to clipboard`,\n      variant: 'success',\n      description: <pre>{cliConfig}</pre>,\n    });\n  },\n});\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canAddAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryCreateAction = Action({\n  condition: canAddAnsibleRepository,\n  title: t`Add repository`,\n  onClick: (item, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name: '_' })),\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { DeleteAnsibleRepositoryModal } from 'src/components';\nimport { canDeleteAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositoryDeleteAction = Action({\n  condition: canDeleteAnsibleRepository,\n  title: t`Delete`,\n  modal: ({ addAlert, query, setState, state }) =>\n    state.deleteModalOpen ? (\n      <DeleteAnsibleRepositoryModal\n        closeAction={() => setState({ deleteModalOpen: null })}\n        deleteAction={() =>\n          deleteRepository(state.deleteModalOpen, { addAlert, setState, query })\n        }\n        name={state.deleteModalOpen.name}\n      />\n    ) : null,\n  onClick: (\n    { name, id, pulp_href }: { name: string; id?: string; pulp_href?: string },\n    { setState },\n  ) =>\n    setState({\n      deleteModalOpen: { pulpId: id || parsePulpIDFromURL(pulp_href), name },\n    }),\n});\n\nfunction deleteRepository({ name, pulpId }, { addAlert, setState, query }) {\n  return AnsibleRepositoryAPI.delete(pulpId)\n    .then(({ data }) => {\n      addAlert(taskAlert(data.task, t`Removal started for repository ${name}`));\n\n      setState({ deleteModalOpen: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to remove repository ${name}`,\n        () => null,\n        addAlert,\n      ),\n    );\n}\n","import { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRepository } from 'src/permissions';\nimport { Action } from './action';\n\nexport const ansibleRepositoryEditAction = Action({\n  condition: canEditAnsibleRepository,\n  title: t`Edit`,\n  onClick: ({ name }, { navigate }) =>\n    navigate(formatPath(Paths.ansibleRepositoryEdit, { name })),\n});\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canSyncAnsibleRepository } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nexport const ansibleRepositorySyncAction = Action({\n  condition: canSyncAnsibleRepository,\n  title: t`Sync`,\n  onClick: ({ name, pulp_href }, { addAlert, query }) => {\n    const pulpId = parsePulpIDFromURL(pulp_href);\n    AnsibleRepositoryAPI.sync(pulpId)\n      .then(({ data }) => {\n        addAlert(\n          taskAlert(data.task, t`Sync started for repository \"${name}\".`),\n        );\n\n        query();\n      })\n      .catch(\n        handleHttpError(\n          t`Failed to sync repository \"${name}\"`,\n          () => null,\n          addAlert,\n        ),\n      );\n  },\n  visible: (_item, { hasPermission }) =>\n    hasPermission('ansible.change_collectionremote'),\n  disabled: ({ remote, last_sync_task }) => {\n    if (!remote) {\n      return t`There are no remotes associated with this repository.`;\n    }\n\n    if (\n      last_sync_task &&\n      ['running', 'waiting'].includes(last_sync_task.state)\n    ) {\n      return t`Sync task is already queued.`;\n    }\n\n    return null;\n  },\n});\n","import { Trans, t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { canRevertAnsibleRepositoryVersion } from 'src/permissions';\nimport { handleHttpError, parsePulpIDFromURL, taskAlert } from 'src/utilities';\nimport { Action } from './action';\n\nconst RevertModal = ({\n  version,\n  cancelAction,\n  revertAction,\n}: {\n  version: number;\n  cancelAction: () => void;\n  revertAction: () => void;\n}) => {\n  const [pending, setPending] = useState(false);\n\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={() => {\n              setPending(true);\n              revertAction();\n            }}\n            variant='danger'\n            isDisabled={pending}\n          >\n            {t`Revert`}\n            {pending && <Spinner size='sm'></Spinner>}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={t`Revert repository`}\n      titleIconVariant='warning'\n      variant={'small'}\n      data-cy='modal_checkbox'\n    >\n      <Trans>\n        Are you sure you want to revert this repository to the version below?\n      </Trans>\n      <br />\n      <b>{version}</b>\n    </Modal>\n  );\n};\n\nfunction revert(\n  { repositoryName, pulp_href, number },\n  { addAlert, setState, query },\n) {\n  // the uuid in version href is the reposotory uuid\n  const pulpId = parsePulpIDFromURL(pulp_href);\n\n  return AnsibleRepositoryAPI.revert(pulpId, pulp_href)\n    .then(({ data }) => {\n      addAlert(\n        taskAlert(\n          data.task,\n          t`Revert started for repository \"${repositoryName}\".`,\n        ),\n      );\n      setState({ revertModal: null });\n      query();\n    })\n    .catch(\n      handleHttpError(\n        t`Failed to revert repository \"${repositoryName}\" to version \"${number}\"`,\n        () => setState({ revertModal: null }),\n        addAlert,\n      ),\n    );\n}\n\nexport const ansibleRepositoryVersionRevertAction = Action({\n  condition: canRevertAnsibleRepositoryVersion,\n  title: t`Revert to this version`,\n  modal: ({ addAlert, state, setState, query }) =>\n    state.revertModal ? (\n      <RevertModal\n        cancelAction={() => setState({ revertModal: null })}\n        revertAction={() =>\n          revert(state.revertModal, { addAlert, setState, query })\n        }\n        version={state.revertModal.number}\n      />\n    ) : null,\n  onClick: ({ repositoryName, number, pulp_href }, { setState }) =>\n    setState({ revertModal: { repositoryName, number, pulp_href } }),\n  disabled: ({ isLatest }) => {\n    if (isLatest) {\n      return t`Already the current version`;\n    }\n\n    return null;\n  },\n});\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ansibleRemoteCreateAction,\n  ansibleRemoteDeleteAction,\n  ansibleRemoteDownloadCAAction,\n  ansibleRemoteDownloadClientAction,\n  ansibleRemoteDownloadRequirementsAction,\n  ansibleRemoteEditAction,\n} from 'src/actions';\nimport { AnsibleRemoteAPI, AnsibleRemoteType } from 'src/api';\nimport { CopyURL, ListItemActions, ListPage } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRemotes } from 'src/permissions';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\nconst listItemActions = [\n  // Edit\n  ansibleRemoteEditAction,\n  // Download requirements.yaml\n  ansibleRemoteDownloadRequirementsAction,\n  // Download client certificate\n  ansibleRemoteDownloadClientAction,\n  // Download CA certificate\n  ansibleRemoteDownloadCAAction,\n  // Delete\n  ansibleRemoteDeleteAction,\n];\n\nconst AnsibleRemoteList = ListPage<AnsibleRemoteType>({\n  condition: canViewAnsibleRemotes,\n  defaultPageSize: 10,\n  defaultSort: '-pulp_created',\n  displayName: 'AnsibleRemoteList',\n  errorTitle: t`Remotes could not be displayed.`,\n  extraState: {},\n  filterConfig: [\n    {\n      id: 'name__icontains',\n      title: t`Remote name`,\n    },\n  ],\n  headerActions: [ansibleRemoteCreateAction], // Add remote\n  listItemActions,\n  noDataButton: ansibleRemoteCreateAction.button,\n  noDataDescription: t`Remotes will appear once created.`,\n  noDataTitle: t`No remotes yet`,\n  query: ({ params }) => AnsibleRemoteAPI.list(params),\n  renderTableRow(item: AnsibleRemoteType, index: number, actionContext) {\n    const { name, pulp_href, url } = item;\n    const id = parsePulpIDFromURL(pulp_href);\n\n    const kebabItems = listItemActions.map((action) =>\n      action.dropdownItem({ ...item, id }, actionContext),\n    );\n\n    return (\n      <tr key={index}>\n        <td>\n          <Link to={formatPath(Paths.ansibleRemoteDetail, { name })}>\n            {name}\n          </Link>\n        </td>\n        <td>\n          <CopyURL url={url} />\n        </td>\n        <ListItemActions kebabItems={kebabItems} />\n      </tr>\n    );\n  },\n  sortHeaders: [\n    {\n      title: t`Remote name`,\n      type: 'alpha',\n      id: 'name',\n    },\n    {\n      title: t`URL`,\n      type: 'alpha',\n      id: 'url',\n    },\n  ],\n  title: t`Remotes`,\n});\n\nexport default AnsibleRemoteList;\n","import { FeatureFlagsType, SettingsType, UserType } from 'src/api';\n\nexport type PermissionContextType = (\n  o: {\n    featureFlags?: FeatureFlagsType;\n    settings?: SettingsType;\n    user: UserType;\n    hasPermission: (string) => boolean;\n    hasObjectPermission?: (string, item?) => boolean;\n  },\n  item?,\n) => boolean;\n\nexport const isLoggedIn: PermissionContextType = ({ user }) =>\n  user && !user.is_anonymous;\n\nconst has_model_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, user }) =>\n    hasPermission(permission) || user?.is_superuser;\n\nconst has_model_or_obj_perms =\n  (permission: string): PermissionContextType =>\n  ({ hasPermission, hasObjectPermission, user }, item?) =>\n    hasPermission(permission) ||\n    hasObjectPermission?.(permission, item) ||\n    user?.is_superuser;\n\n// Ansible Remotes\nexport const canAddAnsibleRemote = has_model_perms(\n  'ansible.add_collectionremote',\n);\nexport const canDeleteAnsibleRemote = has_model_or_obj_perms(\n  'ansible.delete_collectionremote',\n);\nexport const canEditAnsibleRemote = has_model_or_obj_perms(\n  'ansible.change_collectionremote',\n);\nexport const canViewAnsibleRemotes = has_model_or_obj_perms(\n  'ansible.view_collectionremote',\n);\nexport const canEditAnsibleRemoteAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_collectionremote',\n);\n\n// Ansible Repositories\nexport const canAddAnsibleRepository = has_model_perms(\n  'ansible.add_ansiblerepository',\n);\nexport const canDeleteAnsibleRepository = has_model_or_obj_perms(\n  'ansible.delete_ansiblerepository',\n);\nexport const canEditAnsibleRepository = has_model_or_obj_perms(\n  'ansible.change_ansiblerepository',\n);\nexport const canSyncAnsibleRepository = canEditAnsibleRepository;\n// everybody can list/view, not has_model_or_obj_perms('ansible.view_ansiblerepository')\nexport const canViewAnsibleRepositories = isLoggedIn;\nexport const canEditAnsibleRepositoryAccess = has_model_or_obj_perms(\n  'ansible.manage_roles_ansiblerepository',\n);\n\n// Ansible Repository Versions\n// simulating has_repository_model_or_obj_perms by passing in repository as item\nexport const canRevertAnsibleRepositoryVersion = canEditAnsibleRepository;\n"],"names":["Action","_ref","buttonVariant","_ref$condition","condition","_ref$disabled","disabled","_ref$modal","modal","onClick","title","_ref$visible","visible","button","item","actionContext","React","Tooltip","content","key","Button","variant","isDisabled","dropdownItem","DropdownItem","description","ansibleRemoteCreateAction","canAddAnsibleRemote","i18n","navigate","formatPath","Paths","name","ansibleRemoteDeleteAction","canDeleteAnsibleRemote","addAlert","query","setState","state","deleteModalOpen","DeleteAnsibleRemoteModal","closeAction","deleteAction","_ref4","_ref5","pulpId","AnsibleRemoteAPI","then","_ref6","data","taskAlert","task","handleHttpError","deleteRemote","_ref2","_ref3","id","pulp_href","parsePulpIDFromURL","ansibleRemoteDownloadCAAction","ca_cert","downloadString","ansibleRemoteDownloadClientAction","client_cert","ansibleRemoteDownloadRequirementsAction","requirements_file","ansibleRemoteEditAction","canEditAnsibleRemote","ansibleRepositoryCopyAction","cliConfig","concat","getRepoUrl","join","navigator","clipboard","writeText","ansibleRepositoryCreateAction","canAddAnsibleRepository","ansibleRepositoryDeleteAction","canDeleteAnsibleRepository","DeleteAnsibleRepositoryModal","AnsibleRepositoryAPI","deleteRepository","ansibleRepositoryEditAction","canEditAnsibleRepository","ansibleRepositorySyncAction","canSyncAnsibleRepository","_item","hasPermission","remote","last_sync_task","includes","RevertModal","version","cancelAction","revertAction","_useState","useState","_useState2","_slicedToArray","pending","setPending","Modal","actions","Spinner","size","isOpen","onClose","titleIconVariant","Trans","ansibleRepositoryVersionRevertAction","canRevertAnsibleRepositoryVersion","revertModal","repositoryName","number","revert","_ref7","_ref8","isLatest","listItemActions","ListPage","canViewAnsibleRemotes","defaultPageSize","defaultSort","displayName","errorTitle","extraState","filterConfig","headerActions","noDataButton","noDataDescription","noDataTitle","params","renderTableRow","index","url","kebabItems","map","action","_objectSpread","Link","to","CopyURL","ListItemActions","sortHeaders","type","has_model_perms","permission","user","is_superuser","has_model_or_obj_perms","hasObjectPermission","canEditAnsibleRemoteAccess","canViewAnsibleRepositories","is_anonymous","canEditAnsibleRepositoryAccess"],"sourceRoot":""}