{"version":3,"file":"js/6176.f95de518244810ac8ecd.js","mappings":"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","sources":["webpack:///./src/containers/ansible-remote/tab-access.tsx","webpack:///./src/containers/ansible-remote/tab-details.tsx","webpack:///./src/containers/ansible-remote/detail.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRemoteAPI,\n  AnsibleRemoteType,\n  GroupAPI,\n  GroupType,\n  RoleType,\n} from 'src/api';\nimport { AccessTab } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemoteAccess } from 'src/permissions';\nimport { errorMessage, parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: {\n    addAlert: (alert) => void;\n    featureFlags;\n    hasPermission;\n    state: { params };\n    user;\n  };\n}\n\nexport const RemoteAccessTab = ({\n  item,\n  actionContext: {\n    addAlert,\n    featureFlags,\n    hasPermission,\n    state: { params },\n    user,\n  },\n}: TabProps) => {\n  const id = item?.pulp_href && parsePulpIDFromURL(item.pulp_href);\n  const [name, setName] = useState<string>(item?.name);\n  const [groups, setGroups] = useState<GroupType[]>(null); // loading\n  const [canEditOwners, setCanEditOwners] = useState<boolean>(false);\n  const [selectedGroup, setSelectedGroup] = useState<GroupType>(null);\n  const [showGroupRemoveModal, setShowGroupRemoveModal] =\n    useState<GroupType>(null);\n  const [showGroupSelectWizard, setShowGroupSelectWizard] = useState<{\n    group?: GroupType;\n    roles?: RoleType[];\n  }>(null);\n  const [showRoleRemoveModal, setShowRoleRemoveModal] = useState<string>(null);\n  const [showRoleSelectWizard, setShowRoleSelectWizard] = useState<{\n    roles?: RoleType[];\n  }>(null);\n\n  const query = () => {\n    setGroups(null);\n    AnsibleRemoteAPI.myPermissions(id)\n      .then(({ data: { permissions } }) => {\n        setCanEditOwners(\n          canEditAnsibleRemoteAccess({\n            hasPermission,\n            hasObjectPermission: (p: string): boolean =>\n              permissions.includes(p),\n            user,\n            featureFlags,\n          }),\n        );\n        AnsibleRemoteAPI.listRoles(id)\n          .then(({ data: { roles } }) => {\n            const groupRoles = [];\n            for (const { groups, role } of roles) {\n              for (const name of groups) {\n                const groupIndex = groupRoles.findIndex((g) => g.name === name);\n                if (groupIndex == -1) {\n                  groupRoles.push({ name, object_roles: [role] });\n                } else {\n                  groupRoles[groupIndex].object_roles.push(role);\n                }\n              }\n            }\n\n            setName(name);\n            setGroups(groupRoles);\n          })\n          .catch(() => {\n            setGroups([]);\n          });\n      })\n      .catch(() => {\n        setGroups([]);\n        setCanEditOwners(false);\n      });\n  };\n\n  const updateGroupRoles = ({\n    roles,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) => {\n    Promise.all(roles)\n      .then(() => {\n        addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        query();\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        updateProps(stateUpdate);\n      });\n  };\n\n  const addGroup = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n      stateUpdate: { showGroupSelectWizard: null },\n    });\n  };\n\n  const removeGroup = (group) => {\n    const roles = group.object_roles.map((role) =>\n      AnsibleRemoteAPI.removeRole(id, {\n        role,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles,\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showGroupRemoveModal: null },\n    });\n  };\n  const addRole = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n  const removeRole = (role, group) => {\n    const removedRole = AnsibleRemoteAPI.removeRole(id, {\n      role,\n      groups: [group.name],\n    });\n    updateGroupRoles({\n      roles: [removedRole],\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const updateProps = (props) => {\n    Object.entries(props).forEach(([k, v]) => {\n      switch (k) {\n        case 'showGroupRemoveModal':\n          setShowGroupRemoveModal(v as GroupType);\n          break;\n        case 'showGroupSelectWizard':\n          setShowGroupSelectWizard(\n            v as { group?: GroupType; roles?: RoleType[] },\n          );\n          break;\n        case 'showRoleRemoveModal':\n          setShowRoleRemoveModal(v as string);\n          break;\n        case 'showRoleSelectWizard':\n          setShowRoleSelectWizard(v as { roles?: RoleType[] });\n          break;\n        default:\n          console.error('updateProps', k, v);\n      }\n    });\n  };\n\n  useEffect(query, [item.pulp_href]);\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n\n    if (!params?.group) {\n      setSelectedGroup(null);\n      return;\n    }\n\n    GroupAPI.list({ name: params.group }).then(({ data: { data } }) => {\n      setSelectedGroup(groups.find((g) => g.name === data[0].name));\n    });\n  }, [params?.group, groups]);\n\n  return (\n    <AccessTab\n      addGroup={addGroup}\n      addRole={addRole}\n      canEditOwners={canEditOwners}\n      group={selectedGroup}\n      groups={groups}\n      name={name}\n      pulpObjectType='remotes/ansible/collection'\n      removeGroup={removeGroup}\n      removeRole={removeRole}\n      selectRolesMessage={t`The selected roles will be added to this specific Ansible remote.`}\n      showGroupRemoveModal={showGroupRemoveModal}\n      showGroupSelectWizard={showGroupSelectWizard}\n      showRoleRemoveModal={showRoleRemoveModal}\n      showRoleSelectWizard={showRoleSelectWizard}\n      updateProps={updateProps}\n      urlPrefix={formatPath(Paths.ansibleRemoteDetail, {\n        name,\n      })}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AnsibleRemoteType } from 'src/api';\nimport { CopyURL, Details, LazyRepositories } from 'src/components';\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: object;\n}\n\nconst PFCodeBlock = ({ code }: { code: string }) => {\n  const [copied, setCopied] = React.useState(false);\n\n  const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n  };\n\n  const onClick = (event, text) => {\n    clipboardCopyFunc(event, text);\n    setCopied(true);\n  };\n\n  const actions = (\n    <React.Fragment>\n      <CodeBlockAction>\n        <ClipboardCopyButton\n          id='basic-copy-button'\n          textId='code-content'\n          aria-label='Copy to clipboard'\n          onClick={(e) => onClick(e, code)}\n          exitDelay={copied ? 1500 : 600}\n          maxWidth='110px'\n          variant='plain'\n          onTooltipHidden={() => setCopied(false)}\n        >\n          {copied ? t`Successfully copied to clipboard` : t`Copy to clipboard`}\n        </ClipboardCopyButton>\n      </CodeBlockAction>\n    </React.Fragment>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id='code-content'>{code}</CodeBlockCode>\n    </CodeBlock>\n  );\n};\n\nconst MaybeCode = ({ code }: { code: string }) =>\n  code ? <PFCodeBlock code={code} /> : <>{t`None`}</>;\n\nexport const DetailsTab = ({ item }: TabProps) => (\n  <Details\n    fields={[\n      { label: t`Remote name`, value: item?.name },\n      {\n        label: t`URL`,\n        value: <CopyURL url={item?.url} fallback />,\n      },\n      {\n        label: t`Proxy URL`,\n        value: <CopyURL url={item?.proxy_url} fallback />,\n      },\n      {\n        label: t`TLS validation`,\n        value: item?.tls_validation ? t`Enabled` : t`Disabled`,\n      },\n      { label: t`Client certificate`, value: item?.client_cert || t`None` },\n      { label: t`CA certificate`, value: item?.ca_cert || t`None` },\n      {\n        label: t`Download concurrency`,\n        value: item?.download_concurrency ?? t`None`,\n      },\n      { label: t`Rate limit`, value: item?.rate_limit ?? t`None` },\n      {\n        label: t`Repositories`,\n        value: <LazyRepositories remoteHref={item?.pulp_href} />,\n      },\n      {\n        label: t`YAML requirements`,\n        value: <MaybeCode code={item?.requirements_file} />,\n      },\n    ]}\n  />\n);\n","import { msg, t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  ansibleRemoteDeleteAction,\n  ansibleRemoteDownloadCAAction,\n  ansibleRemoteDownloadClientAction,\n  ansibleRemoteDownloadRequirementsAction,\n  ansibleRemoteEditAction,\n} from 'src/actions';\nimport { AnsibleRemoteAPI, AnsibleRemoteType } from 'src/api';\nimport { PageWithTabs } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRemotes } from 'src/permissions';\nimport { parsePulpIDFromURL } from 'src/utilities';\nimport { RemoteAccessTab } from './tab-access';\nimport { DetailsTab } from './tab-details';\n\nconst tabs = [\n  { id: 'details', name: msg`Details` },\n  { id: 'access', name: msg`Access` },\n];\n\nconst AnsibleRemoteDetail = PageWithTabs<AnsibleRemoteType>({\n  breadcrumbs: ({ name, tab, params: { group } }) =>\n    [\n      { url: formatPath(Paths.ansibleRemotes), name: t`Remotes` },\n      { url: formatPath(Paths.ansibleRemoteDetail, { name }), name },\n      tab.id === 'access' && group\n        ? {\n            url: formatPath(\n              Paths.ansibleRepositoryDetail,\n              { name },\n              { tab: tab.id },\n            ),\n            name: tab.name,\n          }\n        : null,\n      tab.id === 'access' && group\n        ? { name: t`Group ${group}` }\n        : { name: tab.name },\n    ].filter(Boolean),\n  condition: canViewAnsibleRemotes,\n  displayName: 'AnsibleRemoteDetail',\n  errorTitle: msg`Remote could not be displayed.`,\n  headerActions: [\n    ansibleRemoteEditAction,\n    ansibleRemoteDownloadRequirementsAction,\n    ansibleRemoteDownloadClientAction,\n    ansibleRemoteDownloadCAAction,\n    ansibleRemoteDeleteAction,\n  ],\n  query: ({ name }) => {\n    return AnsibleRemoteAPI.list({ name })\n      .then(({ data: { results } }) => results[0])\n      .then((remote) => {\n        // using the list api, so an empty array is really a 404\n        if (!remote) {\n          return Promise.reject({ response: { status: 404 } });\n        }\n\n        return AnsibleRemoteAPI.myPermissions(\n          parsePulpIDFromURL(remote.pulp_href),\n        )\n          .then(({ data: { permissions } }) => permissions)\n          .catch((e) => {\n            console.error(e);\n            return [];\n          })\n          .then((my_permissions) => ({ ...remote, my_permissions }));\n      });\n  },\n  renderTab: (tab, item, actionContext) =>\n    ({\n      details: <DetailsTab item={item} actionContext={actionContext} />,\n      access: <RemoteAccessTab item={item} actionContext={actionContext} />,\n    }[tab]),\n  tabs,\n  tabUpdateParams: (p) => {\n    delete p.group;\n    return p;\n  },\n});\n\nexport default AnsibleRemoteDetail;\n"],"names":["RemoteAccessTab","_ref","item","_ref$actionContext","actionContext","addAlert","featureFlags","hasPermission","params","state","user","id","pulp_href","parsePulpIDFromURL","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","_useState4","groups","setGroups","_useState5","_useState6","canEditOwners","setCanEditOwners","_useState7","_useState8","selectedGroup","setSelectedGroup","_useState9","_useState10","showGroupRemoveModal","setShowGroupRemoveModal","_useState11","_useState12","showGroupSelectWizard","setShowGroupSelectWizard","_useState13","_useState14","showRoleRemoveModal","setShowRoleRemoveModal","_useState15","_useState16","showRoleSelectWizard","setShowRoleSelectWizard","query","AnsibleRemoteAPI","myPermissions","then","_ref2","permissions","data","canEditAnsibleRemoteAccess","hasObjectPermission","p","includes","listRoles","_ref3","_step","roles","groupRoles","_iterator","_createForOfIteratorHelper","s","n","done","_step2","_step$value","value","role","_iterator2","_loop","groupIndex","findIndex","g","push","object_roles","err","e","f","updateGroupRoles","_ref4","alertSuccess","alertFailure","stateUpdate","Promise","all","title","variant","_ref5","_ref5$response","response","status","statusText","description","errorMessage","updateProps","props","Object","entries","forEach","_ref6","_ref7","k","v","console","error","useEffect","group","GroupAPI","list","_ref8","find","React","AccessTab","addGroup","rolePromises","map","addRole","i18n","_","values","pulpObjectType","removeGroup","removeRole","removedRole","selectRolesMessage","urlPrefix","formatPath","Paths","ansibleRemoteDetail","PFCodeBlock","code","_React$useState","_React$useState2","copied","setCopied","actions","CodeBlockAction","ClipboardCopyButton","textId","onClick","event","text","navigator","clipboard","writeText","toString","clipboardCopyFunc","exitDelay","maxWidth","onTooltipHidden","CodeBlock","CodeBlockCode","MaybeCode","DetailsTab","_item$download_concur","_item$rate_limit","Details","fields","label","CopyURL","url","fallback","proxy_url","tls_validation","client_cert","ca_cert","download_concurrency","rate_limit","LazyRepositories","remoteHref","requirements_file","PageWithTabs","breadcrumbs","tab","ansibleRemotes","ansibleRepositoryDetail","filter","Boolean","condition","canViewAnsibleRemotes","displayName","errorTitle","headerActions","ansibleRemoteEditAction","ansibleRemoteDownloadRequirementsAction","ansibleRemoteDownloadClientAction","ansibleRemoteDownloadCAAction","ansibleRemoteDeleteAction","results","remote","my_permissions","_objectSpread","reject","renderTab","details","access","tabs","tabUpdateParams"],"sourceRoot":""}