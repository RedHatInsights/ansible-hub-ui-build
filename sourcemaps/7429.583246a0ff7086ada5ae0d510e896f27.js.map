{"version":3,"file":"js/7429.3a040d001c1dbabc6f94.js","mappings":"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","sources":["webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  Checkbox,\n  DropdownItem,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionFilter,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  Pagination,\n  PartnerHeader,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoURL,\n  waitForTask,\n} from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\nimport './namespace-detail.scss';\n\ninterface IState {\n  canSign: boolean;\n  collections: CollectionVersionSearch[];\n  allCollections: CollectionVersionSearch[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n    group?: number;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionVersionSearch;\n  showControls: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  confirmDelete: boolean;\n  isNamespacePending: boolean;\n  alerts: AlertType[];\n  deleteCollection: CollectionVersionSearch;\n  isDeletionPending: boolean;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  group: GroupType;\n}\n\nexport class NamespaceDetail extends React.Component<RouteProps, IState> {\n  nonAPIParams = ['tab', 'group'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.routeParams.namespace;\n    if (props.routeParams.repo && !params['repository_name']) {\n      params['repository_name'] = props.routeParams.repo;\n    }\n\n    this.state = {\n      canSign: false,\n      collections: [],\n      allCollections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      confirmDelete: false,\n      isNamespacePending: false,\n      alerts: [],\n      deleteCollection: null,\n      isDeletionPending: false,\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      group: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.loadAllCollections();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = ParamHelper.parseParamString(this.props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (prevProps.location.search !== this.props.location.search) {\n      params['namespace'] = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params['group'], this.state.namespace.groups),\n      });\n    }\n\n    if (\n      prevProps.routeParams.repo !== this.props.routeParams.repo &&\n      this.props.routeParams.repo &&\n      (!params['repository_name'] ||\n        params['repository_name'] === prevProps.routeParams.repo)\n    ) {\n      params['repository_name'] = this.props.routeParams.repo;\n      this.setState({ params });\n    }\n  }\n\n  filterGroup(groupId, groups) {\n    return groupId ? groups.find(({ id }) => Number(groupId) === id) : null;\n  }\n\n  private updateGroups({ groups, alertSuccess, alertFailure, stateUpdate }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  render() {\n    const {\n      canSign,\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showControls,\n      showImportModal,\n      warning,\n      updateCollection,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      confirmDelete,\n      isNamespacePending,\n      alerts,\n      deleteCollection,\n      isDeletionPending,\n    } = this.state;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'access', name: t`Access` },\n    ].filter(Boolean);\n\n    const tab = params['tab'] || 'collections';\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access'\n        ? {\n            name: t`Access`,\n            url: params.group\n              ? formatPath(\n                  Paths.namespaceDetail,\n                  {\n                    namespace: namespace.name,\n                  },\n                  { tab: 'access' },\n                )\n              : null,\n          }\n        : null,\n      tab === 'access' && params.group\n        ? { name: t`Group ${params.group}` }\n        : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoURL('published');\n\n    const noData =\n      itemCount === 0 &&\n      !filterIsSet(params, [\n        'is_signed',\n        'keywords',\n        'repository_name',\n        'tags',\n      ]);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'view_type',\n    ];\n\n    const { hasPermission } = this.context;\n\n    const canEditOwners =\n      this.state.namespace.related_fields.my_permissions?.includes(\n        'galaxy.change_namespace',\n      ) || hasPermission('galaxy.change_namespace');\n\n    // remove ?group (access tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n\n    const repository = params['repository_name'] || null;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection?.collection_version}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n              }),\n            )\n          }\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <>\n              <Text className='delete-namespace-modal-message'>\n                <Trans>\n                  Deleting <b>{namespace.name}</b> and its data will be lost.\n                </Trans>\n              </Text>\n              <Checkbox\n                isChecked={confirmDelete}\n                onChange={(val) => this.setState({ confirmDelete: val })}\n                label={t`I understand that this action cannot be undone.`}\n                id='delete_confirm'\n              />\n            </>\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        {warning ? (\n          <Alert\n            className='hub-c-alert-namespace'\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          />\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          filters={\n            tab === 'collections' ? (\n              <div className='hub-toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='hub-pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        />\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      {t`Upload collection`}\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  displaySignatures={\n                    this.context.featureFlags.display_signatures\n                  }\n                  collectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <a\n                      href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      here\n                    </a>\n                    <span>&nbsp;</span>\n                    <ExternalLinkAltIcon />.\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <AccessTab\n              showGroupRemoveModal={this.state.showGroupRemoveModal}\n              showGroupSelectWizard={this.state.showGroupSelectWizard}\n              showRoleRemoveModal={this.state.showRoleRemoveModal}\n              showRoleSelectWizard={this.state.showRoleSelectWizard}\n              canEditOwners={canEditOwners}\n              group={this.state.group}\n              groups={namespace.groups}\n              name={namespace.name}\n              pulpObjectType='pulp_ansible/namespaces'\n              selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n              updateProps={(prop) => {\n                this.setState(prop);\n              }}\n              addGroup={(group, roles) => {\n                const { groups, name } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: roles.map(({ name }) => name),\n                };\n                const newGroups = [...groups, newGroup];\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                  stateUpdate: { showGroupSelectWizard: null },\n                });\n              }}\n              removeGroup={(group) => {\n                const { name, groups } = namespace;\n                const newGroups = groups.filter((g) => g !== group);\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                  stateUpdate: { showGroupRemoveModal: null },\n                });\n              }}\n              addRole={(group, roles) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: [\n                    ...group.object_roles,\n                    ...roles.map(({ name }) => name),\n                  ],\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleSelectWizard: null },\n                });\n              }}\n              removeRole={(role, group) => {\n                const { name, groups } = namespace;\n                const newGroup = {\n                  ...group,\n                  object_roles: group.object_roles.filter(\n                    (name) => name !== role,\n                  ),\n                };\n                const newGroups = groups.map((g) =>\n                  g === group ? newGroup : g,\n                );\n\n                this.updateGroups({\n                  groups: newGroups,\n                  alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                  alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                  stateUpdate: { showRoleRemoveModal: null },\n                });\n              }}\n              urlPrefix={formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => this.signAllCertificates(namespace, repository)}\n            onCancel={() => this.setState({ isOpenSignModal: false })}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(pulp_href, action) {\n    const collection = this.state.collections.find(\n      (c) => c.collection_version.pulp_href === pulp_href,\n    );\n    const { name } = collection.collection_version;\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'info',\n              title: t`Deprecation status update starting for collection \"${name}\".`,\n            },\n          ],\n        });\n        CollectionAPI.setDeprecation(collection)\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.is_deprecated\n                ? t`Collection \"${name}\" has been successfully undeprecated.`\n                : t`Collection \"${name}\" has been successfully deprecated.`;\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    title: title,\n                    variant: 'success',\n                  },\n                ],\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.setState({\n              warning: t`API Error: Failed to set deprecation.`,\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType, repository: string) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository_name: repository,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        // FIXME: use taskAlert\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              id: 'loading-signing',\n              variant: 'success',\n              title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n            },\n          ],\n          isOpenSignModal: false,\n        });\n\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.load();\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n          isOpenSignModal: false,\n        });\n      });\n  }\n\n  private loadCollections() {\n    CollectionVersionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      repository_label: '!hide_from_search',\n      namespace: this.props.routeParams.namespace,\n    }).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      CollectionVersionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        repository_label: '!hide_from_search',\n        namespace: this.props.routeParams.namespace,\n        is_highest: true,\n      }),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // TODO this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then((val) => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n          canSign: canSignNamespace(this.context, val[2]?.data),\n          group: this.filterGroup(\n            this.state.params['group'],\n            val[1].data['groups'],\n          ),\n        });\n      })\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private loadAllCollections() {\n    CollectionVersionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      namespace: this.props.routeParams.namespace,\n    }).then((result) => {\n      this.setState({\n        allCollections: result.data.data,\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { canSign, collections } = this.state;\n    const { can_upload_signatures } = this.context.featureFlags;\n    const { ai_deny_index } = this.context.featureFlags;\n    const { hasPermission } = this.context;\n    const repository = this.state.params['repository_name'] || null;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='1'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      hasPermission('galaxy.delete_namespace') && (\n        <React.Fragment key={'2'}>\n          {this.state.allCollections.length === 0 ? (\n            <DropdownItem\n              onClick={() => this.setState({ isOpenNamespaceModal: true })}\n            >\n              {t`Delete namespace`}\n            </DropdownItem>\n          ) : (\n            <Tooltip\n              isVisible={false}\n              content={\n                <Trans>\n                  Cannot delete namespace until <br />\n                  collections&apos; dependencies have <br />\n                  been deleted\n                </Trans>\n              }\n              position='left'\n            >\n              <DropdownItem isDisabled>{t`Delete namespace`}</DropdownItem>\n            </Tooltip>\n          )}\n        </React.Fragment>\n      ),\n      <DropdownItem\n        key='3'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign &&\n        !can_upload_signatures &&\n        (repository ? (\n          <DropdownItem\n            key='sign-collections'\n            data-cy='sign-all-collections-button'\n            onClick={() => this.setState({ isOpenSignModal: true })}\n          >\n            {t`Sign all collections in ${repository}`}\n          </DropdownItem>\n        ) : (\n          <DropdownItem\n            key='sign-collections'\n            isDisabled\n            description={t`Please select a repository filter`}\n          >\n            {t`Sign all collections`}\n          </DropdownItem>\n        )),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Ansible Lightspeed settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n    if (!this.state.showControls) {\n      return <div className='hub-namespace-page-controls' />;\n    }\n    return (\n      <div className='hub-namespace-page-controls' data-cy='kebab-toggle'>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            {t`Upload collection`}\n          </Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb.url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.setState({\n                alerts: [\n                  ...this.state.alerts,\n                  {\n                    variant: 'danger',\n                    title: t`Namespace \"${name}\" could not be deleted.`,\n                    description: errorMessage(status, statusText),\n                  },\n                ],\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionVersionSearch) {\n    const { hasPermission } = this.context;\n    const { showControls } = this.state;\n\n    if (!showControls) {\n      return;\n    }\n\n    return {\n      uploadButton: (\n        <Button\n          onClick={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'upload',\n            )\n          }\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n      ),\n      dropdownMenu: (\n        <StatefulDropdown\n          items={[\n            DeleteCollectionUtils.deleteMenuOption({\n              canDeleteCollection: hasPermission('ansible.delete_collection'),\n              noDependencies: null,\n              onClick: () =>\n                DeleteCollectionUtils.tryOpenDeleteModalWithConfirm({\n                  addAlert: (alert) => this.addAlert(alert),\n                  setState: (state) => this.setState(state),\n                  collection,\n                }),\n            }),\n            <DropdownItem\n              onClick={() =>\n                this.handleCollectionAction(\n                  collection.collection_version.pulp_href,\n                  'deprecate',\n                )\n              }\n              key='deprecate'\n            >\n              {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n            </DropdownItem>,\n          ].filter(Boolean)}\n          ariaLabel='collection-kebab'\n        />\n      ),\n    };\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","url","confirmDelete","context","queueAlert","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","alerts","concat","_toConsumableArray","i18n","_","description","errorMessage","params","ParamHelper","parseParamString","location","search","routeParams","repo","canSign","collections","allCollections","itemCount","showImportModal","warning","updateCollection","showControls","isOpenSignModal","isOpenWisdomModal","deleteCollection","isDeletionPending","showGroupRemoveModal","showGroupSelectWizard","showRoleRemoveModal","showRoleSelectWizard","group","_createClass","key","value","this","load","loadAllCollections","setAlerts","prevProps","filterGroup","groups","groupId","find","_ref","Number","_ref2","_this2","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","update","_objectSpread","addAlert","_ref3","_ref3$response","_this$state$namespace","_this3","_this$state","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","formatPath","Paths","namespaceDetail","repositoryUrl","getRepoURL","noData","filterIsSet","updateParams","loadCollections","ignoredParams","hasPermission","canEditOwners","related_fields","my_permissions","includes","tabParams","repository","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","collection","collection_version","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","className","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","Alert","actionClose","AlertActionCloseButton","onClose","PartnerHeader","p","pageControls","renderPageControls","filters","CollectionFilter","Pagination","count","isTop","Main","EmptyStateNoData","button","Button","onClick","CollectionList","displaySignatures","featureFlags","display_signatures","collectionControls","renderCollectionControls","href","target","rel","ExternalLinkAltIcon","ClipboardCopy","isReadOnly","renderResources","AccessTab","pulpObjectType","selectRolesMessage","updateProps","prop","addGroup","roles","newGroup","object_roles","map","_ref4","newGroups","updateGroups","removeGroup","g","addRole","_ref5","removeRole","role","urlPrefix","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","pulp_href","action","_this4","c","CollectionAPI","setDeprecation","result","taskId","parsePulpIDFromURL","data","task","waitForTask","is_deprecated","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","sign","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","repository_name","task_id","error","x","_this6","CollectionVersionAPI","list","getReduced","nonAPIParams","repository_label","meta","_this7","Promise","all","is_highest","get","include_related","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_val$","canSignNamespace","notFound","_this8","updateParamsMixin","nonQueryStringParams","_this9","_this$state2","can_upload_signatures","ai_deny_index","dropdownItems","DropdownItem","component","Link","editNamespace","Tooltip","isVisible","content","position","StatefulDropdown","items","newState","closeAlertMixin","_this10","uploadButton","handleCollectionAction","dropdownMenu","deleteMenuOption","canDeleteCollection","noDependencies","tryOpenDeleteModalWithConfirm","ariaLabel","contextType","AppContext","withRouter"],"sourceRoot":""}