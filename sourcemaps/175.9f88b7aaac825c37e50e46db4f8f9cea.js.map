{"version":3,"file":"js/175.1671485789791.50adae33df56df9c7597.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/import.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/store/index.js","webpack:///./src/loaders/insights/Routes.tsx","webpack:///./src/loaders/insights/insights-loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/l10n.ts","webpack:///./src/app-entry.js","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/about-modal/about-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/delete-modal/delete-execution-environment-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/owners-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-header.tsx","webpack:///./src/components/rbac/role-permissions.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/tag-label/tag-label.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/constants.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/two-way-mapper.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\nimport Cookies from 'js-cookie';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport axios from 'axios';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: string,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","import { PulpStatus } from './pulp';\n\nexport enum ImportMessageCodes {\n  error = 'error',\n  failed = 'failed',\n  warning = 'warning',\n  success = 'success',\n}\n\nexport class ImportListType {\n  id: number;\n  state: PulpStatus;\n  started_at: string;\n  finished_at: string;\n  namespace: string;\n  // Collection name\n  name: string;\n  version: string;\n  collectionRepo: string;\n}\n\nexport class ImportDetailType extends ImportListType {\n  error?: {\n    code: string;\n    description: string;\n    traceback: string;\n  };\n\n  job_id: string;\n  imported_version: string;\n  messages: {\n    level: string;\n    message: string;\n    time: string;\n  }[];\n}\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { clearSetFieldsFromRequest } from 'src/utilities';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { HubAPI } from './hub';\nimport { RemoteType } from '.';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n}\n\nexport const Repositories = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promise from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (!registry) {\n    registry = new ReducerRegistry({}, [promise, ...middleware]);\n  }\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paths } from 'src/paths';\nimport { LoadingPageWithHeader } from 'src/components';\n\nconst EditNamespace = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/edit-namespace/edit-namespace'\n    ),\n);\n\nconst CollectionDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-detail'\n    ),\n);\n\nconst CollectionContent = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-content'\n    ),\n);\n\nconst CollectionDocs = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-docs'\n    ),\n);\n\nconst CollectionImportLog = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-import-log'\n    ),\n);\n\nconst CollectionDependencies = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection_detail\" */\n      '../../containers/collection-detail/collection-dependencies'\n    ),\n);\n\nconst NotFound = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"not_found\" */\n      '../../containers/not-found/not-found'\n    ),\n);\n\nconst MyNamespaces = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_list\" */\n      '../../containers/namespace-list/my-namespaces'\n    ),\n);\n\nconst ManageNamespace = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/namespace-detail/namespace-detail'\n    ),\n);\n\nconst PartnerDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_detail\" */\n      '../../containers/namespace-detail/namespace-detail'\n    ),\n);\n\nconst Partners = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"namespace_list\" */\n      '../../containers/namespace-list/' + NAMESPACE_TERM\n    ),\n);\n\nconst MyImports = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"my_imports\" */\n      '../../containers/my-imports/my-imports'\n    ),\n);\n\nconst Search = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"search\" */\n      '../../containers/search/search'\n    ),\n);\n\nconst TokenPage = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/token/token-insights'\n    ),\n);\n\nconst TaskListView = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/task-management/task-list-view'\n    ),\n);\n\nconst TaskDetail = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/task-management/task_detail'\n    ),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      '../../containers/certification-dashboard/certification-dashboard'\n    ),\n);\n\nconst Repository = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"repository-list\" */\n      '../../containers/repositories/repository-list'\n    ),\n);\n\nconst SignatureKeysList = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"signature-keys-list\" */\n      '../../containers/signature-keys/list'\n    ),\n);\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Switch>\n        <Route path={Paths.repositories} component={Repository} />\n        <Route\n          path={Paths.approvalDashboard}\n          component={CertificationDashboard}\n        />\n        <Route path={Paths.notFound} component={NotFound} />\n        <Route path={Paths.token} component={TokenPage} />\n        <Route path={Paths[NAMESPACE_TERM]} component={Partners} />\n        <Route path={Paths.editNamespace} component={EditNamespace} />\n        <Route path={Paths.myCollections} component={ManageNamespace} />\n        <Route path={Paths.myCollectionsByRepo} component={ManageNamespace} />\n        <Route path={Paths.myNamespaces} component={MyNamespaces} />\n        <Route path={Paths.signatureKeys} component={SignatureKeysList} />\n        <Route path={Paths.taskList} component={TaskListView} />\n        <Route path={Paths.taskDetail} component={TaskDetail} />\n        <Route\n          path={Paths.collectionDocsPageByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionDocsIndexByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentDocsByRepo}\n          component={CollectionDocs}\n        />\n        <Route\n          path={Paths.collectionContentListByRepo}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLogByRepo}\n          component={CollectionImportLog}\n        />\n        <Route\n          path={Paths.collectionDependenciesByRepo}\n          component={CollectionDependencies}\n        />\n        <Route path={Paths.collectionByRepo} component={CollectionDetail} />\n        <Route path={Paths.namespaceByRepo} component={PartnerDetail} />\n        <Route path={Paths.searchByRepo} component={Search} />\n        <Route path={Paths.collectionDocsPage} component={CollectionDocs} />\n        <Route path={Paths.collectionDocsIndex} component={CollectionDocs} />\n        <Route path={Paths.collectionContentDocs} component={CollectionDocs} />\n        <Route\n          path={Paths.collectionContentList}\n          component={CollectionContent}\n        />\n        <Route\n          path={Paths.collectionImportLog}\n          component={CollectionImportLog}\n        />\n        <Route path={Paths.myImports} component={MyImports} />\n        <Route path={Paths.collection} component={CollectionDetail} />\n        <Route path={Paths.namespace} component={PartnerDetail} />\n        <Route path={Paths.search} component={Search} />\n        <Route>\n          <Redirect push to={Paths.notFound} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nRoutes.propTypes = {\n  childProps: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }),\n};\n","import { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { RouteComponentProps, withRouter, matchPath } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Alert } from '@patternfly/react-core';\nimport { Routes } from './Routes';\nimport '../app.scss';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { Paths } from 'src/paths';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\n\nconst DEFAULT_REPO = 'published';\n\ninterface IProps {\n  basename: string;\n  history: RouteComponentProps['history'];\n  location: RouteComponentProps['location'];\n  match: RouteComponentProps['match'];\n}\n\ninterface IState {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  selectedRepo: string;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      alerts: [],\n      featureFlags: null,\n      selectedRepo: DEFAULT_REPO,\n      settings: null,\n      user: null,\n    };\n  }\n\n  appNav: () => void;\n\n  componentDidMount() {\n    window.insights.chrome.init();\n    window.insights.chrome.identifyApp('automation-hub', APPLICATION_NAME);\n\n    // This listens for insights navigation events, so this will fire\n    // when items in the nav are clicked or the app is loaded for the first\n    // time\n    this.appNav = window.insights.chrome.on('APP_NAVIGATION', (event) => {\n      // might be undefined early in the load, or may not happen at all\n      if (!event?.domEvent?.href) {\n        return;\n      }\n\n      // basename is either `/ansible/automation-hub` or `/beta/ansible/automation-hub`, remove trailing /\n      // menu events don't have the /beta, converting\n      const basename = this.props.basename\n        .replace(/^\\/beta\\//, '/')\n        .replace(/\\/$/, '');\n\n      // domEvent: has the right href, always starts with /ansible/ansible-hub, no /beta prefix\n      // go to the href, relative to our *actual* basename (basename has no trailing /, so a path will start with / unless empty\n      const href = event.domEvent.href.replace(basename, '') || '/';\n\n      this.props.history.push(href);\n    });\n\n    loadContext().then((data) => this.setState(data));\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n  }\n\n  componentDidUpdate() {\n    // This is sort of a dirty hack to make it so that collection details can\n    // view repositories other than \"published\", but all other views are locked\n    // to \"published\"\n    // We do this because there is not currently a way to toggle repositories\n    // in automation hub on console.redhat.com, so it's important to ensure the user\n    // always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    const match = this.isRepoURL(this.props.location.pathname);\n\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in\n      // the url\n      if (match.params['repo'] !== this.state.selectedRepo) {\n        this.setState({ selectedRepo: match.params['repo'] });\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo\n      // if the repo is set to anything else.\n      if (this.state.selectedRepo !== DEFAULT_REPO) {\n        this.setState({ selectedRepo: DEFAULT_REPO });\n      }\n    }\n  }\n\n  render() {\n    // block the page from rendering if we're on a repo route and the repo in the\n    // url doesn't match the current state\n    // This gives componentDidUpdate a chance to recognize that route has chnaged\n    // and update the internal state to match the route before any pages can\n    // redirect the URL to a 404 state.\n    const match = this.isRepoURL(this.props.location.pathname);\n    if (match && match.params['repo'] !== this.state.selectedRepo) {\n      return null;\n    }\n\n    // Wait for the user data to load before any of the child components are\n    // rendered. This will prevent API calls from happening\n    // before the app can authenticate\n    if (!this.state.user) {\n      return null;\n    }\n\n    return (\n      <AppContext.Provider\n        value={{\n          alerts: this.state.alerts,\n          featureFlags: this.state.featureFlags,\n          selectedRepo: this.state.selectedRepo,\n          setAlerts: this.setAlerts,\n          setRepo: this.setRepo,\n          setUser: this.setUser,\n          settings: this.state.settings,\n          user: this.state.user,\n          hasPermission: (name) =>\n            hasPermission(\n              {\n                user: this.state.user,\n                settings: this.state.settings,\n                featureFlags: this.state.featureFlags,\n              },\n              name,\n            ),\n        }}\n      >\n        <Alert\n          isInline\n          variant='info'\n          title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n        />\n        <Routes childProps={this.props} />\n        <UIVersion />\n      </AppContext.Provider>\n    );\n  }\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  setAlerts = (alerts) => {\n    this.setState({ alerts });\n  };\n\n  isRepoURL = (location) => {\n    return matchPath(location, {\n      path: Paths.collectionByRepo,\n    });\n  };\n\n  setRepo = (_repo: string) => {\n    throw new Error('RepoSelector & setRepo only available in standalone');\n  };\n}\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  UserType,\n  SettingsType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags?._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// Accept-Language\nexport const userLanguage =\n  navigator.languages\n    .map((lang) => lang.replace(/[-_].*/, ''))\n    .filter((lang) => availableLanguages.includes(lang))[0] || 'en';\n\nasync function activate(locale: string) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (window.localStorage.test_l10n === 'true') {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(locale);\n}\n\nactivate(userLanguage);\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { I18nProvider } from '@lingui/react';\nimport { i18n } from '@lingui/core';\nimport { init } from './store';\nimport App from './loaders/insights/insights-loader';\nimport 'src/l10n';\n\n// Entrypoint for compiling the app to run in insights production mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <Provider store={init().getStore()}>\n      <Router basename={UI_BASE_PATH}>\n        <I18nProvider i18n={i18n}>\n          <App basename={UI_BASE_PATH} />\n        </I18nProvider>\n      </Router>\n    </Provider>\n  </React.StrictMode>\n);\n\nexport default AnsibleHub;\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport class AlertList extends React.Component<IProps> {\n  render() {\n    const { alerts, closeAlert } = this.props;\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          right: '5px',\n          top: '80px',\n          zIndex: 300,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n        data-cy='AlertList'\n      >\n        {alerts.map((alert, i) => (\n          <Alert\n            style={{ marginBottom: '16px' }}\n            key={i}\n            title={alert.title}\n            variant={alert.variant}\n            actionClose={\n              <AlertActionCloseButton onClose={() => closeAlert(i)} />\n            }\n          >\n            {alert.description}\n          </Alert>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    const newList = [...this.state['alerts']];\n    newList.splice(alertIndex, 1);\n\n    const newState = {};\n    newState[alertStateVariable] = newList;\n\n    this.setState(newState);\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Chip, ChipGroup, Button } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport class AppliedFilters extends React.Component<IProps> {\n  static defaultProps = {\n    ignoredParams: [],\n    niceNames: {},\n  };\n\n  render() {\n    const { params, ignoredParams, className, style } = this.props;\n\n    if (Object.keys(ParamHelper.getReduced(params, ignoredParams)).length > 0) {\n      return (\n        <div className={className} style={style}>\n          {Object.keys(ParamHelper.getReduced(params, ignoredParams)).map(\n            (key) => this.renderGroup(key),\n          )}\n          <Button onClick={this.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private renderGroup(key: string) {\n    const { niceNames, niceValues, params, updateParams } = this.props;\n\n    let chips;\n\n    if (Array.isArray(params[key])) {\n      chips = params[key];\n    } else {\n      chips = [params[key]];\n    }\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key}>\n          {chips.map((v, i) => (\n            <Chip\n              key={i}\n              onClick={() =>\n                updateParams({\n                  ...ParamHelper.deleteParam(params, key, v),\n                  page: 1,\n                })\n              }\n            >\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  }\n\n  private clearAllFilters = () => {\n    const { params, ignoredParams, updateParams } = this.props;\n    ParamHelper.clearAllFilters({ params, ignoredParams, updateParams });\n  };\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  AboutModal,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from '@patternfly/react-core';\nimport Logo from 'src/../static/images/logo_large.svg';\nimport { ApplicationInfoAPI, UserType } from 'src/api';\nimport { detect } from 'detect-browser';\n\nconst Label = ({ children }: { children: React.ReactNode }) => (\n  <TextListItem component={TextListItemVariants.dt}>{children}</TextListItem>\n);\n\nconst Value = ({ children }: { children: React.ReactNode }) => (\n  <TextListItem component={TextListItemVariants.dd}>{children}</TextListItem>\n);\n\ninterface IProps {\n  isOpen: boolean;\n  trademark: string;\n  brandImageSrc: string;\n  onClose: () => void;\n  brandImageAlt: string;\n  productName: string;\n  user: UserType;\n  userName: string;\n}\n\ninterface IState {\n  applicationInfo: {\n    galaxy_ng_commit: string;\n    pulp_ansible_version: string;\n    server_version: string;\n    aap_version: string;\n  };\n}\n\nexport class AboutModalWindow extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicationInfo: {\n        galaxy_ng_commit: '',\n        pulp_ansible_version: '',\n        server_version: '',\n        aap_version: '',\n      },\n    };\n  }\n\n  componentDidMount() {\n    ApplicationInfoAPI.get().then((result) => {\n      this.setState({\n        applicationInfo: {\n          galaxy_ng_commit: result.data.galaxy_ng_commit,\n          pulp_ansible_version: result.data.pulp_ansible_version,\n          server_version: result.data.server_version,\n          aap_version: result.data?.aap_version,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { isOpen, onClose, brandImageAlt, productName, user, userName } =\n      this.props;\n    const browser = detect();\n\n    return (\n      <AboutModal\n        isOpen={isOpen}\n        trademark=''\n        brandImageSrc={Logo}\n        onClose={onClose}\n        brandImageAlt={brandImageAlt}\n        productName={productName}\n      >\n        <TextContent>\n          <TextList component={TextListVariants.dl}>\n            <Label>{t`Server version`}</Label>\n            <Value>\n              {this.state.applicationInfo.server_version}\n              <br />\n              {this.state.applicationInfo.galaxy_ng_commit}\n            </Value>\n\n            <Label>{t`Pulp Ansible Version`}</Label>\n            <Value>{this.state.applicationInfo.pulp_ansible_version}</Value>\n\n            {this.state.applicationInfo?.aap_version && (\n              <>\n                <Label>{t`Ansible Automation Platform`}</Label>\n                <Value>{this.state.applicationInfo.aap_version}</Value>\n              </>\n            )}\n\n            <Label>{t`UI Version`}</Label>\n            <Value>{UI_COMMIT_HASH}</Value>\n\n            <Label>{t`Username`}</Label>\n            <Value>{userName}</Value>\n\n            <Label>{t`User Groups`}</Label>\n            <Value>{user.groups.map((group) => group.name).join()}</Value>\n\n            <Label>{t`Browser Version`}</Label>\n            <Value>{browser.name + ' ' + browser.version}</Value>\n\n            <Label>{t`Browser OS`}</Label>\n            <Value>{browser.os}</Value>\n          </TextList>\n        </TextContent>\n      </AboutModal>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './header.scss';\n\nimport { Title } from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport class Breadcrumbs extends React.Component<IProps> {\n  render() {\n    return (\n      <Breadcrumb>\n        {this.props.links.map((link, i) => this.renderLink(link, i))}\n      </Breadcrumb>\n    );\n  }\n\n  renderLink(link, index) {\n    return (\n      <BreadcrumbItem\n        key={index}\n        isActive={index + 1 === this.props.links.length}\n      >\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\nimport './switcher.scss';\n\nimport { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport class CardListSwitcher extends React.Component<IProps> {\n  static defaultProps = {\n    size: 'sm',\n  };\n\n  render() {\n    let disp = this.props.params.view_type;\n    const { updateParams, params, size, className } = this.props;\n\n    if (!disp) {\n      disp = 'card';\n    }\n\n    const iconClasses = ['icon', 'clickable'];\n\n    return (\n      <div className={className}>\n        <span data-cy='view_type_card'>\n          <ThLargeIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'card' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n            }\n          />\n        </span>\n        <span data-cy='view_type_list'>\n          <ListIcon\n            size={size}\n            className={cx(iconClasses, { selected: disp === 'list' })}\n            onClick={() =>\n              updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n            }\n          />\n        </span>\n      </div>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  TextContent,\n  Text,\n  TextVariants,\n  Badge,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { formatPath, Paths } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { Constants } from 'src/constants';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport class CollectionCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 60;\n\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      className,\n      footer,\n      repo,\n      sign_state,\n      menu,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    return (\n      <Card className={cx('hub-c-card-collection-container ', className)}>\n        <CardHeader className='logo-row'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            flexGrow\n          />\n          <TextContent>{this.getCertification(repo)}</TextContent>\n          <SignatureBadge isCompact signState={sign_state} />\n          {menu}\n        </CardHeader>\n        <CardHeader>\n          <div className='name'>\n            <Link\n              to={formatPath(Paths.collectionByRepo, {\n                collection: name,\n                namespace: namespace.name,\n                repo: repo,\n              })}\n            >\n              {name}\n            </Link>\n          </div>\n          <div className='author'>\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n            <div className='description'>\n              {this.getDescription(latest_version.metadata.description)}\n            </div>\n          </Tooltip>\n        </CardBody>\n        <CardBody className='type-container'>\n          {Object.keys(contentSummary.contents).map((k) =>\n            this.renderTypeCount(k, contentSummary.contents[k]),\n          )}\n        </CardBody>\n        {footer && <CardFooter>{footer}</CardFooter>}\n      </Card>\n    );\n  }\n\n  private getCertification(repo) {\n    if (repo === Constants.CERTIFIED_REPO) {\n      return (\n        <Text component={TextVariants.small}>\n          <Badge isRead>{t`Certified`}</Badge>\n        </Text>\n      );\n    }\n\n    return null;\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n\n  private renderTypeCount(type, count) {\n    return (\n      <div key={type}>\n        <CollectionNumericLabel count={count} newline type={type} />\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './collection-content-list.scss';\n\nimport { Link } from 'react-router-dom';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport { EmptyStateCustom } from 'src/components';\n\nimport { ContentSummaryType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport class CollectionContentList extends React.Component<IProps> {\n  ignoredParams = ['keywords', 'showing'];\n  static contextType = AppContext;\n\n  render() {\n    const { contents, collection, namespace, params, updateParams } =\n      this.props;\n\n    const toShow: ContentSummaryType[] = [];\n    const summary = { all: 0 };\n    const showing = params.showing || 'all';\n    const keywords = params.keywords || '';\n\n    for (const c of contents) {\n      summary[c.content_type] ||= 0;\n\n      const keywordMatch = c.name.match(keywords);\n      const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n      // count only items matching keyword\n      if (keywordMatch) {\n        summary[c.content_type]++;\n        summary['all']++;\n      }\n\n      // show only items matching keyword + type\n      if (keywordMatch && typeMatch) {\n        toShow.push(c);\n      }\n    }\n\n    return (\n      <div>\n        <div>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.keywords || ''}\n                  onChange={(val) =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', val))\n                  }\n                  onClear={() =>\n                    updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                  }\n                  aria-label={t`find-content`}\n                  placeholder={t`Find content`}\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n            <ToolbarGroup>\n              <ToolbarItem>{t`Showing:`}</ToolbarItem>\n              {Object.keys(summary).map((key) => (\n                <ToolbarItem\n                  key={key}\n                  className={cx({\n                    clickable: true,\n                    'hub-c-toolbar__item-selected-item': key === showing,\n                    'hub-c-toolbar__item-type-selector': true,\n                  })}\n                  onClick={() =>\n                    updateParams(ParamHelper.setParam(params, 'showing', key))\n                  }\n                >\n                  {key} ({summary[key]})\n                </ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          </Toolbar>\n        </div>\n        <table className='hub-c-table-content pf-c-table pf-m-compact'>\n          <thead>\n            <tr>\n              <th>{t`Name`}</th>\n              <th>{t`Type`}</th>\n              <th>{t`Description`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {toShow.map((content, i) => (\n              <tr key={i}>\n                <td>\n                  <Link\n                    to={formatPath(\n                      Paths.collectionContentDocsByRepo,\n                      {\n                        collection: collection,\n                        namespace: namespace,\n                        type: content.content_type,\n                        name: content.name,\n                        repo: this.context.selectedRepo,\n                      },\n                      ParamHelper.getReduced(params, this.ignoredParams),\n                    )}\n                  >\n                    {content.name}\n                  </Link>\n                </td>\n                <td>{content.content_type}</td>\n                <td>{content.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {summary.all <= 0 &&\n          this.context.selectedRepo === 'community' &&\n          this.renderCommunityWarningMessage()}\n      </div>\n    );\n  }\n\n  private renderCommunityWarningMessage() {\n    return (\n      <EmptyStateCustom\n        title={t`Warning`}\n        description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n        icon={ExclamationTriangleIcon}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { Spinner } from '@patternfly/react-core';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\ninterface IState {\n  collectionCount: number;\n  alerts: AlertType[];\n  loading: boolean;\n}\n\nexport class CollectionCount extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collectionCount: null,\n      alerts: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getCollectionCount(this.props.distributionPath);\n  }\n\n  render() {\n    const { collectionCount, loading } = this.state;\n    return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n  }\n\n  private getCollectionCount(repo) {\n    const { distributionPath } = this.props;\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        this.setState({ collectionCount: count, loading: false });\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n        const { status, statusText } = err.response;\n        this.addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n        );\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from 'src/components';\nimport * as moment from 'moment';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport React, { FC } from 'react';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n\n  if (!display_signatures) {\n    return null;\n  }\n\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { errorMessage, DeleteCollectionUtils } from 'src/utilities';\nimport './header.scss';\n\nimport { Redirect } from 'react-router-dom';\n\nimport * as moment from 'moment';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  List,\n  ListItem,\n  Modal,\n  Alert,\n  Text,\n  Button,\n  DropdownItem,\n} from '@patternfly/react-core';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  BreadcrumbType,\n  LinkTabs,\n  Logo,\n  RepoSelector,\n  Pagination,\n  AlertList,\n  AlertType,\n  closeAlertMixin,\n  StatefulDropdown,\n  SignSingleCertificateModal,\n  SignAllCertificatesModal,\n  UploadSingCertificateModal,\n  ImportModal,\n  DeleteCollectionModal,\n} from 'src/components';\n\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  SignCollectionAPI,\n  CollectionListType,\n  MyNamespaceAPI,\n  CollectionVersion,\n  Repositories,\n  CertificateUploadAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  waitForTask,\n  canSign as canSignNS,\n  parsePulpIDFromURL,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { Constants } from 'src/constants';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context?.featureFlags || {};\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Redirect push to={redirect} />;\n    }\n\n    const canSign = canSignNS(this.context, namespace);\n\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={collectionVersion}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceByRepo, {\n                      repo: this.context.selectedRepo,\n                      namespace: deleteCollection.namespace.name,\n                    }),\n                    selectedRepo: this.context.selectedRepo,\n                    addAlert: (alert) =>\n                      this.context.setAlerts([...this.state.alerts, alert]),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={Paths.searchByRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              <SignatureBadge\n                isCompact\n                signState={collection.latest_version.sign_state}\n              />\n            </div>\n          }\n          pageControls={\n            dropdownItems.length > 0 ? (\n              <div data-cy='kebab-toggle'>\n                <StatefulDropdown items={dropdownItems} />\n              </div>\n            ) : null\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import React, { FC, useState } from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { t } from '@lingui/macro';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface Props {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem: FC<Props> = ({ version }) => {\n  const { display_signatures } = useContext()?.featureFlags || {};\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-info.scss';\nimport { errorMessage } from 'src/utilities';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Split,\n  SplitItem,\n  Grid,\n  GridItem,\n  Button,\n  Alert,\n} from '@patternfly/react-core';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\nimport { CollectionDetailType, CollectionAPI } from 'src/api';\nimport { Tag, ClipboardCopy, LoginLink } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport class CollectionInfo extends React.Component<IProps> {\n  downloadLinkRef: React.RefObject<HTMLAnchorElement>;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.downloadLinkRef = React.createRef();\n  }\n\n  render() {\n    const { name, latest_version, namespace, params } = this.props;\n\n    let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n    if (params.version) {\n      installCommand += `:${params.version}`;\n    }\n\n    return (\n      <div className='pf-c-content info-panel'>\n        <h1>{t`Install`}</h1>\n        <Grid hasGutter={true}>\n          <GridItem>{latest_version.metadata.description}</GridItem>\n          <GridItem>\n            {latest_version.metadata.tags.map((tag, i) => (\n              <Tag key={i}>{tag}</Tag>\n            ))}\n          </GridItem>\n\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {latest_version.metadata.license\n                  ? latest_version.metadata.license.join(', ')\n                  : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n              <SplitItem isFilled>\n                <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Installing collections with ansible-galaxy is\n                    only supported in ansible 2.9+\n                  </Trans>\n                </div>\n                {this.context.user.is_anonymous &&\n                !this.context.settings\n                  .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                  <Alert\n                    className={'hub-collection-download-alert'}\n                    isInline\n                    variant='warning'\n                    title={\n                      <React.Fragment>\n                        {t`You have to be logged in to be able to download the tarball.`}{' '}\n                        <LoginLink />\n                      </React.Fragment>\n                    }\n                  />\n                ) : (\n                  <div>\n                    <a\n                      ref={this.downloadLinkRef}\n                      style={{ display: 'none' }}\n                    ></a>\n                    <Button\n                      className='download-button'\n                      variant='link'\n                      data-cy='download-collection-tarball-button'\n                      icon={<DownloadIcon />}\n                      onClick={() =>\n                        this.download(\n                          this.context.selectedRepo,\n                          namespace,\n                          name,\n                          latest_version,\n                        )\n                      }\n                    >\n                      {t`Download tarball`}\n                    </Button>\n                  </div>\n                )}\n              </SplitItem>\n            </Split>\n          </GridItem>\n          <DownloadSignatureGridItem version={latest_version} />\n          {latest_version.requires_ansible && (\n            <GridItem>\n              <Split hasGutter={true}>\n                <SplitItem className='install-title'>\n                  {t`Requires Ansible`}\n                </SplitItem>\n                <SplitItem isFilled data-cy='ansible-requirement'>\n                  {latest_version.requires_ansible}\n                </SplitItem>\n              </Split>\n            </GridItem>\n          )}\n\n          {latest_version.docs_blob.collection_readme ? (\n            <GridItem>\n              <div className='hub-readme-container'>\n                <div\n                  className='pf-c-content'\n                  dangerouslySetInnerHTML={{\n                    __html: latest_version.docs_blob.collection_readme.html,\n                  }}\n                />\n                <div className='hub-fade-out'></div>\n              </div>\n              <Link\n                to={formatPath(\n                  Paths.collectionDocsIndexByRepo,\n                  {\n                    collection: name,\n                    namespace: namespace.name,\n                    repo: this.context.selectedRepo,\n                  },\n                  params,\n                )}\n              >\n                {t`Go to documentation`}\n              </Link>\n            </GridItem>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n\n  private download(reponame, namespace, name, latest_version) {\n    CollectionAPI.getDownloadURL(\n      reponame,\n      namespace.name,\n      name,\n      latest_version.version,\n    )\n      .then((downloadURL: string) => {\n        // By getting a reference to a hidden <a> tag, setting the href and\n        // programmatically clicking it, we can hold off on making the api\n        // calls to get the download URL until it's actually needed. Clicking\n        // the <a> tag also gets around all the problems using a popup with\n        // window.open() causes.\n        this.downloadLinkRef.current.href = downloadURL;\n        this.downloadLinkRef.current.click();\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.props.addAlert(\n          'danger',\n          t`Collection \"${name}\" could not be downloaded.`,\n          errorMessage(status, statusText),\n        );\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './collection-filter.scss';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\ninterface IState {\n  inputText: string;\n}\n\nexport class CollectionFilter extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: props.params.keywords || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.keywords !== this.props.params['keywords']) {\n      this.setState({ inputText: this.props.params['keywords'] || '' });\n    }\n  }\n\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n    const { display_signatures } = this.context?.featureFlags || {};\n    const display_tags = ignoredParams.includes('tags') === false;\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      display_tags && {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as const,\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n      display_signatures && {\n        id: 'sign_state',\n        title: t`Sign state`,\n        inputType: 'select' as const,\n        options: [\n          { id: 'signed', title: t`Signed` },\n          { id: 'unsigned', title: t`Unsigned` },\n        ],\n      },\n    ].filter(Boolean);\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup style={{ marginLeft: 0 }}>\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={this.state.inputText}\n                onChange={(text) => this.setState({ inputText: text })}\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  niceNames={{\n                    sign_state: t`sign state`,\n                    tags: t`tags`,\n                    keywords: t`keywords`,\n                  }}\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './list.scss';\n\nimport { DataList } from '@patternfly/react-core';\nimport { CollectionListType } from 'src/api';\n\nimport {\n  CollectionListItem,\n  Pagination,\n  EmptyStateFilter,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  collections: CollectionListType[];\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  repo?: string;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.props.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n        <Pagination\n          params={params}\n          updateParams={(p) => updateParams(p)}\n          count={itemCount}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './list-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  CollectionNumericLabel,\n  Tag,\n  Logo,\n  DeprecatedTag,\n  DateComponent,\n} from 'src/components';\nimport { CollectionListType } from 'src/api';\nimport { convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps> {\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      repo,\n      sign_state,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n            data-cy='CollectionList-name'\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='hub-entry'>{latest_version.metadata.description}</div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          {Object.keys(contentSummary.contents).map((type) => (\n            <div key={type}>\n              <CollectionNumericLabel\n                count={contentSummary.contents[type]}\n                type={type}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          <LabelGroup>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='hub-entry'>{controls}</div> : null}\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>v{latest_version.version}</div>\n        <SignatureBadge className='hub-entry' signState={sign_state} />\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='CollectionListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\n\nimport { EmptyStateNoData, HelperText } from 'src/components';\n\nimport { CollectionDetailType, CollectionVersion } from 'src/api';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  dependencies_repos: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport class CollectionDependenciesList extends React.Component<IProps> {\n  render() {\n    const { collection, dependencies_repos } = this.props;\n    const { dependencies } = collection.latest_version.metadata;\n\n    if (!Object.keys(dependencies).length) {\n      return (\n        <EmptyStateNoData\n          title={t`No dependencies`}\n          description={t`Collection does not have dependencies.`}\n        />\n      );\n    }\n\n    return (\n      <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n        {dependencies_repos.map((dependency, i) =>\n          this.listDep(dependency, i, dependencies),\n        )}\n      </List>\n    );\n  }\n\n  private listDep(dependency, i, dependencies) {\n    const fqn = dependency.namespace + '.' + dependency.name;\n    const version_range = dependencies[fqn];\n\n    if (dependency.path) {\n      return (\n        <ListItem key={i} style={{ marginRight: '70px' }}>\n          <Link to={dependency.path}>{fqn}</Link>: {version_range}\n        </ListItem>\n      );\n    } else {\n      return (\n        <ListItem key={i} style={{ marginRight: '70px' }}>\n          {fqn}: {version_range}\n          <HelperText\n            content={t`No version of ${fqn} exists that matches ${version_range}.`}\n          />\n        </ListItem>\n      );\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CollectionUsedByDependencies } from 'src/api';\n\nimport {\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup,\n  SearchInput,\n} from '@patternfly/react-core';\n\nimport {\n  Pagination,\n  EmptyStateNoData,\n  EmptyStateFilter,\n  Sort,\n  LoadingPageSpinner,\n} from 'src/components';\n\nimport { ParamHelper, filterIsSet } from 'src/utilities';\nimport { formatPath, Paths } from 'src/paths';\n\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport class CollectionUsedbyDependenciesList extends React.Component<IProps> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  render() {\n    const {\n      params,\n      usedByDependencies,\n      itemCount,\n      updateParams,\n      usedByDependenciesLoading,\n    } = this.props;\n\n    if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n      return (\n        <EmptyStateNoData\n          title={t`Not required for use by other collections`}\n          description={t`Collection is not being used by any collection.`}\n        />\n      );\n    }\n\n    return (\n      <>\n        <div className='hub-toolbar'>\n          <Toolbar>\n            <ToolbarGroup>\n              <ToolbarItem>\n                <SearchInput\n                  value={params.name__icontains || ''}\n                  onChange={(val) =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', val),\n                    )\n                  }\n                  onClear={() =>\n                    updateParams(\n                      ParamHelper.setParam(params, 'name__icontains', ''),\n                    )\n                  }\n                  aria-label='filter-collection-name'\n                  placeholder={t`Filter by name`}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Sort\n                  options={[\n                    { title: t`Collection`, id: 'collection', type: 'alpha' },\n                  ]}\n                  params={params}\n                  updateParams={({ sort }) =>\n                    updateParams(ParamHelper.setParam(params, 'sort', sort))\n                  }\n                />\n              </ToolbarItem>\n            </ToolbarGroup>\n          </Toolbar>\n          {!!itemCount && (\n            <Pagination\n              params={params}\n              updateParams={(p) => updateParams(p)}\n              count={itemCount}\n              isTop\n            />\n          )}\n        </div>\n\n        {usedByDependenciesLoading ? (\n          <LoadingPageSpinner />\n        ) : (\n          <>\n            {!itemCount ? (\n              <EmptyStateFilter />\n            ) : (\n              <>\n                <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                  <tbody>\n                    {usedByDependencies.map(\n                      ({ name, namespace, version, repository_list }, i) => (\n                        <tr key={i}>\n                          <td>\n                            <Link\n                              to={formatPath(\n                                Paths.collectionByRepo,\n                                {\n                                  collection: name,\n                                  namespace,\n                                  repo: repository_list[0],\n                                },\n                                ParamHelper.getReduced(\n                                  { version },\n                                  this.ignoredParams,\n                                ),\n                              )}\n                            >\n                              {namespace + '.' + name} v{version}\n                            </Link>\n                          </td>\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n                <Pagination\n                  params={params}\n                  updateParams={(params) => updateParams(params)}\n                  count={itemCount}\n                />\n              </>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  TextInput,\n  InputGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, strgin | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length != 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    const {\n      cancelAction,\n      children,\n      deleteAction,\n      isDisabled,\n      title,\n      spinner,\n      variant,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <div data-cy='delete-button' key='delete'>\n            <Button\n              key='delete'\n              onClick={deleteAction}\n              variant='danger'\n              isDisabled={isDisabled}\n            >\n              {t`Delete`}\n              {spinner && <Spinner size='sm'></Spinner>}\n            </Button>\n          </div>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant={variant}\n        data-cy='modal_checkbox'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { ExecutionEnvironmentAPI } from 'src/api';\nimport { waitForTask } from 'src/utilities';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\n\nimport { Checkbox, Text } from '@patternfly/react-core';\n\ninterface IState {\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\ninterface IProps {\n  closeAction: () => void;\n  selectedItem: string;\n  addAlert: (message, variant, description?) => void;\n  afterDelete: () => void;\n}\n\nexport class DeleteExecutionEnvironmentModal extends React.Component<\n  IProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  render() {\n    const { selectedItem, closeAction } = this.props;\n    const { isDeletionPending, confirmDelete } = this.state;\n\n    return (\n      <DeleteModal\n        spinner={isDeletionPending}\n        title={t`Delete container?`}\n        cancelAction={() => closeAction()}\n        deleteAction={() => this.deleteContainer(selectedItem)}\n        isDisabled={!confirmDelete || isDeletionPending}\n      >\n        <Text className='delete-container-modal-message'>\n          <Trans>\n            Deleting <b>{selectedItem}</b> and its data will be lost.\n          </Trans>\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={(value) => this.setState({ confirmDelete: value })}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    );\n  }\n\n  deleteContainer(selectedItem: string) {\n    const { addAlert, closeAction, afterDelete } = this.props;\n    this.setState({ isDeletionPending: true }, () =>\n      ExecutionEnvironmentAPI.deleteExecutionEnvironment(selectedItem)\n        .then((result) => {\n          const taskId = result.data.task.split('tasks/')[1].replace('/', '');\n          waitForTask(taskId).then(() => {\n            this.setState({\n              confirmDelete: false,\n              isDeletionPending: false,\n            });\n            closeAction();\n            addAlert(\n              <Trans>\n                Execution environment &quot;{selectedItem}&quot; has been\n                successfully deleted.\n              </Trans>,\n              'success',\n            );\n            afterDelete();\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            confirmDelete: false,\n            isDeletionPending: false,\n          });\n          addAlert(\n            t`Execution environment \"${selectedItem}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n          closeAction();\n        }),\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { List, ListItem, Spinner, Alert } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { UserType } from 'src/api';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserType, UserAPI } from 'src/api';\nimport { mapErrorMessages } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { errorMessage } from 'src/utilities';\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nexport class DeprecatedTag extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          margin: '4px',\n          backgroundColor: '#C9190B',\n          color: 'white',\n          fontSize: '14px',\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          paddingBottom: '2px',\n          paddingTop: '2px',\n          borderRadius: '3px',\n        }}\n      >\n        {t`DEPRECATED`}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    return (\n      <EmptyState\n        variant={EmptyStateVariant[this.props.variant]}\n        data-cy='EmptyState'\n      >\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { PlusCircleIcon, CubesIcon } from '@patternfly/react-icons';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { LoginLink } from 'src/components';\n\nexport class EmptyStateUnauthorized extends React.Component {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={\n          <>\n            {t`Contact your organization administrator for more information.`}\n            <br />\n            <br />\n            <LoginLink button />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Paths, formatPath } from 'src/paths';\nimport { BaseHeader, Breadcrumbs, Tabs, SignatureBadge } from 'src/components';\nimport { ContainerRepositoryType } from 'src/api';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'owners', name: t`Owners` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: Paths.executionEnvironments,\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'owners'\n                    ? formatPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'owners'\n                ? {\n                    name: t`Owners`,\n                    url: groupId\n                      ? formatPath(Paths.executionEnvironmentDetailOwners, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'owners' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { RoleAPI } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { RolePermissions, LoadingPageSpinner } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  filteredPermissions?: {\n    [key: string]: string;\n  };\n}\n\nexport const GroupRolePermissions = ({ name, filteredPermissions }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  if (!filteredPermissions) {\n    filteredPermissions = { ...Constants.HUMAN_PERMISSIONS };\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <RolePermissions\n        filteredPermissions={filteredPermissions}\n        selectedPermissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { Popover, PopoverPosition, Button } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\n\nimport { Tooltip, Spinner } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nimport { formatPath, Paths } from 'src/paths';\nimport {\n  ImportListType,\n  ImportDetailType,\n  PulpStatus,\n  CollectionVersion,\n} from 'src/api';\n\nimport { StatusIndicator } from 'src/components';\n\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport './my-imports.scss';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n  APISearchTypeAhead,\n} from 'src/components';\nimport {\n  PulpStatus,\n  NamespaceType,\n  ImportListType,\n  MyNamespaceAPI,\n} from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { filterIsSet, errorMessage } from 'src/utilities';\nimport { Constants } from 'src/constants';\nimport { DateComponent, EmptyStateNoData, EmptyStateFilter } from '..';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from 'src/api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\n// We're not using the Tab react component because they don't support links.\nexport class LinkTabs extends React.Component<IProps> {\n  render() {\n    return (\n      <div className='pf-c-tabs'>\n        <ul className='pf-c-tabs__list'>\n          {this.props.tabs.map((tab) => this.renderTab(tab))}\n        </ul>\n      </div>\n    );\n  }\n\n  private renderTab({ link, title, active = false }) {\n    return (\n      <li\n        className={cx({\n          'pf-c-tabs__item': true,\n          'pf-m-current': active,\n        })}\n        key={title}\n      >\n        <Link to={link} className='pf-c-tabs__link'>\n          <span className='pf-c-tabs__item-text'>{title}</span>\n        </Link>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Skeleton, Title } from '@patternfly/react-core';\n\nimport { Main, LoadingPageSpinner } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { DateComponent, EmptyStateNoData, SortTable, ClipboardCopy } from '..';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { CollectionCount } from 'src/components';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport class LoginLink extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { button, next } = this.props;\n    const { featureFlags } = this.context;\n    const className = button ? 'pf-c-button pf-m-primary' : '';\n\n    // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n    if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n      return (\n        <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>\n      );\n    } else {\n      return (\n        <Link\n          className={className}\n          to={formatPath(Paths.login, {}, { next })}\n        >{t`Login`}</Link>\n      );\n    }\n  }\n}\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport class Main extends React.Component<IProps> {\n  render() {\n    const { children, className, ...extra } = this.props;\n    return (\n      <section\n        className={cx(\n          'pf-l-page__main-section',\n          'pf-c-page__main-section',\n          className,\n        )}\n        {...extra}\n      >\n        {children}\n      </section>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './markdown-editor.scss';\n\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './cards.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Logo } from 'src/components';\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport class NamespaceCard extends React.Component<IProps> {\n  MAX_DESCRIPTION_LENGTH = 26;\n  render() {\n    const { avatar_url, name, company, namespaceURL } = this.props;\n    return (\n      <Card className='hub-c-card-ns-container'>\n        <CardHeader>\n          <CardHeaderMain>\n            <Logo\n              alt={t`${company} logo`}\n              fallbackToDefault\n              image={avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <Tooltip content={company || name}>\n          <CardTitle>{this.getDescription(company || name)}</CardTitle>\n        </Tooltip>\n        <Tooltip content={name}>\n          <CardBody>{this.getDescription(name)}</CardBody>\n        </Tooltip>\n\n        {namespaceURL && (\n          <CardFooter>\n            <Link to={namespaceURL}>{t`View collections`}</Link>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getDescription(d: string) {\n    if (!d) {\n      return '';\n    }\n    if (d.length > this.MAX_DESCRIPTION_LENGTH) {\n      return d.slice(0, this.MAX_DESCRIPTION_LENGTH) + '...';\n    } else {\n      return d;\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\n\nimport {\n  Alert,\n  Form,\n  FormGroup,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  ExternalLinkAltIcon,\n  PlusCircleIcon,\n  TrashIcon,\n} from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\n\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup fieldId='none' label={t`Namespace owners`}>\n          <Alert\n            isInline\n            variant='info'\n            title={\n              <Trans>\n                Moved to the{' '}\n                <Link\n                  target='_blank'\n                  to={formatPath(\n                    Paths.namespaceByRepo,\n                    {\n                      repo: this.context.selectedRepo,\n                      namespace: namespace.name,\n                    },\n                    { tab: 'owners' },\n                  )}\n                >\n                  Namespace owners\n                </Link>{' '}\n                <ExternalLinkAltIcon /> tab\n              </Trans>\n            }\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import * as React from 'react';\nimport { plural } from '@lingui/macro';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nexport class NumericLabel extends React.Component<IProps> {\n  render() {\n    const { number, newline, label } = this.props;\n\n    let numberElem = (\n      <span key='number'>{NumericLabel.roundNumber(number)} </span>\n    );\n    let labelElem = (\n      <span key='label' className='hub-numeric-label-label'>\n        {label}\n      </span>\n    );\n\n    if (newline) {\n      numberElem = <div>{numberElem}</div>;\n      labelElem = <div>{labelElem}</div>;\n    }\n\n    return (\n      <div>\n        {numberElem}\n        {labelElem}\n      </div>\n    );\n  }\n\n  // Make this a static property so that we can use this function outside of\n  // rendering the whole component\n  static roundNumber(n: number): string {\n    if (n < 1000) {\n      // returns 1 to 999\n      return n.toString();\n    } else if (n < 10000) {\n      // returns 1K to 9.9K\n      return (Math.floor(n / 100) / 10).toString() + 'K';\n    } else if (n < 1000000) {\n      // returns 10K to 999K\n      return Math.floor(n / 1000).toString() + 'K';\n    } else if (n < 100000000) {\n      // returns 1M to 9.9M\n      return (Math.floor(n / 100000) / 10).toString() + 'M';\n    } else if (n < 1000000000) {\n      return Math.floor(n / 1000000).toString() + 'M';\n    }\n\n    // If larger than a billion, don't even bother.\n    return '1B+';\n  }\n}\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nexport class CollectionNumericLabel extends React.Component<ICNLProps> {\n  render() {\n    const { count, newline, type } = this.props;\n\n    const label =\n      {\n        module: plural(count, {\n          one: 'Module',\n          other: 'Modules',\n        }),\n        role: plural(count, {\n          one: 'Role',\n          other: 'Roles',\n        }),\n        plugin: plural(count, {\n          one: 'Plugin',\n          other: 'Plugins',\n        }),\n        dependency: plural(count, {\n          one: 'Dependency',\n          other: 'Dependencies',\n        }),\n      }[type] || type;\n\n    return <NumericLabel number={count} newline={newline} label={label} />;\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { sortBy } from 'lodash';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class OwnersTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`OwnersTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'owners',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n  ToggleTemplate,\n} from '@patternfly/react-core';\n\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\nexport class Pagination extends React.Component<IProps> {\n  render() {\n    const { count, params, updateParams, isTop, perPageOptions, isCompact } =\n      this.props;\n\n    const extraProps = {};\n    if (!isTop) {\n      extraProps['widgetId'] = 'pagination-options-menu-bottom';\n      extraProps['variant'] = PaginationVariant.bottom;\n    }\n\n    return (\n      <PaginationPF\n        itemCount={count}\n        perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n        page={params.page || 1}\n        onSetPage={(_, p) =>\n          updateParams(ParamHelper.setParam(params, 'page', p))\n        }\n        onPerPageSelect={(_, p) => {\n          updateParams({ ...params, page: 1, page_size: p });\n        }}\n        {...extraProps}\n        isCompact={isTop || isCompact}\n        perPageOptions={this.mapPerPageOptions(\n          perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n        )}\n        titles={{\n          ofWord: t`of`,\n          perPageSuffix: t`per page`,\n          items: null,\n        }}\n        toggleTemplate={(props) => <ToggleTemplate ofWord={t`of`} {...props} />}\n      />\n    );\n  }\n\n  private mapPerPageOptions(options) {\n    return options.map((option) => ({\n      title: String(option),\n      value: option,\n    }));\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './header.scss';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport {\n  BaseHeader,\n  Logo,\n  Tabs,\n  TabsType,\n  Breadcrumbs,\n  BreadcrumbType,\n} from 'src/components';\nimport { NamespaceType } from 'src/api';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  customPermissions?: string[];\n  setSelected?: (selected: string[]) => void;\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onSelect?: (event, selection) => void;\n  onClear?: () => void;\n  menuAppendTo?: 'parent' | 'inline';\n  multilingual?: boolean;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    if (this.props.isViewOnly) {\n      const items = this.props.selectedPermissions.length\n        ? this.props.selectedPermissions\n        : [this.placeholderText()];\n      return (\n        <LabelGroup>\n          {items.map((text) => (\n            <Label key={text}>\n              {this.props.multilingual ? i18n._(text) : text}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    let selections = [];\n    if (this.props.multilingual) {\n      selections = this.props.selectedPermissions.map((value) => ({\n        // orginal english value\n        value,\n        // translated\n        toString: () => i18n._(value),\n      }));\n    } else {\n      selections = this.props.selectedPermissions;\n    }\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        variant={SelectVariant.typeaheadMulti}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        onClear={this.props.onClear ? this.props.onClear : this.clearSelection}\n        selections={selections}\n        isOpen={this.state.isOpen}\n        placeholderText={this.placeholderText()}\n        isDisabled={!!this.props.isDisabled}\n      >\n        {this.props.availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : this.props.availablePermissions.map((option, index) => (\n              <SelectOption key={index} value={option}>\n                {this.props.multilingual ? i18n._(option) : option}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n\n  private placeholderText() {\n    if (!this.props.isDisabled && !this.props.isViewOnly) {\n      return t`Select permissions`;\n    }\n    return this.props.selectedPermissions.length === 0 ? t`No permission` : '';\n  }\n\n  private clearSelection = () => {\n    this.props.setSelected([]);\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen: isOpen,\n    });\n  };\n\n  private onSelect = (event, selection) => {\n    // value contains orginal key in english\n    if (this.props.multilingual && selection.value) {\n      selection = selection.value;\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(event, selection);\n    } else {\n      const newPerms = new Set(this.props.selectedPermissions);\n      if (newPerms.has(selection)) {\n        newPerms.delete(selection);\n      } else {\n        newPerms.add(selection);\n      }\n\n      this.props.setSelected(Array.from(newPerms));\n    }\n  };\n}\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n  inputText: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n  inputText: '',\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Controllers list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Tags could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, digest, tag } = this.state;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    const docsLink =\n      'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank' rel='noreferrer'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that\n              Controller&apos;s console. Log in (if necessary) and follow the\n              steps to complete the configuration.\n            </Trans>\n            <br />\n            {!unsafeLinksSupported && (\n              <Trans>\n                <b>Note:</b> The following links may be blocked by your browser.\n                Copy and paste the external link manually.\n              </Trans>\n            )}\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  inputText={this.state.inputText}\n                  onChange={(text) => this.setState({ inputText: text })}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import * as React from 'react';\nimport './render-plugin-doc.scss';\n\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderModuleLink: (moduleName: string) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  // checks if I(), B(), M(), U(), L(), or C() exists. Returns type (ex: B)\n  // and value in parenthesis. Based off of formatters in ansible:\n  // https://github.com/ansible/ansible/blob/devel/hacking/build_library/build_ansible/jinja2/filters.py#L26\n  CUSTOM_FORMATTERS = /([IBMULC])\\(([^)]+)\\)/gm;\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  // This functions similar to how string.replace() works, except it returns\n  // a react object instead of a string\n  private reactReplace(\n    text: string,\n    reg: RegExp,\n    replacement: (matches: string[]) => React.ReactNode,\n  ): React.ReactNode {\n    const fragments = [];\n\n    let match: string[];\n    let prevIndex = 0;\n    while ((match = reg.exec(text)) !== null) {\n      fragments.push(\n        text.substr(prevIndex, reg.lastIndex - prevIndex - match[0].length),\n      );\n      fragments.push(replacement(match));\n      prevIndex = reg.lastIndex;\n    }\n\n    if (fragments.length === 0) {\n      return <span>{text}</span>;\n    }\n\n    // append any text after the last match\n    if (prevIndex != text.length - 1) {\n      fragments.push(text.substring(prevIndex));\n    }\n\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    const { renderModuleLink, renderDocLink } = this.props;\n\n    const nstring = this.reactReplace(text, this.CUSTOM_FORMATTERS, (match) => {\n      const fullMatch = match[0];\n      const type = match[1];\n      const textMatch = match[2];\n\n      switch (type) {\n        case 'L': {\n          const url = textMatch.split(',');\n          return renderDocLink(url[0], url[1]);\n        }\n        case 'U':\n          return (\n            <a href={textMatch} target='_blank' rel='noreferrer'>\n              {textMatch}\n            </a>\n          );\n        case 'I':\n          return <i>{textMatch}</i>;\n        case 'C':\n          return <span className='inline-code'>{textMatch}</span>;\n        case 'M':\n          return renderModuleLink(textMatch);\n\n        case 'B':\n          return <b>{textMatch}</b>;\n\n        default:\n          return fullMatch;\n      }\n    });\n\n    return nstring;\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, pluginName: string) {\n    const isDeprecated = doc.deprecated || pluginName.startsWith('_');\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport * as FileSaver from 'file-saver';\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Flex,\n  FlexItem,\n  Button,\n  Modal,\n  Checkbox,\n  ExpandableSection,\n  Switch,\n} from '@patternfly/react-core';\n\nimport { WriteOnlyField, HelperText, FileUpload } from 'src/components';\n\nimport { AppContext } from 'src/loaders/app-context';\n\nimport {\n  DownloadIcon,\n  ExclamationTriangleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { Constants } from 'src/constants';\nimport { isFieldSet, isWriteOnly, ErrorMessagesType } from 'src/utilities';\n\nimport { validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const { remote } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n        'signed_only',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='link'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const { filenames } = this.state;\n    const { signatures_enabled } = this.context?.featureFlags || {};\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && signatures_enabled ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      filenames.requirements_file.name,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.client_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.ca_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { AppContext } from 'src/loaders/app-context';\nimport { RemoteType, UserType, PulpStatus } from 'src/api';\nimport { DateComponent, SortTable, ListItemActions } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { lastSynced, lastSyncStatus } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { hasPermission } = this.context;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length &&\n        hasPermission('ansible.change_collectionremote') && (\n          <DropdownItem\n            key='edit'\n            onClick={() => this.props.editRemote(remote)}\n          >\n            {t`Edit`}\n          </DropdownItem>\n        ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { hasPermission } = this.context;\n    if (!hasPermission('ansible.change_collectionremote')) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\n\nimport * as React from 'react';\n\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\ninterface IState {\n  selectExpanded: boolean;\n}\n\nexport class RepoSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { selectExpanded: false };\n  }\n\n  render() {\n    const repoNames = Constants.REPOSITORYNAMES;\n\n    return (\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText\n              style={{ paddingLeft: 0 }}\n              variant='plain'\n              className='hub-input-group-text-no-wrap'\n            >\n              {t`Filter by repository`}\n            </InputGroupText>\n            <Select\n              className='nav-select'\n              isDisabled={this.props.isDisabled}\n              isOpen={this.state.selectExpanded}\n              isPlain={false}\n              onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n                const originalRepo = this.props.selectedRepo;\n                const newRepo = this.getRepoName(event.target.name);\n\n                this.setState({ selectExpanded: false });\n\n                if (newRepo !== originalRepo) {\n                  const path = formatPath(this.props.path, {\n                    ...this.props.pathParams,\n                    repo: event.target.name,\n                  });\n                  this.context.setRepo(path);\n                }\n              }}\n              onToggle={(isExpanded) => {\n                this.setState({ selectExpanded: isExpanded });\n              }}\n              selections={this.getRepoName(this.props.selectedRepo)}\n              variant='single'\n            >\n              {Object.keys(repoNames).map((option) => (\n                <SelectOption\n                  name={option}\n                  key={option}\n                  value={i18n._(repoNames[option])}\n                />\n              ))}\n            </Select>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  private getRepoName(repoName) {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return repo ? i18n._(repo) : repoName;\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  AlertType,\n  APISearchTypeAhead,\n  HelperText,\n  AlertList,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  errorMessage,\n  ErrorMessagesType,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n  alertErrorsWithoutFields,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n\n          <FormGroup fieldId='none' label={t`Groups with access`}>\n            <Alert\n              isInline\n              variant='info'\n              title={\n                isNew ? (\n                  <Trans>\n                    Moved to the <b>Owners</b> tab\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Moved to the{' '}\n                    <Link\n                      target='_blank'\n                      to={formatPath(Paths.executionEnvironmentDetailOwners, {\n                        container: name,\n                      })}\n                    >\n                      Owners\n                    </Link>{' '}\n                    <ExternalLinkAltIcon /> tab\n                  </Trans>\n                )\n              }\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { i18n } from '@lingui/core';\nimport { PermissionChipSelector } from 'src/components';\nimport {\n  ActionGroup,\n  Button,\n  Flex,\n  FlexItem,\n  Form,\n  TextInput,\n  InputGroup,\n  FormGroup,\n  Title,\n  Divider,\n  Spinner,\n} from '@patternfly/react-core';\n\nimport { twoWayMapper } from 'src/utilities';\n\nimport { Constants } from 'src/constants';\ninterface IState {\n  permissions: string[];\n}\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions: selectedPermissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n    const groups = Constants.PERMISSIONS;\n\n    const filteredPermissions = { ...Constants.HUMAN_PERMISSIONS };\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder='Role name'\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder='Add a role description here'\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>Permissions</Title>\n\n            {groups.map((group) => (\n              <Flex\n                style={{ marginTop: '16px' }}\n                alignItems={{ default: 'alignItemsCenter' }}\n                key={group.name}\n                className={group.name}\n                data-cy={`RoleForm-Permissions-row-${group.name}`}\n              >\n                <FlexItem style={{ minWidth: '200px' }}>\n                  {i18n._(group.label)}\n                </FlexItem>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <PermissionChipSelector\n                    availablePermissions={group.object_permissions\n                      .filter(\n                        (perm) =>\n                          !selectedPermissions.find(\n                            (selected) => selected === perm,\n                          ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))\n                      .sort()}\n                    selectedPermissions={selectedPermissions\n                      .filter((selected) =>\n                        group.object_permissions.find(\n                          (perm) => selected === perm,\n                        ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))}\n                    setSelected={(perms) =>\n                      this.setState({ permissions: perms })\n                    }\n                    menuAppendTo='inline'\n                    multilingual={true}\n                    isViewOnly={false}\n                    onClear={() => {\n                      const clearedPerms = group.object_permissions;\n                      this.setState({\n                        permissions: this.state.permissions.filter(\n                          (x) => !clearedPerms.includes(x),\n                        ),\n                      });\n                    }}\n                    onSelect={(event, selection) => {\n                      const newPerms = new Set(this.state.permissions);\n                      if (\n                        newPerms.has(\n                          twoWayMapper(selection, filteredPermissions),\n                        )\n                      ) {\n                        newPerms.delete(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      } else {\n                        newPerms.add(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      }\n                      this.setState({\n                        permissions: Array.from(newPerms),\n                      });\n                    }}\n                  />\n                </FlexItem>\n              </Flex>\n            ))}\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(selectedPermissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { BaseHeader, Breadcrumbs, BreadcrumbType } from 'src/components';\n\ninterface IProps {\n  title: string;\n  subTitle?: string;\n  breadcrumbs: BreadcrumbType[];\n}\n\nexport class RoleHeader extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title, subTitle, breadcrumbs } = this.props;\n    return (\n      <BaseHeader\n        breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n        title={title}\n      >\n        {' '}\n        <div style={{ paddingBottom: '10px' }}>\n          <Trans>{subTitle}</Trans>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { i18n } from '@lingui/core';\nimport * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { Constants } from 'src/constants';\nimport { PermissionChipSelector } from 'src/components';\nimport { twoWayMapper } from 'src/utilities';\n\ninterface IProps {\n  filteredPermissions: { [key: string]: string };\n  selectedPermissions: string[];\n  setPermissions?: (permissions) => void;\n  showEmpty: boolean;\n  showCustom: boolean;\n}\n\nexport const RolePermissions: React.FC<IProps> = ({\n  filteredPermissions,\n  selectedPermissions,\n  setPermissions,\n  showCustom,\n  showEmpty,\n}) => {\n  const permFilter = (availablePermissions) =>\n    selectedPermissions\n      .filter((selected) =>\n        availablePermissions.find((perm) => selected === perm),\n      )\n      .map((value) => twoWayMapper(value, filteredPermissions) ?? value);\n\n  const getSelected = (group) => permFilter(group.object_permissions);\n\n  const customPermissions = selectedPermissions.filter(\n    (perm) => !Object.keys(filteredPermissions).includes(perm),\n  );\n\n  const origGroups = Constants.PERMISSIONS.map((group) => ({\n    ...group,\n    label: i18n._(group.label),\n  }));\n  const allGroups = showCustom\n    ? [\n        ...origGroups,\n        {\n          name: 'custom',\n          label: t`Custom permissions`,\n          object_permissions: customPermissions,\n        },\n      ]\n    : origGroups;\n  const groups = showEmpty\n    ? allGroups\n    : allGroups.filter((group) => getSelected(group).length);\n\n  return (\n    <>\n      {groups.map((group) => (\n        <Flex\n          style={{ marginTop: '16px' }}\n          alignItems={{ default: 'alignItemsCenter' }}\n          key={group.name}\n          className={group.name}\n        >\n          <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n          <FlexItem grow={{ default: 'grow' }}>\n            <PermissionChipSelector\n              isViewOnly={!setPermissions}\n              menuAppendTo='inline'\n              multilingual={true}\n              selectedPermissions={getSelected(group).filter(Boolean)}\n              {...(setPermissions\n                ? {\n                    availablePermissions: group.object_permissions\n                      .filter(\n                        (perm) =>\n                          !selectedPermissions.find(\n                            (selected) => selected === perm,\n                          ),\n                      )\n                      .map((value) => twoWayMapper(value, filteredPermissions))\n                      .sort(),\n                    setSelected: setPermissions,\n                    onClear: () => {\n                      const clearedPermissions = group.object_permissions;\n                      setPermissions(\n                        selectedPermissions.filter(\n                          (x) => !clearedPermissions.includes(x),\n                        ),\n                      );\n                    },\n                    onSelect: (event, selection) => {\n                      const newPermissions = new Set(selectedPermissions);\n                      if (\n                        newPermissions.has(\n                          twoWayMapper(selection, filteredPermissions),\n                        )\n                      ) {\n                        newPermissions.delete(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      } else {\n                        newPermissions.add(\n                          twoWayMapper(selection, filteredPermissions),\n                        );\n                      }\n                      setPermissions(Array.from(newPermissions));\n                    },\n                  }\n                : {})}\n            />\n          </FlexItem>\n        </Flex>\n      ))}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './namespace-form.scss';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport class ResourcesForm extends React.Component<IProps> {\n  render() {\n    const { namespace } = this.props;\n\n    return (\n      <MarkdownEditor\n        text={namespace.resources}\n        placeholder={placeholder}\n        helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n        updateText={(value) => this.updateResources(value)}\n        editing={true}\n      />\n    );\n  }\n\n  private updateResources(data) {\n    const update = { ...this.props.namespace };\n    update.resources = data;\n    this.props.updateNamespace(update);\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { AlertType } from 'src/components';\n\nimport {\n  Button,\n  Modal,\n  Spinner,\n  Label,\n  LabelGroup,\n  Form,\n  FormGroup,\n  TextInput,\n  InputGroup,\n  Alert,\n  AlertActionLink,\n} from '@patternfly/react-core';\n\nimport { TagIcon } from '@patternfly/react-icons';\n\nimport {\n  ContainerManifestType,\n  ExecutionEnvironmentAPI,\n  ContainerTagAPI,\n  ContainerRepositoryType,\n  TaskAPI,\n  PulpStatus,\n} from 'src/api';\n\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup id='remove-tag' defaultIsOpen={true}>\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import * as React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport class ShaLabel extends React.Component<IProps> {\n  render() {\n    const { digest, grey, long } = this.props;\n\n    return (\n      <Tooltip content={digest}>\n        <Label color={grey ? 'grey' : 'blue'}>\n          {long ? digest : truncateSha(digest)}\n        </Label>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport './sort.scss';\n\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n} from '@patternfly/react-icons';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {\n  LongArrowAltUpIcon,\n  LongArrowAltDownIcon,\n  ArrowsAltVIcon,\n} from '@patternfly/react-icons';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: object;\n  updateParams: (params) => void;\n}\n\nexport class SortTable extends React.Component<IProps> {\n  private sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        'sort',\n        (isMinus ? '-' : '') + id,\n      ),\n      page: 1,\n    });\n  }\n  private getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n    let Icon;\n    const activeIcon =\n      !!this.props.params['sort'] &&\n      id == this.props.params['sort'].replace('-', '');\n    let isMinus = false;\n    if (activeIcon) {\n      isMinus = this.props.params['sort'].includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => this.sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  private getHeaderItem(item) {\n    return (\n      <th key={item.id} className={item?.className}>\n        {item.title} {this.getIcon(item.type, item.id)}\n      </th>\n    );\n  }\n\n  render() {\n    return (\n      <thead>\n        <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n          {this.props.options['headers'].map((element) =>\n            this.getHeaderItem(element),\n          )}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownToggle,\n} from '@patternfly/react-core';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n  selected: string;\n}\n\nexport class StatefulDropdown extends React.Component<IProps, IState> {\n  static defaultProps = {\n    isPlain: true,\n    toggleType: 'kebab',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: undefined,\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, toggleType, defaultText, position, isPlain, ariaLabel } =\n      this.props;\n\n    return (\n      <Dropdown\n        onSelect={(e) => this.onSelect(e)}\n        toggle={this.renderToggle(toggleType, defaultText)}\n        isOpen={isOpen}\n        isPlain={isPlain}\n        dropdownItems={items}\n        position={position || DropdownPosition.right}\n        autoFocus={false}\n        aria-label={ariaLabel}\n      />\n    );\n  }\n\n  private renderToggle(toggleType, defaultText) {\n    switch (toggleType) {\n      case 'dropdown':\n        return (\n          <DropdownToggle onToggle={(e) => this.onToggle(e)}>\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'icon':\n        return (\n          <DropdownToggle\n            toggleIndicator={null}\n            onToggle={(e) => this.onToggle(e)}\n          >\n            {this.state.selected\n              ? this.state.selected\n              : defaultText || t`Dropdown`}\n          </DropdownToggle>\n        );\n      case 'kebab':\n        return <KebabToggle onToggle={(e) => this.onToggle(e)} />;\n    }\n  }\n\n  private onToggle(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  private onSelect(event) {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen,\n        selected: event.currentTarget.value,\n      },\n      () => {\n        if (this.props.onSelect) {\n          this.props.onSelect(event);\n        }\n      },\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  OutlinedClockIcon,\n  ExclamationIcon,\n  SyncAltIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nexport class StatusIndicator extends React.Component<IProps> {\n  static defaultProps = {\n    type: 'primary',\n  };\n\n  typeToVariantMap: Record<string, LabelProps['variant']> = {\n    primary: 'outline',\n    secondary: 'filled',\n  };\n\n  render() {\n    let labelProps: LabelPropType;\n    const { status, type } = this.props;\n\n    switch (status) {\n      case PulpStatus.waiting:\n        labelProps = {\n          color: 'blue',\n          text: t`Pending`,\n          icon: <OutlinedClockIcon />,\n        };\n        break;\n\n      // TODO: what does skipped mean in pulp\n      case PulpStatus.skipped:\n      case PulpStatus.canceled:\n        labelProps = {\n          color: 'orange',\n          text: t`Canceled`,\n          icon: <ExclamationIcon />,\n        };\n        break;\n\n      case PulpStatus.running:\n        labelProps = { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n        break;\n\n      case PulpStatus.completed:\n        labelProps = {\n          color: 'green',\n          text: t`Completed`,\n          icon: <CheckCircleIcon />,\n        };\n        break;\n\n      case PulpStatus.failed:\n        labelProps = {\n          color: 'red',\n          text: t`Failed`,\n          icon: <ExclamationCircleIcon />,\n        };\n        break;\n      default:\n        return '---';\n    }\n\n    return (\n      <Label\n        variant={this.typeToVariantMap[type]}\n        color={labelProps.color}\n        icon={labelProps.icon}\n        className={this.props.className}\n      >\n        {labelProps.text}\n      </Label>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport { capitalize } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\n\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\nimport { AppContext } from 'src/loaders/app-context';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IState {\n  collapsedCategories: string[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class TableOfContents extends React.Component<IProps, IState> {\n  docsBlobCache: DocsBlobType;\n  tableCache: Table;\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsedCategories: [],\n    };\n  }\n\n  render() {\n    const { className, docs_blob, updateParams, params } = this.props;\n\n    // There's a lot of heavy processing that goes into formatting the table\n    // variable. To prevent running everything each time the component renders,\n    // cache the value as an object property.\n    // This is a lazy anti pattern. I should be using memoization or something\n    // like that, but the react docs recommend using a third party memoization\n    // library and I am not going to add extra dependencies just for this\n    // component https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\n\n    if (!this.tableCache || this.docsBlobCache !== docs_blob) {\n      this.tableCache = this.parseLinks(docs_blob);\n      this.docsBlobCache = docs_blob;\n    }\n\n    const table = this.tableCache;\n\n    return (\n      <div className={className}>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                ref={this.props.searchBarRef}\n                value={params.keywords}\n                onChange={(val) => {\n                  updateParams(ParamHelper.setParam(params, 'keywords', val));\n                }}\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        <Nav theme='light'>\n          <NavList>\n            {Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : this.renderLinks(\n                    table[key],\n                    key,\n                    this.props.params.keywords || '',\n                  ),\n            )}\n          </NavList>\n        </Nav>\n      </div>\n    );\n  }\n\n  private parseLinks(docs_blob: DocsBlobType): Table {\n    const { namespace, collection } = this.props;\n\n    const baseUrlParams = {\n      namespace: namespace,\n      collection: collection,\n      repo: this.context.selectedRepo,\n    };\n\n    const table = {\n      documentation: [] as DocsEntry[],\n      modules: [] as DocsEntry[],\n      roles: [] as DocsEntry[],\n      plugins: [] as DocsEntry[],\n      playbooks: [] as DocsEntry[],\n    };\n\n    table.documentation.push({\n      display: t`Readme`,\n      url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n      type: 'docs',\n      name: 'readme',\n    });\n\n    if (docs_blob.documentation_files) {\n      for (const file of docs_blob.documentation_files) {\n        const url = sanitizeDocsUrls(file.name);\n        table.documentation.push({\n          display: this.capitalize(\n            file.name.split('.')[0].split('_').join(' '),\n          ),\n          url: formatPath(Paths.collectionDocsPageByRepo, {\n            ...baseUrlParams,\n            page: url,\n          }),\n          // selected: selectedType === 'docs' && selectedName === url,\n          type: 'docs',\n          name: url,\n        });\n      }\n    }\n\n    if (docs_blob.contents) {\n      for (const content of docs_blob.contents) {\n        switch (content.content_type) {\n          case 'role':\n            table.roles.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'module':\n            table.modules.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          case 'playbook':\n            table.playbooks.push(this.getContentEntry(content, baseUrlParams));\n            break;\n          default:\n            table.plugins.push(this.getContentEntry(content, baseUrlParams));\n            break;\n        }\n      }\n    }\n\n    // Sort docs\n    for (const k of Object.keys(table)) {\n      table[k].sort((a, b) => {\n        // Make sure that anything starting with _ goes to the bottom\n        // of the list\n        if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n          return 1;\n        }\n        if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n          return -1;\n        }\n        return a.display > b.display ? 1 : -1;\n      });\n    }\n\n    return table;\n  }\n\n  private renderLinks(links: DocsEntry[], title, filterString: string) {\n    const isExpanded = !this.state.collapsedCategories.includes(title);\n    const filteredLinks = links.filter((link) =>\n      link.display.toLowerCase().includes(filterString.toLowerCase()),\n    );\n    return (\n      <NavExpandable\n        key={title}\n        title={capitalize(`${title} (${filteredLinks.length})`)}\n        isExpanded={isExpanded}\n        isActive={this.getSelectedCategory() === title}\n      >\n        {filteredLinks.map((link: DocsEntry, index) => (\n          <NavItem key={index} isActive={this.isSelected(link)}>\n            <Link\n              style={{\n                textOverflow: 'ellipses',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n              to={\n                link.url +\n                (Object.keys(this.props.params).length != 0\n                  ? '?' + ParamHelper.getQueryString(this.props.params)\n                  : '')\n              }\n            >\n              <span\n                style={{\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  display: 'block',\n                }}\n              >\n                {link.display}\n              </span>\n            </Link>\n          </NavItem>\n        ))}\n      </NavExpandable>\n    );\n  }\n\n  private isSelected(entry: DocsEntry): boolean {\n    // the readme's url is always docs/, so load it when the name is null\n    if (!this.props.selectedName && entry.name === 'readme') {\n      return true;\n    }\n\n    return (\n      // selected name and type are the values found for type and name\n      // in the page url\n      this.props.selectedName === entry.name &&\n      this.props.selectedType === entry.type\n    );\n  }\n\n  private getSelectedCategory(): string {\n    const { selectedType } = this.props;\n    if (!selectedType || selectedType === 'docs') {\n      return 'documentation';\n    }\n\n    if (selectedType === 'role') {\n      return 'roles';\n    }\n\n    if (selectedType === 'module') {\n      return 'modules';\n    }\n\n    return 'plugins';\n  }\n\n  private capitalize(s: string) {\n    return s.slice(0, 1).toUpperCase() + s.slice(1);\n  }\n\n  private getContentEntry(content, base): DocsEntry {\n    return {\n      display: content.content_name,\n      url: formatPath(Paths.collectionContentDocsByRepo, {\n        ...base,\n        type: content.content_type,\n        name: content.content_name,\n      }),\n      name: content.content_name,\n      type: content.content_type,\n    };\n  }\n}\n","import * as React from 'react';\n\nimport { Tab, Tabs as PFTabs, TabTitleText } from '@patternfly/react-core';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport class Tabs extends React.Component<IProps> {\n  render() {\n    const { tabs, params, updateParams, isDisabled, disabledTitle } =\n      this.props;\n    return (\n      <PFTabs\n        activeKey={this.getActiveTab()}\n        onSelect={(_, key) =>\n          !isDisabled &&\n          updateParams(\n            ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n          )\n        }\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            eventKey={i}\n            title={\n              <TabTitleText title={isDisabled ? disabledTitle : null}>\n                {tab.name}\n              </TabTitleText>\n            }\n            className={isDisabled ? 'disabled' : null}\n          />\n        ))}\n      </PFTabs>\n    );\n  }\n\n  private getActiveTab() {\n    const { params, tabs } = this.props;\n    if (params.tab) {\n      const i = tabs.findIndex(\n        (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n      );\n\n      // If tab is not found, default to the first tab.\n      if (i === -1) {\n        return 0;\n      } else {\n        return i;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import * as React from 'react';\nimport './tag.scss';\n\nimport { Label } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport class Tag extends React.Component<IProps> {\n  render() {\n    return (\n      <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n        {this.props.children}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\n\ninterface IProps {\n  tag: string;\n}\n\nexport class TagLabel extends React.Component<IProps> {\n  render() {\n    const { tag } = this.props;\n    return (\n      <Label variant='outline' icon={<TagIcon />}>\n        {tag}\n      </Label>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Tooltip as PFTooltip } from '@patternfly/react-core';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport class Tooltip extends React.Component<IProps> {\n  render() {\n    const { content, children } = this.props;\n    return (\n      <PFTooltip content={content}>\n        <span>{children}</span>\n      </PFTooltip>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HTMLComment = ({ text, ...props }) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nHTMLComment.propTypes = { text: PropTypes.string };\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import * as React from 'react';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\n\nimport {\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  Label,\n  Tooltip,\n  Switch,\n  Alert,\n  TextInputTypes,\n} from '@patternfly/react-core';\n\nimport { AlertType, APISearchTypeAhead, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { UserType, GroupAPI } from 'src/api';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\n\nimport {\n  BaseHeader,\n  Main,\n  Breadcrumbs,\n  BreadcrumbType,\n  UserForm,\n} from 'src/components';\nimport { UserType } from 'src/api';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\n\nimport React, { useState } from 'react';\n\nimport { SortTable } from 'src/components';\n\nimport {\n  TableComposable,\n  Tr,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n} from '@patternfly/react-table';\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport class WriteOnlyField extends React.Component<IProps> {\n  render() {\n    const { onClear, isValueSet, children } = this.props;\n\n    if (!isValueSet) {\n      return children;\n    }\n\n    return (\n      <InputGroup>\n        <TextInput\n          aria-label={t`hidden value`}\n          placeholder='••••••••••••••••••••••'\n          type='password'\n          isDisabled={isValueSet}\n        />\n        {isValueSet && (\n          <Button onClick={() => onClear()} variant='control'>\n            {t`Clear`}\n          </Button>\n        )}\n      </InputGroup>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport class ClipboardCopy extends React.Component<IProps> {\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <PFClipboardCopy\n        hoverTip={t`Copy to clipboard`}\n        clickTip={t`Successfully copied to clipboard!`}\n        {...props}\n      >\n        {children}\n      </PFClipboardCopy>\n    );\n  }\n}\n","import * as React from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  FileUpload as PFFileUpload,\n  FileUploadProps,\n} from '@patternfly/react-core';\n\nexport class FileUpload extends React.Component<FileUploadProps> {\n  render() {\n    return (\n      <PFFileUpload\n        browseButtonText={t`Browse...`}\n        clearButtonText={t`Clear`}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        {...this.props}\n      />\n    );\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n\n    return (\n      <td\n        style={{\n          paddingRight: '0px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {buttons?.length ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {kebabItems?.length ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { Text, Checkbox } from '@patternfly/react-core';\nimport { DeleteModal } from 'src/components';\nimport { CollectionDetailType, CollectionListType } from 'src/api';\n\ninterface IProps {\n  deleteCollection: CollectionDetailType | CollectionListType;\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport class DeleteCollectionModal extends React.Component<IProps> {\n  render() {\n    const {\n      deleteCollection,\n      isDeletionPending,\n      confirmDelete,\n      collectionVersion,\n      cancelAction,\n      deleteAction,\n      setConfirmDelete,\n    } = this.props;\n\n    return (\n      deleteCollection && (\n        <DeleteModal\n          spinner={isDeletionPending}\n          cancelAction={() => cancelAction()}\n          deleteAction={() => deleteAction()}\n          isDisabled={!confirmDelete || isDeletionPending}\n          title={\n            collectionVersion\n              ? t`Delete collection version?`\n              : t`Delete collection?`\n          }\n        >\n          <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n            {collectionVersion ? (\n              <>\n                {(deleteCollection as CollectionDetailType).all_versions\n                  .length === 1 ? (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost and this will cause the entire\n                    collection to be deleted.\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost.\n                  </Trans>\n                )}\n              </>\n            ) : (\n              <Trans>\n                Deleting <b>{deleteCollection.name}</b> and its data will be\n                lost.\n              </Trans>\n            )}\n          </Text>\n          <Checkbox\n            isChecked={confirmDelete}\n            onChange={setConfirmDelete}\n            label={t`I understand that this action cannot be undone.`}\n            id='delete_confirm'\n          />\n        </DeleteModal>\n      )\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Flex, FlexItem, Label, Divider } from '@patternfly/react-core';\nimport { RoleType, GroupType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => (\n  <div className='hub-custom-wizard-layout'>\n    <p>\n      <Trans>\n        The following roles will be applied to group:{' '}\n        <strong>{group.name}</strong>\n      </Trans>\n    </p>\n    <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n      {selectedRoles.map((role) => (\n        <React.Fragment key={role.name}>\n          <FlexItem>\n            <strong>{role.name}</strong>{' '}\n            {role?.description &&\n              `- ${translateLockedRolesDescription(\n                role.name,\n                role.description,\n              )}`}\n            <Flex className='hub-permissions'>\n              {role.permissions.map((permission) => (\n                <FlexItem\n                  key={permission}\n                  className='hub-permission'\n                  data-cy={`HubPermission-${permission}`}\n                >\n                  <Tooltip\n                    content={\n                      Constants.HUMAN_PERMISSIONS[permission] || permission\n                    }\n                  >\n                    <Label>{splitByDot(permission)}</Label>\n                  </Tooltip>\n                </FlexItem>\n              ))}\n            </Flex>\n          </FlexItem>\n          <FlexItem>\n            <Divider />\n          </FlexItem>\n        </React.Fragment>\n      ))}\n    </Flex>\n  </div>\n);\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { RoleType, RoleAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  CheckboxRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport { GroupType, GroupAPI } from 'src/api';\nimport {\n  CompoundFilter,\n  RoleListTable,\n  Pagination,\n  AppliedFilters,\n  LoadingPageSpinner,\n  RadioRow,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport './legacy-role-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  LabelGroup,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport { Tag, Logo, DateComponent } from 'src/components';\n\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`role.github_user logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          ></Logo>\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport './legacy-namespace-item.scss';\n\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n} from '@patternfly/react-core';\n\nimport { Link } from 'react-router-dom';\n\nimport { Paths, formatPath } from 'src/paths';\nimport { Logo } from 'src/components';\n\nimport { LegacyNamespaceDetailType } from 'src/api/response-types/legacy-namespace';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        ></Logo>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t, defineMessage } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static PERMISSIONS = [\n    {\n      name: 'namespaces',\n      label: defineMessage({ message: `Collection Namespaces` }),\n      object_permissions: [\n        'galaxy.add_namespace',\n        'galaxy.change_namespace',\n        'galaxy.delete_namespace',\n        'galaxy.upload_to_namespace',\n      ],\n    },\n    {\n      name: 'collections',\n      label: defineMessage({ message: `Collections` }),\n      object_permissions: [\n        'ansible.modify_ansible_repo_content',\n        'ansible.delete_collection',\n      ],\n    },\n    {\n      name: 'users',\n      label: defineMessage({ message: `Users` }),\n      object_permissions: [\n        'galaxy.view_user',\n        'galaxy.delete_user',\n        'galaxy.add_user',\n        'galaxy.change_user',\n      ],\n    },\n    {\n      name: 'groups',\n      label: defineMessage({ message: `Groups` }),\n      object_permissions: [\n        'galaxy.view_group',\n        'galaxy.delete_group',\n        'galaxy.add_group',\n        'galaxy.change_group',\n      ],\n    },\n    {\n      name: 'remotes',\n      label: defineMessage({ message: `Collection Remotes` }),\n      object_permissions: [\n        'ansible.change_collectionremote',\n        'ansible.view_collectionremote',\n      ],\n    },\n    {\n      name: 'containers',\n      label: defineMessage({ message: `Containers` }),\n      object_permissions: [\n        'container.delete_containerrepository',\n\n        'container.namespace_change_containerdistribution',\n        'container.namespace_modify_content_containerpushrepository',\n        'container.namespace_push_containerdistribution',\n\n        'container.add_containernamespace',\n        'container.change_containernamespace',\n      ],\n    },\n    {\n      name: 'registries',\n      label: defineMessage({ message: `Remote Registries` }),\n      object_permissions: [\n        'galaxy.add_containerregistryremote',\n        'galaxy.change_containerregistryremote',\n        'galaxy.delete_containerregistryremote',\n      ],\n    },\n    {\n      name: 'task_management',\n      label: defineMessage({ message: `Task Management` }),\n      object_permissions: [\n        'core.change_task',\n        'core.delete_task',\n        'core.view_task',\n      ],\n    },\n  ];\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static HUMAN_PERMISSIONS = {\n    'ansible.add_ansibledistribution': t`Add Ansible distribution`,\n    'ansible.add_collectionremote': t`Add collection remote`,\n    'ansible.change_ansibledistribution': t`Change Ansible distribution`,\n    'ansible.change_collectionremote': t`Change collection remote`,\n    'ansible.delete_ansibledistribution': t`Delete Ansible distribution`,\n    'ansible.delete_collection': t`Delete collection`,\n    'ansible.delete_collectionremote': t`Delete collection remote`,\n    'ansible.modify_ansible_repo_content': t`Modify Ansible repo content`,\n    'ansible.view_ansibledistribution': t`View Ansible distribution`,\n    'ansible.view_collectionremote': t`View collection remote`,\n    'container.add_containerdistribution': t`Add container distribution`,\n    'container.add_containernamespace': t`Create new containers`,\n    'container.add_containerrepository': t`Add container repository`,\n    'container.change_containerdistribution': t`Change container distribution`,\n    'container.change_containernamespace': t`Change container namespace permissions`,\n    'container.change_containerrepository': t`Change container repository`,\n    'container.delete_containerdistribution': t`Delete container distribution`,\n    'container.delete_containernamespace': t`Delete container namespace`,\n    'container.delete_containerrepository': t`Delete container repository`,\n    'container.namespace_change_containerdistribution': t`Change containers`,\n    'container.namespace_modify_content_containerpushrepository': t`Change image tags`,\n    'container.namespace_pull_containerdistribution': t`Pull private containers`,\n    'container.namespace_push_containerdistribution': t`Push to existing containers`,\n    'container.namespace_view_containerdistribution': t`View private containers`,\n    'core.change_task': t`Change task`,\n    'core.delete_task': t`Delete task`,\n    'core.view_task': t`View all tasks`,\n    'galaxy.add_containerregistryremote': t`Add remote registry`,\n    'galaxy.add_group': t`Add group`,\n    'galaxy.add_namespace': t`Add namespace`,\n    'galaxy.add_synclist': t`Add synclist`,\n    'galaxy.add_user': t`Add user`,\n    'galaxy.change_containerregistryremote': t`Change remote registry`,\n    'galaxy.change_group': t`Change group`,\n    'galaxy.change_namespace': t`Change namespace`,\n    'galaxy.change_synclist': t`Change synclist`,\n    'galaxy.change_user': t`Change user`,\n    'galaxy.delete_containerregistryremote': t`Delete remote registry`,\n    'galaxy.delete_group': t`Delete group`,\n    'galaxy.delete_namespace': t`Delete namespace`,\n    'galaxy.delete_synclist': t`Delete synclist`,\n    'galaxy.delete_user': t`Delete user`,\n    'galaxy.upload_to_namespace': t`Upload to namespace`,\n    'galaxy.view_group': t`View group`,\n    'galaxy.view_synclist': t`View synclist`,\n    'galaxy.view_user': t`View user`,\n  };\n\n  static GROUP_HUMAN_PERMISSIONS = {\n    change_namespace: t`Change namespace`,\n    upload_to_namespace: t`Upload to namespace`,\n    add_containernamespace: t`Create new containers`,\n    namespace_pull_containerdistribution: t`Pull private containers`,\n    namespace_change_containerdistribution: t`Update container information`,\n    namespace_view_containerdistribution: t`View private containers`,\n    namespace_modify_content_containerpushrepository: t`Change image tags`,\n    change_containernamespace: t`Change container namespace permissions`,\n    namespace_push_containerdistribution: t`Push images to existing containers`,\n    view_containernamespace: t`View container's namespace`,\n    delete_containernamespace: t`Delete container's namespace`,\n    namespace_delete_containerdistribution: t`Delete container's distribution`,\n    namespace_view_containerpushrepository: t`View container's repository`,\n    namespace_add_containerdistribution: t`Push new containers`,\n    change_containerdistribution: t`Change distribution`,\n    delete_containerdistribution: t`Delete distribution`,\n    push_containerdistribution: t`Push distribution`,\n    pull_containerdistribution: t`Pull distribution`,\n    view_containerdistribution: t`View distribution`,\n  };\n\n  static CONTAINER_NAMESPACE_PERMISSIONS = [\n    'change_containernamespace',\n    'namespace_push_containerdistribution',\n    'namespace_change_containerdistribution',\n    'namespace_modify_content_containerpushrepository',\n    'namespace_add_containerdistribution',\n  ];\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n  static DOWNSTREAM_HOSTS = [\n    // FIXME 2021-09: remove obsolete cloud* references\n    'cloud.redhat.com',\n    'cloud.stage.redhat.com',\n    'ci.cloud.redhat.com',\n    'qa.cloud.redhat.com',\n\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n    validated: defineMessage({ message: `Validated` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified', 'validated'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import * as React from 'react';\nimport { UserType, FeatureFlagsType, SettingsType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  setRepo: (repo: string) => void;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { ParamHelper } from './utilities/param-helper';\n\nexport function formatPath(\n  path: Paths,\n  data,\n  params?: Record<string, string | boolean>,\n) {\n  let url = (path as string) + '/';\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k + '+', data[k]).replace(':' + k, data[k]);\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\nexport enum Paths {\n  executionEnvironmentDetailActivities = '/containers/:container+/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container+/_content/images',\n  executionEnvironmentDetailOwners = '/containers/:container+/_content/owners',\n  executionEnvironmentDetail = '/containers/:container+',\n  executionEnvironments = '/containers',\n  executionEnvironmentManifest = '/containers/:container+/_content/images/:digest',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: Paths[NAMESPACE_TERM],\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","// returns value/key based on given value/key and a mapper\nexport function twoWayMapper(value: string, mapper: object) {\n  if (Object.values(mapper).includes(value)) {\n    return Object.keys(mapper).find((key) => mapper[key] === value);\n  }\n  if (Object.keys(mapper).includes(value)) {\n    return mapper[value];\n  }\n  return undefined;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  const splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  return !!user.model_permissions[name]['has_model_permission'];\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","// TODO - canSign can be renamed to canSignNS\nexport const canSign = ({ featureFlags }, namespace) => {\n  const { can_create_signatures } = featureFlags || {};\n  const permissions = namespace?.related_fields?.my_permissions || [];\n  return (\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = ({ featureFlags }, container) => {\n  const { can_create_signatures, signatures_enabled, container_signing } =\n    featureFlags || {};\n\n  return (\n    can_create_signatures &&\n    signatures_enabled &&\n    container_signing &&\n    container.namespace.my_permissions.includes(\n      'container.change_containernamespace',\n    )\n  );\n};\n","import { t, Trans } from '@lingui/macro';\nimport React from 'react';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { CollectionAPI } from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection) {\n    const { name, namespace } = collection;\n    return CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    selectedRepo,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(selectedRepo, collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { Constants } from 'src/constants';\nimport { i18n } from '@lingui/core';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params: params }, callback);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","interceptors","request","use","authHandler","p","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","HubAPI","API_BASE_PATH","url","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","getUIPath","repo","path","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","reject","err","undefined","ImportMessageCodes","PulpStatus","NamespaceAPI","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","for_object_type","newParams","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","field","RemoteAPI","distribution","_id","_obj","ApplicationInfoAPI","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","ControllerAPI","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","SigningServiceAPI","CertificateUploadAPI","repository","signed_collection","Repositories","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","registry","init","middleware","ReducerRegistry","promise","EditNamespace","lazy","CollectionDetail","CollectionContent","CollectionDocs","CollectionImportLog","CollectionDependencies","NotFound","MyNamespaces","ManageNamespace","PartnerDetail","Partners","MyImports","Search","TokenPage","TaskListView","TaskDetail","CertificationDashboard","Repository","SignatureKeysList","Routes","Suspense","fallback","Switch","Route","Paths","component","Redirect","push","to","propTypes","childProps","PropTypes","location","pathname","DEFAULT_REPO","App","props","user","setState","alerts","matchPath","_repo","state","featureFlags","selectedRepo","settings","getFeatureFlags","identifyApp","APPLICATION_NAME","appNav","on","event","domEvent","href","basename","replace","history","_messages","msg","variant","title","split","all","match","isRepoURL","value","setAlerts","setRepo","setUser","hasPermission","Alert","isInline","Component","withRouter","connect","availableLanguages","locale","messages","localStorage","test_l10n","forEach","key","Array","isArray","i18n","plurals","moment","activate","navigator","languages","lang","store","getStore","UI_BASE_PATH","APISearchTypeAhead","loadResults","onClear","evt","textInput","target","getOptions","isOpen","selection","isPlaceholder","onSelect","multiple","selected","selections","group","SelectVariant","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","options","results","option","SelectOption","length","React","AlertList","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","marginBottom","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","newList","splice","newState","AppliedFilters","ignoredParams","updateParams","className","renderGroup","Button","onClick","clearAllFilters","chips","niceNames","niceValues","marginRight","ChipGroup","categoryName","v","Chip","BaseHeader","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","showRepoSelector","cx","Title","headingLevel","size","Breadcrumbs","Breadcrumb","links","link","renderLink","index","BreadcrumbItem","isActive","Link","CardListSwitcher","disp","view_type","iconClasses","CollectionCard","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","getCertification","SignatureBadge","isCompact","signState","formatPath","Text","TextVariants","CardBody","Tooltip","content","getDescription","k","renderTypeCount","CardFooter","Badge","isRead","d","MAX_DESCRIPTION_LENGTH","slice","type","CollectionNumericLabel","newline","CollectionContentList","toShow","summary","showing","keywords","c","keywordMatch","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","val","placeholder","clickable","context","renderCommunityWarningMessage","EmptyStateCustom","icon","ExclamationTriangleIcon","AppContext","CollectionCount","collectionCount","loading","getCollectionCount","Spinner","promises","collections","statusText","addAlert","errorMessage","DateComponent","date","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","useContext","display_signatures","Label","color","text","UploadSingCertificateModal","useState","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","page_size","modalPagination","errorAlert","isOpenSignAllModal","signing_service","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","redirect","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","activeTab","find","created","created_at","urlKeys","latestVersion","can_upload_signatures","isLatestVersion","signedString","collectionName","canSign","canSignNS","dropdownItems","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","toString","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","loadingVariant","renderSelectVersions","StatefulDropdown","items","renderTabs","rel","include_related","related_fields","my_permissions","active","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","concat","pulp_href","reload","warning","DownloadSignatureGridItem","show","setShow","signatures","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","downloadLinkRef","installCommand","tags","Tag","isFilled","license","join","ClipboardCopy","isReadOnly","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","reponame","downloadURL","current","click","CollectionFilter","inputText","prevProps","display_tags","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","listDep","EmptyStateNoData","fqn","version_range","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","selectedFilter","selectedID","currentTarget","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","renderInput","submitFilter","trim","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteModal","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","filteredPermissions","setRole","useEffect","selectedRole","translateLockedRolesDescription","RolePermissions","selectedPermissions","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","renderMessage","level","message","hideCollectionName","empty","collectionHead","approvalStatus","rlist","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","artifact","sha256","loaded","total","cancel","tab","renderTab","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","cliConfig","getRepoUrl","pulp_last_updated","isCode","next","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","NamespaceForm","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","preventDefault","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","roundNumber","labelElem","n","Math","floor","plugin","OwnersTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","noData","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","renderGroupRow","urlPrefix","ListItemActions","kebabItems","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","pulpObjectType","selectRolesMessage","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addGroup","addRole","perPageOptions","extraProps","PaginationVariant","mapPerPageOptions","titles","ofWord","perPageSuffix","toggleTemplate","ToggleTemplate","String","PartnerHeader","filters","Tabs","PermissionChipSelector","setSelected","multilingual","newPerms","Set","has","add","from","isViewOnly","typeAheadAriaLabel","clearSelection","availablePermissions","RenderPluginDoc","renderError","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","suboptions","parseReturnRecursive","returnV","ret","contains","reg","replacement","fragments","prevIndex","exec","substr","lastIndex","substring","renderModuleLink","renderDocLink","reactReplace","CUSTOM_FORMATTERS","fullMatch","textMatch","pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","entries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","getRemoteType","requiredFields","disabledFields","allowEditName","showModal","isValid","saveRemote","renderForm","signatures_enabled","docsAnsibleLink","fileOnChange","helperTextIcon","helperTextInvalidIcon","isChecked","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","Flex","FlexItem","grow","default","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","isNumericSet","rate_limit","Number","isInteger","host","fieldName","newFields","is_set","isNaN","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","editRemote","updated_at","lastSynced","lastSyncStatus","configButton","syncButton","syncRemote","distributions","selectExpanded","repoNames","InputGroupText","newRepo","getRepoName","repoName","setPermissions","getSelected","object_permissions","perm","twoWayMapper","customPermissions","origGroups","allGroups","minWidth","clearedPermissions","newPermissions","ResourcesForm","resources","updateResources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","descending","def","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","isMinus","Icon","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","element","getHeaderItem","ariaLabel","Dropdown","toggle","renderToggle","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","primary","secondary","labelProps","typeToVariantMap","TableOfContents","collapsedCategories","tableCache","docsBlobCache","parseLinks","table","searchBarRef","Nav","theme","NavList","renderLinks","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","capitalize","getContentEntry","a","b","filterString","filteredLinks","NavExpandable","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","entry","selectedName","selectedType","s","toUpperCase","base","disabledTitle","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","select","disable","RadioRow","hoverTip","clickTip","clearButtonText","textAlign","showClose","hasNoBodyWrapper","hasNoBodyPadding","navAriaLabel","mainAriaLabel","titleId","descriptionId","direction","permission","category","catTitle","charAt","splitByDot","Divider","setInputText","setRoles","rolesItemCount","setRolesItemCount","setLoading","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","INSIGHTS_DEPLOYMENT_MODE","change_namespace","upload_to_namespace","add_containernamespace","namespace_pull_containerdistribution","namespace_change_containerdistribution","namespace_view_containerdistribution","namespace_modify_content_containerpushrepository","change_containernamespace","namespace_push_containerdistribution","view_containernamespace","delete_containernamespace","namespace_delete_containerdistribution","namespace_view_containerpushrepository","namespace_add_containerdistribution","change_containerdistribution","delete_containerdistribution","push_containerdistribution","pull_containerdistribution","view_containerdistribution","published","community","completed","running","namespaceBreadcrumb","total_count","isFieldValid","errorMessagesType","names","isFormValid","values","alertErrorsWithoutFields","setErrorMessages","origin","getContainersURL","mapper","writeOnlyFields","el","newObj","sha","splitSha","model_permissions","entity","waitMs","bailAfter","statusCode","outsideError","protocol","URL","can_create_signatures","getUsedbyDependencies","paramString","numericTypes","URLSearchParams","appendParam","param","encodeURIComponent","callback","search","getQueryString","getReduced","deleteParam","sortParams","defaultSort","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}