{"version":3,"file":"js/400.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-dependencies.tsx"],"sourcesContent":["import {\n  CollectionAPI,\n  type CollectionDetailType,\n  CollectionVersionAPI,\n  type CollectionVersionContentType,\n  type CollectionVersionSearch,\n} from 'src/api';\nimport { type AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { repositoryBasePath } from 'src/utilities';\n\nexport interface IBaseCollectionState {\n  actuallyCollection?: CollectionDetailType;\n  alerts?: AlertType[];\n  collection?: CollectionVersionSearch;\n  collections?: CollectionVersionSearch[];\n  collectionsCount?: number;\n  content?: CollectionVersionContentType;\n  distroBasePath?: string;\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n}\n\n// Caches the collection data when matching, prevents redundant fetches between collection detail tabs\nconst cache = {\n  repository: null,\n  namespace: null,\n  name: null,\n  version: null,\n\n  actuallyCollection: null,\n  collection: null,\n  collections: [],\n  collectionsCount: 0,\n  content: null,\n};\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  setCollection,\n  stateParams,\n}) {\n  const { version } = stateParams;\n  const { collection: name, namespace, repo } = matchParams;\n\n  // try loading from cache\n  if (\n    !forceReload &&\n    cache.repository === repo &&\n    cache.namespace === namespace &&\n    cache.name === name &&\n    cache.version === version\n  ) {\n    setCollection(\n      cache.collections,\n      cache.collection,\n      cache.content,\n      cache.collectionsCount,\n      cache.actuallyCollection,\n    );\n    return;\n  }\n\n  const requestParams = {\n    ...(repo ? { repository_name: repo } : {}),\n    namespace,\n    name,\n  };\n\n  const currentVersion = (\n    version\n      ? CollectionVersionAPI.list({ ...requestParams, version })\n      : CollectionVersionAPI.list({ ...requestParams, is_highest: true })\n  ).then(({ data }) => data.data[0]);\n\n  const content = currentVersion\n    .then((collection) =>\n      CollectionAPI.getContent(\n        namespace,\n        name,\n        collection.collection_version.version,\n      ),\n    )\n    .then(({ data: { results } }) => results[0])\n    .catch(() => navigate(formatPath(Paths.notFound)));\n\n  // Note: this only provides the first page - containing the latest version, and all items for the version *selector*,\n  // but the version *modal* is using a separate call, in CollectionHeader updatePaginationParams\n  const versions = CollectionVersionAPI.list({\n    ...requestParams,\n    order_by: '-version',\n    page_size: 10,\n  })\n    .then(({ data }) => data)\n    .catch(() => ({ data: [], meta: { count: 0 } }));\n\n  const actuallyCollection = repositoryBasePath(repo)\n    .then((basePath) => CollectionAPI.getDetail(basePath, namespace, name))\n    .then(({ data }) => data);\n\n  return Promise.all([\n    versions,\n    currentVersion,\n    content,\n    actuallyCollection,\n  ]).then(\n    ([\n      {\n        data: collections,\n        meta: { count: collectionsCount },\n      },\n      collection,\n      content,\n      actuallyCollection,\n    ]) => {\n      setCollection(\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      );\n\n      cache.repository = repo;\n      cache.namespace = namespace;\n      cache.name = name;\n      cache.version = version;\n\n      cache.actuallyCollection = actuallyCollection;\n      cache.collection = collection;\n      cache.collections = collections;\n      cache.collectionsCount = collectionsCount;\n      cache.content = content;\n    },\n  );\n}\n","import { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport {\n  CollectionAPI,\n  type CollectionUsedByDependencies,\n  type CollectionVersion,\n  CollectionVersionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  CollectionDependenciesList,\n  CollectionHeader,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  LoadingPage,\n  Main,\n  closeAlert,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { type RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper, errorMessage } from 'src/utilities';\nimport { type IBaseCollectionState, loadCollection } from './base';\nimport './collection-dependencies.scss';\n\ninterface IState extends IBaseCollectionState {\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n}\n\nclass CollectionDependencies extends Component<RouteProps, IState> {\n  static contextType = AppContext;\n\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      actuallyCollection: null,\n      alerts: [],\n      collection: null,\n      collections: [],\n      collectionsCount: 0,\n      content: null,\n      dependencies_repos: [],\n      params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      actuallyCollection,\n      alerts,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n    } = this.state;\n\n    if (collections.length <= 0) {\n      return <LoadingPage />;\n    }\n\n    const { collection_version: version, repository } = collection;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        url: formatPath(Paths.namespaceDetail, {\n          namespace: version.namespace,\n        }),\n        name: version.namespace,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: version.namespace,\n          collection: version.name,\n          repo: repository.name,\n        }),\n        name: version.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(version.dependencies).length;\n\n    return (\n      <>\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) =>\n            closeAlert(i, {\n              alerts,\n              setAlerts: (alerts) => this.setState({ alerts }),\n            })\n          }\n        />\n        <CollectionHeader\n          activeTab='dependencies'\n          actuallyCollection={actuallyCollection}\n          breadcrumbs={breadcrumbs}\n          collection={collection}\n          collections={collections}\n          collectionsCount={collectionsCount}\n          content={content}\n          params={headerParams}\n          reload={() => this.loadData(true)}\n          repo={repository.name}\n          updateParams={(p) => {\n            this.updateParams(p, () => this.loadData(true));\n          }}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-v5-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              <p>{t`This collections requires the following collections for use`}</p>\n\n              {noDependencies ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <CollectionDependenciesList\n                  collection={this.state.collection}\n                  dependencies_repos={this.state.dependencies_repos}\n                />\n              )}\n\n              <p>{t`This collection is being used by`}</p>\n            </div>\n            <CollectionUsedbyDependenciesList\n              usedByDependencies={usedByDependencies}\n              itemCount={usedByDependenciesCount}\n              params={dependenciesParams}\n              usedByDependenciesLoading={usedByDependenciesLoading}\n              updateParams={(p) =>\n                this.updateParams(p, () => this.loadUsedByDependencies())\n              }\n            />\n          </section>\n        </Main>\n      </>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies = this.state.collection.collection_version.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace,\n        version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        const [collection] = result.data.data;\n\n        dependency_repo.repo = collection.repository.name;\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      const { name, namespace } = this.state.collection.collection_version;\n\n      // FIXME: We have to use CollectionAPI here for used by dependencies\n      // because cross repo collection search doesn't allow `name__icontains` filter\n      CollectionAPI.getUsedDependenciesByCollection(\n        namespace,\n        name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch(({ response }) => {\n          const { status, statusText } = response;\n          this.setState({\n            usedByDependenciesLoading: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Dependent collections could not be displayed.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      setCollection: (\n        collections,\n        collection,\n        content,\n        collectionsCount,\n        actuallyCollection,\n      ) =>\n        this.setState(\n          {\n            collections,\n            collection,\n            content,\n            collectionsCount,\n            actuallyCollection,\n          },\n          callback,\n        ),\n      stateParams: this.state.params.version\n        ? { version: this.state.params.version }\n        : {},\n    });\n  }\n\n  private updateParams(params, callback = null) {\n    ParamHelper.updateParams({\n      params,\n      navigate: (to) => this.props.navigate(to),\n      setState: (state) => this.setState(state, callback),\n    });\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n"],"names":["cache","repository","namespace","name","version","actuallyCollection","collection","collections","collectionsCount","content","loadCollection","_ref","forceReload","matchParams","navigate","setCollection","stateParams","repo","requestParams","_objectSpread","repository_name","currentVersion","CollectionVersionAPI","list","is_highest","then","_ref2","data","CollectionAPI","getContent","collection_version","_ref3","results","formatPath","Paths","notFound","versions","order_by","page_size","_ref4","meta","count","repositoryBasePath","basePath","getDetail","_ref5","Promise","all","_ref6","_ref7","_slicedToArray","_ref7$","CollectionDependencies","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","params","ParamHelper","parseParamString","location","search","state","alerts","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","_inherits","_createClass","key","value","this","loadData","_this2","_this$state","length","React","LoadingPage","breadcrumbs","namespaceBreadcrumb","url","namespaceDetail","collectionByRepo","i18n","_","id","headerParams","getReduced","ignoredParams","dependenciesParams","noDependencies","Object","keys","dependencies","AlertList","closeAlert","i","setAlerts","setState","CollectionHeader","activeTab","reload","updateParams","p","Main","className","EmptyStateNoData","title","description","CollectionDependenciesList","CollectionUsedbyDependenciesList","itemCount","loadUsedByDependencies","_this3","arguments","undefined","loadCollectionsDependenciesRepos","callback","_this4","promises","forEach","dependency","_dependency$split","split","_dependency$split2","dependency_repo","version_range","path","push","promise","loadDependencyRepo","result","_this5","_this5$state$collecti","getUsedDependenciesByCollection","response","status","statusText","concat","_toConsumableArray","variant","errorMessage","_this6","routeParams","_this7","to","v","match","Component","AppContext","withRouter"],"sourceRoot":""}