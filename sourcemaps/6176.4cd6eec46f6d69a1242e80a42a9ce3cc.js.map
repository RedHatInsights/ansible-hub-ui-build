{"version":3,"file":"js/6176.ef1a653d08ed7822f1fd.js","mappings":"+wCAwBO,IAAMA,EAAkB,SAAHC,GAQZ,IAPdC,EAAID,EAAJC,KAAIC,EAAAF,EACJG,cACEC,EAAQF,EAARE,SACSC,EAAMH,EAAfI,MAASD,OACTE,EAAaL,EAAbK,cACAC,EAAIN,EAAJM,KAGIC,GAAKR,aAAI,EAAJA,EAAMS,aAAaC,EAAAA,EAAAA,IAAmBV,EAAKS,WACtDE,GAAwBC,EAAAA,EAAAA,UAAiBZ,aAAI,EAAJA,EAAMa,MAAKC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA7CE,EAAIC,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BL,EAAAA,EAAAA,UAAsB,MAAKM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAhDE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0CT,EAAAA,EAAAA,WAAkB,GAAMU,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA3DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA0Cb,EAAAA,EAAAA,UAAoB,MAAKc,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA5DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GACEjB,EAAAA,EAAAA,UAAoB,MAAKkB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GADpBE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAEpDG,GAA0DrB,EAAAA,EAAAA,UAGvD,MAAKsB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAHDE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GAItDG,GAAsDzB,EAAAA,EAAAA,UAAiB,MAAK0B,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAArEE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,GAAwD7B,EAAAA,EAAAA,UAErD,MAAK8B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAFDE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAI9CG,EAAQ,WACZzB,EAAU,MACV0B,EAAAA,GAAAA,cAA+BtC,GAC5BuC,MAAK,SAAAC,GAA+B,IAApBC,EAAWD,EAAnBE,KAAQD,YACfzB,GACE2B,EAAAA,EAAAA,IAA2B,CACzB7C,cAAAA,EACA8C,oBAAqB,SAACC,GAAS,OAC7BJ,EAAYK,SAASD,EAAE,EACzB9C,KAAAA,KAGJuC,EAAAA,GAAAA,UAA2BtC,GACxBuC,MAAK,SAAAQ,GAAyB,IAEOC,EAFrBC,EAAKF,EAAbL,KAAQO,MACTC,EAAa,GAAGC,EAAAC,EACSH,GAAK,IAApC,IAAAE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAC,MAAsC,KACXC,EADWC,EAAAT,EAAAU,MAAzB/C,EAAM8C,EAAN9C,OAAQgD,EAAIF,EAAJE,KAAIC,EAAAR,EACJzC,GAAM,QAAAkD,EAAA,WAAE,IAAhBxD,EAAImD,EAAAE,MACPI,EAAaZ,EAAWa,WAAU,SAACC,GAAC,OAAKA,EAAE3D,OAASA,CAAI,KAC3C,GAAfyD,EACFZ,EAAWe,KAAK,CAAE5D,KAAAA,EAAM6D,aAAc,CAACP,KAEvCT,EAAWY,GAAYI,aAAaD,KAAKN,EAE7C,EAPA,IAAAC,EAAAP,MAAAG,EAAAI,EAAAN,KAAAC,MAAAM,GAOC,OAAAM,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CACH,CAAC,OAAAF,GAAAhB,EAAAiB,EAAAD,EAAA,SAAAhB,EAAAkB,GAAA,CAED7D,EAAQH,GACRO,EAAUsC,EACZ,IAAE,OACK,WACLtC,EAAU,GACZ,GACJ,IAAE,OACK,WACLA,EAAU,IACVI,GAAiB,EACnB,GACJ,EAEMsD,EAAmB,SAAHC,GAKhB,IAJJtB,EAAKsB,EAALtB,MACAuB,EAAYD,EAAZC,aACAC,EAAYF,EAAZE,aACAC,EAAWH,EAAXG,YAEAC,QAAQC,IAAI3B,GACTV,MAAK,WACJ5C,EAAS,CACPkF,MAAOL,EACPM,QAAS,YAEXzC,GACF,IAAE,OACK,SAAA0C,GAA0C,IAAAC,EAAAD,EAAvCE,SAAYC,EAAMF,EAANE,OAAQC,EAAUH,EAAVG,WAC5BxF,EAAS,CACPkF,MAAOJ,EACPK,QAAS,SACTM,aAAaC,EAAAA,EAAAA,IAAaH,EAAQC,IAEtC,IAAE,SACO,WACPG,EAAYZ,EACd,GACJ,EA0DMY,EAAc,SAACC,GACnBC,OAAOC,QAAQF,GAAOG,SAAQ,SAAAC,GAAY,IAAAC,GAAArF,EAAAA,EAAAA,GAAAoF,EAAA,GAAVE,EAACD,EAAA,GAAEE,EAACF,EAAA,GAClC,OAAQC,GACN,IAAK,uBACHrE,EAAwBsE,GACxB,MACF,IAAK,wBACHlE,EACEkE,GAEF,MACF,IAAK,sBACH9D,EAAuB8D,GACvB,MACF,IAAK,uBACH1D,EAAwB0D,GACxB,MACF,QACEC,QAAQC,MAAM,cAAeH,EAAGC,GAEtC,GACF,EAkBA,OAhBAG,EAAAA,EAAAA,WAAU5D,EAAO,CAAC7C,EAAKS,aACvBgG,EAAAA,EAAAA,YAAU,WACHtF,IAIAf,SAAAA,EAAQsG,MAKbC,EAAAA,GAAAA,KAAc,CAAE9F,KAAMT,EAAOsG,QAAS3D,MAAK,SAAA6D,GAAwB,IAAb1D,EAAI0D,EAAZ1D,KAAQA,KACpDtB,EAAiBT,EAAO0F,MAAK,SAACrC,GAAC,OAAKA,EAAE3D,OAASqC,EAAK,GAAGrC,IAAI,IAC7D,IANEe,EAAiB,MAOrB,GAAG,CAACxB,aAAM,EAANA,EAAQsG,MAAOvF,IAGjB2F,IAAAA,cAACC,EAAAA,GAAS,CACRC,SAjGa,SAACN,EAAOjD,GACvB,IAAMwD,EAAexD,EAAMyD,KAAI,SAAC/C,GAAI,OAClCrB,EAAAA,GAAAA,QAAyBtC,EAAI,CAC3B2D,KAAMA,EAAKtD,KACXM,OAAQ,CAACuF,EAAM7F,OACf,IAEJiE,EAAiB,CACfrB,MAAOwD,EACPjC,aAAcmC,EAAAA,GAAAA,EAAA,0DAAWT,EAAM7F,KAAIA,KAAqCA,IACxEoE,aAAckC,EAAAA,GAAAA,EAAA,iDAAWT,EAAM7F,KAAIA,KAA4BA,IAC/DqE,YAAa,CAAE/C,sBAAuB,OAE1C,EAqFIiF,QArEY,SAACV,EAAOjD,GACtB,IAAMwD,EAAexD,EAAMyD,KAAI,SAAC/C,GAAI,OAClCrB,EAAAA,GAAAA,QAAyBtC,EAAI,CAC3B2D,KAAMA,EAAKtD,KACXM,OAAQ,CAACuF,EAAM7F,OACf,IAEJiE,EAAiB,CACfrB,MAAOwD,EACPjC,aAAcmC,EAAAA,GAAAA,EAAA,yDAAWT,EAAM7F,KAAIA,KAAoCA,IACvEoE,aAAckC,EAAAA,GAAAA,EAAA,wDAAWT,EAAM7F,KAAIA,KAAmCA,IACtEqE,YAAa,CAAEvC,qBAAsB,OAEzC,EAyDIpB,cAAeA,EACfmF,MAAO/E,EACPR,OAAQA,EACRN,KAAMA,EACNwG,eAAe,6BACfC,YAzFgB,SAACZ,GACnB,IAAMjD,EAAQiD,EAAMhC,aAAawC,KAAI,SAAC/C,GAAI,OACxCrB,EAAAA,GAAAA,WAA4BtC,EAAI,CAC9B2D,KAAAA,EACAhD,OAAQ,CAACuF,EAAM7F,OACf,IAEJiE,EAAiB,CACfrB,MAAAA,EACAuB,aAAcmC,EAAAA,GAAAA,EAAA,8DAAWT,EAAM7F,KAAIA,KAAyCA,IAC5EoE,aAAckC,EAAAA,GAAAA,EAAA,qDAAWT,EAAM7F,KAAIA,KAAgCA,IACnEqE,YAAa,CAAEnD,qBAAsB,OAEzC,EA6EIwF,WA9De,SAACpD,EAAMuC,GACxB,IAAMc,EAAc1E,EAAAA,GAAAA,WAA4BtC,EAAI,CAClD2D,KAAAA,EACAhD,OAAQ,CAACuF,EAAM7F,QAEjBiE,EAAiB,CACfrB,MAAO,CAAC+D,GACRxC,aAAcmC,EAAAA,GAAAA,EAAA,yDAAWT,EAAM7F,KAAIA,KAAoCA,IACvEoE,aAAckC,EAAAA,GAAAA,EAAA,wDAAWT,EAAM7F,KAAIA,KAAmCA,IACtEqE,YAAa,CAAE3C,oBAAqB,OAExC,EAoDIkF,mBAAoBN,EAAAA,GAAAA,EAAA,qEACpBpF,qBAAsBA,EACtBI,sBAAuBA,EACvBI,oBAAqBA,EACrBI,qBAAsBA,EACtBmD,YAAaA,EACb4B,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,oBAA2B,CAC/C/G,KAAAA,KAIR,E,WCvNMgH,EAAc,SAAH9H,GAAmC,IAA7B+H,EAAI/H,EAAJ+H,KACrBC,EAA4BjB,IAAAA,UAAe,GAAMkB,GAAAjH,EAAAA,EAAAA,GAAAgH,EAAA,GAA1CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAWlBG,EACJrB,IAAAA,cAACA,IAAAA,SAAc,KACbA,IAAAA,cAACsB,EAAAA,gBAAe,KACdtB,IAAAA,cAACuB,EAAAA,oBAAmB,CAClB7H,GAAG,oBACH8H,OAAO,eACP,aAAW,oBACXC,QAAS,SAAC3D,GAAC,OAhBO,SAAC4D,EAAOC,GAChCC,UAAUC,UAAUC,UAAUH,EAAKI,WACrC,CAGEC,CAAkBN,EAWeV,QAVjCI,GAAU,EAU4B,EAChCa,UAAWd,EAAS,KAAO,IAC3Be,SAAS,QACT1D,QAAQ,QACR2D,gBAAiB,kBAAMf,GAAU,EAAM,GAEtCD,EAASd,EAAAA,GAAAA,EAAA,oCAAsCA,EAAAA,GAAAA,EAAA,wBAMxD,OACEL,IAAAA,cAACoC,EAAAA,UAAS,CAACf,QAASA,GAClBrB,IAAAA,cAACqC,EAAAA,cAAa,CAAC3I,GAAG,gBAAgBsH,GAGxC,EAEMsB,EAAY,SAAHpG,GAAA,IAAM8E,EAAI9E,EAAJ8E,KAAI,OACvBA,EAAOhB,IAAAA,cAACe,EAAW,CAACC,KAAMA,IAAWhB,IAAAA,cAAAA,IAAAA,SAAA,KAAGK,EAAAA,GAAAA,EAAA,QAAW,EAExCkC,EAAa,SAAH9F,GAAA,IAAA+F,EAAAC,EAAMvJ,EAAIuD,EAAJvD,KAAI,OAC/B8G,IAAAA,cAAC0C,EAAAA,GAAO,CACNC,OAAQ,CACN,CAAEC,MAAOvC,EAAAA,GAAAA,EAAA,eAAgBjD,MAAOlE,aAAI,EAAJA,EAAMa,MACtC,CACE6I,MAAOvC,EAAAA,GAAAA,EAAA,OACPjD,MAAO4C,IAAAA,cAAC6C,EAAAA,GAAO,CAACC,IAAK5J,aAAI,EAAJA,EAAM4J,IAAKC,UAAQ,KAE1C,CACEH,MAAOvC,EAAAA,GAAAA,EAAA,aACPjD,MAAO4C,IAAAA,cAAC6C,EAAAA,GAAO,CAACC,IAAK5J,aAAI,EAAJA,EAAM8J,UAAWD,UAAQ,KAEhD,CACEH,MAAOvC,EAAAA,GAAAA,EAAA,kBACPjD,MAAOlE,SAAAA,EAAM+J,eAAiB5C,EAAAA,GAAAA,EAAA,WAAaA,EAAAA,GAAAA,EAAA,aAE7C,CAAEuC,MAAOvC,EAAAA,GAAAA,EAAA,sBAAuBjD,OAAOlE,aAAI,EAAJA,EAAMgK,cAAe7C,EAAAA,GAAAA,EAAA,SAC5D,CAAEuC,MAAOvC,EAAAA,GAAAA,EAAA,kBAAmBjD,OAAOlE,aAAI,EAAJA,EAAMiK,UAAW9C,EAAAA,GAAAA,EAAA,SACpD,CACEuC,MAAOvC,EAAAA,GAAAA,EAAA,wBACPjD,MAAiC,QAA5BoF,EAAEtJ,aAAI,EAAJA,EAAMkK,4BAAoB,IAAAZ,EAAAA,EAAInC,EAAAA,GAAAA,EAAA,SAEvC,CAAEuC,MAAOvC,EAAAA,GAAAA,EAAA,cAAejD,MAAuB,QAAlBqF,EAAEvJ,aAAI,EAAJA,EAAMmK,kBAAU,IAAAZ,EAAAA,EAAIpC,EAAAA,GAAAA,EAAA,SACnD,CACEuC,MAAOvC,EAAAA,GAAAA,EAAA,gBACPjD,MAAO4C,IAAAA,cAACsD,EAAAA,GAAgB,CAACC,WAAYrK,aAAI,EAAJA,EAAMS,aAE7C,CACEiJ,MAAOvC,EAAAA,GAAAA,EAAA,qBACPjD,MAAO4C,IAAAA,cAACsC,EAAS,CAACtB,KAAM9H,aAAI,EAAJA,EAAMsK,uBAGlC,E,qkBCxEJ,IAAMC,EAAO,CACX,CAAE/J,GAAI,UAAWK,KAAMsG,EAAAA,GAAAA,EAAA,YACvB,CAAE3G,GAAI,SAAUK,KAAMsG,EAAAA,GAAAA,EAAA,YA2DxB,SAxD4BqD,EAAAA,EAAAA,IAAgC,CAC1DC,YAAa,SAAA1K,GAAA,IAAGc,EAAId,EAAJc,KAAM6J,EAAG3K,EAAH2K,IAAehE,EAAK3G,EAAfK,OAAUsG,MAAK,MACxC,CACE,CAAEkD,KAAKjC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,gBAAuB/G,KAAMsG,EAAAA,GAAAA,EAAA,YAC/C,CAAEyC,KAAKjC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,oBAA2B,CAAE/G,KAAAA,IAASA,KAAAA,GAC7C,WAAX6J,EAAIlK,IAAmBkG,EACnB,CACEkD,KAAKjC,EAAAA,EAAAA,IACHC,EAAAA,GAAAA,wBACA,CAAE/G,KAAAA,GACF,CAAE6J,IAAKA,EAAIlK,KAEbK,KAAM6J,EAAI7J,MAEZ,KACO,WAAX6J,EAAIlK,IAAmBkG,EACnB,CAAE7F,KAAMsG,EAAAA,GAAAA,EAAA,iBAAAT,MAAUA,KAClB,CAAE7F,KAAM6J,EAAI7J,OAChB8J,OAAOC,QAAQ,EACnBC,UAAWC,EAAAA,GACXC,YAAa,sBACbC,WAAY7D,EAAAA,GAAAA,EAAA,kCACZ8D,cAAe,CACbC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAEFzI,MAAO,SAAAG,GAAc,IAAXnC,EAAImC,EAAJnC,KACR,OAAOiC,EAAAA,GAAAA,KAAsB,CAAEjC,KAAAA,IAC5BkC,MAAK,SAAAQ,GAAkB,OAAAA,EAAfL,KAAQqI,QAAwB,EAAE,IAC1CxI,MAAK,SAACyI,GACL,OAAO1I,EAAAA,GAAAA,eACLpC,EAAAA,EAAAA,IAAmB8K,EAAO/K,YAEzBsC,MAAK,SAAAgC,GAAsB,OAAAA,EAAnB7B,KAAQD,WAA+B,IAAC,OAC1C,SAAC2B,GAEN,OADA2B,QAAQC,MAAM5B,GACP,EACT,IACC7B,MAAK,SAAC0I,GAAc,OAAAC,EAAAA,EAAA,GAAWF,GAAM,IAAEC,eAAAA,GAAc,GAC1D,GACJ,EACAE,UAAW,SAACjB,EAAK1K,EAAME,GAAa,MACjC,CACC0L,QAAS9E,IAAAA,cAACuC,EAAU,CAACrJ,KAAMA,EAAME,cAAeA,IAChD2L,OAAQ/E,IAAAA,cAAChH,EAAe,CAACE,KAAMA,EAAME,cAAeA,KACpDwK,EAAI,EACRH,KAAAA,EACAuB,gBAAiB,SAACzI,GAEhB,cADOA,EAAEqD,MACFrD,CACT,G","sources":["webpack:///./src/containers/ansible-remote/tab-access.tsx","webpack:///./src/containers/ansible-remote/tab-details.tsx","webpack:///./src/containers/ansible-remote/detail.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRemoteAPI,\n  AnsibleRemoteType,\n  GroupAPI,\n  GroupType,\n  RoleType,\n} from 'src/api';\nimport { AccessTab } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canEditAnsibleRemoteAccess } from 'src/permissions';\nimport { errorMessage, parsePulpIDFromURL } from 'src/utilities';\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: {\n    addAlert: (alert) => void;\n    state: { params };\n    hasPermission;\n    user;\n  };\n}\n\nexport const RemoteAccessTab = ({\n  item,\n  actionContext: {\n    addAlert,\n    state: { params },\n    hasPermission,\n    user,\n  },\n}: TabProps) => {\n  const id = item?.pulp_href && parsePulpIDFromURL(item.pulp_href);\n  const [name, setName] = useState<string>(item?.name);\n  const [groups, setGroups] = useState<GroupType[]>(null); // loading\n  const [canEditOwners, setCanEditOwners] = useState<boolean>(false);\n  const [selectedGroup, setSelectedGroup] = useState<GroupType>(null);\n  const [showGroupRemoveModal, setShowGroupRemoveModal] =\n    useState<GroupType>(null);\n  const [showGroupSelectWizard, setShowGroupSelectWizard] = useState<{\n    group?: GroupType;\n    roles?: RoleType[];\n  }>(null);\n  const [showRoleRemoveModal, setShowRoleRemoveModal] = useState<string>(null);\n  const [showRoleSelectWizard, setShowRoleSelectWizard] = useState<{\n    roles?: RoleType[];\n  }>(null);\n\n  const query = () => {\n    setGroups(null);\n    AnsibleRemoteAPI.myPermissions(id)\n      .then(({ data: { permissions } }) => {\n        setCanEditOwners(\n          canEditAnsibleRemoteAccess({\n            hasPermission,\n            hasObjectPermission: (p: string): boolean =>\n              permissions.includes(p),\n            user,\n          }),\n        );\n        AnsibleRemoteAPI.listRoles(id)\n          .then(({ data: { roles } }) => {\n            const groupRoles = [];\n            for (const { groups, role } of roles) {\n              for (const name of groups) {\n                const groupIndex = groupRoles.findIndex((g) => g.name === name);\n                if (groupIndex == -1) {\n                  groupRoles.push({ name, object_roles: [role] });\n                } else {\n                  groupRoles[groupIndex].object_roles.push(role);\n                }\n              }\n            }\n\n            setName(name);\n            setGroups(groupRoles);\n          })\n          .catch(() => {\n            setGroups([]);\n          });\n      })\n      .catch(() => {\n        setGroups([]);\n        setCanEditOwners(false);\n      });\n  };\n\n  const updateGroupRoles = ({\n    roles,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) => {\n    Promise.all(roles)\n      .then(() => {\n        addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        query();\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        updateProps(stateUpdate);\n      });\n  };\n\n  const addGroup = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n      stateUpdate: { showGroupSelectWizard: null },\n    });\n  };\n\n  const removeGroup = (group) => {\n    const roles = group.object_roles.map((role) =>\n      AnsibleRemoteAPI.removeRole(id, {\n        role,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles,\n      alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n      stateUpdate: { showGroupRemoveModal: null },\n    });\n  };\n  const addRole = (group, roles) => {\n    const rolePromises = roles.map((role) =>\n      AnsibleRemoteAPI.addRole(id, {\n        role: role.name,\n        groups: [group.name],\n      }),\n    );\n    updateGroupRoles({\n      roles: rolePromises,\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleSelectWizard: null },\n    });\n  };\n  const removeRole = (role, group) => {\n    const removedRole = AnsibleRemoteAPI.removeRole(id, {\n      role,\n      groups: [group.name],\n    });\n    updateGroupRoles({\n      roles: [removedRole],\n      alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n      alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n      stateUpdate: { showRoleRemoveModal: null },\n    });\n  };\n\n  const updateProps = (props) => {\n    Object.entries(props).forEach(([k, v]) => {\n      switch (k) {\n        case 'showGroupRemoveModal':\n          setShowGroupRemoveModal(v as GroupType);\n          break;\n        case 'showGroupSelectWizard':\n          setShowGroupSelectWizard(\n            v as { group?: GroupType; roles?: RoleType[] },\n          );\n          break;\n        case 'showRoleRemoveModal':\n          setShowRoleRemoveModal(v as string);\n          break;\n        case 'showRoleSelectWizard':\n          setShowRoleSelectWizard(v as { roles?: RoleType[] });\n          break;\n        default:\n          console.error('updateProps', k, v);\n      }\n    });\n  };\n\n  useEffect(query, [item.pulp_href]);\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n\n    if (!params?.group) {\n      setSelectedGroup(null);\n      return;\n    }\n\n    GroupAPI.list({ name: params.group }).then(({ data: { data } }) => {\n      setSelectedGroup(groups.find((g) => g.name === data[0].name));\n    });\n  }, [params?.group, groups]);\n\n  return (\n    <AccessTab\n      addGroup={addGroup}\n      addRole={addRole}\n      canEditOwners={canEditOwners}\n      group={selectedGroup}\n      groups={groups}\n      name={name}\n      pulpObjectType='remotes/ansible/collection'\n      removeGroup={removeGroup}\n      removeRole={removeRole}\n      selectRolesMessage={t`The selected roles will be added to this specific Ansible remote.`}\n      showGroupRemoveModal={showGroupRemoveModal}\n      showGroupSelectWizard={showGroupSelectWizard}\n      showRoleRemoveModal={showRoleRemoveModal}\n      showRoleSelectWizard={showRoleSelectWizard}\n      updateProps={updateProps}\n      urlPrefix={formatPath(Paths.ansibleRemoteDetail, {\n        name,\n      })}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AnsibleRemoteType } from 'src/api';\nimport { CopyURL, Details, LazyRepositories } from 'src/components';\n\ninterface TabProps {\n  item: AnsibleRemoteType;\n  actionContext: object;\n}\n\nconst PFCodeBlock = ({ code }: { code: string }) => {\n  const [copied, setCopied] = React.useState(false);\n\n  const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n  };\n\n  const onClick = (event, text) => {\n    clipboardCopyFunc(event, text);\n    setCopied(true);\n  };\n\n  const actions = (\n    <React.Fragment>\n      <CodeBlockAction>\n        <ClipboardCopyButton\n          id='basic-copy-button'\n          textId='code-content'\n          aria-label='Copy to clipboard'\n          onClick={(e) => onClick(e, code)}\n          exitDelay={copied ? 1500 : 600}\n          maxWidth='110px'\n          variant='plain'\n          onTooltipHidden={() => setCopied(false)}\n        >\n          {copied ? t`Successfully copied to clipboard` : t`Copy to clipboard`}\n        </ClipboardCopyButton>\n      </CodeBlockAction>\n    </React.Fragment>\n  );\n\n  return (\n    <CodeBlock actions={actions}>\n      <CodeBlockCode id='code-content'>{code}</CodeBlockCode>\n    </CodeBlock>\n  );\n};\n\nconst MaybeCode = ({ code }: { code: string }) =>\n  code ? <PFCodeBlock code={code} /> : <>{t`None`}</>;\n\nexport const DetailsTab = ({ item }: TabProps) => (\n  <Details\n    fields={[\n      { label: t`Remote name`, value: item?.name },\n      {\n        label: t`URL`,\n        value: <CopyURL url={item?.url} fallback />,\n      },\n      {\n        label: t`Proxy URL`,\n        value: <CopyURL url={item?.proxy_url} fallback />,\n      },\n      {\n        label: t`TLS validation`,\n        value: item?.tls_validation ? t`Enabled` : t`Disabled`,\n      },\n      { label: t`Client certificate`, value: item?.client_cert || t`None` },\n      { label: t`CA certificate`, value: item?.ca_cert || t`None` },\n      {\n        label: t`Download concurrency`,\n        value: item?.download_concurrency ?? t`None`,\n      },\n      { label: t`Rate limit`, value: item?.rate_limit ?? t`None` },\n      {\n        label: t`Repositories`,\n        value: <LazyRepositories remoteHref={item?.pulp_href} />,\n      },\n      {\n        label: t`YAML requirements`,\n        value: <MaybeCode code={item?.requirements_file} />,\n      },\n    ]}\n  />\n);\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  ansibleRemoteDeleteAction,\n  ansibleRemoteDownloadCAAction,\n  ansibleRemoteDownloadClientAction,\n  ansibleRemoteDownloadRequirementsAction,\n  ansibleRemoteEditAction,\n} from 'src/actions';\nimport { AnsibleRemoteAPI, AnsibleRemoteType } from 'src/api';\nimport { PageWithTabs } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { canViewAnsibleRemotes } from 'src/permissions';\nimport { parsePulpIDFromURL } from 'src/utilities';\nimport { RemoteAccessTab } from './tab-access';\nimport { DetailsTab } from './tab-details';\n\nconst tabs = [\n  { id: 'details', name: t`Details` },\n  { id: 'access', name: t`Access` },\n];\n\nconst AnsibleRemoteDetail = PageWithTabs<AnsibleRemoteType>({\n  breadcrumbs: ({ name, tab, params: { group } }) =>\n    [\n      { url: formatPath(Paths.ansibleRemotes), name: t`Remotes` },\n      { url: formatPath(Paths.ansibleRemoteDetail, { name }), name },\n      tab.id === 'access' && group\n        ? {\n            url: formatPath(\n              Paths.ansibleRepositoryDetail,\n              { name },\n              { tab: tab.id },\n            ),\n            name: tab.name,\n          }\n        : null,\n      tab.id === 'access' && group\n        ? { name: t`Group ${group}` }\n        : { name: tab.name },\n    ].filter(Boolean),\n  condition: canViewAnsibleRemotes,\n  displayName: 'AnsibleRemoteDetail',\n  errorTitle: t`Remote could not be displayed.`,\n  headerActions: [\n    ansibleRemoteEditAction,\n    ansibleRemoteDownloadRequirementsAction,\n    ansibleRemoteDownloadClientAction,\n    ansibleRemoteDownloadCAAction,\n    ansibleRemoteDeleteAction,\n  ],\n  query: ({ name }) => {\n    return AnsibleRemoteAPI.list({ name })\n      .then(({ data: { results } }) => results[0])\n      .then((remote) => {\n        return AnsibleRemoteAPI.myPermissions(\n          parsePulpIDFromURL(remote.pulp_href),\n        )\n          .then(({ data: { permissions } }) => permissions)\n          .catch((e) => {\n            console.error(e);\n            return [];\n          })\n          .then((my_permissions) => ({ ...remote, my_permissions }));\n      });\n  },\n  renderTab: (tab, item, actionContext) =>\n    ({\n      details: <DetailsTab item={item} actionContext={actionContext} />,\n      access: <RemoteAccessTab item={item} actionContext={actionContext} />,\n    }[tab]),\n  tabs,\n  tabUpdateParams: (p) => {\n    delete p.group;\n    return p;\n  },\n});\n\nexport default AnsibleRemoteDetail;\n"],"names":["RemoteAccessTab","_ref","item","_ref$actionContext","actionContext","addAlert","params","state","hasPermission","user","id","pulp_href","parsePulpIDFromURL","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","_useState4","groups","setGroups","_useState5","_useState6","canEditOwners","setCanEditOwners","_useState7","_useState8","selectedGroup","setSelectedGroup","_useState9","_useState10","showGroupRemoveModal","setShowGroupRemoveModal","_useState11","_useState12","showGroupSelectWizard","setShowGroupSelectWizard","_useState13","_useState14","showRoleRemoveModal","setShowRoleRemoveModal","_useState15","_useState16","showRoleSelectWizard","setShowRoleSelectWizard","query","AnsibleRemoteAPI","then","_ref2","permissions","data","canEditAnsibleRemoteAccess","hasObjectPermission","p","includes","_ref3","_step","roles","groupRoles","_iterator","_createForOfIteratorHelper","s","n","done","_step2","_step$value","value","role","_iterator2","_loop","groupIndex","findIndex","g","push","object_roles","err","e","f","updateGroupRoles","_ref4","alertSuccess","alertFailure","stateUpdate","Promise","all","title","variant","_ref5","_ref5$response","response","status","statusText","description","errorMessage","updateProps","props","Object","entries","forEach","_ref6","_ref7","k","v","console","error","useEffect","group","GroupAPI","_ref8","find","React","AccessTab","addGroup","rolePromises","map","i18n","addRole","pulpObjectType","removeGroup","removeRole","removedRole","selectRolesMessage","urlPrefix","formatPath","Paths","PFCodeBlock","code","_React$useState","_React$useState2","copied","setCopied","actions","CodeBlockAction","ClipboardCopyButton","textId","onClick","event","text","navigator","clipboard","writeText","toString","clipboardCopyFunc","exitDelay","maxWidth","onTooltipHidden","CodeBlock","CodeBlockCode","MaybeCode","DetailsTab","_item$download_concur","_item$rate_limit","Details","fields","label","CopyURL","url","fallback","proxy_url","tls_validation","client_cert","ca_cert","download_concurrency","rate_limit","LazyRepositories","remoteHref","requirements_file","tabs","PageWithTabs","breadcrumbs","tab","filter","Boolean","condition","canViewAnsibleRemotes","displayName","errorTitle","headerActions","ansibleRemoteEditAction","ansibleRemoteDownloadRequirementsAction","ansibleRemoteDownloadClientAction","ansibleRemoteDownloadCAAction","ansibleRemoteDeleteAction","results","remote","my_permissions","_objectSpread","renderTab","details","access","tabUpdateParams"],"sourceRoot":""}