{"version":3,"file":"js/910.13bdeba8de28d28c7799.js","mappings":"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","sources":["webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-dependencies.tsx"],"sourcesContent":["import { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collection: CollectionDetailType;\n  alerts?: AlertType[];\n}\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  selectedRepo,\n  setCollection,\n  stateParams,\n}) {\n  CollectionAPI.getCached(\n    matchParams['namespace'],\n    matchParams['collection'],\n    selectedRepo,\n    { ...stateParams, include_related: 'my_permissions' },\n    forceReload,\n  )\n    .then((result) => {\n      return CollectionAPI.list(\n        {\n          name: matchParams['collection'],\n        },\n        selectedRepo,\n      ).then((collections) => {\n        result.deprecated = collections.data.data[0].deprecated;\n        setCollection(result);\n      });\n    })\n    .catch(() => {\n      navigate(formatPath(Paths.notFound));\n    });\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionUsedByDependencies,\n  CollectionVersion,\n  CollectionVersionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  CollectionDependenciesList,\n  CollectionHeader,\n  CollectionUsedbyDependenciesList,\n  EmptyStateNoData,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport { loadCollection } from './base';\nimport './collection-dependencies.scss';\n\ninterface IState {\n  collection: CollectionDetailType;\n  dependencies_repos: CollectionVersion[];\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n  };\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesCount: number;\n  usedByDependenciesLoading: boolean;\n  alerts: AlertType[];\n}\n\nclass CollectionDependencies extends React.Component<RouteProps, IState> {\n  private ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n  private cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['sort'] = !params['sort'] ? '-collection' : 'collection';\n\n    this.state = {\n      collection: undefined,\n      dependencies_repos: [],\n      params: params,\n      usedByDependencies: [],\n      usedByDependenciesCount: 0,\n      usedByDependenciesLoading: true,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(false);\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      usedByDependencies,\n      usedByDependenciesCount,\n      usedByDependenciesLoading,\n      alerts,\n    } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        url: formatPath(Paths.collectionByRepo, {\n          namespace: collection.namespace.name,\n          collection: collection.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.name,\n      },\n      { name: t`Dependencies` },\n    ];\n\n    const headerParams = ParamHelper.getReduced(params, this.ignoredParams);\n\n    const dependenciesParams = ParamHelper.getReduced(params, ['version']);\n\n    const noDependencies = !Object.keys(\n      collection.latest_version.metadata.dependencies,\n    ).length;\n\n    return (\n      <React.Fragment>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <CollectionHeader\n          reload={() => this.loadData(true)}\n          collection={collection}\n          params={headerParams}\n          updateParams={(p) => {\n            this.updateParams(this.combineParams(this.state.params, p), () =>\n              this.loadData(true),\n            );\n          }}\n          breadcrumbs={breadcrumbs}\n          activeTab='dependencies'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <div className='pf-c-content collection-dependencies'>\n              <h1>{t`Dependencies`}</h1>\n              {noDependencies &&\n              !usedByDependenciesCount &&\n              !filterIsSet(params, ['name__icontains']) ? (\n                <EmptyStateNoData\n                  title={t`No dependencies`}\n                  description={t`Collection does not have any dependencies.`}\n                />\n              ) : (\n                <>\n                  <p>{t`This collections requires the following collections for use`}</p>\n                  {noDependencies ? (\n                    <EmptyStateNoData\n                      title={t`No dependencies`}\n                      description={t`Collection does not have any dependencies.`}\n                    />\n                  ) : (\n                    <CollectionDependenciesList\n                      collection={this.state.collection}\n                      dependencies_repos={this.state.dependencies_repos}\n                    />\n                  )}\n                  <p>{t`This collection is being used by`}</p>\n                  <CollectionUsedbyDependenciesList\n                    repo={this.context.selectedRepo}\n                    usedByDependencies={usedByDependencies}\n                    itemCount={usedByDependenciesCount}\n                    params={dependenciesParams}\n                    usedByDependenciesLoading={usedByDependenciesLoading}\n                    updateParams={(p) =>\n                      this.updateParams(\n                        this.combineParams(this.state.params, p),\n                        () => this.loadUsedByDependencies(),\n                      )\n                    }\n                  />\n                </>\n              )}\n            </div>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadData(forceReload = false) {\n    this.loadCollection(forceReload, () =>\n      this.loadCollectionsDependenciesRepos(() =>\n        this.loadUsedByDependencies(),\n      ),\n    );\n  }\n\n  private loadCollectionsDependenciesRepos(callback) {\n    const dependencies =\n      this.state.collection.latest_version.metadata.dependencies;\n    const dependencies_repos = [];\n    const promises = [];\n\n    Object.keys(dependencies).forEach((dependency) => {\n      const [namespace, collection] = dependency.split('.');\n      const version_range = dependencies[dependency];\n\n      const dependency_repo = {\n        name: collection,\n        namespace: namespace,\n        version_range: version_range,\n        repo: '',\n        path: '',\n      };\n      dependencies_repos.push(dependency_repo);\n\n      const promise = this.loadDependencyRepo(dependency_repo);\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      this.setState({ dependencies_repos: dependencies_repos }, callback());\n    });\n  }\n\n  private loadDependencyRepo(dependency_repo) {\n    return CollectionVersionAPI.list({\n      namespace: dependency_repo.namespace,\n      name: dependency_repo.name,\n      version_range: dependency_repo.version_range,\n      page_size: 1,\n    })\n      .then((result) => {\n        dependency_repo.repo = result.data.data[0].repository_list[0];\n        dependency_repo.path = formatPath(Paths.collectionByRepo, {\n          collection: dependency_repo.name,\n          namespace: dependency_repo.namespace,\n          repo: dependency_repo.repo,\n        });\n      })\n      .catch(() => {\n        // do nothing, dependency_repo.path and repo stays empty\n        // this may mean that collection was not found - thus is not in the system.\n        // user will be notified in the list of dependencies rather than alerts\n      });\n  }\n\n  private loadUsedByDependencies() {\n    this.setState({ usedByDependenciesLoading: true }, () => {\n      if (this.cancelToken) {\n        this.cancelToken.cancel('request-canceled');\n      }\n\n      this.cancelToken = CollectionAPI.getCancelToken();\n\n      CollectionAPI.getUsedDependenciesByCollection(\n        this.state.collection.namespace.name,\n        this.state.collection.name,\n        ParamHelper.getReduced(this.state.params, ['version']),\n        this.cancelToken,\n      )\n        .then(({ data }) => {\n          this.setState({\n            usedByDependencies: data.data,\n            usedByDependenciesCount: data.meta.count,\n            usedByDependenciesLoading: false,\n          });\n        })\n        .catch((err) => {\n          const { status, statusText } = err.response;\n          if (err?.message !== 'request-canceled') {\n            this.setState({\n              usedByDependenciesLoading: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'danger',\n                  title: t`Dependent collections could not be displayed.`,\n                  description: errorMessage(status, statusText),\n                },\n              ],\n            });\n          }\n        })\n        .finally(() => {\n          this.cancelToken = undefined;\n        });\n    });\n  }\n\n  private loadCollection(forceReload, callback) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      selectedRepo: this.context.selectedRepo,\n      setCollection: (collection) => this.setState({ collection }, callback),\n      stateParams: this.state.params.version\n        ? { version: this.state.params.version }\n        : {},\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private combineParams(...params) {\n    return params.reduce((acc, cur) => ({ ...acc, ...cur }));\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private separateVersion(version) {\n    const v = version.match(/((\\d+\\.*)+)/);\n    return v ? { version: v[0] } : {};\n  }\n}\n\nexport default withRouter(CollectionDependencies);\n\nCollectionDependencies.contextType = AppContext;\n"],"names":["loadCollection","_ref","forceReload","matchParams","navigate","selectedRepo","setCollection","stateParams","CollectionAPI","_objectSpread","include_related","then","result","name","collections","deprecated","data","formatPath","Paths","CollectionDependencies","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","params","ParamHelper","location","search","state","collection","undefined","dependencies_repos","usedByDependencies","usedByDependenciesCount","usedByDependenciesLoading","alerts","_createClass","key","value","this","loadData","_this2","_this$state","React","LoadingPageWithHeader","breadcrumbs","namespaceBreadcrumb","url","namespace","repo","context","i18n","headerParams","ignoredParams","dependenciesParams","noDependencies","Object","keys","latest_version","metadata","dependencies","length","AlertList","closeAlert","i","CollectionHeader","reload","updateParams","p","combineParams","activeTab","Main","className","filterIsSet","EmptyStateNoData","title","description","CollectionDependenciesList","CollectionUsedbyDependenciesList","itemCount","loadUsedByDependencies","_this3","arguments","loadCollectionsDependenciesRepos","callback","_this4","promises","forEach","dependency","_dependency$split","split","_dependency$split2","_slicedToArray","dependency_repo","version_range","path","push","promise","loadDependencyRepo","Promise","all","setState","CollectionVersionAPI","page_size","repository_list","_this5","cancelToken","cancel","meta","count","err","_err$response","response","status","statusText","message","concat","_toConsumableArray","variant","errorMessage","_this6","routeParams","version","get","_len","Array","_key","reduce","acc","cur","closeAlertMixin","v","match","withRouter","contextType","AppContext"],"sourceRoot":""}