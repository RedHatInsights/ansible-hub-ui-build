{"version":3,"file":"js/exposed-./RootApp.3ca6621f90d16635222d.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/group.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/import.ts","webpack:///./src/api/legacy.ts","webpack:///./src/api/legacy-namespace.ts","webpack:///./src/api/legacy-role.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/tag.ts","webpack:///./src/api/task.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/user.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/components/approval/approval-row.tsx","webpack:///./src/components/approval/approve-modal.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/copy-collection-to-repository-modal/copy-collection-to-repository-modal.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/empty-state/empty-state-xs.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/copy-url.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/patternfly-wrappers/label-group.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/rbac/role-permissions.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-user.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repo-selector/multiple-repo-selector.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/download-count.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/shared/multi-repo-modal.tsx","webpack:///./src/components/shared/ratings.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/assign-roles.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/parse-pulp-id.ts","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/repository-remove-collection.ts","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/namespace-title.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/repository-base-path.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/write-only-fields.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t5541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t1870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t7853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t2620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t6379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath?: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from execution-environment-registry\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(pulp_id: string, params?) {\n    return this.list(params, this.apiPath + pulp_id + '/versions/');\n  }\n\n  // delete(pulp_id: string)\n\n  sync(pulp_id: string, body = {}) {\n    return this.http.post(this.apiPath + pulp_id + '/sync/', body);\n  }\n\n  revert(pulp_id: string, version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(pulp_id: string, collection_version_hrefs) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      add_content_units: collection_version_hrefs,\n    });\n  }\n\n  removeContent(pulp_id: string, collection_version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/list_roles/');\n  }\n\n  addRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/add_role/');\n  }\n\n  myPermissions(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/my_permissions/');\n  }\n\n  removeRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/remove_role/');\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/copy_collection_version/',\n      body,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/move_collection_version/',\n      body,\n    );\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import axios from 'axios';\nimport { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from './response-types/collection';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  async setDeprecation({\n    collection_version: { namespace, name },\n    repository,\n    is_deprecated,\n  }: CollectionVersionSearch): Promise<{ data: { task: string } }> {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.patch(\n      `${namespace}/${name}`,\n      {\n        deprecated: !is_deprecated,\n      },\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/`,\n    );\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n\n    if (data.distro_base_path) {\n      return this.http.post(\n        `v3/plugin/ansible/content/${data.distro_base_path}/collections/artifacts/`,\n        formData,\n        config,\n      );\n    } else {\n      return this.http.post('v3/artifacts/collections/', formData, config);\n    }\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  async getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http\n      .get(\n        `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n      )\n      .then(({ data: { download_url } }) => download_url);\n  }\n\n  async deleteCollectionVersion({\n    collection_version: { namespace, name, version },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  async deleteCollection({\n    collection_version: { namespace, name },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  async getSignatures(repository, namespace, name, version) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n\n  getDetail(distroBasePath, namespace, name) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  move(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  copy(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      `${this.apiPath}?dependency=${namespace}.${collection}`,\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  // list(params?)\n}\n\nexport const CollectionVersionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nfunction smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class LegacyAPI extends BaseAPI {\n  sortParam = 'order_by';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  public mapPageToOffset(p) {\n    // override BaseAPI's function to persist page & page_size\n    return p;\n  }\n\n  list(params?, apiPath?) {\n    const newParams = { ...params };\n    if (newParams['sort'] && this.sortParam !== 'sort') {\n      newParams[this.sortParam] = newParams['sort'];\n      delete newParams['sort'];\n    }\n\n    return super.list(newParams, apiPath);\n  }\n}\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/namespaces/';\n  sortParam = 'sort';\n\n  // get(id)\n  // list(params?)\n}\n\nexport const LegacyNamespaceAPI = new API();\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/roles/';\n  sortParam = 'order_by';\n\n  getContent(id) {\n    return super.get(id + '/content');\n  }\n\n  getVersions(id) {\n    return super.get(id + '/versions');\n  }\n\n  // list(params?)\n}\n\nexport const LegacyRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport { CollectionVersionSearch } from './response-types/collection';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository?: CollectionVersionSearch['repository'];\n  repository_name?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignCollectionVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignCollectionVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  async sign({ repository, repository_name: name, ...args }: SignProps) {\n    const distroBasePath = await repositoryBasePath(\n      name,\n      repository?.pulp_href,\n    ).catch((status) =>\n      Promise.reject({\n        response: { status },\n      }),\n    );\n\n    const updatedData = {\n      distro_base_path: distroBasePath,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n  useOrdering = true;\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('tags/');\n\n  listCollections(params) {\n    return this.list(params, this.getPath() + 'collections/');\n  }\n\n  listRoles(params) {\n    return this.list(params, this.getPath() + 'roles/');\n  }\n}\n\nexport const TagAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Label,\n  Spinner,\n} from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { DateComponent, LabelGroup, ListItemActions } from 'src/components';\nimport { IAppContextType } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  approve: (collectionVersion: CollectionVersionSearch) => void;\n  collectionVersion: CollectionVersionSearch;\n  context: IAppContextType;\n  isVersionUpdating: (collectionVersion: CollectionVersionSearch) => boolean;\n  openUploadCertificateModal: (\n    collectionVersion: CollectionVersionSearch,\n  ) => void;\n  reject: (collectionVersion: CollectionVersionSearch) => void;\n}\n\nexport const ApprovalRow = ({\n  approve,\n  collectionVersion,\n  context: { featureFlags },\n  isVersionUpdating,\n  openUploadCertificateModal,\n  reject,\n}: IProps) => {\n  const { collection_version: version, repository } = collectionVersion;\n\n  return (\n    <tr\n      data-cy={`ApprovalRow-${repository.name}-${version.namespace}-${version.name}`}\n    >\n      <td>{version.namespace}</td>\n      <td>{version.name}</td>\n      <td>\n        <Link\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: version.namespace,\n              collection: version.name,\n              repo: repository.name,\n            },\n            {\n              version: version.version,\n            },\n          )}\n        >\n          {version.version}\n        </Link>\n        <Button\n          variant={ButtonVariant.link}\n          onClick={() => {\n            download(\n              repository,\n              version.namespace,\n              version.name,\n              version.version,\n            );\n          }}\n        >\n          <DownloadIcon />\n        </Button>\n      </td>\n      <td>\n        <DateComponent date={version.pulp_created} />\n      </td>\n      <td>\n        <LabelGroup>{repository.name}</LabelGroup>\n      </td>\n      <td>{renderStatus(collectionVersion)}</td>\n      {renderButtons(collectionVersion)}\n    </tr>\n  );\n\n  function renderButtons(collectionVersion: CollectionVersionSearch) {\n    // not checking namespace permissions here, auto_sign happens API side, so is the permission check\n    const {\n      collection_version: version,\n      repository,\n      is_signed,\n    } = collectionVersion;\n    const {\n      can_upload_signatures,\n      collection_auto_sign,\n      require_upload_signatures,\n    } = featureFlags;\n    const pipeline = repository?.pulp_labels?.pipeline;\n\n    if (isVersionUpdating(collectionVersion) || !pipeline) {\n      return <ListItemActions />; // empty td;\n    }\n\n    const canUploadSignature = can_upload_signatures && !is_signed;\n    const mustUploadSignature = canUploadSignature && require_upload_signatures;\n    const autoSign = collection_auto_sign && !require_upload_signatures;\n\n    const approveButton = [\n      canUploadSignature && (\n        <React.Fragment key='upload'>\n          <Button onClick={() => openUploadCertificateModal(collectionVersion)}>\n            {t`Upload signature`}\n          </Button>{' '}\n        </React.Fragment>\n      ),\n      <Button\n        key='approve-button'\n        isDisabled={mustUploadSignature}\n        data-cy='approve-button'\n        onClick={() => approve(collectionVersion)}\n      >\n        {autoSign ? t`Sign and approve` : t`Approve`}\n      </Button>,\n    ].filter(Boolean);\n\n    const approveDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() => approve(collectionVersion)}\n        isDisabled={isDisabled}\n        key='approve'\n      >\n        {autoSign ? t`Sign and approve` : t`Approve`}\n      </DropdownItem>\n    );\n\n    const rejectDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() => reject(collectionVersion)}\n        isDisabled={isDisabled}\n        key='reject'\n      >\n        {t`Reject`}\n      </DropdownItem>\n    );\n\n    const importsLink = (\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: version.namespace,\n                name: version.name,\n                version: version.version,\n              },\n            )}\n          >\n            {t`View Import Logs`}\n          </Link>\n        }\n      />\n    );\n\n    if (pipeline === 'approved') {\n      return (\n        <ListItemActions\n          kebabItems={[\n            approveDropDown(true),\n            rejectDropDown(false),\n            importsLink,\n          ]}\n        />\n      );\n    }\n\n    if (pipeline === 'rejected') {\n      return (\n        <ListItemActions\n          kebabItems={[\n            approveDropDown(false),\n            rejectDropDown(true),\n            importsLink,\n          ]}\n        />\n      );\n    }\n\n    if (pipeline === 'staging') {\n      return (\n        <ListItemActions\n          kebabItems={[rejectDropDown(false), importsLink]}\n          buttons={approveButton}\n        />\n      );\n    }\n  }\n\n  function renderStatus(collectionVersion: CollectionVersionSearch) {\n    const { repository, is_signed } = collectionVersion;\n    const pipeline = repository?.pulp_labels?.pipeline;\n\n    if (isVersionUpdating(collectionVersion)) {\n      return <Spinner size='lg' />;\n    }\n\n    if (pipeline === 'approved') {\n      const { display_signatures } = featureFlags;\n      return (\n        <Label variant='outline' color='green' icon={<CheckCircleIcon />}>\n          {display_signatures && is_signed\n            ? t`Signed and approved`\n            : t`Approved`}\n        </Label>\n      );\n    }\n\n    if (pipeline === 'rejected') {\n      return (\n        <Label variant='outline' color='red' icon={<ExclamationCircleIcon />}>\n          {t`Rejected`}\n        </Label>\n      );\n    }\n\n    if (pipeline === 'staging') {\n      const { can_upload_signatures, require_upload_signatures } = featureFlags;\n      return (\n        <Label\n          variant='outline'\n          color='orange'\n          icon={<ExclamationTriangleIcon />}\n        >\n          {!is_signed && can_upload_signatures && require_upload_signatures\n            ? t`Needs signature and review`\n            : t`Needs review`}\n        </Label>\n      );\n    }\n  }\n\n  function download(\n    repository: CollectionVersionSearch['repository'],\n    namespace: string,\n    name: string,\n    version: string,\n  ) {\n    CollectionAPI.getDownloadURL(repository, namespace, name, version).then(\n      (downloadURL: string) => {\n        window.location.assign(downloadURL);\n      },\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport { AlertType, MultiRepoModal } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { parsePulpIDFromURL, waitForTaskUrl } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n  finishAction: () => void;\n}\n\nexport const ApproveModal = ({\n  addAlert: parentAddAlert,\n  closeAction,\n  collectionVersion,\n  finishAction,\n}: IProps) => {\n  const { settings } = useContext();\n  const { collection_version, repository } = collectionVersion;\n  const { namespace, name, version, pulp_href } = collection_version;\n\n  function approve({ addAlert, selectedRepos, setLoading }) {\n    let error = '';\n\n    async function approveAsync() {\n      const repo_id = parsePulpIDFromURL(repository.pulp_href);\n      const params = {\n        collection_versions: [pulp_href],\n        destination_repositories: selectedRepos.map((repo) => repo.pulp_href),\n      };\n\n      if (settings.GALAXY_AUTO_SIGN_COLLECTIONS) {\n        const signingServiceName = settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n          page_size: 1,\n        });\n        if (signingList.data.results.length) {\n          params['signing_service'] = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      const task = (\n        await AnsibleRepositoryAPI.moveCollectionVersion(repo_id, params)\n      )?.data?.task;\n      await waitForTaskUrl(task);\n\n      finishAction();\n      parentAddAlert({\n        title: t`Certification status for collection \"${namespace} ${name} v${version}\" has been successfully updated.`,\n        variant: 'success',\n      });\n    }\n\n    setLoading(true);\n    return approveAsync()\n      .catch(() =>\n        addAlert({\n          title: t`Failed to approve collection.`,\n          variant: 'danger',\n          description: error,\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <MultiRepoModal\n      closeAction={closeAction}\n      collectionVersion={collectionVersion}\n      pipeline='pipeline=approved'\n      submitAction={approve}\n    />\n  );\n};\n","import ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\nimport ThLargeIcon from '@patternfly/react-icons/dist/esm/icons/th-large-icon';\nimport cx from 'classnames';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts, namespaceTitle } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  className,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const nsTitle = namespaceTitle(\n    namespace || { name: collection_version.namespace },\n  );\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${nsTitle} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          {featureFlags.display_repositories ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Badge isRead>\n                  <Link\n                    to={formatPath(Paths.ansibleRepositoryDetail, {\n                      name: repository.name,\n                    })}\n                  >\n                    {repository.name === Constants.CERTIFIED_REPO\n                      ? t`Certified`\n                      : repository.name}\n                  </Link>\n                </Badge>\n              </Text>\n            </TextContent>\n          ) : null}\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {nsTitle}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport { namespaceTitle } from 'src/utilities';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  namespace: {\n    avatar_url: string;\n    name: string;\n    company: string;\n  };\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({ namespace, namespaceURL }: IProps) => {\n  const { avatar_url, name } = namespace;\n  const title = namespaceTitle(namespace);\n\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${title} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={title}>\n        <CardTitle>{getDescription(title, MAX_DESCRIPTION_LENGTH)}</CardTitle>\n      </Tooltip>\n      {title !== name ? (\n        <Tooltip content={name}>\n          <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n        </Tooltip>\n      ) : null}\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { List, ListItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}{' '}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React, { useState } from 'react';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { LoadingPageSpinner } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      const { namespace, name, version } = collectionVersion;\n\n      CollectionAPI.getSignatures(repository, namespace, name, version)\n        .then((res) => {\n          setSignatures(res.data.signatures);\n          setIsLoading(false);\n        })\n        .catch(({ code, message }) => {\n          addAlert(code, message);\n          setIsLoading(false);\n          setShow(false);\n        });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible-core&gt;=2.13.9\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {context.user.is_anonymous &&\n            !context.settings\n              .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                <div>\n                  <Trans>\n                    To download this collection, configure your client to\n                    connect to one of this repositories{' '}\n                    <Link\n                      to={formatPath(Paths.collectionDistributionsByRepo, {\n                        repo: repository.name,\n                        namespace: collection_version.namespace,\n                        collection: collection_version.name,\n                      })}\n                    >\n                      distributions\n                    </Link>\n                    .\n                  </Trans>\n                </div>\n                <a ref={downloadLinkRef} style={{ display: 'none' }} />\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Requires Ansible`}</SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out' />\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI, TagAPI } from 'src/api';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures, display_repositories } = context.featureFlags;\n  const displayTags = ignoredParams.includes('tags') === false;\n  const displayRepos =\n    ignoredParams.includes('repository_name') === false && display_repositories;\n  const displayNamespaces = ignoredParams.includes('namespace') === false;\n\n  const [repositories, setRepositories] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n  const [tags, setTags] = useState([]);\n\n  const loadRepos = () => {\n    AnsibleRepositoryAPI.list({\n      name__icontains: inputText,\n      pulp_label_select: '!hide_from_search',\n    }).then(({ data: { results } }) =>\n      setRepositories(\n        results.map(({ name }) => ({\n          id: name,\n          title: name,\n        })),\n      ),\n    );\n  };\n\n  const loadTags = () => {\n    TagAPI.listCollections({ name__icontains: inputText, sort: '-count' }).then(\n      ({ data: { data } }) =>\n        setTags(\n          data.map(({ name, count }) => ({\n            id: name,\n            title: count === undefined ? name : t`${name} (${count})`,\n          })),\n        ),\n    );\n  };\n\n  useEffect(() => {\n    if (selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n    if (selectedFilter === 'tags' && displayTags) {\n      loadTags();\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  useEffect(() => {\n    setInputText(props.params['repository_name'] || '');\n  }, [props.params.repository_name]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [inputText]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'tags' && displayTags) {\n      loadTags();\n    }\n  }, [inputText]);\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n      options: repositories,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'typeahead' as const,\n      options: tags,\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n              selectFilter={setSelectedFilter}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  is_signed: t`Sign state`,\n                  tags: t`Tags`,\n                  keywords: t`Keywords`,\n                  repository_name: t`Repository`,\n                  namespace: t`Namespace`,\n                }}\n                niceValues={{\n                  is_signed: {\n                    false: t`unsigned`,\n                    true: t`signed`,\n                  },\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  collectionControls: (collection) => {\n    dropdownMenu?: React.ReactNode | null;\n    synclistSwitch?: React.ReactNode | null;\n    uploadButton?: React.ReactNode | null;\n  };\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    collectionControls,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              key={i}\n              collection={c}\n              displaySignatures={displaySignatures}\n              showNamespace\n              {...collectionControls(c)}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem />\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one.`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Flex,\n  FlexItem,\n  Label,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  CollectionRatings,\n  DateComponent,\n  DeprecatedTag,\n  LabelGroup,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts, namespaceTitle } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  displaySignatures: boolean;\n  dropdownMenu?: React.ReactNode | null;\n  showNamespace?: boolean;\n  synclistSwitch?: React.ReactNode | null;\n  uploadButton?: React.ReactNode | null;\n}\n\nexport const CollectionListItem = ({\n  collection: {\n    collection_version,\n    namespace_metadata: namespace,\n    repository,\n    is_signed,\n    is_deprecated,\n  },\n  displaySignatures,\n  dropdownMenu,\n  showNamespace,\n  synclistSwitch,\n  uploadButton,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const cells = [];\n\n  const nsTitle = namespaceTitle(\n    namespace || { name: collection_version.namespace },\n  );\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${nsTitle} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {nsTitle}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      <Flex\n        direction={{ default: 'column' }}\n        alignItems={{ default: 'alignItemsFlexEnd' }}\n      >\n        <Flex\n          direction={{ default: 'column' }}\n          alignItems={{ default: 'alignItemsFlexStart' }}\n        >\n          {synclistSwitch && <FlexItem>{synclistSwitch}</FlexItem>}\n          {uploadButton || dropdownMenu ? (\n            <FlexItem>\n              {uploadButton}\n              {dropdownMenu || <span className='hidden-menu-space' />}\n            </FlexItem>\n          ) : null}\n          <FlexItem>\n            <div>\n              <Trans>\n                Updated <DateComponent date={collection_version.pulp_created} />\n              </Trans>\n            </div>\n            <div>v{collection_version.version}</div>\n            <CollectionRatings\n              isList\n              namespace={collection_version.namespace}\n              name={collection_version.name}\n            />\n          </FlexItem>\n        </Flex>\n        <Flex\n          direction={{ default: 'row' }}\n          alignSelf={{ default: 'alignSelfFlexStart' }}\n        >\n          {featureFlags.display_repositories ? (\n            <FlexItem>\n              <Label variant='outline'>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name}\n                </Link>\n              </Label>\n            </FlexItem>\n          ) : null}\n          {displaySignatures ? (\n            <FlexItem>\n              <SignatureBadge\n                variant='outline'\n                signState={is_signed ? 'signed' : 'unsigned'}\n              />\n            </FlexItem>\n          ) : null}\n        </Flex>\n      </Flex>\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm' />}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport { AlertType, MultiRepoModal } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { errorMessage, parsePulpIDFromURL, taskAlert } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n}\n\nexport const CopyCollectionToRepositoryModal = ({\n  addAlert: parentAddAlert,\n  closeAction,\n  collectionVersion,\n}: IProps) => {\n  const { settings } = useContext();\n  const { collection_version, repository } = collectionVersion;\n  const { namespace, name, version, pulp_href } = collection_version;\n\n  async function copyToRepositories({ addAlert, selectedRepos, setLoading }) {\n    setLoading(true);\n\n    const repo_id = parsePulpIDFromURL(repository.pulp_href);\n    const params = {\n      collection_versions: [pulp_href],\n      destination_repositories: selectedRepos.map((repo) => repo.pulp_href),\n    };\n\n    const signingServiceName = settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n    if (signingServiceName) {\n      let signingService = null;\n      try {\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n          page_size: 1,\n        });\n        signingService = signingList.data.results[0].pulp_href;\n      } catch {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to copy collection version.`,\n          variant: 'danger',\n          description: t`Signing service ${signingServiceName} not found`,\n        });\n        return;\n      }\n\n      params['signing_service'] = signingService;\n    }\n\n    return AnsibleRepositoryAPI.copyCollectionVersion(repo_id, params)\n      .then(({ data }) => {\n        selectedRepos.forEach(({ name: repo }) =>\n          parentAddAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repo}\".`,\n            ),\n          ),\n        );\n        closeAction();\n      })\n      .catch((e) =>\n        addAlert({\n          variant: 'danger',\n          title: t`Collection ${namespace}.${name} v${version} could not be copied.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <MultiRepoModal\n      closeAction={closeAction}\n      collectionVersion={collectionVersion}\n      submitAction={copyToRepositories}\n    />\n  );\n};\n","import * as moment from 'moment';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\n\nexport const DateComponent = ({ date }: { date: string }) =>\n  date && (\n    <time dateTime={date}>\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    </time>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n  deleteFromRepo: string;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n    deleteFromRepo,\n  } = props;\n\n  const lastCollectionVersion = collectionVersion && collections.length === 1;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <Trans>\n              Deleting{' '}\n              <b>\n                {deleteCollection.collection_version.name} v{collectionVersion}\n              </b>\n              , its data will be lost.\n            </Trans>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b>, its\n              data will be lost.\n            </Trans>\n          )}\n          {lastCollectionVersion ? (\n            <> {t`This will cause the entire collection to be deleted.`}</>\n          ) : null}\n          {deleteFromRepo ? (\n            <>\n              {' '}\n              {t`The collection will be deleted only from repository ${deleteFromRepo}.`}\n            </>\n          ) : null}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      {icon ? <EmptyStateIcon icon={icon} /> : null}\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import React, { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateXs = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      variant='xs'\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React, { useEffect, useState } from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlert,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  inputText: '',\n};\n\nexport const PublishToControllerModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState(initialState.alerts);\n  const [controllers, setControllers] = useState(initialState.controllers);\n  const [controllerCount, setControllerCount] = useState(\n    initialState.controllerCount,\n  );\n  const [controllerParams, setControllerParams] = useState(\n    initialState.controllerParams,\n  );\n  const [digest, setDigest] = useState(initialState.digest);\n  const [digestByTag, setDigestByTag] = useState(initialState.digestByTag);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [tag, setTag] = useState(initialState.tag);\n  const [tagResults, setTagResults] = useState(initialState.tagResults);\n  const [tagSelection, setTagSelection] = useState(initialState.tagSelection);\n\n  const [inputText, setInputText] = useState(initialState.inputText);\n\n  useEffect(() => {\n    const { image, isOpen } = props;\n    if (isOpen) {\n      // load on open\n      fetchData(image);\n    } else {\n      // reset on close\n      setAlerts(initialState.alerts);\n      setControllers(initialState.controllers);\n      setControllerCount(initialState.controllerCount);\n      setControllerParams(initialState.controllerParams);\n      setDigest(initialState.digest);\n      setDigestByTag(initialState.digestByTag);\n      setLoading(initialState.loading);\n      setTag(initialState.tag);\n      setTagResults(initialState.tagResults);\n      setTagSelection(initialState.tagSelection);\n\n      setInputText(initialState.inputText);\n    }\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    fetchControllers();\n  }, [controllerParams]);\n\n  function fetchControllers() {\n    return ControllerAPI.list(controllerParams)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        setControllers(controllers);\n        setControllerCount(controllerCount);\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Controllers list could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        setDigestByTag(digestByTag);\n        setTagResults(tagResults);\n\n        return { digestByTag, tags };\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Tags could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchData(image) {\n    const controllers = fetchControllers();\n    const tagsPromises = fetchTags(image).then(({ tags, digestByTag }) => {\n      // tags and digestByTag must be passed this way from fetchTags, otherwise, closure\n      // will see old value of both variables set in fetchTags\n      // and additionaly, tags state is not needed at all because of that\n\n      // preselect tag if present\n      let { digest, tag } = props;\n      tag ||= tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= digestByTag[tag]; // set digest by tag unless in props\n\n      setDigest(digest);\n      setTag(tag);\n      setTagSelection(tag ? [{ id: tag, name: tag }] : []);\n    });\n\n    Promise.all([controllers, tagsPromises]).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function renderControllers() {\n    const { image, isOpen } = props;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  const { image, isOpen, onClose } = props;\n\n  // redirects to ./2.x (latest)\n  const docsLink = UI_DOCS_URL;\n  const noData =\n    controllers?.length === 0 &&\n    !filterIsSet(controllerParams, ['host__icontains']);\n\n  const notListedMessage = (\n    <>\n      {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n      {docsLink && (\n        <>\n          <a href={docsLink} target='_blank' rel='noreferrer'>\n            {t`Learn more`}\n          </a>{' '}\n          <ExternalLinkAltIcon />\n        </>\n      )}\n    </>\n  );\n\n  const Spacer = () => <div style={{ paddingTop: '24px' }} />;\n  const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n  return (\n    <Modal\n      variant='large'\n      title={t`Use in Controller`}\n      isOpen={isOpen}\n      onClose={onClose}\n      actions={[\n        <Button key='close' variant='primary' onClick={onClose}>\n          {t`Close`}\n        </Button>,\n      ]}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading && (\n        <div style={{ padding: '16px' }}>\n          <LoadingPageSpinner />\n        </div>\n      )}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          title={t`No Controllers available`}\n          description={notListedMessage}\n        />\n      ) : null}\n\n      {isOpen && !loading && !noData && controllers && (\n        <>\n          <DescriptionList isHorizontal>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Execution Environment`}</DescriptionListTerm>\n              <DescriptionListDescription>{image}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <Flex>\n                  <FlexItem>\n                    <APISearchTypeAhead\n                      loadResults={(name) => fetchTags(image, name)}\n                      onClear={() => {\n                        setTag(null);\n                        setTagSelection([]);\n                      }}\n                      onSelect={(event, value) => {\n                        const digest = digestByTag[value.toString()];\n                        setTag(digest && value.toString());\n                        setTagSelection([{ id: value, name: value }]);\n                        setDigest(digest);\n                      }}\n                      placeholderText={t`Select a tag`}\n                      results={tagResults}\n                      selections={tagSelection}\n                      toggleIcon={<TagIcon />}\n                    />\n                  </FlexItem>\n                  <FlexItem />\n                </Flex>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {digest && (\n              <>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    <ShaLabel grey long digest={digest} />\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              </>\n            )}\n          </DescriptionList>\n          <Spacer />\n          <Trans>\n            Click on the Controller URL that you want to use the above execution\n            environment in, and it will launch that Controller&apos;s console.\n            Log in (if necessary) and follow the steps to complete the\n            configuration.\n          </Trans>\n          <br />\n          {!unsafeLinksSupported && (\n            <Trans>\n              <b>Note:</b> The following links may be blocked by your browser.\n              Copy and paste the external link manually.\n            </Trans>\n          )}\n          <Spacer />\n\n          <Flex>\n            <FlexItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => setInputText(text)}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                params={controllerParams}\n                filterConfig={[\n                  {\n                    id: 'host__icontains',\n                    title: t`Controller name`,\n                  },\n                ]}\n              />\n            </FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n            <FlexItem>\n              <Pagination\n                params={controllerParams}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                count={controllerCount}\n                isTop\n              />\n            </FlexItem>\n          </Flex>\n\n          <AppliedFilters\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            params={controllerParams}\n            ignoredParams={['page_size', 'page']}\n            niceNames={{\n              host__icontains: t`Controller name`,\n            }}\n          />\n\n          <Spacer />\n          {renderControllers()}\n          <Spacer />\n\n          <Pagination\n            params={controllerParams}\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            count={controllerCount}\n            isTop\n          />\n          <Spacer />\n          <div>{notListedMessage}</div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  LabelGroup,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and zero or one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => tag && current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType, LabelGroup } from 'src/components';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm' />}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm' />}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >{t`Yes`}</AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >{t`No`}</AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup id='remove-tag' defaultIsOpen={true}>\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector || null}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls || null}\n        </div>\n        {versionControl || null}\n\n        {children ? (\n          <div className='hub-header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  CollectionRatings,\n  CopyCollectionToRepositoryModal,\n  DeleteCollectionModal,\n  DownloadCount,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  namespaceTitle,\n  parsePulpIDFromURL,\n  repositoryRemoveCollection,\n  waitForTask,\n} from 'src/utilities';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  collectionsCount: number;\n  collection: CollectionVersionSearch;\n  actuallyCollection: CollectionDetailType;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalCollections: CollectionVersionSearch[];\n  modalPagination: {\n    page: number;\n    page_size: number;\n  };\n  deleteCollection: CollectionVersionSearch;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n  namespace: NamespaceType;\n  copyCollectionToRepositoryModal: CollectionVersionSearch;\n  deleteAll: boolean;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalCollections: null,\n      modalPagination: {\n        page: 1,\n        page_size: Constants.DEFAULT_PAGINATION_OPTIONS[0],\n      },\n      deleteCollection: null,\n      deleteAll: false,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n      namespace: null,\n      copyCollectionToRepositoryModal: null,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n\n    this.setState({ modalCollections: this.props.collections });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collections !== prevProps.collections) {\n      this.setState({ modalCollections: this.props.collections });\n    }\n  }\n\n  render() {\n    const {\n      activeTab,\n      actuallyCollection,\n      breadcrumbs,\n      className,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n      updateParams,\n    } = this.props;\n\n    const {\n      modalCollections,\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n      copyCollectionToRepositoryModal,\n    } = this.state;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.collection_version.pulp_created;\n\n    const {\n      display_signatures,\n      can_upload_signatures,\n      display_repositories,\n      ai_deny_index,\n    } = this.context.featureFlags;\n\n    const signedString = () => {\n      if (!display_signatures) {\n        return '';\n      }\n\n      return collection.is_signed ? t`(signed)` : t`(unsigned)`;\n    };\n\n    const isLatestVersion = (v) => {\n      return `${moment(v.pulp_created).fromNow()} ${signedString()}\n      ${\n        v.version === collections[0].collection_version.version\n          ? t`(latest)`\n          : ''\n      }`;\n    };\n    const { collection_version, namespace_metadata: namespace } = collection;\n    const { name: collectionName, version } = collection_version;\n\n    const nsTitle = namespaceTitle(\n      namespace || { name: collection_version.namespace },\n    );\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n    const { hasPermission } = this.context;\n    const hasObjectPermission = (permission, namespace) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n\n    const canDeleteCommunityCollection =\n      ai_deny_index &&\n      hasObjectPermission('galaxy.change_namespace', this.state.namespace);\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, true),\n        deleteAll: true,\n        display_repositories: display_repositories,\n      }),\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, false),\n        deleteAll: false,\n        display_repositories: display_repositories,\n      }),\n      (hasPermission('ansible.delete_collection') ||\n        canDeleteCommunityCollection) && (\n        <DropdownItem\n          data-cy='delete-collection-version'\n          key='delete-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, true)}\n        >\n          {t`Delete version ${version} from system`}\n        </DropdownItem>\n      ),\n      (hasPermission('ansible.delete_collection') ||\n        canDeleteCommunityCollection) &&\n        display_repositories && (\n          <DropdownItem\n            data-cy='remove-collection-version'\n            key='remove-collection-version'\n            onClick={() => this.openDeleteModalWithConfirm(version, false)}\n          >\n            {t`Delete version ${version} from repository`}\n          </DropdownItem>\n        ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${version}`}\n        </DropdownItem>\n      ),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.deprecate(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n      display_repositories && (\n        <DropdownItem\n          key='copy-collection-version-to-repository-dropdown'\n          onClick={() => this.copyToRepository(collection)}\n          data-cy='copy-collection-version-to-repository-dropdown'\n        >\n          {t`Copy version ${version} to repositories`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : collection.repository.name;\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={modalPagination}\n                updateParams={this.updatePaginationParams}\n                count={collectionsCount}\n              />\n            </div>\n            {modalCollections ? (\n              modalCollections.map(({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {t`updated ${isLatestVersion(collection_version)}`}\n                </ListItem>\n              ))\n            ) : (\n              <Spinner />\n            )}\n          </List>\n          <Pagination\n            params={modalPagination}\n            updateParams={this.updatePaginationParams}\n            count={collectionsCount}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                    deleteFromRepo,\n                  });\n            })\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {copyCollectionToRepositoryModal && (\n          <CopyCollectionToRepositoryModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() =>\n              this.setState({ copyCollectionToRepositoryModal: null })\n            }\n            collectionVersion={collection}\n          />\n        )}\n        <BaseHeader\n          className={className}\n          title={collection_version.name}\n          logo={\n            namespace?.avatar_url && (\n              <Logo\n                alt={t`${nsTitle} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector selectedRepo={collection.repository.name} />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='column-section'>\n              <div className='install-version-column'>\n                <span>{t`Version`}</span>\n                <div className='install-version-dropdown'>\n                  <Select\n                    isOpen={isOpenVersionsSelect}\n                    onToggle={(isOpenVersionsSelect) =>\n                      this.setState({ isOpenVersionsSelect })\n                    }\n                    variant={SelectVariant.single}\n                    onSelect={() =>\n                      this.setState({ isOpenVersionsSelect: false })\n                    }\n                    selections={`v${version}`}\n                    aria-label={t`Select collection version`}\n                    loadingVariant={\n                      collections.length < collectionsCount\n                        ? {\n                            text: t`View more`,\n                            onClick: () =>\n                              this.setState({\n                                isOpenVersionsModal: true,\n                                isOpenVersionsSelect: false,\n                              }),\n                          }\n                        : null\n                    }\n                  >\n                    {collections\n                      .map((c) => c.collection_version)\n                      .map((v) => (\n                        <SelectOption\n                          key={v.version}\n                          value={`v${v.version}`}\n                          onClick={() =>\n                            updateParams(\n                              ParamHelper.setParam(\n                                params,\n                                'version',\n                                v.version.toString(),\n                              ),\n                            )\n                          }\n                        >\n                          <Trans>\n                            {v.version} updated {isLatestVersion(v)}\n                          </Trans>\n                        </SelectOption>\n                      ))}\n                  </Select>\n                </div>\n                {latestVersion ? (\n                  <span className='last-updated'>\n                    <Trans>\n                      Last updated <DateComponent date={latestVersion} />\n                    </Trans>\n                  </span>\n                ) : null}\n                {display_signatures ? (\n                  <SignatureBadge\n                    isCompact\n                    signState={collection.is_signed ? 'signed' : 'unsigned'}\n                  />\n                ) : null}\n              </div>\n              <div style={{ alignSelf: 'center' }}>\n                <CollectionRatings\n                  namespace={collection_version.namespace}\n                  name={collection_version.name}\n                />\n                <DownloadCount item={actuallyCollection} />\n              </div>\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'distributions',\n        title: t`Distributions`,\n        link: formatPath(\n          Paths.collectionDistributionsByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    const modalPagination = {\n      page,\n      page_size,\n    };\n\n    this.setState({ modalPagination, modalCollections: null });\n\n    const { namespace, name } = this.props.collection.collection_version;\n    const repository = this.props.collection.repository;\n    const requestParams = {\n      ...(repository ? { repository_name: repository.name } : {}),\n      namespace,\n      name,\n    };\n\n    // loadCollections provides initial data, pagination needs extra requests\n    CollectionVersionAPI.list({\n      ...requestParams,\n      order_by: '-version',\n      ...modalPagination,\n    })\n      .then(({ data }) => data)\n      .catch(() => ({ data: [] }))\n      .then(({ data: modalCollections }) =>\n        this.setState({ modalCollections }),\n      );\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    const { deleteAll } = this.state;\n\n    let promise = null;\n\n    if (deleteAll) {\n      promise = CollectionAPI.deleteCollectionVersion(deleteCollection);\n    } else {\n      promise = repositoryRemoveCollection(\n        deleteCollection.repository.name,\n        deleteCollection.collection_version.pulp_href,\n      );\n    }\n\n    const name = deleteCollection.collection_version.name;\n\n    promise\n      .then((res) => {\n        if (!deleteAll) {\n          return;\n        }\n\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId);\n      })\n      .then(() => {\n        const topVersion = (collections || []).filter(\n          ({ collection_version }) =>\n            collection_version.version !== collectionVersion,\n        );\n\n        if (topVersion.length) {\n          this.props.updateParams(\n            ParamHelper.setParam(\n              this.props.params,\n              'version',\n              topVersion[0].collection_version.version,\n            ),\n          );\n\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ],\n          });\n        } else {\n          // last version in collection => collection will be deleted => redirect\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name} v{collectionVersion}&quot; has been\n                successfully deleted.\n              </Trans>\n            ),\n          });\n          this.setState({\n            redirect: formatPath(Paths.namespaceDetail, {\n              namespace: deleteCollection.collection_version.namespace,\n            }),\n          });\n        }\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null, deleteAll = true) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n      deleteAll: deleteAll,\n    });\n  }\n\n  private copyToRepository(collection: CollectionVersionSearch) {\n    this.setState({ copyCollectionToRepositoryModal: collection });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport { namespaceTitle } from 'src/utilities';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const title = namespaceTitle(namespace);\n\n    return (\n      <BaseHeader\n        title={title}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${title} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        className='hub-header-bordered'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n  hasAutoWidth?: boolean;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n        hasAutoWidth={this.props.hasAutoWidth}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Label,\n  Modal,\n  Radio,\n} from '@patternfly/react-core';\nimport FolderOpenIcon from '@patternfly/react-icons/dist/esm/icons/folder-open-icon';\nimport SpinnerIcon from '@patternfly/react-icons/dist/esm/icons/spinner-icon';\nimport axios from 'axios';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  LabelGroup,\n  MultipleRepoSelector,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { repositoryBasePath } from 'src/utilities';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  errorVariant: 'default' | 'skippable' | 'skipped';\n  uploadProgress: number;\n  uploadStatus: Status;\n  loading: boolean;\n  alerts: AlertType[];\n  selectedRepos: AnsibleRepositoryType[]; // 0 or 1 repos\n  onlyStaging: boolean;\n  hideSelector: boolean;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      errorVariant: 'default' as const,\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n      loading: true,\n      alerts: [],\n      selectedRepos: [],\n      onlyStaging: true,\n      hideSelector: false,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAllRepos();\n  }\n\n  private loadAllRepos() {\n    const { onlyStaging } = this.state;\n\n    const stagingByName = onlyStaging\n      ? AnsibleRepositoryAPI.list({\n          name: 'staging',\n          page_size: 1,\n          pulp_label_select: 'pipeline=staging',\n        })\n          .then(({ data: { results } }) => results[0])\n          .catch(() => null)\n      : null;\n\n    const byPipeline = AnsibleRepositoryAPI.list({\n      pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n      page_size: 1,\n    });\n\n    return Promise.all([byPipeline, stagingByName])\n      .then(\n        ([\n          {\n            data: { count, results },\n          },\n          staging,\n        ]) => {\n          // only staging: preselect \"staging\", or first repo if not found\n          // all repos: preselect first repo only if there are no other choices\n          const selectedRepos = onlyStaging\n            ? [staging || results[0]].filter(Boolean)\n            : count === 1\n            ? [results[0]]\n            : [];\n\n          this.setState({\n            selectedRepos,\n            hideSelector: selectedRepos.length && count < 2,\n          });\n        },\n      )\n      .catch((error) =>\n        this.addAlert(t`Error loading repositories.`, 'danger', error?.message),\n      )\n      .finally(() => this.setState({ loading: false }));\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n\n  private addAlertObj(alert) {\n    this.addAlert(alert.title, alert.variant, alert.description);\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    const { collection, namespace, isOpen } = this.props;\n    const {\n      errorVariant,\n      errors,\n      file,\n      hideSelector,\n      onlyStaging,\n      selectedRepos,\n      uploadProgress,\n      uploadStatus,\n    } = this.state;\n    const { featureFlags } = this.context;\n\n    const skipError = () => {\n      if (errorVariant === 'skippable') {\n        this.setState({ errorVariant: 'skipped' as const });\n      }\n    };\n\n    return (\n      <Modal\n        variant={'large'}\n        title={\n          collection\n            ? t`New version of ${namespace}.${collection.name}`\n            : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload() || !this.state.selectedRepos.length}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className={cx('file-error-messages', errorVariant)}>\n              {errors}\n              {errorVariant === 'skippable' && (\n                <>\n                  {' '}\n                  <a onClick={skipError}>{t`Upload anyway?`}</a>\n                </>\n              )}\n            </span>\n          ) : null}\n        </div>\n\n        <div style={{ lineHeight: '1em' }}>&nbsp;</div>\n\n        {featureFlags.display_repositories ? (\n          <>\n            <Radio\n              id='radio-staging'\n              isChecked={onlyStaging}\n              label={t`Staging Repos`}\n              name='radio-staging'\n              onChange={() =>\n                this.setState({ onlyStaging: true }, () => this.loadAllRepos())\n              }\n            />\n            <Radio\n              id='radio-all'\n              isChecked={!onlyStaging}\n              label={t`All Repos`}\n              name='radio-all'\n              onChange={() =>\n                this.setState({ onlyStaging: false }, () => this.loadAllRepos())\n              }\n            />\n          </>\n        ) : null}\n\n        {!onlyStaging && (\n          <>{t`Please note that these repositories are not filtered by permissions. Upload may fail without the right permissions.`}</>\n        )}\n\n        {hideSelector ? (\n          <Flex>\n            <FlexItem>\n              <b>{t`Repository`}</b>\n            </FlexItem>\n            <FlexItem>\n              <LabelGroup>\n                <Label>{selectedRepos[0].name}</Label>\n              </LabelGroup>\n            </FlexItem>\n          </Flex>\n        ) : (\n          <MultipleRepoSelector\n            addAlert={(a) => this.addAlertObj(a)}\n            params={{\n              pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n            }}\n            singleSelectionOnly={true}\n            selectedRepos={selectedRepos}\n            setSelectedRepos={(selectedRepos) =>\n              this.setState({\n                selectedRepos,\n                errors: '',\n                errorVariant: 'default' as const,\n              })\n            }\n          />\n        )}\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors && this.state.errorVariant !== 'skipped') {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin' />;\n      default:\n        return <FolderOpenIcon />;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n        errorVariant: 'default' as const,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      const detectedType = newCollection.type || t`unknown`;\n      const acceptedTypes: string = this.acceptedFileTypes.join(', ');\n      this.setState({\n        errors: t`Invalid file format: ${detectedType} (expected: ${acceptedTypes}).`,\n        errorVariant: 'skippable' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  async saveFile() {\n    const [repo] = this.state.selectedRepos;\n\n    this.setState({ uploadStatus: Status.uploading });\n\n    const distro_base_path = await repositoryBasePath(\n      repo.name,\n      repo.pulp_href,\n    ).catch((error) => {\n      this.addAlert(error, 'danger');\n    });\n\n    if (!distro_base_path) {\n      this.setState({ uploadStatus: Status.waiting });\n      return;\n    }\n\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n      distro_base_path,\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n          errorVariant: 'default' as const,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        errorVariant: 'default' as const,\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n  'data-cy'?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n  'data-cy': dataCy,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n      data-cy={dataCy}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton />\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const pipeline = collection.repository?.pulp_labels?.pipeline;\n      if (pipeline === 'rejected') {\n        approvalStatus = t`rejected`;\n      } else if (pipeline === 'staging') {\n        approvalStatus = t`waiting for approval`;\n      } else if (pipeline === 'approved') {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  DateComponent,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport TrashIcon from '@patternfly/react-icons/dist/esm/icons/trash-icon';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard namespace={namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  })[type] || type;\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n  selectedFilter: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ninterface ParamsType {\n  page?: number;\n  page_size?: number;\n}\n\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\n\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState = null },\n  listItemActions?,\n) => React.ReactNode;\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ntype SortHeaders = {\n  title: MessageDescriptor;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\nexport type LocalizedSortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  filterConfig: ({ state }) => FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: MessageDescriptor;\n  noDataTitle: MessageDescriptor;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: MessageDescriptor;\n  typeaheadQuery?: ({ inputText, selectedFilter, setState }) => void;\n}\n\nexport const ListPage = function <T>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n  // for typeahed filters\n  typeaheadQuery,\n}: ListPageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const translateTitle = ({ title, ...rest }: any) => ({\n    ...rest,\n    title: i18n._(title),\n  });\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        selectedFilter: null,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const localizedFilterConfig = filterConfig({ state: this.state }) || [];\n      const knownFilters = localizedFilterConfig.map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        localizedFilterConfig.map(({ id, title }) => [id, title]),\n      );\n\n      const niceValues = {};\n      localizedFilterConfig\n        .filter(({ options }) => options?.length)\n        .forEach(({ id: filterId, options }) => {\n          const obj = (niceValues[filterId] = {});\n          options.forEach(({ id: optionId, title }) => {\n            obj[optionId] = title;\n          });\n        });\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.query(),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const resetCompoundFilter = () =>\n        this.setState({\n          inputText: '',\n          selectedFilter: localizedFilterConfig[0].id,\n        });\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader title={i18n._(title)} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={i18n._(noDataDescription)}\n              title={i18n._(noDataTitle)}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) => {\n                                this.setState({ inputText });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText,\n                                    selectedFilter: this.state.selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                              updateParams={(p) => {\n                                resetCompoundFilter();\n                                updateParams(p);\n                              }}\n                              params={params}\n                              filterConfig={localizedFilterConfig}\n                              selectFilter={(selectedFilter) => {\n                                this.setState({ selectedFilter });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText: '',\n                                    selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        resetCompoundFilter();\n                        updateParams(p);\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                      niceValues={niceValues}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      const localizedSortHeaders = (sortHeaders || []).map(\n        translateTitle,\n      ) as LocalizedSortHeaders;\n\n      return (\n        <table\n          aria-label={i18n._(title)}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{ headers: localizedSortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageParams<T> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      // condition check after query, for object permissions\n      this.query().then((item) => {\n        const actionContext = {\n          ...this.context,\n          hasObjectPermission: (permission) =>\n            item?.my_permissions?.includes?.(permission),\n        };\n        if (!condition(actionContext)) {\n          this.setState({ loading: false, unauthorised: true });\n        }\n\n        this.setState({ alerts: this.context.alerts || [] });\n        this.context.setAlerts([]);\n      });\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return Promise.resolve(null);\n      }\n\n      return new Promise((resolve, reject) => {\n        this.setState({ loading: true }, () => {\n          query({ name })\n            .then((item) => {\n              this.setState({\n                item,\n                loading: false,\n              });\n              resolve(item);\n            })\n            .catch((e) => {\n              const { status, statusText } = e.response;\n              this.setState({\n                loading: false,\n                item: null,\n              });\n              this.addAlert({\n                title: i18n._(errorTitle),\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n              reject();\n            });\n        });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageWithTabsParams<T> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: MessageDescriptor }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const localizedTabs = tabs.map(({ name, ...rest }) => ({\n        ...rest,\n        name: i18n._(name),\n      }));\n      const tab = localizedTabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={localizedTabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top:\n        DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n          ? '124px' // 70 + 50 + 4\n          : '80px', // 76 + 4\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport FilterIcon from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeaheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              const item = typeaheadResults.find(({ name }) => name === value);\n              this.submitFilter(item?.id || value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeaheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n\n    // no tags => falsy\n    // 1 tag => \"foo\"\n    // 2+ tags => [\"foo\", \"bar\"]\n    // convert all to an array\n    if (!newParams) {\n      newParams = [];\n    }\n    if (!Array.isArray(newParams)) {\n      newParams = [newParams];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy\n      hoverTip={t`Copy`}\n      clickTip={t`Copied`}\n      variant='inline-compact'\n      isCode\n    >\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import {\n  Button,\n  GenerateId,\n  Label,\n  Tooltip,\n  TooltipPosition,\n  fillTemplate,\n} from '@patternfly/react-core';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { css } from '@patternfly/react-styles';\nimport labelStyles from '@patternfly/react-styles/css/components/Label/label';\nimport styles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\nexport interface LabelGroupProps extends React.HTMLProps<HTMLUListElement> {\n  /** Content rendered inside the label group. Should be <Label> elements. */\n  children?: React.ReactNode;\n  /** Additional classes added to the label item */\n  className?: string;\n  /** Flag for having the label group default to expanded */\n  defaultIsOpen?: boolean;\n  /** Category name text for the label group category.  If this prop is supplied the label group with have a label and category styling applied */\n  categoryName?: string;\n  /** Aria label for label group that does not have a category name */\n  'aria-label'?: string;\n  /** Set number of labels to show before overflow */\n  numLabels?: number;\n  /** Flag if label group can be closed */\n  isClosable?: boolean;\n  /** Flag indicating the labels in the group are compact */\n  isCompact?: boolean;\n  /** Aria label for close button */\n  closeBtnAriaLabel?: string;\n  /** Function that is called when clicking on the label group close button */\n  onClick?: (event: React.MouseEvent) => void;\n  /** Position of the tooltip which is displayed if the category name text is longer */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Flag to implement a vertical layout */\n  isVertical?: boolean;\n  /** Flag indicating contained labels are editable. Allows spacing for a text input after the labels. */\n  isEditable?: boolean;\n  /** Flag indicating the editable label group should be appended with a textarea. */\n  hasEditableTextArea?: boolean;\n  /** Additional props passed to the editable textarea. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  editableTextAreaProps?: any;\n  /** Control for adding new labels */\n  addLabelControl?: React.ReactNode;\n}\n\ninterface LabelGroupState {\n  isOpen: boolean;\n  isTooltipVisible: boolean;\n}\n\nexport class LabelGroup extends React.Component<\n  LabelGroupProps,\n  LabelGroupState\n> {\n  static displayName = 'LabelGroup';\n  constructor(props: LabelGroupProps) {\n    super(props);\n    this.state = {\n      isOpen: this.props.defaultIsOpen,\n      isTooltipVisible: false,\n    };\n  }\n  private headingRef = React.createRef<HTMLSpanElement>();\n\n  static defaultProps: LabelGroupProps = {\n    categoryName: '',\n    defaultIsOpen: false,\n    numLabels: 3,\n    isClosable: false,\n    isCompact: false,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClick: (_e: React.MouseEvent) => undefined as any,\n    closeBtnAriaLabel: 'Close label group',\n    tooltipPosition: 'top',\n    'aria-label': 'Label group category',\n    isVertical: false,\n    isEditable: false,\n    hasEditableTextArea: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(\n        this.headingRef.current &&\n          this.headingRef.current.offsetWidth <\n            this.headingRef.current.scrollWidth,\n      ),\n    });\n  }\n\n  toggleCollapse = (e) => {\n    // Label isOverflowLabel renders a button, but not button type=button, breaks forms\n    e.preventDefault();\n\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n      isTooltipVisible: Boolean(\n        this.headingRef.current &&\n          this.headingRef.current.offsetWidth <\n            this.headingRef.current.scrollWidth,\n      ),\n    }));\n  };\n\n  renderLabel(id: string) {\n    const { categoryName, tooltipPosition } = this.props;\n    const { isTooltipVisible } = this.state;\n    return isTooltipVisible ? (\n      <Tooltip position={tooltipPosition} content={categoryName}>\n        <span\n          tabIndex={0}\n          ref={this.headingRef}\n          className={css(styles.labelGroupLabel)}\n        >\n          <span aria-hidden='true' id={id}>\n            {categoryName}\n          </span>\n        </span>\n      </Tooltip>\n    ) : (\n      <span\n        ref={this.headingRef}\n        className={css(styles.labelGroupLabel)}\n        aria-hidden='true'\n        id={id}\n      >\n        {categoryName}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      categoryName,\n      children,\n      className,\n      isClosable,\n      isCompact,\n      closeBtnAriaLabel,\n      'aria-label': ariaLabel,\n      onClick,\n      numLabels,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      defaultIsOpen,\n      tooltipPosition,\n      isVertical,\n      isEditable,\n      hasEditableTextArea,\n      editableTextAreaProps,\n      addLabelControl,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n    const { collapsedText, expandedText } = chipGroupProps();\n\n    const { isOpen } = this.state;\n    const renderedChildren = React.Children.toArray(children);\n    const numChildren = renderedChildren.length;\n    const collapsedTextResult = fillTemplate(collapsedText as string, {\n      remaining: numChildren - numLabels,\n    });\n\n    const renderLabelGroup = (id: string) => {\n      const labelArray = !isOpen\n        ? renderedChildren.slice(0, numLabels)\n        : renderedChildren;\n\n      const content = (\n        <React.Fragment>\n          {categoryName && this.renderLabel(id)}\n          <ul\n            className={css(styles.labelGroupList)}\n            {...(categoryName && { 'aria-labelledby': id })}\n            {...(!categoryName && { 'aria-label': ariaLabel })}\n            role='list'\n            {...rest}\n          >\n            {labelArray.map((child, i) => (\n              <li className={css(styles.labelGroupListItem)} key={i}>\n                {child}\n              </li>\n            ))}\n            {numChildren > numLabels && (\n              <li className={css(styles.labelGroupListItem)}>\n                <Label\n                  isOverflowLabel\n                  onClick={this.toggleCollapse}\n                  className={css(isCompact && labelStyles.modifiers.compact)}\n                >\n                  {isOpen ? expandedText : collapsedTextResult}\n                </Label>\n              </li>\n            )}\n            {addLabelControl && (\n              <li className={css(styles.labelGroupListItem)}>\n                {addLabelControl}\n              </li>\n            )}\n            {isEditable && hasEditableTextArea && (\n              <li\n                className={css(\n                  styles.labelGroupListItem,\n                  styles.modifiers.textarea,\n                )}\n              >\n                <textarea\n                  className={css(styles.labelGroupTextarea)}\n                  rows={1}\n                  tabIndex={0}\n                  {...editableTextAreaProps}\n                />\n              </li>\n            )}\n          </ul>\n        </React.Fragment>\n      );\n\n      const close = (\n        <div className={css(styles.labelGroupClose)}>\n          <Button\n            variant='plain'\n            aria-label={closeBtnAriaLabel}\n            onClick={onClick}\n            id={`remove_group_${id}`}\n            aria-labelledby={`remove_group_${id} ${id}`}\n          >\n            <TimesCircleIcon aria-hidden='true' />\n          </Button>\n        </div>\n      );\n\n      return (\n        <div\n          className={css(\n            styles.labelGroup,\n            className,\n            categoryName && styles.modifiers.category,\n            isVertical && styles.modifiers.vertical,\n            isEditable && styles.modifiers.editable,\n          )}\n        >\n          {<div className={css(styles.labelGroupMain)}>{content}</div>}\n          {isClosable && close}\n        </div>\n      );\n    };\n\n    return numChildren === 0 && addLabelControl === undefined ? null : (\n      <GenerateId>\n        {(randomId) => renderLabelGroup(this.props.id || randomId)}\n      </GenerateId>\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport SortAlphaDownIcon from '@patternfly/react-icons/dist/esm/icons/sort-alpha-down-icon';\nimport SortAlphaUpIcon from '@patternfly/react-icons/dist/esm/icons/sort-alpha-up-icon';\nimport SortAmountDownIcon from '@patternfly/react-icons/dist/esm/icons/sort-amount-down-icon';\nimport SortAmountUpIcon from '@patternfly/react-icons/dist/esm/icons/sort-amount-up-icon';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable'\n            onClick={() => this.setDescending()}\n            size='md'\n            style={{ marginLeft: '5px' }}\n          />\n        ) : (\n          <IconAsc\n            className='clickable'\n            onClick={() => this.setDescending()}\n            size='md'\n            style={{ marginLeft: '5px' }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React, { ReactNode } from 'react';\n\ninterface IProps {\n  children: ReactNode;\n  content: string | ReactNode;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        autoComplete='off'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Spinner,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  EmptyStateXs,\n  ExpandableRow,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  RolePermissions,\n  SelectGroup,\n  SelectRoles,\n  SelectUser,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface IProps {\n  // users\n  user?: UserType;\n  users: UserType[];\n  addUser?: (user, roles) => void;\n  removeUser?: (user) => void;\n  addUserRole?: (role, users) => void;\n  removeUserRole?: (role, user) => void;\n  showUserRemoveModal?: UserType;\n  showUserSelectWizard?: { user?: UserType; roles?: RoleType[] };\n\n  // groups\n  group?: GroupType;\n  groups: GroupType[];\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n\n  // roles\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n\n  // parent\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  updateProps: (prop) => void;\n}\n\nconst SectionTitle = ({ title }: { title: string }) => (\n  <h2 className='pf-c-title'>{title}</h2>\n);\nconst SectionSeparator = () => (\n  <div\n    style={{\n      backgroundColor: 'var(--pf-global--BackgroundColor--light-300)',\n      height: '16px',\n      margin: '16px -16px',\n    }}\n  />\n);\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const {\n      canEditOwners,\n      group,\n      groups,\n      showGroupRemoveModal,\n      showGroupSelectWizard,\n      showUserRemoveModal,\n      showUserSelectWizard,\n      user,\n      users,\n      updateProps,\n    } = this.props;\n\n    const loading = !groups && !users;\n    const noData = users?.length === 0 && groups?.length === 0;\n\n    const buttonAdd = (title, props) => (\n      <Button key={title} onClick={() => updateProps(props)}>\n        {title}\n      </Button>\n    );\n\n    const buttonUserAdd = buttonAdd(t`Select a user`, {\n      showUserSelectWizard: {},\n    });\n    const buttonGroupAdd = buttonAdd(t`Select a group`, {\n      showGroupSelectWizard: {},\n    });\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showUserRemoveModal ? this.renderUserRemoveModal() : null}\n        {showUserSelectWizard ? this.renderUserSelectWizard() : null}\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the buttons below.`\n                : ''\n            }\n            button={\n              canEditOwners ? (\n                <>\n                  {buttonUserAdd} {buttonGroupAdd}\n                </>\n              ) : null\n            }\n          />\n        ) : user || group ? (\n          this.renderRoles()\n        ) : (\n          <>\n            {this.renderSection({\n              buttonAdd: buttonUserAdd,\n              canEditOwners,\n              emptyStateTitle: t`There are currently no users assigned.`,\n              emptyStateExtra: t`Except for members of groups below.`,\n              items: users,\n              renderItems: () =>\n                this.renderList({\n                  ariaLabel: t`User list`,\n                  canEditOwners,\n                  itemName: t`User`,\n                  buttonAdd: buttonUserAdd,\n                  items: users,\n                  renderItem: (item, index) => this.renderUserRow(item, index),\n                  sortField: 'username',\n                }),\n              title: t`Users`,\n            })}\n            <SectionSeparator />\n            {this.renderSection({\n              buttonAdd: buttonGroupAdd,\n              canEditOwners,\n              emptyStateTitle: t`There are currently no groups assigned.`,\n              items: groups,\n              renderItems: () =>\n                this.renderList({\n                  ariaLabel: t`Group list`,\n                  canEditOwners,\n                  itemName: t`Group`,\n                  buttonAdd: buttonGroupAdd,\n                  items: groups,\n                  renderItem: (item, index) => this.renderGroupRow(item, index),\n                  sortField: 'name',\n                }),\n              title: t`Groups`,\n            })}\n          </>\n        )}\n      </>\n    );\n  }\n\n  private renderSection({\n    buttonAdd,\n    canEditOwners,\n    emptyStateTitle,\n    emptyStateExtra = '',\n    items,\n    renderItems,\n    title,\n  }) {\n    const loading = !items;\n    const noData = items?.length === 0;\n\n    return (\n      <>\n        <SectionTitle title={title} />\n        {loading ? (\n          <Spinner />\n        ) : noData ? (\n          <EmptyStateXs\n            title={emptyStateTitle}\n            description={\n              <>\n                {emptyStateExtra}\n                {emptyStateExtra && <br />}\n                {canEditOwners\n                  ? t`Please add an owner by using the button below.`\n                  : ''}\n              </>\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : (\n          renderItems()\n        )}\n      </>\n    );\n  }\n\n  private renderList({\n    ariaLabel,\n    buttonAdd,\n    canEditOwners,\n    itemName,\n    items,\n    renderItem,\n    sortField,\n  }) {\n    const sorted = sortBy(items, sortField);\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={ariaLabel}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: itemName,\n                  type: 'none',\n                  id: sortField,\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>{sorted.map(renderItem)}</tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderUserRow(user, index: number) {\n    const { urlPrefix, canEditOwners, updateProps } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() =>\n            updateProps({\n              showUserRemoveModal: user,\n            })\n          }\n        >\n          <Trans>Remove user</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-user-${user.username}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                user: user.username,\n                tab: 'access',\n              })\n            }\n          >\n            {user.username}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners, updateProps } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() =>\n            updateProps({\n              showGroupRemoveModal: group,\n            })\n          }\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-group-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles() {\n    const {\n      canEditOwners,\n      group,\n      showRoleRemoveModal,\n      showRoleSelectWizard,\n      updateProps,\n      user,\n    } = this.props;\n\n    if ((!user && !group) || (user && group)) {\n      return null;\n    }\n\n    const roles = (user || group).object_roles;\n    const sortedRoles = sortBy(roles);\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal() : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard() : null}\n\n        <h3 className='pf-c-title'>\n          {user ? <Trans>User {user.username}</Trans> : null}\n          {group ? <Trans>Group {group.name}</Trans> : null}\n        </h3>\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<RolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() => updateProps({ showRoleRemoveModal: role })}\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderUserRemoveModal() {\n    const { name, showUserRemoveModal: user } = this.props;\n    if (!user) {\n      return;\n    }\n\n    const username = user.username;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showUserRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeUser(user)}\n        title={t`Remove user ${username}?`}\n      >\n        <Trans>\n          You are about to remove <b>{username}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const { name, showGroupRemoveModal: group } = this.props;\n    if (!group) {\n      return;\n    }\n\n    const groupname = group.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal() {\n    const { name, user, group, showRoleRemoveModal: role } = this.props;\n    const userOrGroupName = group?.name || user?.username;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => {\n          group && this.props.removeRole(role, group);\n          user && this.props.removeUserRole(role, user);\n        }}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{userOrGroupName}</b>{' '}\n          for <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderUserSelectWizard() {\n    const {\n      users,\n      pulpObjectType,\n      selectRolesMessage,\n      showUserSelectWizard: { user, roles = [] },\n      updateProps,\n    } = this.props;\n\n    const hasUser = !!user;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find user in users, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a user`,\n        component: (\n          <SelectUser\n            assignedUsers={users}\n            selectedUser={user}\n            updateUser={(user) =>\n              updateProps({\n                showUserSelectWizard: { user, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasUser,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({\n                showUserSelectWizard: { user, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasUser,\n        enableNext: hasUser && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles user={user} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasUser && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a user`}\n        onClose={() =>\n          updateProps({\n            showUserSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addUser(user, roles)}\n      />\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const {\n      groups,\n      pulpObjectType,\n      selectRolesMessage,\n      showGroupSelectWizard: { group, roles = [] },\n      updateProps,\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard() {\n    const {\n      group,\n      pulpObjectType,\n      showRoleSelectWizard: { roles = [] },\n      updateProps,\n      user,\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      (group || user || {}).object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: (\n          <PreviewRoles user={user} group={group} selectedRoles={roles} />\n        ),\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => {\n          group && this.props.addRole(group, roles);\n          user && this.props.addUserRole(user, roles);\n        }}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, mapErrorMessages } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { LabelGroup } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  selectedRoles: RoleType[];\n  user?: {\n    username: string;\n  };\n  group?: {\n    name: string;\n  };\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ user, group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        {user ? (\n          <Trans>\n            The following roles will be applied to user:{' '}\n            <strong>{user.username}</strong>\n          </Trans>\n        ) : null}\n        {group ? (\n          <Trans>\n            The following roles will be applied to group:{' '}\n            <strong>{group.name}</strong>\n          </Trans>\n        ) : null}\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner /> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const RolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned ownership.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { UserAPI } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n}\n\ninterface IProps {\n  assignedUsers: UserType[];\n  selectedUser?: UserType;\n  updateUser?: (user) => void;\n}\n\nexport const SelectUser: React.FC<IProps> = ({\n  assignedUsers,\n  selectedUser,\n  updateUser,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [users, setUsers] = useState<UserType[]>([]);\n  const [usersCount, setUsersCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryUsers();\n  }, [localParams]);\n\n  const queryUsers = () => {\n    setLoading(true);\n    UserAPI.list(localParams).then(({ data }) => {\n      setUsers(data.data);\n      setUsersCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ username }) => selectedUser?.username === username;\n\n  const noData = users.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['username__contains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable users.`}\n          description={t`There are currently no users that can be assigned ownership.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ username }) =>\n    assignedUsers.some((user) => user.username === username);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`User`,\n        type: 'alpha',\n        id: 'username',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedUser ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected user</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedUser.username}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedUser.username}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'username__contains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ username__contains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['username__contains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {users.map((user, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={user.username}\n                        isSelected={isSelected(user)}\n                        onSelect={() => updateUser(user)}\n                        isDisabled={isAssigned(user)}\n                        data-cy={`UserListTable-CheckboxRow-row-${user.username}`}\n                      >\n                        <td>{user.username}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={usersCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertType,\n  DataForm,\n  HelperText,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n          autoComplete='off'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          />\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          pageControls={extraControls}\n          title={title}\n        />\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { dom, parse } from 'antsibull-docs';\nimport React, { ReactNode } from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderPluginLink: (\n    pluginName: string,\n    pluginType: string,\n    text: React.ReactNode | undefined,\n  ) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nfunction Choice({ children }: { children: ReactNode }) {\n  return <pre style={{ display: 'inline-block' }}>{children}</pre>;\n}\n\nfunction Legend({ children }: { children: ReactNode }) {\n  return (\n    <div style={{ display: 'inline-block', verticalAlign: 'top' }}>\n      {children}\n    </div>\n  );\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  private formatPartError(part: dom.ErrorPart): React.ReactNode {\n    return <span className='error'>ERROR while parsing: {part.message}</span>;\n  }\n\n  private formatPartBold(part: dom.BoldPart): React.ReactNode {\n    return <b>{part.text}</b>;\n  }\n\n  private formatPartCode(part: dom.CodePart): React.ReactNode {\n    return <span className='inline-code'>{part.text}</span>;\n  }\n\n  private formatPartHorizontalLine(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    part: dom.HorizontalLinePart,\n  ): React.ReactNode {\n    return <hr />;\n  }\n\n  private formatPartItalic(part: dom.ItalicPart): React.ReactNode {\n    return <i>{part.text}</i>;\n  }\n\n  private formatPartLink(part: dom.LinkPart): React.ReactNode {\n    return this.props.renderDocLink(part.text, part.url);\n  }\n\n  private formatPartModule(part: dom.ModulePart): React.ReactNode {\n    return this.props.renderPluginLink(part.fqcn, 'module', undefined);\n  }\n\n  private formatPartRstRef(part: dom.RSTRefPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartURL(part: dom.URLPart): React.ReactNode {\n    return (\n      <a href={part.url} target='_blank' rel='noreferrer'>\n        {part.url}\n      </a>\n    );\n  }\n\n  private formatPartText(part: dom.TextPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartEnvVariable(part: dom.EnvVariablePart): React.ReactNode {\n    return <span className='inline-code'>{part.name}</span>;\n  }\n\n  private formatPartOptionNameReturnValue(\n    part: dom.OptionNamePart | dom.ReturnValuePart,\n  ): React.ReactNode {\n    const content =\n      part.value === undefined ? (\n        <span className='inline-code'>\n          <b>{part.name}</b>\n        </span>\n      ) : (\n        <span className='inline-code'>\n          {part.name}={part.value}\n        </span>\n      );\n    if (!part.plugin) {\n      return content;\n    }\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      content,\n    );\n  }\n\n  private formatPartOptionValue(part: dom.OptionValuePart): React.ReactNode {\n    return <span className='inline-code'>{part.value}</span>;\n  }\n\n  private formatPartPlugin(part: dom.PluginPart): React.ReactNode {\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      undefined,\n    );\n  }\n\n  private formatPart(part: dom.Part): React.ReactNode {\n    switch (part.type) {\n      case dom.PartType.ERROR:\n        return this.formatPartError(part as dom.ErrorPart);\n      case dom.PartType.BOLD:\n        return this.formatPartBold(part as dom.BoldPart);\n      case dom.PartType.CODE:\n        return this.formatPartCode(part as dom.CodePart);\n      case dom.PartType.HORIZONTAL_LINE:\n        return this.formatPartHorizontalLine(part as dom.HorizontalLinePart);\n      case dom.PartType.ITALIC:\n        return this.formatPartItalic(part as dom.ItalicPart);\n      case dom.PartType.LINK:\n        return this.formatPartLink(part as dom.LinkPart);\n      case dom.PartType.MODULE:\n        return this.formatPartModule(part as dom.ModulePart);\n      case dom.PartType.RST_REF:\n        return this.formatPartRstRef(part as dom.RSTRefPart);\n      case dom.PartType.URL:\n        return this.formatPartURL(part as dom.URLPart);\n      case dom.PartType.TEXT:\n        return this.formatPartText(part as dom.TextPart);\n      case dom.PartType.ENV_VARIABLE:\n        return this.formatPartEnvVariable(part as dom.EnvVariablePart);\n      case dom.PartType.OPTION_NAME:\n        return this.formatPartOptionNameReturnValue(part as dom.OptionNamePart);\n      case dom.PartType.OPTION_VALUE:\n        return this.formatPartOptionValue(part as dom.OptionValuePart);\n      case dom.PartType.PLUGIN:\n        return this.formatPartPlugin(part as dom.PluginPart);\n      case dom.PartType.RETURN_VALUE:\n        return this.formatPartOptionNameReturnValue(\n          part as dom.ReturnValuePart,\n        );\n    }\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    // TODO: pass current plugin's type and name, and (if role) the current entrypoint as well\n    const parsed = parse(text);\n\n    // Special case: result is a single paragraph consisting of a single text part\n    if (\n      parsed.length === 1 &&\n      parsed[0].length === 1 &&\n      parsed[0][0].type === dom.PartType.TEXT\n    ) {\n      return <span>{parsed[0][0].text}</span>;\n    }\n\n    const fragments = [];\n    for (const paragraph of parsed) {\n      for (const part of paragraph) {\n        fragments.push(this.formatPart(part));\n      }\n    }\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, _pluginName: string) {\n    const isDeprecated = doc.deprecated;\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderLegend(legend) {\n    if (!legend) {\n      return null;\n    }\n\n    if (!Array.isArray(legend)) {\n      legend = [legend];\n    }\n\n    return (\n      <>\n        {': '}\n        <Legend>\n          {legend.map((d, i) => (\n            <>\n              {i ? <br /> : null}\n              {this.applyDocFormatters(d)}\n            </>\n          ))}\n        </Legend>\n      </>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices,\n      defaultChoice,\n      legends = {};\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n\n      if (option['default'] === true) {\n        defaultChoice = 'true';\n      } else if (option['default'] === false) {\n        defaultChoice = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaultChoice = option['default'];\n    }\n\n    if (typeof choices === 'object' && !Array.isArray(choices)) {\n      legends = choices;\n      choices = Object.keys(choices);\n    }\n\n    return (\n      <>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>\n              <Trans>Choices: </Trans>\n            </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaultChoice ? (\n                    <span className='blue' title={t`default`}>\n                      <Choice>{c}</Choice> &nbsp;&larr;\n                    </span>\n                  ) : (\n                    <Choice>{c}</Choice>\n                  )}\n                  {this.renderLegend(legends[c])}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaultChoice !== undefined && !choices.includes(defaultChoice) ? (\n          <span>\n            <span className='option-name'>\n              <Trans>Default: </Trans>\n            </span>\n            <span className='blue'>{defaultChoice}</span>\n          </span>\n        ) : null}\n      </>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  LabelGroup,\n  Pagination,\n  RadioRow,\n  SortTable,\n} from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  disabledRepos?: string[];\n  params?: { pulp_label_select?: string };\n  selectedRepos: AnsibleRepositoryType[];\n  setSelectedRepos: (selectedRepos: AnsibleRepositoryType[]) => void;\n  singleSelectionOnly?: boolean;\n}\n\nexport const MultipleRepoSelector = (props: IProps) => {\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n  const [itemsCount, setItemsCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const selectedRepos = props.selectedRepos.map(({ name }) => name);\n  const disabledRepos = props.disabledRepos || [];\n\n  const isSelectorChecked = repositoryList\n    .map(({ name }) => name)\n    .every((n) => selectedRepos.includes(n) || disabledRepos.includes(n));\n\n  function loadRepos() {\n    setLoading(true);\n\n    AnsibleRepositoryAPI.list({\n      ...params,\n      ...(props.params || {}),\n    })\n      .then(({ data: { count, results } }) => {\n        setRepositoryList(results);\n        setItemsCount(count);\n      })\n      .catch(({ response: { status, statusText } }) =>\n        props.addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  function changeSelection(repo) {\n    const { name } = repo;\n    if (disabledRepos.includes(name)) {\n      return;\n    }\n\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      props.setSelectedRepos(\n        props.selectedRepos.filter(({ name: element }) => element != name),\n      );\n    } else {\n      // add\n      props.setSelectedRepos([...props.selectedRepos, repo]);\n    }\n  }\n\n  function setSelection(repo) {\n    props.setSelectedRepos(repo ? [repo] : null);\n  }\n\n  function renderLabels() {\n    return (\n      <Flex>\n        <FlexItem>\n          <b>{t`Selected`}</b>\n        </FlexItem>\n        <FlexItem>\n          <LabelGroup>\n            {selectedRepos.map((name) => (\n              <>\n                <Label onClose={() => changeSelection({ name })}>{name}</Label>{' '}\n              </>\n            ))}\n          </LabelGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  useEffect(() => {\n    loadRepos();\n  }, [params, props.params?.pulp_label_select]);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectPage() {\n      const newRepos = [...props.selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (\n          !selectedRepos.includes(repo.name) &&\n          !disabledRepos.includes(repo.name)\n        ) {\n          newRepos.push(repo);\n        }\n      });\n\n      props.setSelectedRepos(newRepos);\n    }\n\n    function deselectAll() {\n      props.setSelectedRepos([]);\n    }\n\n    function deselectPage() {\n      const newRepos = props.selectedRepos.filter(\n        ({ name: repo1 }) =>\n          !repositoryList.find(({ name: repo2 }) => repo1 === repo2),\n      );\n\n      props.setSelectedRepos(newRepos);\n    }\n\n    function onToggleCheckbox() {\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${selectedRepos.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label={t`Select page`}\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    const sortTableOptions = {\n      headers: [\n        {\n          title: '',\n          type: 'none',\n          id: 'expander',\n        },\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'description',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Repositories`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => setParams(p)}\n        />\n        {repositoryList.map((repo, i) =>\n          props.singleSelectionOnly ? (\n            <RadioRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={\n                selectedRepos.includes(repo.name) ||\n                disabledRepos.includes(repo.name)\n              }\n              onSelect={() => setSelection(repo)}\n              isDisabled={disabledRepos.includes(repo.name)}\n              data-cy={`ApproveModal-RadioRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </RadioRow>\n          ) : (\n            <CheckboxRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={\n                selectedRepos.includes(repo.name) ||\n                disabledRepos.includes(repo.name)\n              }\n              onSelect={() => changeSelection(repo)}\n              isDisabled={disabledRepos.includes(repo.name)}\n              data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </CheckboxRow>\n          ),\n        )}\n      </table>\n    );\n  }\n\n  return (\n    <>\n      {renderLabels()}\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            {!props.singleSelectionOnly && (\n              <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n            )}\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => {\n                  setInputText(text);\n                }}\n                updateParams={(p) => setParams(p)}\n                params={params}\n                filterConfig={[\n                  {\n                    id: 'name__icontains',\n                    title: t`Repository`,\n                  },\n                ]}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n          isTop\n        />\n      </div>\n      <div>\n        <AppliedFilters\n          updateParams={(p) => {\n            setParams(p);\n            setInputText('');\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort']}\n          niceNames={{\n            name__icontains: t`Name`,\n          }}\n        />\n      </div>\n\n      {loading ? <Spinner size='lg' /> : renderTable()}\n\n      <div className='footer'>\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n        />\n      </div>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  selectedRepo: string;\n}\n\nexport const RepoSelector = ({ selectedRepo }: IProps) => {\n  const { featureFlags } = useContext();\n\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!featureFlags.display_repositories) {\n    return null;\n  }\n\n  const repoName =\n    {\n      community: t`Community`,\n      published: t`Published`,\n      rejected: t`Rejected`,\n      'rh-certified': t`Red Hat Certified`,\n      staging: t`Staging`,\n      validated: t`Validated`,\n    }[selectedRepo] || selectedRepo;\n\n  return (\n    <div className='breadcrumb-container'>\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText style={{ paddingLeft: 0 }} variant='plain'>\n              {t`Repository`}\n            </InputGroupText>\n            <InputGroupText\n              variant='plain'\n              style={{\n                backgroundColor: 'var(--pf-global--disabled-color--300)',\n                color: 'var(--pf-global--Color--100)',\n                height: '36px',\n              }}\n            >\n              {repoName}\n            </InputGroupText>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  errorMessage,\n  repositoryBasePath,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distroBasePath) => {\n    if (distroBasePath) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  useEffect(() => {\n    // create\n    if (!repository || !repository.name) {\n      onDistributionsLoad(null);\n      return;\n    }\n\n    repositoryBasePath(repository.name, repository.pulp_href)\n      .catch(() => null)\n      .then(onDistributionsLoad);\n  }, [repository?.pulp_href]);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n      ? 'approved'\n      : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <div data-cy='pipeline'>\n          <Select\n            variant='single'\n            isOpen={selectOpen}\n            onToggle={() => setSelectOpen(!selectOpen)}\n            onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n            selections={selectOptions[selectedPipeline]}\n          >\n            {Object.entries(selectOptions).map(([k, v]) => (\n              <SelectOption key={k} value={v} />\n            ))}\n          </Select>\n        </div>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          <div data-cy='remote'>\n            {remotes ? (\n              <APISearchTypeAhead\n                loadResults={loadRemotes}\n                onClear={() =>\n                  updateRepository({ ...repository, remote: null })\n                }\n                onSelect={(_event, value) =>\n                  updateRepository({\n                    ...repository,\n                    remote: remotes.find(({ name }) => name === value)\n                      ?.pulp_href,\n                  })\n                }\n                placeholderText={t`Select a remote`}\n                results={remotes}\n                selections={\n                  selectedRemote\n                    ? [\n                        {\n                          name: selectedRemote.name,\n                          id: selectedRemote.pulp_href,\n                        },\n                      ]\n                    : []\n                }\n              />\n            ) : null}\n            {remotesError ? (\n              <span\n                style={{\n                  color: 'var(--pf-global--danger-color--200)',\n                }}\n              >\n                {t`Failed to load remotes: ${remotesError}`}\n              </span>\n            ) : null}\n            {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n          </div>\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyDistributions = ({\n  emptyText,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleDistributionAPI.list({\n      repository: repositoryHref,\n      sort: 'pulp_created',\n      page,\n      page_size: 10,\n    })\n      .then(({ data: { count, results } }) => {\n        setDistributions(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setDistributions([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [repositoryHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(distributions);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n        (emptyText ?? '---')}\n      {count > distributions?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  remoteHref,\n}: {\n  emptyText?: string;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleRepositoryAPI.list({ remote: remoteHref, page, page_size: 10 })\n      .then(({ data: { count, results } }) => {\n        setRepositories(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setRepositories([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [remoteHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(repositories);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n      {count > repositories?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { LabelGroup } from 'src/components';\n\nexport const PulpLabels = ({ labels }: { labels: Record<string, string> }) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React, { ReactNode } from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ninterface FormFilename {\n  name: string;\n  original: boolean;\n}\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    const isCommunityRemote =\n      remoteType === 'ansible-remote' &&\n      remote?.url === 'https://galaxy.ansible.com/api/';\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n          'sync_dependencies',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(requiredFields, disabledFields, {\n            extra: (\n              <ActionGroup key='actions'>\n                {save}\n                {cancel}\n              </ActionGroup>\n            ),\n            isCommunityRemote,\n          })}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields, { isCommunityRemote })}\n      </Modal>\n    );\n  }\n\n  private renderForm(\n    requiredFields,\n    disabledFields,\n    {\n      extra,\n      isCommunityRemote,\n    }: { extra?: ReactNode; isCommunityRemote: boolean },\n  ) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            label={t`Download only signed collections`}\n          >\n            {isCommunityRemote && this.props.remote.signed_only ? (\n              <Alert\n                isInline\n                variant='warning'\n                title={t`Community content will never be synced if this setting is enabled`}\n              />\n            ) : null}\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('sync_dependencies') ? (\n          <FormGroup\n            fieldId={'sync_dependencies'}\n            label={t`Include all dependencies when syncing a collection.`}\n          >\n            <Switch\n              id='sync_dependencies'\n              isChecked={!!remote.sync_dependencies}\n              onChange={(value) =>\n                this.updateRemote(value, 'sync_dependencies')\n              }\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                autoComplete='off'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            {isCommunityRemote && !this.props.remote.requirements_file ? (\n              <Alert\n                isInline\n                variant='warning'\n                title={t`YAML requirements are required to sync from Galaxy`}\n              />\n            ) : null}\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              autoComplete='off'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  autoComplete='off'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: Record<string, any>;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as TextInputTypes) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n              {...(field.type === 'password' ? { autoComplete: 'off' } : {})}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  LocalizedSortHeaders,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: LocalizedSortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import { Trans, t } from '@lingui/macro';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { language } from 'src/l10n';\n\ninterface IProps {\n  item?: { download_count?: number };\n}\n\nexport const DownloadCount = ({ item }: IProps) => {\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!item?.download_count) {\n    return null;\n  }\n\n  const downloadCount = new Intl.NumberFormat(language).format(\n    item.download_count,\n  );\n\n  return (\n    <Tooltip\n      content={t`Download count is the sum of all versions' download counts`}\n    >\n      <DownloadIcon /> <Trans>{downloadCount} Downloads</Trans>\n    </Tooltip>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlert,\n} from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n  pipeline?: string;\n  submitAction: ({ addAlert, selectedRepos, setLoading }) => void;\n}\n\nexport const MultiRepoModal = ({\n  closeAction,\n  collectionVersion: { collection_version },\n  pipeline,\n  submitAction,\n}: IProps) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [disabledRepos, setDisabledRepos] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedRepos, setSelectedRepos] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function queryDisabled() {\n    // get repository list for selected collection\n    // TODO: handle more pages\n    const { name, namespace, version } = collection_version;\n\n    CollectionVersionAPI.list({\n      namespace,\n      name,\n      version,\n      page: 1,\n      page_size: 100,\n      ...(pipeline ? { repository_label: pipeline } : {}),\n    })\n      .then(\n        ({\n          data: {\n            data,\n            meta: { count },\n          },\n        }) => {\n          setDisabledRepos(data.map(({ repository: { name } }) => name));\n          if (count > 100) {\n            addAlert({\n              variant: 'warning',\n              title: t`The collection exists in too many repositories. Some repositories may not be disabled and preselected correctly.`,\n            });\n          }\n        },\n      )\n      .catch(() =>\n        addAlert({\n          variant: 'danger',\n          title: t`Failed to query repositories.`,\n        }),\n      );\n  }\n\n  useEffect(() => {\n    // check for approval repos that are already in collection and select them in UI\n    queryDisabled();\n  }, []);\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() =>\n            submitAction({\n              addAlert,\n              selectedRepos,\n              setLoading,\n            })\n          }\n          variant='primary'\n          isDisabled={!selectedRepos.length || loading}\n        >\n          {t`Select`}\n        </Button>,\n        <Button\n          key='cancel'\n          onClick={closeAction}\n          variant='link'\n          isDisabled={loading}\n        >\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select repositories`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <MultipleRepoSelector\n          addAlert={addAlert}\n          disabledRepos={disabledRepos}\n          params={pipeline ? { pulp_label_select: pipeline } : null}\n          selectedRepos={selectedRepos}\n          setSelectedRepos={setSelectedRepos}\n        />\n        {loading && <Spinner size='lg' />}\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { HelperText, Tooltip } from 'src/components';\n\ninterface IProps {\n  namespace: string;\n  name: string;\n}\n\nconst cache = { collection: null, role: null };\n\nconst loadScore = (type, namespace, name, callback) => () => {\n  const setScores = (data) => {\n    if (namespace && name && callback) {\n      callback(data?.[namespace]?.[name]);\n    }\n  };\n\n  if (!cache[type]) {\n    // not in cache, trigger load\n    cache[type] = fetch(`/static/scores/${type}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        cache[type] = data;\n        setScores(data);\n      });\n  } else if (typeof cache[type].then === 'function') {\n    // waiting for load\n    cache[type].then(() => setScores(cache[type]));\n  } else {\n    // already loaded\n    setScores(cache[type]);\n  }\n};\n\nexport function CollectionRatings({\n  namespace,\n  name,\n  isList,\n}: IProps & { isList?: boolean }) {\n  const [scores, setScores] = useState(null);\n  const loader = loadScore('collection', namespace, name, setScores);\n  useEffect(loader, [namespace, name]);\n\n  return isList ? (\n    <Ratings scores={scores} />\n  ) : (\n    <span style={{ padding: '12px 0 4px 0' }}>\n      <Ratings scores={scores} />\n    </span>\n  );\n}\n\nexport function RoleRatings({ namespace, name }: IProps) {\n  const [scores, setScores] = useState(null);\n  const loader = loadScore('role', namespace, name, setScores);\n  useEffect(loader, [namespace, name]);\n\n  return <Ratings scores={scores} />;\n}\n\nfunction Ratings({ scores }: { scores: Record<string, number> }) {\n  if (!scores) {\n    return null;\n  }\n\n  const help = t`This is the rating from old-galaxy.ansible.com. We are working on redoing the rating for the new version of galaxy.`;\n  const more = (\n    <table className='pf-c-table'>\n      {scores.quality_score !== null ? (\n        <tr>\n          <th>{t`Quality score`}</th>\n          <td>\n            <progress max={100} value={~~(20 * scores.quality_score)} />{' '}\n          </td>\n          <td>\n            <strong>{scores.quality_score}</strong>&nbsp;/&nbsp;5\n          </td>\n        </tr>\n      ) : null}\n      <tr>\n        <th>{t`Community score`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.score)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.score}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <td colSpan={3} style={{ textAlign: 'right' }}>\n          <Trans>Based on {scores.count} surveys.</Trans>\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Quality of docs`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.docs)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.docs}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Ease of use`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.ease_of_use)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.ease_of_use}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Does what it promises`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.does_what_it_says)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.does_what_it_says}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Works without change`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.works_as_is)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.works_as_is}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Ready for production`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.used_in_production)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.used_in_production}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n    </table>\n  );\n\n  return (\n    <Tooltip content={help}>\n      <HelperText hasAutoWidth content={more} />{' '}\n      <span style={{ marginRight: '8px' }}>{scores.score}</span>\n    </Tooltip>\n  );\n}\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import ArrowsAltVIcon from '@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon';\nimport LongArrowAltDownIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon';\nimport LongArrowAltUpIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-icon';\nimport OutlinedClockIcon from '@patternfly/react-icons/dist/esm/icons/outlined-clock-icon';\nimport SyncAltIcon from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Ansible\n        Lightspeed?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following legacy namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Ansible Lightspeed?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Ansible Lightspeed information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Ansible Lightspeed`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Ansible Lightspeed`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Additional details`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Ansible Lightspeed settings`\n          : isInDenyIndex\n          ? t`Opt in to Ansible Lightspeed`\n          : t`Opt out of Ansible Lightspeed`\n      }\n      variant='small'\n      titleIconVariant={isInDenyIndex ? null : 'warning'}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            <Trans>\n              <p>\n                Red Hat is working on exciting new Ansible content development\n                capabilities within the context of{' '}\n                <a\n                  href='https://www.redhat.com/en/engage/project-wisdom'\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  Ansible Lightspeed\n                </a>{' '}\n                <ExternalLinkAltIcon /> to help other automators build Ansible\n                content.\n              </p>\n            </Trans>\n            <br />\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n          <br />\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          {props.reference}\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { msg } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': msg`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': msg`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': msg`Import and move to staging`,\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': msg`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': msg`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.collection_sync': msg`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.collections.import_collection': msg`Pulp ansible: Import collection`,\n    'pulp_ansible.app.tasks.collections.sync': msg`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': msg`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.copy.copy_content': msg`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.roles.synchronize': msg`Pulp Ansible: Roles synchronize`,\n    'pulp_container.app.tasks.build_image_from_containerfile': msg`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': msg`Pulp container: General multi delete`,\n    'pulp_container.app.tasks.recursive_add_content': msg`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': msg`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.synchronize': msg`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.tag_image': msg`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': msg`Pulp container: Untage image`,\n    'pulpcore.app.tasks.export.pulp_export': msg`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': msg`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.add_and_remove': msg`Pulpcore: Add and remove`,\n    'pulpcore.app.tasks.repository.delete_version': msg`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': msg`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': msg`Pulpcore: Upload commit`,\n    'pulpcore.plugin.tasking.add_and_remove': msg`Pulpcore: Add or remove`,\n    'pulpcore.tasking.tasks.base.general_create': msg`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_delete': msg`Pulpcore: General delete`,\n    'pulpcore.tasking.tasks.base.general_update': msg`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.import_repository_version': msg`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': msg`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': msg`Pulpcore: Repair all artifacts`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': msg`Manage ansible repositories.`,\n    'galaxy.collection_admin': msg`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': msg`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': msg`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': msg`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': msg`Manage collection remotes.`,\n    'galaxy.content_admin': msg`Manage all content types.`,\n    'galaxy.execution_environment_admin': msg`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': msg`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': msg`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': msg`Push, and change execution environments.`,\n    'galaxy.group_admin': msg`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': msg`View, add, remove and change synclists.`,\n    'galaxy.task_admin': msg`View, and cancel any task.`,\n    'galaxy.user_admin': msg`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': msg`Allow all actions on a task.`,\n    'core.taskschedule_owner': msg`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: '/', component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ninterface ContextFragment {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import { i18n } from '@lingui/core';\nimport * as moment from 'moment';\n\n// remember to update lingui.config.js as well\nexport const availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\nexport const languageNames = {\n  en: 'English',\n  es: 'Español',\n  fr: 'Français',\n  ko: '한국어',\n  nl: 'Nederlands',\n  ja: '日本語',\n  zh: '中文',\n};\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\n// ?lang and ?pseudolocalization get removed in entry-standalone\n// (removed to prevent the param getting passed to api calls)\n// (in entry-standalone to prevent interaction with pushState)\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nexport const language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\", \"/beta/\" or \"/preview/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/preview/', '/')\n          .replace('/beta/', '/')\n          .replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n  url = url.replaceAll('//', '/');\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  dispatch = '/dispatch',\n  search = '/search',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  landingPage = '/',\n  legacyRole = '/standalone/roles/:username/:name',\n  legacyRoles = '/standalone/roles/',\n  legacyNamespace = '/standalone/namespaces/:namespaceid',\n  legacyNamespaces = '/standalone/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n\n  // for compatibility with old beta routes, remove later\n  compatLegacyRole = '/legacy/roles/:username/:name',\n  compatLegacyRoles = '/legacy/roles/',\n  compatLegacyNamespace = '/legacy/namespaces/:namespaceid',\n  compatLegacyNamespaces = '/legacy/namespaces/',\n}\n\nexport const namespaceBreadcrumb = () =>\n  ({\n    namespaces: { name: t`Namespaces`, url: formatPath(Paths.namespaces) },\n    partners: { name: t`Partners`, url: formatPath(Paths.partners) },\n  })[NAMESPACE_TERM];\n","import { sortBy } from 'lodash';\n\nexport const assignRoles = (roles) => {\n  const userRoles = {};\n  const groupRoles = {};\n\n  roles.forEach(({ users, groups, role }) => {\n    (users || []).forEach((username) => {\n      userRoles[username] ||= [];\n      userRoles[username].push(role);\n    });\n    (groups || []).forEach((name) => {\n      groupRoles[name] ||= [];\n      groupRoles[name].push(role);\n    });\n  });\n\n  return {\n    users: sortBy(\n      Object.entries(userRoles).map(([username, object_roles]) => ({\n        username,\n        object_roles,\n      })),\n      'username',\n    ),\n    groups: sortBy(\n      Object.entries(groupRoles).map(([name, object_roles]) => ({\n        name,\n        object_roles,\n      })),\n      'name',\n    ),\n  };\n};\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from './map-error-messages';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  let description = e.toString();\n\n  if (e.response) {\n    // HTTP error\n    const { status, statusText } = e.response;\n\n    const err = mapErrorMessages(e);\n    const message = Object.values(err).join(' ');\n\n    description = message\n      ? errorMessage(status, statusText, message)\n      : errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description,\n  });\n\n  callback();\n};\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  multiplier?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to starting with a 2s wait, increasing the wait time 1.5x each time, with max 10 attempts\n  // 2000, 1.5, 10 = ~226s ; 500, 1.5, 10 = ~57s\n  const { waitMs = 2000, multiplier = 1.5, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, {\n          ...options,\n          waitMs: Math.round(waitMs * multiplier),\n          bailAfter: bailAfter - 1,\n        }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { waitForTaskUrl } from './wait-for-task';\n\nexport async function repositoryRemoveCollection(\n  repoName,\n  collectionVersion_pulp_href,\n  repoHref = null,\n) {\n  if (!repoHref) {\n    repoHref = (\n      await AnsibleRepositoryAPI.list({ name: repoName, page_size: 1 })\n    )?.data?.results?.[0]?.pulp_href;\n  }\n\n  if (!repoHref) {\n    return Promise.reject({ error: t`Repository ${repoName} not found.` });\n  }\n\n  const task = (\n    await AnsibleRepositoryAPI.removeContent(\n      parsePulpIDFromURL(repoHref),\n      collectionVersion_pulp_href,\n    )\n  )?.data?.task;\n\n  await waitForTaskUrl(task);\n}\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { errorMessage } from './fail-alerts';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { repositoryRemoveCollection } from './repository-remove-collection';\nimport { waitForTask } from './wait-for-task';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n    deleteAll,\n    display_repositories,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (!display_repositories && !deleteAll) {\n      // cant display delete from repository when repositories are turned off\n      return null;\n    }\n\n    const caption = deleteAll\n      ? t`Delete entire collection from system`\n      : t`Delete collection from repository`;\n\n    const key = deleteAll ? 'delete-collection' : 'remove-collection';\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key={key}\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{caption}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem data-cy={key} key={key} onClick={onClick}>\n        {caption}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n    deleteAll,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n          deleteAll,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n    deleteAll,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n        deleteAll: deleteAll,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n    deleteFromRepo,\n  }) {\n    let promise = null;\n    if (deleteFromRepo) {\n      promise = repositoryRemoveCollection(\n        deleteFromRepo,\n        collection.collection_version.pulp_href,\n      );\n    } else {\n      promise = CollectionAPI.deleteCollection(collection);\n    }\n\n    promise\n      .then((res) => {\n        if (!deleteFromRepo) {\n          const taskId = parsePulpIDFromURL(res.data.task);\n          return waitForTask(taskId);\n        }\n      })\n      .then(() => {\n        addAlert({\n          variant: 'success',\n          title: (\n            <Trans>\n              Collection &quot;{collection.collection_version.name}\n              &quot; has been successfully deleted.\n            </Trans>\n          ),\n        });\n\n        if (redirect) {\n          setState({ redirect });\n        }\n\n        if (load) {\n          load();\n        }\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// Returns the API path for a specific repository\nexport function getRepoURL(distribution_base_path, view_published = false) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  // repo/distro \"published\" is special; not related to repo pipeline type\n  if (distribution_base_path === 'published' && view_published === false) {\n    return `${host}${API_BASE_PATH}`;\n  }\n\n  return `${host}${API_BASE_PATH}content/${distribution_base_path}/`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superadmin;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { Constants } from 'src/constants';\n\nexport function namespaceTitle({\n  name,\n  company,\n}: {\n  name: string;\n  company?: string;\n}): string {\n  return DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n    ? company || name\n    : name;\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\n\n// returns the preferred distribution base_path given a repo name\n// if there is a distribution with the same name as the repository, it will be used (as long as it's connected to the right repo too)\n// if not, the oldest will be used\n// reject if no distributions or repository\n// optional pulp_href param skips repo lookup\n\nexport function repositoryBasePath(name, pulp_href?): Promise<string> {\n  return Promise.all([\n    pulp_href\n      ? Promise.resolve({ name, pulp_href })\n      : AnsibleRepositoryAPI.list({ name, page_size: 1 }).then(firstResult),\n    AnsibleDistributionAPI.list({ name, page_size: 1 }).then(firstResult),\n  ]).then(async ([repository, distribution]) => {\n    if (!repository) {\n      return Promise.reject(t`Failed to find repository ${name}`);\n    }\n\n    if (distribution && distribution.repository === repository.pulp_href) {\n      return distribution.base_path;\n    }\n\n    distribution = await AnsibleDistributionAPI.list({\n      repository: repository.pulp_href,\n      sort: 'pulp_created',\n      page_size: 1,\n    }).then(firstResult);\n\n    if (!distribution) {\n      return Promise.reject(\n        t`Failed to find a distribution for repository ${name}`,\n      );\n    }\n\n    return distribution.base_path;\n  });\n}\n\nfunction firstResult({ data: { results } }) {\n  return results[0];\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <Link\n          to={formatPath(Paths.taskDetail, {\n            task: parsePulpIDFromURL(task?.task || task),\n          })}\n        >\n          detail page{' '}\n        </Link>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","getQueryString","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","DEFAULT_PAGE_SIZE","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","INSIGHTS_DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","STANDALONE_DEPLOYMENT_MODE","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","ActiveUserAPI","_HubAPI","API","_len","length","args","Array","_key","getUIPath","result","reject","username","password","_this2","loginURL","_get","_getPrototypeOf","prototype","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","AnsibleDistributionAPI","_PulpAPI","AnsibleRemoteAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","role","AnsibleRepositoryAPI","pulp_id","list","body","undefined","version_href","base_version","collection_version_hrefs","add_content_units","collection_version_href","remove_content_units","CertificateUploadAPI","formData","FormData","append","file","repository","signed_collection","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_getSignatures","_deleteCollection","_deleteCollectionVersion","_getDownloadURL","_setDeprecation","repo","path","response","_ref","_ref$collection_versi","namespace","name","is_deprecated","distroBasePath","collection_version","repositoryBasePath","pulp_href","sent","deprecated","progressCallback","cancelToken","config","onUploadProgress","token","distro_base_path","source","_callee2","version","_context2","_ref2","download_url","_x2","_x3","_x4","_x5","_callee3","_ref3","_ref3$collection_vers","_context3","_x6","_callee4","_ref4","_ref4$collection_vers","_context4","_x7","collection","_callee5","_context5","_x8","_x9","_x10","_x11","CollectionVersionAPI","source_base_path","destination_base_path","create","ContainerDistributionAPI","ContainerTagAPI","repositoryID","tag","digest","ExecutionEnvironmentAPI","readme","manifest","ExecutionEnvironmentRegistryAPI","clearSetFieldsFromRequest","write_only_fields","ExecutionEnvironmentRemoteAPI","FeatureFlagsAPI","GenericPulpAPI","GroupAPI","groupId","roleId","content_object","ImportAPI","LegacyAPI","newParams","sortParam","_LegacyAPI","MyDistributionAPI","MyNamespaceAPI","MySyncListAPI","NamespaceAPI","PulpStatus","RoleAPI","for_object_type","permissionId","SettingsAPI","SignCollectionAPI","_sign","updatedData","repository_name","_objectWithoutProperties","_excluded","status","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","SigningServiceAPI","TagAPI","TaskAPI","TaskManagementAPI","UserAPI","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","count","removePath","addPath","ApprovalRow","approve","collectionVersion","featureFlags","context","isVersionUpdating","openUploadCertificateModal","React","Link","to","formatPath","Paths","collectionByRepo","Button","variant","ButtonVariant","link","onClick","getDownloadURL","downloadURL","location","assign","download","DownloadIcon","DateComponent","date","pulp_created","LabelGroup","_repository$pulp_labe2","is_signed","pipeline","pulp_labels","Spinner","size","display_signatures","Label","color","icon","CheckCircleIcon","i18n","_","ExclamationCircleIcon","can_upload_signatures","require_upload_signatures","ExclamationTriangleIcon","renderStatus","_repository$pulp_labe","collection_auto_sign","ListItemActions","canUploadSignature","mustUploadSignature","autoSign","approveButton","isDisabled","Boolean","approveDropDown","DropdownItem","rejectDropDown","importsLink","component","myImports","kebabItems","buttons","renderButtons","ApproveModal","parentAddAlert","addAlert","closeAction","finishAction","settings","useContext","MultiRepoModal","submitAction","selectedRepos","setLoading","error","_approveAsync","_yield$AnsibleReposit","repo_id","signingServiceName","signingList","task","parsePulpIDFromURL","collection_versions","destination_repositories","GALAXY_AUTO_SIGN_COLLECTIONS","GALAXY_COLLECTION_SIGNING_SERVICE","values","page_size","results","moveCollectionVersion","t2","t1","t0","t3","waitForTaskUrl","title","approveAsync","description","CardListSwitcher","updateParams","_ref$size","className","disp","view_type","iconClasses","ThLargeIcon","cx","selected","setParam","ListIcon","CollectionCard","d","namespace_metadata","displaySignatures","menu","footer","nsTitle","namespaceTitle","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","display_repositories","TextContent","Text","TextVariants","small","Badge","isRead","ansibleRepositoryDetail","CERTIFIED_REPO","SignatureBadge","isCompact","signState","Trans","components","namespaceDetail","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","CollectionDependenciesList","dependencies_repos","dependencies","List","dependency","i","listDep","EmptyStateNoData","fqn","version_range","ListItem","style","marginRight","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","itemCount","usedByDependenciesLoading","ignoredParams","filterIsSet","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","name__icontains","onChange","_e","val","onClear","placeholder","Sort","options","sort","Pagination","isTop","LoadingPageSpinner","repository_list","getReduced","EmptyStateFilter","CollectionContentList","_step","toShow","summary","all","showing","keywords","_iterator","_createForOfIteratorHelper","s","n","done","_c$content_type","c","keywordMatch","match","typeMatch","push","err","f","clickable","collectionContentDocsByRepo","EmptyStateCustom","DownloadSignatureGridItem","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","signatures","setSignatures","_useState5","_useState6","isLoading","setIsLoading","getSignatures","res","message","GridItem","Split","hasGutter","SplitItem","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","Grid","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","Alert","isInline","LoginLink","collectionDistributionsByRepo","ref","display","current","href","click","_e$response","statusText","errorMessage","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","collectionDocsIndexByRepo","TableOfContents","props","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","split","toUpperCase","collectionDocsPageByRepo","_step2","_iterator2","getContentEntry","a","b","startsWith","parseLinks","searchBarRef","Nav","theme","NavList","links","filterString","isExpanded","filteredLinks","toLowerCase","NavExpandable","capitalize","isActive","getSelectedCategory","index","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","content_name","CollectionFilter","_context$featureFlags","displayTags","displayRepos","displayNamespaces","repositories","setRepositories","inputText","setInputText","selectedFilter","setSelectedFilter","_useState7","_useState8","setTags","loadRepos","pulp_label_select","loadTags","listCollections","useEffect","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","text","selectFilter","AppliedFilters","niceNames","niceValues","false","true","marginTop","CollectionList","collections","collectionControls","DataList","CollectionListItem","_extends","showNamespace","clearAllFilters","SignAllCertificatesModal","isOpen","onSubmit","onCancel","Modal","ModalVariant","medium","onClose","actions","primary","span","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","SignSingleCertificateModal","_ref$signState","_ref$isCompact","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","_ref$collection","dropdownMenu","synclistSwitch","uploadButton","cells","DataListCell","alignRight","width","DeprecatedTag","Flex","direction","default","alignItems","FlexItem","CollectionRatings","isList","alignSelf","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","cancelAction","children","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CopyCollectionToRepositoryModal","_copyToRepositories","signingService","copyCollectionVersion","forEach","taskAlert","dateTime","moment","format","fromNow","DeleteAnsibleRemoteModal","deleteAction","pending","setPending","DeleteModal","DeleteAnsibleRepositoryModal","DeleteCollectionModal","deleteCollection","isDeletionPending","confirmDelete","setConfirmDelete","deleteFromRepo","lastCollectionVersion","paddingBottom","Checkbox","isChecked","isRemove","_ref$variant","button","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","EmptyStateXs","BaseHeader","_React$Component","_this$props","logo","pageControls","breadcrumbs","contextSelector","versionControl","CollectionHeader","_submitCertificate","modalPagination","setState","modalCollections","_this$props$collectio","requestParams","order_by","_this$props$collectio2","errorAlert","alerts","_toConsumableArray","state","isOpenSignAllModal","sign","signing_service","waitForTask","task_id","x","_this$props$collectio3","isOpenSignModal","deleteAll","promise","deleteCollectionVersion","repositoryRemoveCollection","taskId","topVersion","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","isOpenVersionsSelect","isOpenVersionsModal","DEFAULT_PAGINATION_OPTIONS","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","copyCollectionToRepositoryModal","DeleteCollectionUtils","getUsedbyDependencies","alert","include_related","_ref5","prevProps","_this3","activeTab","actuallyCollection","collectionsCount","_this$state","urlKeys","latestVersion","_this$context$feature","ai_deny_index","isLatestVersion","v","collectionName","Navigate","canSign","canSignNamespace","hasPermission","canDeleteCommunityCollection","permission","_namespace$related_fi","_namespace$related_fi2","related_fields","my_permissions","hasObjectPermission","dropdownItems","deleteMenuOption","canDeleteCollection","openDeleteModalWithConfirm","deprecate","checkUploadPrivilleges","copyToRepository","issueUrl","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","updatePaginationParams","_ref6","toString","load","RepoSelector","selectedRepo","Breadcrumbs","Select","onToggle","SelectVariant","single","onSelect","selections","loadingVariant","SelectOption","DownloadCount","target","rel","ExternalLinkAltIcon","StatefulDropdown","items","AlertList","closeAlert","renderTabs","_this4","active","_this$props2","pathParams","reduced","ignoreParams","tabs","collectionContentListByRepo","collectionImportLogByRepo","collectionDependenciesByRepo","LinkTabs","_this$state$versionTo","_this5","upload","reload","_ref7","_ref8","_this6","setDeprecation","_err$response2","warning","closeAlertMixin","AppContext","PartnerHeader","filters","Tabs","Popover","position","PopoverPosition","top","bodyContent","headerContent","header","hasAutoWidth","iconPosition","OutlinedQuestionCircleIcon","Status","_saveFile","errors","errorVariant","uploadProgress","uploadStatus","waiting","loading","onlyStaging","hideSelector","loadAllRepos","stagingByName","byPipeline","_ref3$0$data","staging","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","lineHeight","Radio","MultipleRepoSelector","addAlertObj","singleSelectionOnly","setSelectedRepos","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","detectedType","acceptedTypes","_this$state$selectedR","artifact","sha256","getCancelToken","loaded","total","messages","msg","cancel","onSelectProp","_ref$toggleType","toggleType","defaultText","_ref$isPlain","ariaLabel","dataCy","setSelected","Dropdown","event","currentTarget","toggle","renderToggle","open","DropdownPosition","right","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","_this$props$buttons","_this$props$kebabItem","anyButtons","anyKebab","paddingRight","textAlign","justifyContent","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","failed","objectFit","maxHeight","src","DefaultLogo","onError","MarkdownEditor","updateText","helperText","editing","TextArea","ReactMarkdown","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","running","followMessages","handleScrollClick","renderMessage","completed","level","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","APISearchTypeAhead","loadResults","placeholderText","NamespaceForm","errorMessages","isRequired","TextInput","helperTextInvalid","validated","toError","company","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","splice","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","ResourcesForm","resources","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","parameter","newNamespaceNameValid","handleSubmit","preventDefault","labelIcon","InputGroup","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","ListPage","_class","condition","displayName","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderModals","renderTableRow","sortHeaders","typeaheadQuery","actionContext","action","_action$modal","modal","_action$modal2","translateTitle","klass","parseParamString","search","unauthorised","setAlerts","_renderModals","localizedFilterConfig","knownFilters","noData","fromEntries","filterId","obj","optionId","listQuery","navigate","resetCompoundFilter","renderTable","localizedSortHeaders","SortTable","updateParamsMixin","withRouter","Page","listUrl","transformParams","render","_item$my_permissions","_item$my_permissions$","_transformParams","routeParams","_item$my_permissions2","_item$my_permissions3","PageWithTabs","headerDetails","renderTab","tabUpdateParams","tab","localizedTabs","find","visible","NotFound","zIndex","flexDirection","marginBottom","actionClose","AlertActionCloseButton","alertIndex","newList","alertStateVariable","_ref$ignoredParams","_ref$niceNames","chips","isArray","ChipGroup","categoryName","chipGroupProps","_niceValues$key","Chip","deleteParam","unsetFilter","renderGroup","Breadcrumb","BreadcrumbItem","PFClipboardCopy","hoverTip","clickTip","selectedID","replace","indexOf","submitMultiple","isCreatable","hasOnCreateOption","filterOptions","FilterIcon","renderInput","submitFilter","control","trim","checkbox","onSelectMultiple","isGrouped","SelectGroup","option","selectTitleById","typeaheadResults","multiple","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","isCode","PFFileUpload","clearButtonText","prevState","isTooltipVisible","headingRef","offsetWidth","scrollWidth","defaultIsOpen","tooltipPosition","tabIndex","css","styles","labelGroupLabel","isClosable","closeBtnAriaLabel","numLabels","isVertical","isEditable","hasEditableTextArea","editableTextAreaProps","addLabelControl","rest","_chipGroupProps","collapsedText","expandedText","renderedChildren","toArray","numChildren","collapsedTextResult","fillTemplate","remaining","GenerateId","randomId","labelArray","renderLabel","labelGroupList","child","labelGroupListItem","isOverflowLabel","toggleCollapse","labelStyles","modifiers","compact","textarea","labelGroupTextarea","rows","close","labelGroupClose","TimesCircleIcon","labelGroup","category","vertical","editable","labelGroupMain","_ref$active","extra","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","bottom","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","PFTooltip","WizardModal","steps","onSave","large","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","backButtonText","cancelButtonText","closeButtonAriaLabel","nextButtonText","titleId","descriptionId","WriteOnlyField","isValueSet","autoComplete","SectionTitle","SectionSeparator","backgroundColor","margin","AccessTab","canEditOwners","group","showGroupRemoveModal","showGroupSelectWizard","showUserRemoveModal","showUserSelectWizard","users","updateProps","buttonAdd","buttonUserAdd","buttonGroupAdd","renderUserRemoveModal","renderUserSelectWizard","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderSection","emptyStateTitle","emptyStateExtra","renderItems","itemName","renderItem","renderUserRow","sortField","renderGroupRow","_ref2$emptyStateExtra","sorted","sortBy","urlPrefix","_this$props3","_this$props4","showRoleRemoveModal","showRoleSelectWizard","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","RolePermissions","_this$props5","removeUser","_this$props6","groupname","removeGroup","_this$props7","userOrGroupName","removeRole","removeUserRole","_this$props8","pulpObjectType","selectRolesMessage","_this$props8$showUser","_this$props8$showUser2","hasUser","hasRoles","SelectUser","assignedUsers","selectedUser","updateUser","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","isFinished","addUser","_this$props9","_this$props9$showGrou","_this$props9$showGrou2","hasGroup","assignedGroups","selectedGroup","updateGroup","addGroup","_object_roles","_this7","_this$props10","_this$props10$showRol","addRole","addUserRole","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","PermissionCategories","permissions","showCustom","showEmpty","_this$context","model_permissions","showUserManagement","external_authentication","userManagementFilter","USER_GROUP_MGMT_PERMISSIONS","allPermissions","categories","entries","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","menuAppendTo","typeaheadMulti","typeAheadAriaLabel","_model_permissions$pe3","translateLockedRolesDescription","perm","_perm$split","_perm$split2","catTitle","charAt","splitByDot","Divider","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","colSpan","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","setRole","selectedRole","setGroups","groupsCount","setGroupsCount","_useState9","_useState10","localParams","setLocalParams","queryGroups","meta","isAssigned","some","tabHeader","flex","setRoles","rolesItemCount","setRolesItemCount","queryRoles","name__startswith","isRoleSelected","setUsers","usersCount","setUsersCount","queryUsers","username__contains","UserForm","newUser","selection","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","isReadonly","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","formFields","formGroupLabelIcon","requiredFields","superuserLabel","getSuperUserHelperText","Switch","labelOff","formSuffix","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","DataForm","model","pass","confirm","UserFormPage","extraControls","Choice","Legend","verticalAlign","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","ret","contains","part","renderDocLink","renderPluginLink","fqcn","dom","ERROR","formatPartError","BOLD","formatPartBold","CODE","formatPartCode","HORIZONTAL_LINE","formatPartHorizontalLine","ITALIC","formatPartItalic","LINK","formatPartLink","MODULE","formatPartModule","RST_REF","formatPartRstRef","URL","formatPartURL","TEXT","formatPartText","ENV_VARIABLE","formatPartEnvVariable","OPTION_NAME","formatPartOptionNameReturnValue","OPTION_VALUE","formatPartOptionValue","PLUGIN","formatPartPlugin","RETURN_VALUE","parsed","parse","_step3","fragments","_iterator3","_step4","_iterator4","formatPart","_pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","legend","choices","defaultChoice","legends","renderLegend","_this8","note","renderReturnValueEntries","_this9","returned","sample","_props$params","sortTableOptions","isSelectorOpen","setIsSelectorOpen","repositoryList","setRepositoryList","itemsCount","setItemsCount","_useState11","_useState12","setParams","disabledRepos","isSelectorChecked","every","changeSelection","_ref3$data","_ref4$response","selectPage","newRepos","deselectPage","repo1","repo2","document","getElementById","focus","splitButtonItems","DropdownToggleCheckbox","checked","renderMultipleSelector","setSelection","repoName","community","published","rejected","InputGroupText","paddingLeft","AnsibleRepositoryForm","_remotes$find","allowEditName","updateRepository","disabledFields","bool","formGroup","fieldName","inputField","stringField","isValid","createDistribution","setCreateDistribution","disabledDistribution","setDisabledDistribution","onDistributionsLoad","hide_from_search","hideFromSearch","setHideFromSearch","setPipeline","disableHideFromSearch","setDisableHideFromSearch","remotes","setRemotes","_useState13","_useState14","remotesError","setRemotesError","loadRemotes","selectedRemote","_useState15","_useState16","selectedPipeline","setSelectedPipeline","_useState17","_useState18","selectOpen","setSelectOpen","selectOptions","approved","none","pipelineHelp","labelsHelp","numericField","LazyDistributions","emptyText","repositoryHref","_repository$pulp_labe3","selectPipeline","stopPropagation","PulpLabels","labels","private","_event","_remotes$find2","_distributions$map","_distributions$map$jo","distributions","setDistributions","setCount","setPage","setError","prepend","_ref2$data","errorElement","LazyRepositories","_repositories$map","remoteHref","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","isCommunityRemote","save","renderForm","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","signed_only","sync_dependencies","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","yaml","onEditorDidMount","editor","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","formPrefix","fields","DetailList","setItems","setItemCount","handleHttpError","Details","_ref$fields","overflowWrap","download_count","downloadCount","Intl","NumberFormat","UI_EXTERNAL_LOGIN_URI","login","setDisabledRepos","prevAlerts","repository_label","cache","loadScore","callback","setScores","_data$namespace","fetch","json","scores","loader","Ratings","help","more","quality_score","max","score","docs","ease_of_use","does_what_it_says","works_as_is","used_in_production","HTMLComment","UIVersion","UI_COMMIT_HASH","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","typeToVariantMap","secondary","_ref$type","labelProps","OutlinedClockIcon","skipped","canceled","ExclamationIcon","SyncAltIcon","statusToProps","fontSize","paddingTop","borderRadius","readOnly","evt","textInput","getOptions","isPlaceholder","typeahead","hasInlineFilter","onFilter","toggleIcon","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","_ref$response","removeFromDenyIndex","_ref2$response","addToDenyIndex","_ref3$response","expandableTitle","_props","NotFoundImage","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","ansibleRemoteDetail","ansibleRemoteEdit","ansibleRemotes","ansibleRepositories","ansibleRepositoryEdit","approvalDashboard","notFound","partners","editNamespace","myCollections","myCollectionsByRepo","myNamespaces","signatureKeys","taskList","taskDetail","collectionDocsPage","collectionDocsIndex","collectionContentDocs","collectionContentList","collectionImportLog","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","Provider","I18nProvider","App","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","activate","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","UI_BASE_PATH","replaceAll","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","assignRoles","userRoles","groupRoles","can_create_signatures","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","statusCode","customMessage","custom","UUIDRegEx","_options$waitMs","waitMs","_options$multiplier","multiplier","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","round","taskUrl","_repositoryRemoveCollection","collectionVersion_pulp_href","_yield$AnsibleReposit2","repoHref","t4","t5","removeContent","t8","t7","t6","t9","_collection$collectio","getUsedDependenciesByCollection","caption","saveAs","Blob","getRepoURL","distribution_base_path","view_published","host","has_model_permission","is_superadmin","lastSynced","entity","last_sync_task","lastSyncStatus","paramString","numericTypes","appendParam","cloneDeep","param","_i2","_deleteKeys","firstResult","distribution","sortParams","isDesc","ascSort","LOCKED_ROLES_WITH_DESCRIPTION","outsideError","protocol","ClassComponent","WithRouter","useLocation","useNavigate","useParams","routePath","el","newObj"],"sourceRoot":""}