{"version":3,"file":"js/exposed-./RootApp.9d477663c8ae3a365a04.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/group.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/import.ts","webpack:///./src/api/legacy.ts","webpack:///./src/api/legacy-import.ts","webpack:///./src/api/legacy-namespace.ts","webpack:///./src/api/legacy-role.ts","webpack:///./src/api/legacy-sync.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/tag.ts","webpack:///./src/api/task.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/user.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/components/approval/approval-row.tsx","webpack:///./src/components/approval/approve-modal.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-detail/collection-dropdown.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/collection-list/collection-filter.ts","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/copy-collection-to-repository-modal/copy-collection-to-repository-modal.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/empty-state/empty-state-xs.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/shared/stateful-dropdown.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/file-upload.tsx","webpack:///./src/components/patternfly-wrappers/label-group.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/rbac/role-permissions.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-user.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repo-selector/multiple-repo-selector.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/shared/alert-list.tsx","webpack:///./src/components/shared/applied-filters.tsx","webpack:///./src/components/shared/breadcrumbs.tsx","webpack:///./src/components/shared/compound-filter.tsx","webpack:///./src/components/shared/copy-url.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/download-count.tsx","webpack:///./src/components/shared/external-link.tsx","webpack:///./src/components/shared/hub-list-toolbar.tsx","webpack:///./src/components/shared/link-tabs.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/shared/main.tsx","webpack:///./src/components/shared/maybe-link.tsx","webpack:///./src/components/shared/multi-repo-modal.tsx","webpack:///./src/components/shared/ratings.tsx","webpack:///./src/components/shared/sort.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/wizard-modal.tsx","webpack:///./src/components/shared/write-only-field.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/assign-roles.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/parse-pulp-id.ts","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/repository-remove-collection.ts","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/namespace-title.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/repository-base-path.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/write-only-fields.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t30741,\n\t\t741\n\t],\n\t\"./es.js\": [\n\t\t52130,\n\t\t2130\n\t],\n\t\"./fr.js\": [\n\t\t88394,\n\t\t8394\n\t],\n\t\"./ja.js\": [\n\t\t2019,\n\t\t2019\n\t],\n\t\"./ko.js\": [\n\t\t62572,\n\t\t2572\n\t],\n\t\"./nl.js\": [\n\t\t20268,\n\t\t268\n\t],\n\t\"./zh.js\": [\n\t\t49108,\n\t\t9108\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 40907;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 25177,\n\t\"./af.js\": 25177,\n\t\"./ar\": 61509,\n\t\"./ar-dz\": 41488,\n\t\"./ar-dz.js\": 41488,\n\t\"./ar-kw\": 58676,\n\t\"./ar-kw.js\": 58676,\n\t\"./ar-ly\": 42353,\n\t\"./ar-ly.js\": 42353,\n\t\"./ar-ma\": 24496,\n\t\"./ar-ma.js\": 24496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 82682,\n\t\"./ar-sa.js\": 82682,\n\t\"./ar-tn\": 89756,\n\t\"./ar-tn.js\": 89756,\n\t\"./ar.js\": 61509,\n\t\"./az\": 95533,\n\t\"./az.js\": 95533,\n\t\"./be\": 28959,\n\t\"./be.js\": 28959,\n\t\"./bg\": 47777,\n\t\"./bg.js\": 47777,\n\t\"./bm\": 54903,\n\t\"./bm.js\": 54903,\n\t\"./bn\": 61290,\n\t\"./bn-bd\": 17357,\n\t\"./bn-bd.js\": 17357,\n\t\"./bn.js\": 61290,\n\t\"./bo\": 31545,\n\t\"./bo.js\": 31545,\n\t\"./br\": 11470,\n\t\"./br.js\": 11470,\n\t\"./bs\": 44429,\n\t\"./bs.js\": 44429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 56464,\n\t\"./cs.js\": 56464,\n\t\"./cv\": 73635,\n\t\"./cv.js\": 73635,\n\t\"./cy\": 64226,\n\t\"./cy.js\": 64226,\n\t\"./da\": 93601,\n\t\"./da.js\": 93601,\n\t\"./de\": 77853,\n\t\"./de-at\": 26111,\n\t\"./de-at.js\": 26111,\n\t\"./de-ch\": 54697,\n\t\"./de-ch.js\": 54697,\n\t\"./de.js\": 77853,\n\t\"./dv\": 60708,\n\t\"./dv.js\": 60708,\n\t\"./el\": 54691,\n\t\"./el.js\": 54691,\n\t\"./en-au\": 53872,\n\t\"./en-au.js\": 53872,\n\t\"./en-ca\": 28298,\n\t\"./en-ca.js\": 28298,\n\t\"./en-gb\": 56195,\n\t\"./en-gb.js\": 56195,\n\t\"./en-ie\": 66584,\n\t\"./en-ie.js\": 66584,\n\t\"./en-il\": 65543,\n\t\"./en-il.js\": 65543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 79402,\n\t\"./en-nz.js\": 79402,\n\t\"./en-sg\": 43004,\n\t\"./en-sg.js\": 43004,\n\t\"./eo\": 32934,\n\t\"./eo.js\": 32934,\n\t\"./es\": 97650,\n\t\"./es-do\": 20838,\n\t\"./es-do.js\": 20838,\n\t\"./es-mx\": 17730,\n\t\"./es-mx.js\": 17730,\n\t\"./es-us\": 56575,\n\t\"./es-us.js\": 56575,\n\t\"./es.js\": 97650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 90527,\n\t\"./fi.js\": 90527,\n\t\"./fil\": 95995,\n\t\"./fil.js\": 95995,\n\t\"./fo\": 52477,\n\t\"./fo.js\": 52477,\n\t\"./fr\": 85498,\n\t\"./fr-ca\": 26435,\n\t\"./fr-ca.js\": 26435,\n\t\"./fr-ch\": 37892,\n\t\"./fr-ch.js\": 37892,\n\t\"./fr.js\": 85498,\n\t\"./fy\": 37071,\n\t\"./fy.js\": 37071,\n\t\"./ga\": 41734,\n\t\"./ga.js\": 41734,\n\t\"./gd\": 70217,\n\t\"./gd.js\": 70217,\n\t\"./gl\": 77329,\n\t\"./gl.js\": 77329,\n\t\"./gom-deva\": 32124,\n\t\"./gom-deva.js\": 32124,\n\t\"./gom-latn\": 93383,\n\t\"./gom-latn.js\": 93383,\n\t\"./gu\": 95050,\n\t\"./gu.js\": 95050,\n\t\"./he\": 11713,\n\t\"./he.js\": 11713,\n\t\"./hi\": 43861,\n\t\"./hi.js\": 43861,\n\t\"./hr\": 26308,\n\t\"./hr.js\": 26308,\n\t\"./hu\": 90609,\n\t\"./hu.js\": 90609,\n\t\"./hy-am\": 17160,\n\t\"./hy-am.js\": 17160,\n\t\"./id\": 74063,\n\t\"./id.js\": 74063,\n\t\"./is\": 89374,\n\t\"./is.js\": 89374,\n\t\"./it\": 88383,\n\t\"./it-ch\": 21827,\n\t\"./it-ch.js\": 21827,\n\t\"./it.js\": 88383,\n\t\"./ja\": 23827,\n\t\"./ja.js\": 23827,\n\t\"./jv\": 89722,\n\t\"./jv.js\": 89722,\n\t\"./ka\": 41794,\n\t\"./ka.js\": 41794,\n\t\"./kk\": 27088,\n\t\"./kk.js\": 27088,\n\t\"./km\": 96870,\n\t\"./km.js\": 96870,\n\t\"./kn\": 84451,\n\t\"./kn.js\": 84451,\n\t\"./ko\": 63164,\n\t\"./ko.js\": 63164,\n\t\"./ku\": 98174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 98174,\n\t\"./ky\": 78474,\n\t\"./ky.js\": 78474,\n\t\"./lb\": 79680,\n\t\"./lb.js\": 79680,\n\t\"./lo\": 15867,\n\t\"./lo.js\": 15867,\n\t\"./lt\": 45766,\n\t\"./lt.js\": 45766,\n\t\"./lv\": 69532,\n\t\"./lv.js\": 69532,\n\t\"./me\": 58076,\n\t\"./me.js\": 58076,\n\t\"./mi\": 41848,\n\t\"./mi.js\": 41848,\n\t\"./mk\": 30306,\n\t\"./mk.js\": 30306,\n\t\"./ml\": 73739,\n\t\"./ml.js\": 73739,\n\t\"./mn\": 99053,\n\t\"./mn.js\": 99053,\n\t\"./mr\": 86169,\n\t\"./mr.js\": 86169,\n\t\"./ms\": 73386,\n\t\"./ms-my\": 92297,\n\t\"./ms-my.js\": 92297,\n\t\"./ms.js\": 73386,\n\t\"./mt\": 77075,\n\t\"./mt.js\": 77075,\n\t\"./my\": 72264,\n\t\"./my.js\": 72264,\n\t\"./nb\": 22274,\n\t\"./nb.js\": 22274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 92572,\n\t\"./nl-be\": 43784,\n\t\"./nl-be.js\": 43784,\n\t\"./nl.js\": 92572,\n\t\"./nn\": 54566,\n\t\"./nn.js\": 54566,\n\t\"./oc-lnc\": 69330,\n\t\"./oc-lnc.js\": 69330,\n\t\"./pa-in\": 29849,\n\t\"./pa-in.js\": 29849,\n\t\"./pl\": 94418,\n\t\"./pl.js\": 94418,\n\t\"./pt\": 79834,\n\t\"./pt-br\": 48303,\n\t\"./pt-br.js\": 48303,\n\t\"./pt.js\": 79834,\n\t\"./ro\": 24457,\n\t\"./ro.js\": 24457,\n\t\"./ru\": 82271,\n\t\"./ru.js\": 82271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 33478,\n\t\"./se.js\": 33478,\n\t\"./si\": 17538,\n\t\"./si.js\": 17538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 46637,\n\t\"./sl.js\": 46637,\n\t\"./sq\": 86794,\n\t\"./sq.js\": 86794,\n\t\"./sr\": 45719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 45719,\n\t\"./ss\": 56000,\n\t\"./ss.js\": 56000,\n\t\"./sv\": 41011,\n\t\"./sv.js\": 41011,\n\t\"./sw\": 40748,\n\t\"./sw.js\": 40748,\n\t\"./ta\": 11025,\n\t\"./ta.js\": 11025,\n\t\"./te\": 11885,\n\t\"./te.js\": 11885,\n\t\"./tet\": 28861,\n\t\"./tet.js\": 28861,\n\t\"./tg\": 86571,\n\t\"./tg.js\": 86571,\n\t\"./th\": 55802,\n\t\"./th.js\": 55802,\n\t\"./tk\": 59527,\n\t\"./tk.js\": 59527,\n\t\"./tl-ph\": 29231,\n\t\"./tl-ph.js\": 29231,\n\t\"./tlh\": 31052,\n\t\"./tlh.js\": 31052,\n\t\"./tr\": 85096,\n\t\"./tr.js\": 85096,\n\t\"./tzl\": 79846,\n\t\"./tzl.js\": 79846,\n\t\"./tzm\": 81765,\n\t\"./tzm-latn\": 97711,\n\t\"./tzm-latn.js\": 97711,\n\t\"./tzm.js\": 81765,\n\t\"./ug-cn\": 48414,\n\t\"./ug-cn.js\": 48414,\n\t\"./uk\": 16618,\n\t\"./uk.js\": 16618,\n\t\"./ur\": 57777,\n\t\"./ur.js\": 57777,\n\t\"./uz\": 57609,\n\t\"./uz-latn\": 72475,\n\t\"./uz-latn.js\": 72475,\n\t\"./uz.js\": 57609,\n\t\"./vi\": 21135,\n\t\"./vi.js\": 21135,\n\t\"./x-pseudo\": 64051,\n\t\"./x-pseudo.js\": 64051,\n\t\"./yo\": 82218,\n\t\"./yo.js\": 82218,\n\t\"./zh-cn\": 52648,\n\t\"./zh-cn.js\": 52648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 31541,\n\t\"./zh-mo.js\": 31541,\n\t\"./zh-tw\": 50304,\n\t\"./zh-tw.js\": 50304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n  sortParam: string; // translate ?sort into sortParam in list()\n  mapPageToOffset: boolean;\n\n  // a request URL is created from:\n  // * API_HOST - optional, for use with different hostname\n  // * apiBaseUrl - api/pulp prefix, ends in trailing slash\n  // * apiPath - set by leaf API classes\n  // any extra id or params added by custom methods\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: API_HOST + apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapParams(params) {\n    const newParams = { ...params };\n\n    if (this.mapPageToOffset) {\n      // The api uses offset/limit OR page/page_size for pagination\n      // the UI uses page/page size and maps to whatever the api expects\n\n      const pageSize =\n        parseInt(newParams['page_size'], 10) || Constants.DEFAULT_PAGE_SIZE;\n      const page = parseInt(newParams['page'], 10) || 1;\n\n      delete newParams['page'];\n      delete newParams['page_size'];\n\n      newParams['offset'] = page * pageSize - pageSize;\n      newParams['limit'] = pageSize;\n    }\n\n    if (this.sortParam && newParams['sort'] && this.sortParam !== 'sort') {\n      // The api uses sort/ordering/order_by for sort\n      // the UI uses sort and maps to whatever the api expects\n\n      newParams[this.sortParam] = newParams['sort'];\n      delete newParams['sort'];\n    }\n\n    return {\n      params: newParams,\n    };\n  }\n\n  list(params?: object, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath), this.mapParams(params));\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  private getPath(apiPath?: string) {\n    return apiPath || this.apiPath || '';\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (IS_INSIGHTS) {\n      await window.insights.chrome.auth.getUser();\n    } else {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  mapPageToOffset = true; // offset & limit\n  sortParam = 'sort';\n\n  constructor() {\n    super(API_BASE_PATH);\n  }\n}\n","import { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/me/';\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (IS_INSIGHTS) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post('_ui/v1/auth/logout/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = '_ui/v1/auth/login/';\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  mapPageToOffset = true; // offset & limit\n  sortParam = 'ordering';\n\n  constructor() {\n    super(PULP_API_BASE_PATH);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from execution-environment-registry\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n\n  // list(params?)\n\n  listVersions(pulp_id: string, params?) {\n    return this.list(params, this.apiPath + pulp_id + '/versions/');\n  }\n\n  // delete(pulp_id: string)\n\n  sync(pulp_id: string, body = {}) {\n    return this.http.post(this.apiPath + pulp_id + '/sync/', body);\n  }\n\n  revert(pulp_id: string, version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(pulp_id: string, collection_version_hrefs) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      add_content_units: collection_version_hrefs,\n    });\n  }\n\n  removeContent(pulp_id: string, collection_version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/list_roles/');\n  }\n\n  addRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/add_role/');\n  }\n\n  myPermissions(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/my_permissions/');\n  }\n\n  removeRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/remove_role/');\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/copy_collection_version/',\n      body,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/move_collection_version/',\n      body,\n    );\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import axios from 'axios';\nimport { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from './response-types/collection';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = '_ui/v1/repo/';\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  async setDeprecation({\n    collection_version: { namespace, name },\n    repository,\n    is_deprecated,\n  }: CollectionVersionSearch): Promise<{ data: { task: string } }> {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.patch(\n      `${namespace}/${name}`,\n      {\n        deprecated: !is_deprecated,\n      },\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/`,\n    );\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n\n    if (data.distro_base_path) {\n      return this.http.post(\n        `v3/plugin/ansible/content/${data.distro_base_path}/collections/artifacts/`,\n        formData,\n        config,\n      );\n    } else {\n      return this.http.post('v3/artifacts/collections/', formData, config);\n    }\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  async getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http\n      .get(\n        `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n      )\n      .then(({ data: { download_url } }) => download_url);\n  }\n\n  async deleteCollectionVersion({\n    collection_version: { namespace, name, version },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  async deleteCollection({\n    collection_version: { namespace, name },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(namespace, collection, params = {}) {\n    return this.http.get(\n      `_ui/v1/collection-versions/?dependency=${namespace}.${collection}`,\n      this.mapParams(params),\n    );\n  }\n\n  async getSignatures(repository, namespace, name, version) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n\n  getDetail(distroBasePath, namespace, name) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n  sortParam = 'order_by';\n\n  move(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  copy(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  getUsedDependenciesByCollection(namespace, collection, params = {}) {\n    return this.http.get(\n      this.apiPath + `?dependency=${namespace}.${collection}`,\n      this.mapParams(params),\n    );\n  }\n\n  // list(params?)\n}\n\nexport const CollectionVersionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(this.apiPath + `${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(this.apiPath + `${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = '_ui/v1/controllers/';\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  readme(name) {\n    return this.http.get(this.apiPath + `${name}/_content/readme/`);\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + `${name}/_content/readme/`, readme);\n  }\n\n  images(name, params) {\n    return this.http.get(\n      this.apiPath + `${name}/_content/images/`,\n      this.mapParams(params),\n    );\n  }\n\n  image(name, digest) {\n    return this.http.get(this.apiPath + `${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(\n      this.apiPath + `${name}/_content/tags/`,\n      this.mapParams(params),\n    );\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      this.apiPath + `${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(this.apiPath + `${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n  sortParam = 'sort';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nfunction smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/execution-environments/registries/';\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/execution-environments/remotes/';\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/feature-flags/';\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  // base get adds a trailing slash\n  get(url: string) {\n    return this.http.get(url);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/groups/';\n}\n\nexport const GroupAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n\n  listRoles(groupId, params?) {\n    return super.list(params, this.apiPath + `${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(this.apiPath + `${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(this.apiPath + `${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = '_ui/v1/imports/collections/';\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class LegacyAPI extends BaseAPI {\n  mapPageToOffset = false; // page & page_size\n  sortParam = 'order_by';\n\n  constructor() {\n    super(API_BASE_PATH);\n  }\n}\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/imports/';\n  sortParam = 'order_by';\n\n  // list(params?)\n\n  import(data) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const LegacyImportAPI = new API();\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/namespaces/';\n  sortParam = 'sort';\n\n  // create(data)\n  // get(id)\n  // list(params?)\n\n  changeProvider(role_namespace_id, collection_namespace_id) {\n    return this.http.post(this.apiPath + `${role_namespace_id}/providers/`, {\n      id: collection_namespace_id,\n    });\n  }\n}\n\nexport const LegacyNamespaceAPI = new API();\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/roles/';\n  sortParam = 'order_by';\n\n  getContent(id) {\n    return super.get(id + '/content');\n  }\n\n  getVersions(id) {\n    return super.get(id + '/versions');\n  }\n\n  // get(id)\n  // list(params?)\n}\n\nexport const LegacyRoleAPI = new API();\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/sync/';\n\n  sync(data) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const LegacySyncAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/my-distributions/';\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/my-namespaces/';\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/my-synclists/';\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/namespaces/';\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/settings/';\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport { CollectionVersionSearch } from './response-types/collection';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository?: CollectionVersionSearch['repository'];\n  repository_name?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignCollectionVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignCollectionVersion;\n\nclass API extends HubAPI {\n  apiPath = '_ui/v1/collection_signing/';\n\n  async sign({ repository, repository_name: name, ...args }: SignProps) {\n    const distroBasePath = await repositoryBasePath(\n      name,\n      repository?.pulp_href,\n    ).catch((status) =>\n      Promise.reject({\n        response: { status },\n      }),\n    );\n\n    const updatedData = {\n      distro_base_path: distroBasePath,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = '_ui/v1/tags/';\n\n  listCollections(params) {\n    return this.list(params, this.apiPath + 'collections/');\n  }\n\n  listRoles(params) {\n    return this.list(params, this.apiPath + 'roles/');\n  }\n}\n\nexport const TagAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = '_ui/v1/users/';\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = '_ui/v1/ai_deny_index/';\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Label,\n  Spinner,\n} from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { DateComponent, LabelGroup, ListItemActions } from 'src/components';\nimport { IAppContextType } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  approve: (collectionVersion: CollectionVersionSearch) => void;\n  collectionVersion: CollectionVersionSearch;\n  context: IAppContextType;\n  isVersionUpdating: (collectionVersion: CollectionVersionSearch) => boolean;\n  openUploadCertificateModal: (\n    collectionVersion: CollectionVersionSearch,\n  ) => void;\n  reject: (collectionVersion: CollectionVersionSearch) => void;\n}\n\nexport const ApprovalRow = ({\n  approve,\n  collectionVersion,\n  context: { featureFlags },\n  isVersionUpdating,\n  openUploadCertificateModal,\n  reject,\n}: IProps) => {\n  const { collection_version: version, repository } = collectionVersion;\n\n  return (\n    <tr\n      data-cy={`ApprovalRow-${repository.name}-${version.namespace}-${version.name}`}\n    >\n      <td>{version.namespace}</td>\n      <td>{version.name}</td>\n      <td>\n        <Link\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: version.namespace,\n              collection: version.name,\n              repo: repository.name,\n            },\n            {\n              version: version.version,\n            },\n          )}\n        >\n          {version.version}\n        </Link>\n        <Button\n          variant={ButtonVariant.link}\n          onClick={() => {\n            download(\n              repository,\n              version.namespace,\n              version.name,\n              version.version,\n            );\n          }}\n        >\n          <DownloadIcon />\n        </Button>\n      </td>\n      <td>\n        <DateComponent date={version.pulp_created} />\n      </td>\n      <td>\n        <LabelGroup>{repository.name}</LabelGroup>\n      </td>\n      <td>{renderStatus(collectionVersion)}</td>\n      {renderButtons(collectionVersion)}\n    </tr>\n  );\n\n  function renderButtons(collectionVersion: CollectionVersionSearch) {\n    // not checking namespace permissions here, auto_sign happens API side, so is the permission check\n    const {\n      collection_version: version,\n      repository,\n      is_signed,\n    } = collectionVersion;\n    const {\n      can_upload_signatures,\n      collection_auto_sign,\n      require_upload_signatures,\n    } = featureFlags;\n    const pipeline = repository?.pulp_labels?.pipeline;\n\n    if (isVersionUpdating(collectionVersion) || !pipeline) {\n      return <ListItemActions />; // empty td;\n    }\n\n    const canUploadSignature = can_upload_signatures && !is_signed;\n    const mustUploadSignature = canUploadSignature && require_upload_signatures;\n    const autoSign = collection_auto_sign && !require_upload_signatures;\n\n    const approveButton = [\n      canUploadSignature && (\n        <React.Fragment key='upload'>\n          <Button onClick={() => openUploadCertificateModal(collectionVersion)}>\n            {t`Upload signature`}\n          </Button>{' '}\n        </React.Fragment>\n      ),\n      <Button\n        key='approve-button'\n        isDisabled={mustUploadSignature}\n        data-cy='approve-button'\n        onClick={() => approve(collectionVersion)}\n      >\n        {autoSign ? t`Sign and approve` : t`Approve`}\n      </Button>,\n    ].filter(Boolean);\n\n    const approveDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() => approve(collectionVersion)}\n        isDisabled={isDisabled}\n        key='approve'\n      >\n        {autoSign ? t`Sign and approve` : t`Approve`}\n      </DropdownItem>\n    );\n\n    const rejectDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() => reject(collectionVersion)}\n        isDisabled={isDisabled}\n        key='reject'\n      >\n        {t`Reject`}\n      </DropdownItem>\n    );\n\n    const importsLink = (\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: version.namespace,\n                name: version.name,\n                version: version.version,\n              },\n            )}\n          >\n            {t`View Import Logs`}\n          </Link>\n        }\n      />\n    );\n\n    if (pipeline === 'approved') {\n      return (\n        <ListItemActions\n          kebabItems={[\n            approveDropDown(true),\n            rejectDropDown(false),\n            importsLink,\n          ]}\n        />\n      );\n    }\n\n    if (pipeline === 'rejected') {\n      return (\n        <ListItemActions\n          kebabItems={[\n            approveDropDown(false),\n            rejectDropDown(true),\n            importsLink,\n          ]}\n        />\n      );\n    }\n\n    if (pipeline === 'staging') {\n      return (\n        <ListItemActions\n          kebabItems={[rejectDropDown(false), importsLink]}\n          buttons={approveButton}\n        />\n      );\n    }\n  }\n\n  function renderStatus(collectionVersion: CollectionVersionSearch) {\n    const { repository, is_signed } = collectionVersion;\n    const pipeline = repository?.pulp_labels?.pipeline;\n\n    if (isVersionUpdating(collectionVersion)) {\n      return <Spinner size='lg' />;\n    }\n\n    if (pipeline === 'approved') {\n      const { display_signatures } = featureFlags;\n      return (\n        <Label variant='outline' color='green' icon={<CheckCircleIcon />}>\n          {display_signatures && is_signed\n            ? t`Signed and approved`\n            : t`Approved`}\n        </Label>\n      );\n    }\n\n    if (pipeline === 'rejected') {\n      return (\n        <Label variant='outline' color='red' icon={<ExclamationCircleIcon />}>\n          {t`Rejected`}\n        </Label>\n      );\n    }\n\n    if (pipeline === 'staging') {\n      const { can_upload_signatures, require_upload_signatures } = featureFlags;\n      return (\n        <Label\n          variant='outline'\n          color='orange'\n          icon={<ExclamationTriangleIcon />}\n        >\n          {!is_signed && can_upload_signatures && require_upload_signatures\n            ? t`Needs signature and review`\n            : t`Needs review`}\n        </Label>\n      );\n    }\n  }\n\n  function download(\n    repository: CollectionVersionSearch['repository'],\n    namespace: string,\n    name: string,\n    version: string,\n  ) {\n    CollectionAPI.getDownloadURL(repository, namespace, name, version).then(\n      (downloadURL: string) => {\n        window.location.assign(downloadURL);\n      },\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport { AlertType, MultiRepoModal } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { parsePulpIDFromURL, waitForTaskUrl } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n  finishAction: () => void;\n}\n\nexport const ApproveModal = ({\n  addAlert: parentAddAlert,\n  closeAction,\n  collectionVersion,\n  finishAction,\n}: IProps) => {\n  const { settings } = useContext();\n  const { collection_version, repository } = collectionVersion;\n  const { namespace, name, version, pulp_href } = collection_version;\n\n  function approve({ addAlert, selectedRepos, setLoading }) {\n    let error = '';\n\n    async function approveAsync() {\n      const repo_id = parsePulpIDFromURL(repository.pulp_href);\n      const params = {\n        collection_versions: [pulp_href],\n        destination_repositories: selectedRepos.map((repo) => repo.pulp_href),\n      };\n\n      if (settings.GALAXY_AUTO_SIGN_COLLECTIONS) {\n        const signingServiceName = settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n          page_size: 1,\n        });\n        if (signingList.data.results.length) {\n          params['signing_service'] = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      const task = (\n        await AnsibleRepositoryAPI.moveCollectionVersion(repo_id, params)\n      )?.data?.task;\n      await waitForTaskUrl(task);\n\n      finishAction();\n      parentAddAlert({\n        title: t`Certification status for collection \"${namespace} ${name} v${version}\" has been successfully updated.`,\n        variant: 'success',\n      });\n    }\n\n    setLoading(true);\n    return approveAsync()\n      .catch(() =>\n        addAlert({\n          title: t`Failed to approve collection.`,\n          variant: 'danger',\n          description: error,\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <MultiRepoModal\n      closeAction={closeAction}\n      collectionVersion={collectionVersion}\n      pipeline='pipeline=approved'\n      submitAction={approve}\n    />\n  );\n};\n","import ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\nimport ThLargeIcon from '@patternfly/react-icons/dist/esm/icons/th-large-icon';\nimport cx from 'classnames';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  Logo,\n  SignatureBadge,\n  Tooltip,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts, namespaceTitle } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionNextPageCard = ({\n  onClick,\n}: {\n  onClick: () => void;\n}) => {\n  return (\n    <Card className='hub-c-card-collection-container card'>\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        <Button variant='link' onClick={onClick}>\n          {t`View more`}\n          <br />\n          <br />\n          <ArrowRightIcon />\n        </Button>\n      </div>\n    </Card>\n  );\n};\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const nsTitle = namespaceTitle(\n    namespace || { name: collection_version.namespace },\n  );\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className='hub-c-card-collection-container card'>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${nsTitle} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          {featureFlags.display_repositories ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Badge isRead>\n                  <Link\n                    to={formatPath(Paths.ansibleRepositoryDetail, {\n                      name: repository.name,\n                    })}\n                  >\n                    {repository.name === Constants.CERTIFIED_REPO\n                      ? t`Certified`\n                      : repository.name}\n                  </Link>\n                </Badge>\n              </Text>\n            </TextContent>\n          ) : null}\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {nsTitle}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n} from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo, Tooltip } from 'src/components';\nimport { namespaceTitle } from 'src/utilities';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  namespace: {\n    avatar_url: string;\n    name: string;\n    company: string;\n  };\n  namespaceURL?: string;\n}\n\nexport const NamespaceNextPageCard = ({ onClick }: { onClick: () => void }) => {\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <div\n        style={{\n          display: 'flex',\n          height: IS_INSIGHTS ? '216px' : '168px',\n          justifyContent: 'center',\n        }}\n      >\n        <Button variant='link' onClick={onClick}>\n          {t`View more`}\n          <br />\n          <br />\n          <ArrowRightIcon />\n        </Button>\n      </div>\n    </Card>\n  );\n};\n\nexport const NamespaceCard = ({ namespace, namespaceURL }: IProps) => {\n  const { avatar_url, name } = namespace;\n  const title = namespaceTitle(namespace);\n\n  const MAX_DESCRIPTION_LENGTH = 26;\n\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${title} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={title} noSpan>\n        <CardTitle>{getDescription(title, MAX_DESCRIPTION_LENGTH)}</CardTitle>\n      </Tooltip>\n      {title !== name ? (\n        <Tooltip content={name} noSpan>\n          <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n        </Tooltip>\n      ) : null}\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\n// FIXME: pf-m-truncate / hub-m-truncated\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { List, ListItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}{' '}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  HubListToolbar,\n  LoadingPageSpinner,\n  Pagination,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  const ignoredParams = ['page_size', 'page', 'sort'];\n\n  const filterConfig = [\n    {\n      id: 'name__icontains',\n      title: t`Name`,\n    },\n  ];\n\n  const sortOptions = [\n    { title: t`Collection`, id: 'collection', type: 'alpha' as const },\n  ];\n\n  return (\n    <>\n      <HubListToolbar\n        count={itemCount}\n        filterConfig={filterConfig}\n        ignoredParams={ignoredParams}\n        params={params}\n        sortOptions={sortOptions}\n        updateParams={updateParams}\n      />\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced({ version }, [\n                                ...ignoredParams,\n                                'name__icontains',\n                              ]),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { DeleteCollectionUtils } from 'src/utilities';\n\ninterface IProps {\n  collection;\n  'data-cy'?: string;\n  deletionBlocked?: boolean;\n  namespace?;\n  onCopyVersion?;\n  onDelete?;\n  onDeleteVersion?;\n  onDeprecate?;\n  onRemove?;\n  onRemoveVersion?;\n  onSign?;\n  onSignVersion?;\n  onUploadVersion?;\n  version?: string;\n  wrapper?;\n}\n\nexport const CollectionDropdown = ({\n  collection,\n  'data-cy': dataCy,\n  deletionBlocked,\n  namespace,\n  onCopyVersion,\n  onDelete,\n  onDeleteVersion,\n  onDeprecate,\n  onRemove,\n  onRemoveVersion,\n  onSign,\n  onSignVersion,\n  onUploadVersion,\n  version,\n  wrapper,\n}: IProps) => {\n  const {\n    featureFlags: {\n      can_create_signatures,\n      can_upload_signatures,\n      display_repositories,\n    },\n    hasPermission,\n    user: { is_anonymous, is_superuser },\n  } = useContext();\n\n  const hasObjectPermission = (permission) =>\n    namespace?.related_fields?.my_permissions?.includes?.(permission);\n\n  const hasPerm = (permission) =>\n    hasPermission(permission) ||\n    hasObjectPermission(permission) ||\n    is_superuser;\n\n  const canCopy = display_repositories && !is_anonymous;\n  const canDelete =\n    hasPerm('ansible.delete_collection') || hasPerm('galaxy.change_namespace');\n  const canDeprecate = hasPerm('galaxy.change_namespace');\n  const canRemove = canDelete && display_repositories;\n  const canSign =\n    can_create_signatures &&\n    !can_upload_signatures &&\n    hasPerm('galaxy.change_namespace') &&\n    hasPerm('galaxy.upload_to_namespace');\n  const canUpload = hasPerm('galaxy.upload_to_namespace');\n\n  const Wrapper =\n    wrapper || (({ any, children }) => (any ? <>{children}</> : null));\n\n  const DeleteWrapper = ({\n    addAlert,\n    caption,\n    collection,\n    'data-cy': dataCy,\n    openModal,\n    skipCheck,\n  }: {\n    addAlert?;\n    caption: string;\n    collection?;\n    'data-cy'?: string;\n    openModal;\n    skipCheck?;\n  }) =>\n    deletionBlocked ? (\n      <DropdownItem\n        isDisabled\n        description={t`Cannot delete until collections that depend on this collection have been deleted.`}\n      >\n        {caption}\n      </DropdownItem>\n    ) : (\n      <DropdownItem\n        data-cy={dataCy}\n        onClick={() =>\n          skipCheck\n            ? openModal()\n            : DeleteCollectionUtils.countUsedbyDependencies(collection)\n                .then((count) => {\n                  if (count) {\n                    addAlert({\n                      title: t`Cannot delete until collections that depend on this collection have been deleted.`,\n                      variant: 'warning',\n                    });\n                    return;\n                  }\n\n                  openModal();\n                })\n                .catch(addAlert)\n        }\n      >\n        {caption}\n      </DropdownItem>\n    );\n\n  const dropdownItems = [\n    canDelete && onDelete && (\n      <DeleteWrapper\n        caption={t`Delete collection from system`}\n        data-cy='delete-collection'\n        key='delete-collection'\n        {...onDelete}\n      />\n    ),\n    canRemove && onRemove && (\n      <DeleteWrapper\n        caption={t`Remove collection from repository`}\n        key='remove-collection'\n        {...onRemove}\n      />\n    ),\n    canDelete && onDeleteVersion && (\n      <DropdownItem\n        data-cy='delete-collection-version'\n        key='delete-collection-version'\n        onClick={onDeleteVersion}\n      >\n        {t`Delete version ${version} from system`}\n      </DropdownItem>\n    ),\n    canRemove && onRemoveVersion && (\n      <DropdownItem key='remove-collection-version' onClick={onRemoveVersion}>\n        {t`Remove version ${version} from repository`}\n      </DropdownItem>\n    ),\n    canSign && onSign && (\n      <DropdownItem key='sign-collection' onClick={onSign}>\n        {t`Sign collection`}\n      </DropdownItem>\n    ),\n    canSign && onSignVersion && (\n      <DropdownItem key='sign-collection-version' onClick={onSignVersion}>\n        {t`Sign version ${version}`}\n      </DropdownItem>\n    ),\n    canDeprecate && onDeprecate && (\n      <DropdownItem onClick={onDeprecate} key='deprecate-collection'>\n        {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>\n    ),\n    canUpload && onUploadVersion && (\n      <DropdownItem key='upload-collection-version' onClick={onUploadVersion}>\n        {t`Upload new version`}\n      </DropdownItem>\n    ),\n    canCopy && onCopyVersion && (\n      <DropdownItem\n        key='copy-collection-version-to-repository-dropdown'\n        onClick={onCopyVersion}\n        data-cy='copy-collection-version-to-repository-dropdown'\n      >\n        {t`Copy version ${version} to repositories`}\n      </DropdownItem>\n    ),\n  ].filter(Boolean);\n\n  return (\n    <Wrapper any={dropdownItems.length}>\n      <StatefulDropdown data-cy={dataCy} items={dropdownItems} />\n    </Wrapper>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React, { useState } from 'react';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { LoadingPageSpinner } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      const { namespace, name, version } = collectionVersion;\n\n      CollectionAPI.getSignatures(repository, namespace, name, version)\n        .then((res) => {\n          setSignatures(res.data.signatures);\n          setIsLoading(false);\n        })\n        .catch(({ code, message }) => {\n          addAlert(code, message);\n          setIsLoading(false);\n          setShow(false);\n        });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const { user, settings } = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible-core&gt;=2.13.9\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {user.is_anonymous &&\n            !settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                {!IS_COMMUNITY ? (\n                  <div>\n                    <Trans>\n                      To download this collection, configure your client to\n                      connect to one of the{' '}\n                      <Link\n                        to={formatPath(Paths.collectionDistributionsByRepo, {\n                          repo: repository.name,\n                          namespace: collection_version.namespace,\n                          collection: collection_version.name,\n                        })}\n                      >\n                        distributions\n                      </Link>{' '}\n                      of this repository.\n                    </Trans>\n                  </div>\n                ) : null}\n                <a ref={downloadLinkRef} style={{ display: 'none' }} />\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Requires Ansible`}</SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out' />\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI, TagAPI } from 'src/api';\n\nconst loadRepos = (inputText) =>\n  AnsibleRepositoryAPI.list({\n    name__icontains: inputText,\n    pulp_label_select: '!hide_from_search',\n  }).then(({ data: { results } }) =>\n    results.map(({ name }) => ({\n      id: name,\n      title: name,\n    })),\n  );\n\n// insights-only\nconst defaultTags = [\n  'application',\n  'cloud',\n  'database',\n  'eda',\n  'infrastructure',\n  'linux',\n  'monitoring',\n  'networking',\n  'security',\n  'storage',\n  'tools',\n  'windows',\n].map((tag) => ({ id: tag, title: tag }));\n\nconst loadTags = (inputText) =>\n  !inputText && IS_INSIGHTS\n    ? Promise.resolve(defaultTags)\n    : TagAPI.listCollections({\n        name__icontains: inputText,\n        sort: '-count',\n      }).then(({ data: { data } }) =>\n        data.map(({ name, count }) => ({\n          id: name,\n          title: count === undefined ? name : t`${name} (${count})`,\n        })),\n      );\n\nexport const collectionFilter = ({\n  featureFlags: { display_signatures, display_repositories },\n  ignoredParams: i,\n}) => {\n  const displayNamespaces = !i.includes('namespace');\n  const displayRepos = display_repositories && !i.includes('repository_name');\n  const displayTags = !i.includes('tags');\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'typeahead' as const,\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  const sortOptions = [\n    { title: t`Name`, id: 'name', type: 'alpha' as const },\n    { title: t`Namespace`, id: 'namespace', type: 'alpha' as const },\n    { title: t`Last modified`, id: 'pulp_created', type: 'numeric' as const },\n    { title: t`Version`, id: 'version', type: 'numeric' as const },\n  ];\n\n  return {\n    filterConfig,\n    sortOptions,\n    typeaheads: {\n      repository_name: loadRepos,\n      tags: loadTags,\n    },\n  };\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\nimport './list.scss';\n\ninterface IProps {\n  collectionControls: (collection) => {\n    dropdownMenu?: React.ReactNode | null;\n    synclistSwitch?: React.ReactNode | null;\n    uploadButton?: React.ReactNode | null;\n  };\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  ignoredParams: string[];\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = ({\n  collectionControls,\n  collections,\n  displaySignatures,\n  ignoredParams,\n  itemCount,\n  params,\n  updateParams,\n}: IProps) => {\n  return (\n    <>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              key={i}\n              collection={c}\n              displaySignatures={displaySignatures}\n              showNamespace\n              {...collectionControls(c)}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        count={itemCount}\n        params={params}\n        updateParams={updateParams}\n      />\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem />\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { FileUpload } from 'src/components';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        filename={filename}\n        id='certificate-file'\n        onClearClick={() => setFilename('')}\n        onFileInputChange={handleFileInputChange}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Flex,\n  FlexItem,\n  Label,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  CollectionRatings,\n  DateComponent,\n  DeprecatedTag,\n  LabelGroup,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts, namespaceTitle } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  displaySignatures: boolean;\n  dropdownMenu?: React.ReactNode | null;\n  showNamespace?: boolean;\n  synclistSwitch?: React.ReactNode | null;\n  uploadButton?: React.ReactNode | null;\n}\n\nexport const CollectionListItem = ({\n  collection: {\n    collection_version,\n    namespace_metadata: namespace,\n    repository,\n    is_signed,\n    is_deprecated,\n  },\n  displaySignatures,\n  dropdownMenu,\n  showNamespace,\n  synclistSwitch,\n  uploadButton,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const cells = [];\n\n  const nsTitle = namespaceTitle(\n    namespace || { name: collection_version.namespace },\n  );\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${nsTitle} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {nsTitle}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      <Flex\n        direction={{ default: 'column' }}\n        alignItems={{ default: 'alignItemsFlexEnd' }}\n      >\n        <Flex\n          direction={{ default: 'column' }}\n          alignItems={{ default: 'alignItemsFlexStart' }}\n        >\n          {synclistSwitch && <FlexItem>{synclistSwitch}</FlexItem>}\n          {uploadButton || dropdownMenu ? (\n            <FlexItem>\n              {uploadButton}\n              {dropdownMenu || <span className='hidden-menu-space' />}\n            </FlexItem>\n          ) : null}\n          <FlexItem>\n            <div>\n              <Trans>\n                Updated <DateComponent date={collection_version.pulp_created} />\n              </Trans>\n            </div>\n            <div>v{collection_version.version}</div>\n            <CollectionRatings\n              isList\n              namespace={collection_version.namespace}\n              name={collection_version.name}\n            />\n          </FlexItem>\n        </Flex>\n        <Flex\n          direction={{ default: 'row' }}\n          alignSelf={{ default: 'alignSelfFlexStart' }}\n        >\n          {featureFlags.display_repositories ? (\n            <FlexItem>\n              <Label variant='outline'>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name}\n                </Link>\n              </Label>\n            </FlexItem>\n          ) : null}\n          {displaySignatures ? (\n            <FlexItem>\n              <SignatureBadge\n                variant='outline'\n                signState={is_signed ? 'signed' : 'unsigned'}\n              />\n            </FlexItem>\n          ) : null}\n        </Flex>\n      </Flex>\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm' />}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport { AlertType, MultiRepoModal } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { errorMessage, parsePulpIDFromURL, taskAlert } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n}\n\nexport const CopyCollectionToRepositoryModal = ({\n  addAlert: parentAddAlert,\n  closeAction,\n  collectionVersion,\n}: IProps) => {\n  const { settings } = useContext();\n  const { collection_version, repository } = collectionVersion;\n  const { namespace, name, version, pulp_href } = collection_version;\n\n  async function copyToRepositories({ addAlert, selectedRepos, setLoading }) {\n    setLoading(true);\n\n    const repo_id = parsePulpIDFromURL(repository.pulp_href);\n    const params = {\n      collection_versions: [pulp_href],\n      destination_repositories: selectedRepos.map((repo) => repo.pulp_href),\n    };\n\n    const signingServiceName = settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n    if (signingServiceName) {\n      let signingService = null;\n      try {\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n          page_size: 1,\n        });\n        signingService = signingList.data.results[0].pulp_href;\n      } catch {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to copy collection version.`,\n          variant: 'danger',\n          description: t`Signing service ${signingServiceName} not found`,\n        });\n        return;\n      }\n\n      params['signing_service'] = signingService;\n    }\n\n    return AnsibleRepositoryAPI.copyCollectionVersion(repo_id, params)\n      .then(({ data }) => {\n        selectedRepos.forEach(({ name: repo }) =>\n          parentAddAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repo}\".`,\n            ),\n          ),\n        );\n        closeAction();\n      })\n      .catch((e) =>\n        addAlert({\n          variant: 'danger',\n          title: t`Collection ${namespace}.${name} v${version} could not be copied.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <MultiRepoModal\n      closeAction={closeAction}\n      collectionVersion={collectionVersion}\n      submitAction={copyToRepositories}\n    />\n  );\n};\n","import * as moment from 'moment';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\n\nexport const DateComponent = ({ date }: { date: string }) =>\n  date && (\n    <time dateTime={date}>\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    </time>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n  deleteFromRepo: string;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n    deleteFromRepo,\n  } = props;\n\n  const lastCollectionVersion = collectionVersion && collections.length === 1;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <Trans>\n              Deleting{' '}\n              <b>\n                {deleteCollection.collection_version.name} v{collectionVersion}\n              </b>\n              , its data will be lost.\n            </Trans>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b>, its\n              data will be lost.\n            </Trans>\n          )}\n          {lastCollectionVersion ? (\n            <> {t`This will cause the entire collection to be deleted.`}</>\n          ) : null}\n          {deleteFromRepo ? (\n            <>\n              {' '}\n              {t`The collection will be deleted only from repository ${deleteFromRepo}.`}\n            </>\n          ) : null}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      {icon ? <EmptyStateIcon icon={icon} /> : null}\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import React, { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateXs = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      variant='xs'\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport {\n  BaseHeader,\n  Breadcrumbs,\n  SignatureBadge,\n  Tabs,\n  Tooltip,\n} from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React, { useEffect, useState } from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  ExternalLink,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlert,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  inputText: '',\n};\n\nexport const PublishToControllerModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState(initialState.alerts);\n  const [controllers, setControllers] = useState(initialState.controllers);\n  const [controllerCount, setControllerCount] = useState(\n    initialState.controllerCount,\n  );\n  const [controllerParams, setControllerParams] = useState(\n    initialState.controllerParams,\n  );\n  const [digest, setDigest] = useState(initialState.digest);\n  const [digestByTag, setDigestByTag] = useState(initialState.digestByTag);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [tag, setTag] = useState(initialState.tag);\n  const [tagResults, setTagResults] = useState(initialState.tagResults);\n  const [tagSelection, setTagSelection] = useState(initialState.tagSelection);\n\n  const [inputText, setInputText] = useState(initialState.inputText);\n\n  useEffect(() => {\n    const { image, isOpen } = props;\n    if (isOpen) {\n      // load on open\n      fetchData(image);\n    } else {\n      // reset on close\n      setAlerts(initialState.alerts);\n      setControllers(initialState.controllers);\n      setControllerCount(initialState.controllerCount);\n      setControllerParams(initialState.controllerParams);\n      setDigest(initialState.digest);\n      setDigestByTag(initialState.digestByTag);\n      setLoading(initialState.loading);\n      setTag(initialState.tag);\n      setTagResults(initialState.tagResults);\n      setTagSelection(initialState.tagSelection);\n\n      setInputText(initialState.inputText);\n    }\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    fetchControllers();\n  }, [controllerParams]);\n\n  function fetchControllers() {\n    return ControllerAPI.list(controllerParams)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        setControllers(controllers);\n        setControllerCount(controllerCount);\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Controllers list could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        setDigestByTag(digestByTag);\n        setTagResults(tagResults);\n\n        return { digestByTag, tags };\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Tags could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchData(image) {\n    const controllers = fetchControllers();\n    const tagsPromises = fetchTags(image).then(({ tags, digestByTag }) => {\n      // tags and digestByTag must be passed this way from fetchTags, otherwise, closure\n      // will see old value of both variables set in fetchTags\n      // and additionaly, tags state is not needed at all because of that\n\n      // preselect tag if present\n      let { digest, tag } = props;\n      tag ||= tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= digestByTag[tag]; // set digest by tag unless in props\n\n      setDigest(digest);\n      setTag(tag);\n      setTagSelection(tag ? [{ id: tag, name: tag }] : []);\n    });\n\n    Promise.all([controllers, tagsPromises]).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function renderControllers() {\n    const { image, isOpen } = props;\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <ExternalLink href={href}>{host}</ExternalLink>\n              <ClipboardCopyButton\n                variant={'plain'}\n                id={href}\n                textId={t`Copy to clipboard`}\n                onClick={() => navigator.clipboard.writeText(href)}\n              >\n                {t`Copy to clipboard`}\n              </ClipboardCopyButton>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  const { image, isOpen, onClose } = props;\n\n  // redirects to ./2.x (latest)\n  const docsLink = UI_DOCS_URL;\n  const noData =\n    controllers?.length === 0 &&\n    !filterIsSet(controllerParams, ['host__icontains']);\n\n  const notListedMessage = (\n    <>\n      {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n      {docsLink && <ExternalLink href={docsLink}>{t`Learn more`}</ExternalLink>}\n    </>\n  );\n\n  const Spacer = () => <div style={{ paddingTop: '24px' }} />;\n\n  return (\n    <Modal\n      variant='large'\n      title={t`Use in Controller`}\n      isOpen={isOpen}\n      onClose={onClose}\n      actions={[\n        <Button key='close' variant='primary' onClick={onClose}>\n          {t`Close`}\n        </Button>,\n      ]}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading && (\n        <div style={{ padding: '16px' }}>\n          <LoadingPageSpinner />\n        </div>\n      )}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          title={t`No Controllers available`}\n          description={notListedMessage}\n        />\n      ) : null}\n\n      {isOpen && !loading && !noData && controllers && (\n        <>\n          <DescriptionList isHorizontal>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Execution Environment`}</DescriptionListTerm>\n              <DescriptionListDescription>{image}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <Flex>\n                  <FlexItem>\n                    <APISearchTypeAhead\n                      loadResults={(name) => fetchTags(image, name)}\n                      onClear={() => {\n                        setTag(null);\n                        setTagSelection([]);\n                      }}\n                      onSelect={(event, value) => {\n                        const digest = digestByTag[value.toString()];\n                        setTag(digest && value.toString());\n                        setTagSelection([{ id: value, name: value }]);\n                        setDigest(digest);\n                      }}\n                      placeholderText={t`Select a tag`}\n                      results={tagResults}\n                      selections={tagSelection}\n                      toggleIcon={<TagIcon />}\n                    />\n                  </FlexItem>\n                  <FlexItem />\n                </Flex>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {digest && (\n              <>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    <ShaLabel grey long digest={digest} />\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              </>\n            )}\n          </DescriptionList>\n          <Spacer />\n          <Trans>\n            Click on the Controller URL that you want to use the above execution\n            environment in, and it will launch that Controller&apos;s console.\n            Log in (if necessary) and follow the steps to complete the\n            configuration.\n          </Trans>\n          <Spacer />\n\n          <Flex>\n            <FlexItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => setInputText(text)}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                params={controllerParams}\n                filterConfig={[\n                  {\n                    id: 'host__icontains',\n                    title: t`Controller name`,\n                  },\n                ]}\n              />\n            </FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n            <FlexItem>\n              <Pagination\n                params={controllerParams}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                count={controllerCount}\n                isTop\n              />\n            </FlexItem>\n          </Flex>\n\n          <AppliedFilters\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            params={controllerParams}\n            ignoredParams={['page_size', 'page']}\n            niceNames={{\n              host__icontains: t`Controller name`,\n            }}\n          />\n\n          <Spacer />\n          {renderControllers()}\n          <Spacer />\n\n          <Pagination\n            params={controllerParams}\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            count={controllerCount}\n            isTop\n          />\n          <Spacer />\n          <div>{notListedMessage}</div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  LabelGroup,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup id='remove-tag' defaultIsOpen={true}>\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and zero or one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => tag && current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType, LabelGroup } from 'src/components';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm' />}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm' />}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >{t`Yes`}</AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >{t`No`}</AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup id='remove-tag' defaultIsOpen={true}>\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React, { ReactNode, useEffect } from 'react';\nimport { useContext } from 'src/loaders/app-context';\nimport './header.scss';\n\ninterface IProps {\n  breadcrumbs?: ReactNode;\n  children?: ReactNode;\n  className?: string;\n  contextSelector?: ReactNode;\n  logo?: ReactNode;\n  pageControls?: ReactNode;\n  status?: ReactNode;\n  subTitle?: ReactNode;\n  title: string;\n  versionControl?: ReactNode;\n}\n\nexport const BaseHeader = ({\n  title,\n  logo,\n  pageControls,\n  children,\n  breadcrumbs,\n  className,\n  contextSelector,\n  versionControl,\n  status,\n  subTitle,\n}: IProps) => {\n  const { updateTitle } = useContext();\n  useEffect(() => {\n    updateTitle(title);\n  }, [title]);\n\n  return (\n    <div className={cx('background', className)}>\n      {contextSelector || null}\n      {breadcrumbs && <div className='breadcrumb-container'>{breadcrumbs}</div>}\n      {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n      <div className='column-section'>\n        <div className='title-box'>\n          {logo}\n          <div>\n            <Title headingLevel='h1' size='2xl'>\n              {title}\n              {status}\n            </Title>\n            {subTitle}\n          </div>\n        </div>\n        {pageControls || null}\n      </div>\n      {versionControl || null}\n\n      {children ? (\n        <div className='hub-header-bottom'>{children}</div>\n      ) : (\n        <div className='placeholder' />\n      )}\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  CollectionDropdown,\n  CollectionRatings,\n  CopyCollectionToRepositoryModal,\n  DeleteCollectionModal,\n  DownloadCount,\n  ExternalLink,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  namespaceTitle,\n  parsePulpIDFromURL,\n  repositoryRemoveCollection,\n  waitForTask,\n} from 'src/utilities';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  activeTab: string;\n  actuallyCollection: CollectionDetailType;\n  breadcrumbs: BreadcrumbType[];\n  className?: string;\n  collection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  collectionsCount: number;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  reload: () => void;\n  repo?: string;\n  updateParams: (params) => void;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  copyCollectionToRepositoryModal: CollectionVersionSearch;\n  deleteAll: boolean;\n  deleteCollection: CollectionVersionSearch;\n  deletionBlocked: boolean;\n  isDeletionPending: boolean;\n  isOpenSignAllModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenVersionsSelect: boolean;\n  modalCollections: CollectionVersionSearch[];\n  modalPagination: {\n    page: number;\n    page_size: number;\n  };\n  namespace: NamespaceType;\n  redirect: string;\n  showImportModal: boolean;\n  updateCollection: CollectionVersionSearch;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      alerts: [],\n      collectionVersion: null,\n      confirmDelete: false,\n      copyCollectionToRepositoryModal: null,\n      deleteAll: false,\n      deleteCollection: null,\n      deletionBlocked: true,\n      isDeletionPending: false,\n      isOpenSignAllModal: false,\n      isOpenSignModal: false,\n      isOpenVersionsModal: false,\n      isOpenVersionsSelect: false,\n      modalCollections: null,\n      modalPagination: {\n        page: 1,\n        page_size: Constants.DEFAULT_PAGINATION_OPTIONS[0],\n      },\n      namespace: null,\n      redirect: null,\n      showImportModal: false,\n      updateCollection: null,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.countUsedbyDependencies(collection)\n      .then((count) => this.setState({ deletionBlocked: !!count }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n\n    this.setState({ modalCollections: this.props.collections });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collections !== prevProps.collections) {\n      this.setState({ modalCollections: this.props.collections });\n    }\n  }\n\n  render() {\n    const {\n      activeTab,\n      actuallyCollection,\n      breadcrumbs,\n      className,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n      updateParams,\n    } = this.props;\n\n    const {\n      alerts,\n      collectionVersion,\n      confirmDelete,\n      copyCollectionToRepositoryModal,\n      deleteAll,\n      deleteCollection,\n      deletionBlocked,\n      isDeletionPending,\n      isOpenSignAllModal,\n      isOpenSignModal,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      modalCollections,\n      modalPagination,\n      namespace,\n      redirect,\n      showImportModal,\n      updateCollection,\n      uploadCertificateModalOpen,\n    } = this.state;\n\n    const {\n      featureFlags: { can_upload_signatures, display_signatures },\n    } = this.context;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const { collection_version, is_signed, namespace_metadata } = collection;\n\n    const {\n      name: collectionName,\n      pulp_created: lastUpdated,\n      version,\n    } = collection_version;\n\n    const latestVersion = collections[0].collection_version.version;\n\n    const versionBadge = ({ pulp_created, version }) =>\n      [\n        <Trans key={pulp_created}>\n          updated <DateComponent date={pulp_created} />\n        </Trans>,\n        display_signatures ? (is_signed ? t`(signed)` : t`(unsigned)`) : '',\n        version === latestVersion ? t`(latest)` : '',\n      ]\n        .filter(Boolean)\n        .map((b, i) => (i ? <> {b}</> : b)); // join with spaces\n\n    const nsTitle = namespaceTitle(\n      namespace_metadata || { name: collection_version.namespace },\n    );\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    const deleteFromRepo = deleteAll ? null : collection.repository.name;\n\n    const deleteFn = (deleteAll) => ({\n      openModal: () => this.openDeleteModalWithConfirm(null, deleteAll),\n      skipCheck: true, // already handled by deletionBlocked\n    });\n\n    return (\n      <>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={modalPagination}\n                updateParams={this.updatePaginationParams}\n                count={collectionsCount}\n              />\n            </div>\n            {modalCollections ? (\n              modalCollections.map(({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {versionBadge(collection_version)}\n                </ListItem>\n              ))\n            ) : (\n              <Spinner />\n            )}\n          </List>\n          <Pagination\n            params={modalPagination}\n            updateParams={this.updatePaginationParams}\n            count={collectionsCount}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                    deleteFromRepo,\n                  });\n            })\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {copyCollectionToRepositoryModal && (\n          <CopyCollectionToRepositoryModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() =>\n              this.setState({ copyCollectionToRepositoryModal: null })\n            }\n            collectionVersion={collection}\n          />\n        )}\n        <BaseHeader\n          className={className}\n          title={`${collection_version.namespace}.${collection_version.name}`}\n          logo={\n            namespace_metadata?.avatar_url && (\n              <Logo\n                alt={t`${nsTitle} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace_metadata.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector selectedRepo={collection.repository.name} />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='column-section'>\n              <div className='install-version-column'>\n                <span>{t`Version`}</span>\n                <div className='install-version-dropdown'>\n                  <Select\n                    isOpen={isOpenVersionsSelect}\n                    onToggle={(isOpenVersionsSelect) =>\n                      this.setState({ isOpenVersionsSelect })\n                    }\n                    variant={SelectVariant.single}\n                    onSelect={() =>\n                      this.setState({ isOpenVersionsSelect: false })\n                    }\n                    selections={`v${version}`}\n                    aria-label={t`Select collection version`}\n                    loadingVariant={\n                      collections.length < collectionsCount\n                        ? {\n                            text: t`View more`,\n                            onClick: () =>\n                              this.setState({\n                                isOpenVersionsModal: true,\n                                isOpenVersionsSelect: false,\n                              }),\n                          }\n                        : null\n                    }\n                  >\n                    {collections\n                      .map((c) => c.collection_version)\n                      .map((v) => (\n                        <SelectOption\n                          key={v.version}\n                          value={`v${v.version}`}\n                          onClick={() =>\n                            updateParams(\n                              ParamHelper.setParam(\n                                params,\n                                'version',\n                                v.version.toString(),\n                              ),\n                            )\n                          }\n                        >\n                          {v.version} {versionBadge(v)}\n                        </SelectOption>\n                      ))}\n                  </Select>\n                </div>\n                {lastUpdated ? (\n                  <span className='last-updated'>\n                    <Trans>\n                      Last updated <DateComponent date={lastUpdated} />\n                    </Trans>\n                  </span>\n                ) : null}\n                {display_signatures ? (\n                  <SignatureBadge\n                    isCompact\n                    signState={is_signed ? 'signed' : 'unsigned'}\n                  />\n                ) : null}\n              </div>\n              <div style={{ alignSelf: 'center' }}>\n                <CollectionRatings\n                  namespace={collection_version.namespace}\n                  name={collection_version.name}\n                />\n                <DownloadCount item={actuallyCollection} />\n              </div>\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {IS_INSIGHTS ? (\n                <FlexItem>\n                  <ExternalLink href={issueUrl}>{t`Create issue`}</ExternalLink>\n                </FlexItem>\n              ) : null}\n              <CollectionDropdown\n                collection={collection}\n                data-cy='kebab-toggle'\n                deletionBlocked={deletionBlocked}\n                namespace={namespace}\n                onCopyVersion={() => this.copyToRepository(collection)}\n                onDelete={deleteFn(true)}\n                onDeleteVersion={() =>\n                  this.openDeleteModalWithConfirm(version, true)\n                }\n                onDeprecate={() => this.deprecate(collection)}\n                onRemove={deleteFn(false)}\n                onRemoveVersion={() =>\n                  this.openDeleteModalWithConfirm(version, false)\n                }\n                onSign={() => this.setState({ isOpenSignAllModal: true })}\n                onSignVersion={() => {\n                  if (can_upload_signatures) {\n                    this.setState({\n                      uploadCertificateModalOpen: true,\n                      versionToUploadCertificate: collection,\n                    });\n                  } else {\n                    this.setState({ isOpenSignModal: true });\n                  }\n                }}\n                onUploadVersion={() => this.checkUploadPrivilleges(collection)}\n                version={version}\n                wrapper={({ any, children }) =>\n                  any ? <FlexItem>{children}</FlexItem> : null\n                }\n              />\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <ExternalLink href={url}>{link.name}</ExternalLink>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      !IS_COMMUNITY\n        ? {\n            active: active === 'distributions',\n            title: t`Distributions`,\n            link: formatPath(\n              Paths.collectionDistributionsByRepo,\n              pathParams,\n              reduced,\n            ),\n          }\n        : null,\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    const modalPagination = {\n      page,\n      page_size,\n    };\n\n    this.setState({ modalPagination, modalCollections: null });\n\n    const { namespace, name } = this.props.collection.collection_version;\n    const repository = this.props.collection.repository;\n    const requestParams = {\n      ...(repository ? { repository_name: repository.name } : {}),\n      namespace,\n      name,\n    };\n\n    // loadCollections provides initial data, pagination needs extra requests\n    CollectionVersionAPI.list({\n      ...requestParams,\n      order_by: '-version',\n      ...modalPagination,\n    })\n      .then(({ data }) => data)\n      .catch(() => ({ data: [] }))\n      .then(({ data: modalCollections }) =>\n        this.setState({ modalCollections }),\n      );\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    const { deleteAll } = this.state;\n\n    let promise = null;\n\n    if (deleteAll) {\n      promise = CollectionAPI.deleteCollectionVersion(deleteCollection);\n    } else {\n      promise = repositoryRemoveCollection(\n        deleteCollection.repository.name,\n        deleteCollection.collection_version.pulp_href,\n      );\n    }\n\n    const name = deleteCollection.collection_version.name;\n\n    promise\n      .then((res) => {\n        if (!deleteAll) {\n          return;\n        }\n\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId);\n      })\n      .then(() => {\n        const topVersion = (collections || []).filter(\n          ({ collection_version }) =>\n            collection_version.version !== collectionVersion,\n        );\n\n        if (topVersion.length) {\n          this.props.updateParams(\n            ParamHelper.setParam(\n              this.props.params,\n              'version',\n              topVersion[0].collection_version.version,\n            ),\n          );\n\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ],\n          });\n        } else {\n          // last version in collection => collection will be deleted => redirect\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name} v{collectionVersion}&quot; has been\n                successfully deleted.\n              </Trans>\n            ),\n          });\n          this.setState({\n            redirect: formatPath(Paths.namespaceDetail, {\n              namespace: deleteCollection.collection_version.namespace,\n            }),\n          });\n        }\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null, deleteAll = true) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n      deleteAll,\n    });\n  }\n\n  private copyToRepository(collection: CollectionVersionSearch) {\n    this.setState({ copyCollectionToRepositoryModal: collection });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  ExternalLink,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport { namespaceTitle } from 'src/utilities';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const title = namespaceTitle(namespace);\n\n    return (\n      <BaseHeader\n        title={title}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${title} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        className='hub-header-bordered'\n      >\n        {namespace.description ? (\n          <div>\n            {namespace.description.startsWith('http') &&\n            !namespace.description.match(/\\s/) ? (\n              <ExternalLink href={namespace.description}>\n                {namespace.description}\n              </ExternalLink>\n            ) : (\n              namespace.description\n            )}\n          </div>\n        ) : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <ExternalLink href={x.url}>{x.name}</ExternalLink>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n  hasAutoWidth?: boolean;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n        hasAutoWidth={this.props.hasAutoWidth}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Label,\n  Modal,\n  Radio,\n} from '@patternfly/react-core';\nimport FolderOpenIcon from '@patternfly/react-icons/dist/esm/icons/folder-open-icon';\nimport SpinnerIcon from '@patternfly/react-icons/dist/esm/icons/spinner-icon';\nimport axios from 'axios';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  LabelGroup,\n  MultipleRepoSelector,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { repositoryBasePath } from 'src/utilities';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  errorVariant: 'default' | 'skippable' | 'skipped';\n  uploadProgress: number;\n  uploadStatus: Status;\n  loading: boolean;\n  alerts: AlertType[];\n  selectedRepos: AnsibleRepositoryType[]; // 0 or 1 repos\n  onlyStaging: boolean;\n  hideSelector: boolean;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      errorVariant: 'default' as const,\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n      loading: true,\n      alerts: [],\n      selectedRepos: [],\n      onlyStaging: true,\n      hideSelector: false,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAllRepos();\n  }\n\n  private loadAllRepos() {\n    const { onlyStaging } = this.state;\n\n    const stagingByName = onlyStaging\n      ? AnsibleRepositoryAPI.list({\n          name: 'staging',\n          page_size: 1,\n          pulp_label_select: 'pipeline=staging',\n        })\n          .then(({ data: { results } }) => results[0])\n          .catch(() => null)\n      : null;\n\n    const byPipeline = AnsibleRepositoryAPI.list({\n      pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n      page_size: 1,\n    });\n\n    return Promise.all([byPipeline, stagingByName])\n      .then(\n        ([\n          {\n            data: { count, results },\n          },\n          staging,\n        ]) => {\n          // only staging: preselect \"staging\", or first repo if not found\n          // all repos: preselect first repo only if there are no other choices\n          const selectedRepos = onlyStaging\n            ? [staging || results[0]].filter(Boolean)\n            : count === 1\n              ? [results[0]]\n              : [];\n\n          this.setState({\n            selectedRepos,\n            hideSelector: selectedRepos.length && count < 2,\n          });\n        },\n      )\n      .catch((error) =>\n        this.addAlert(t`Error loading repositories.`, 'danger', error?.message),\n      )\n      .finally(() => this.setState({ loading: false }));\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n\n  private addAlertObj(alert) {\n    this.addAlert(alert.title, alert.variant, alert.description);\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    const { collection, namespace, isOpen } = this.props;\n    const {\n      errorVariant,\n      errors,\n      file,\n      hideSelector,\n      onlyStaging,\n      selectedRepos,\n      uploadProgress,\n      uploadStatus,\n    } = this.state;\n    const { featureFlags } = this.context;\n\n    const skipError = () => {\n      if (errorVariant === 'skippable') {\n        this.setState({ errorVariant: 'skipped' as const });\n      }\n    };\n\n    return (\n      <Modal\n        variant={'large'}\n        title={\n          collection\n            ? t`New version of ${namespace}.${collection.name}`\n            : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload() || !this.state.selectedRepos.length}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className={cx('file-error-messages', errorVariant)}>\n              {errors}\n              {errorVariant === 'skippable' && (\n                <>\n                  {' '}\n                  <a onClick={skipError}>{t`Upload anyway?`}</a>\n                </>\n              )}\n            </span>\n          ) : null}\n        </div>\n\n        <div style={{ lineHeight: '1em' }}>&nbsp;</div>\n\n        {featureFlags.display_repositories ? (\n          <>\n            <Radio\n              id='radio-staging'\n              isChecked={onlyStaging}\n              label={t`Staging Repos`}\n              name='radio-staging'\n              onChange={() =>\n                this.setState({ onlyStaging: true }, () => this.loadAllRepos())\n              }\n            />\n            <Radio\n              id='radio-all'\n              isChecked={!onlyStaging}\n              label={t`All Repos`}\n              name='radio-all'\n              onChange={() =>\n                this.setState({ onlyStaging: false }, () => this.loadAllRepos())\n              }\n            />\n          </>\n        ) : null}\n\n        {!onlyStaging && (\n          <>{t`Please note that these repositories are not filtered by permissions. Upload may fail without the right permissions.`}</>\n        )}\n\n        {hideSelector ? (\n          <Flex>\n            <FlexItem>\n              <b>{t`Repository`}</b>\n            </FlexItem>\n            <FlexItem>\n              <LabelGroup>\n                <Label>{selectedRepos[0].name}</Label>\n              </LabelGroup>\n            </FlexItem>\n          </Flex>\n        ) : (\n          <MultipleRepoSelector\n            addAlert={(a) => this.addAlertObj(a)}\n            params={{\n              pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n            }}\n            singleSelectionOnly={true}\n            selectedRepos={selectedRepos}\n            setSelectedRepos={(selectedRepos) =>\n              this.setState({\n                selectedRepos,\n                errors: '',\n                errorVariant: 'default' as const,\n              })\n            }\n          />\n        )}\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors && this.state.errorVariant !== 'skipped') {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin' />;\n      default:\n        return <FolderOpenIcon />;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n        errorVariant: 'default' as const,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      const detectedType = newCollection.type || t`unknown`;\n      const acceptedTypes: string = this.acceptedFileTypes.join(', ');\n      this.setState({\n        errors: t`Invalid file format: ${detectedType} (expected: ${acceptedTypes}).`,\n        errorVariant: 'skippable' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  async saveFile() {\n    const [repo] = this.state.selectedRepos;\n\n    this.setState({ uploadStatus: Status.uploading });\n\n    const distro_base_path = await repositoryBasePath(\n      repo.name,\n      repo.pulp_href,\n    ).catch((error) => {\n      this.addAlert(error, 'danger');\n    });\n\n    if (!distro_base_path) {\n      this.setState({ uploadStatus: Status.waiting });\n      return;\n    }\n\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n      distro_base_path,\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n          errorVariant: 'default' as const,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        errorVariant: 'default' as const,\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n  'data-cy'?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n  'data-cy': dataCy,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n      data-cy={dataCy}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../shared/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\n\nexport function ListItemActions(props: IProps) {\n  const buttons = props.buttons?.filter(Boolean);\n  const kebabItems = props.kebabItems?.filter(Boolean);\n  const anyButtons = buttons?.length;\n  const anyKebab = kebabItems?.length;\n\n  return (\n    <td\n      style={{\n        paddingRight: anyKebab ? '0px' : '16px',\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n      }}\n    >\n      {anyButtons ? (\n        <>\n          <List>{buttons}</List>{' '}\n        </>\n      ) : null}\n      {anyKebab ? (\n        <div data-cy='kebab-toggle'>\n          <StatefulDropdown items={kebabItems} />{' '}\n        </div>\n      ) : null}\n    </td>\n  );\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton />\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useRef } from 'react';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  LegacyRoleImportDetailType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator, Tooltip } from 'src/components';\nimport './my-imports.scss';\n\ninterface IProps {\n  apiError?: string;\n  collection?: CollectionVersionSearch;\n  empty?: boolean;\n  followMessages?: boolean;\n  loading?: boolean;\n  roleImport?: LegacyRoleImportDetailType;\n  selectedImport?: ImportListType;\n  setFollowMessages?: (follow: boolean) => void;\n  task?: ImportDetailType;\n}\n\nfunction legacyStatusToPulpStatus(v1status: string): PulpStatus {\n  return (\n    {\n      SUCCESS: PulpStatus.completed,\n    }[v1status] || PulpStatus[v1status.toLowerCase() as PulpStatus]\n  );\n}\n\nexport function ImportConsole({\n  apiError,\n  collection,\n  empty,\n  followMessages,\n  loading,\n  roleImport,\n  selectedImport,\n  setFollowMessages,\n  task,\n}: IProps) {\n  const lastImport = useRef<HTMLDivElement>(null);\n\n  const state =\n    selectedImport?.state ||\n    task?.state ||\n    (roleImport?.state && legacyStatusToPulpStatus(roleImport.state)) ||\n    null;\n\n  const inProgress = [PulpStatus.running, PulpStatus.waiting].includes(state);\n\n  const scrollToBottom = () =>\n    window.requestAnimationFrame(() =>\n      lastImport.current?.scrollIntoView({ behavior: 'smooth' }),\n    );\n\n  // causes scrollToBottom via useEffect on followLogs change\n  const startToFollow = () => setFollowMessages?.(!followMessages);\n\n  useEffect(() => {\n    if (!followMessages) {\n      return;\n    }\n\n    if (!inProgress) {\n      setFollowMessages?.(false);\n    }\n\n    scrollToBottom();\n  }, [followMessages, inProgress]);\n\n  const collectionPipeline = collection?.repository?.pulp_labels?.pipeline;\n  const error = task?.error || roleImport?.error;\n\n  const title =\n    empty || (!selectedImport && !roleImport) ? null : (\n      <div>\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={state} />\n          </div>\n          {selectedImport ? (\n            <>\n              <div>\n                <span className='data-title'>{t`Approval status:`}</span>{' '}\n                {!collection\n                  ? t`waiting for import to finish`\n                  : {\n                      rejected: t`rejected`,\n                      staging: t`waiting for approval`,\n                      approved: t`approved`,\n                    }[collectionPipeline] || t`could not be determined yet`}\n              </div>\n              <div>\n                <span className='data-title'>{t`Version:`}</span>{' '}\n                {selectedImport.version}\n              </div>\n            </>\n          ) : null}\n\n          {error?.code || error?.description || error?.traceback ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {error.code}\n              <pre>\n                <code>{error.description}</code>\n              </pre>\n              <pre>\n                <code>{error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n\n  if (loading || apiError) {\n    return (\n      <div className='hub-import-console'>\n        {title}\n        <div className='hub-import-loading message-list'>\n          {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n        </div>\n      </div>\n    );\n  }\n\n  const renderMessage = ({ level, message }, i) => (\n    <div className='message' key={i}>\n      <span className={level.toLowerCase()}>{message}&nbsp;</span>\n    </div>\n  );\n\n  const messages = task\n    ? task.messages\n    : roleImport\n      ? roleImport.summary_fields.task_messages.map(\n          ({ message_type: level, message_text: message }) => ({\n            level,\n            message,\n          }),\n        )\n      : [];\n\n  return (\n    <div className='hub-import-console' data-cy={'ImportConsole'}>\n      {title}\n      <div className='message-list'>\n        <div\n          className='log-follow-button'\n          style={followMessages ? { color: '#5bb75b' } : {}}\n        >\n          <Tooltip\n            position='left'\n            content={inProgress ? t`Follow logs` : t`Scroll to end`}\n          >\n            <span\n              onClick={inProgress ? startToFollow : scrollToBottom}\n              className='fa fa-arrow-circle-down clickable'\n            />\n          </Tooltip>\n        </div>\n\n        {messages.map(renderMessage)}\n\n        {messages.length === 0 ? (\n          <div className='message'>\n            <span className='error'>{t`No task messages available`}</span>\n          </div>\n        ) : null}\n\n        {state === PulpStatus.completed && (\n          <div className='message'>\n            <br />\n            <span className='success'>{t`Done`}</span>\n          </div>\n        )}\n\n        {state === PulpStatus.failed && (\n          <div className='message'>\n            <br />\n            <span className='failed'>{t`Failed`}</span>\n          </div>\n        )}\n      </div>\n\n      <div\n        ref={lastImport}\n        style={\n          // Give the last element some extra height so that it doesn't cut off messages when scroling down to it.\n          followMessages\n            ? {\n                height: '100px',\n                width: '5px',\n                position: 'relative',\n                top: '-150px',\n              }\n            : null\n        }\n      />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  DateComponent,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            count={numberOfResults}\n            isCompact\n            params={params}\n            updateParams={updateParams}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport TrashIcon from '@patternfly/react-icons/dist/esm/icons/trash-icon';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard namespace={namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  })[type] || type;\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n  selectedFilter: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ninterface ParamsType {\n  page?: number;\n  page_size?: number;\n}\n\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\n\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState }: { addAlert; setState? },\n  listItemActions?,\n) => React.ReactNode;\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ntype SortHeaders = {\n  title: MessageDescriptor;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\nexport type LocalizedSortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  filterConfig: ({ state }) => FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: MessageDescriptor;\n  noDataTitle: MessageDescriptor;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: MessageDescriptor;\n  typeaheadQuery?: ({ inputText, selectedFilter, setState }) => void;\n}\n\nexport const ListPage = function <T>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n  // for typeahed filters\n  typeaheadQuery,\n}: ListPageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const translateTitle = ({ title, ...rest }: any) => ({\n    ...rest,\n    title: i18n._(title),\n  });\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        selectedFilter: null,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const localizedFilterConfig = filterConfig({ state: this.state }) || [];\n      const knownFilters = localizedFilterConfig.map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        localizedFilterConfig.map(({ id, title }) => [id, title]),\n      );\n\n      const niceValues = {};\n      localizedFilterConfig\n        .filter(({ options }) => options?.length)\n        .forEach(({ id: filterId, options }) => {\n          const obj = (niceValues[filterId] = {});\n          options.forEach(({ id: optionId, title }) => {\n            obj[optionId] = title;\n          });\n        });\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.query(),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const resetCompoundFilter = () =>\n        this.setState({\n          inputText: '',\n          selectedFilter: localizedFilterConfig[0].id,\n        });\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader title={i18n._(title)} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={i18n._(noDataDescription)}\n              title={i18n._(noDataTitle)}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) => {\n                                this.setState({ inputText });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText,\n                                    selectedFilter: this.state.selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                              updateParams={(p) => {\n                                resetCompoundFilter();\n                                updateParams(p);\n                              }}\n                              params={params}\n                              filterConfig={localizedFilterConfig}\n                              selectFilter={(selectedFilter) => {\n                                this.setState({ selectedFilter });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText: '',\n                                    selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        resetCompoundFilter();\n                        updateParams(p);\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                      niceValues={niceValues}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      const localizedSortHeaders = (sortHeaders || []).map(\n        translateTitle,\n      ) as LocalizedSortHeaders;\n\n      return (\n        <table\n          aria-label={i18n._(title)}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{ headers: localizedSortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageParams<T> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      // condition check after query, for object permissions\n      this.query().then((item) => {\n        const actionContext = {\n          ...this.context,\n          hasObjectPermission: (permission) =>\n            item?.my_permissions?.includes?.(permission),\n        };\n        if (!condition(actionContext)) {\n          this.setState({ loading: false, unauthorised: true });\n        }\n\n        this.setState({ alerts: this.context.alerts || [] });\n        this.context.setAlerts([]);\n      });\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return Promise.resolve(null);\n      }\n\n      return new Promise((resolve, reject) => {\n        this.setState({ loading: true }, () => {\n          query({ name })\n            .then((item) => {\n              this.setState({\n                item,\n                loading: false,\n              });\n              resolve(item);\n            })\n            .catch((e) => {\n              const { status, statusText } = e.response;\n              this.setState({\n                loading: false,\n                item: null,\n              });\n              this.addAlert({\n                title: i18n._(errorTitle),\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n              reject();\n            });\n        });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageWithTabsParams<T> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: MessageDescriptor }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const localizedTabs = tabs.map(({ name, ...rest }) => ({\n        ...rest,\n        name: i18n._(name),\n      }));\n      const tab = localizedTabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={localizedTabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | boolean;\n}\n\n// wraps ClipboardCopy for localization\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\n// wraps FileUpload for localization\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Upload`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag and drop a file or upload one`}\n    {...props}\n  />\n);\n","import {\n  Button,\n  GenerateId,\n  Label,\n  Tooltip,\n  TooltipPosition,\n  fillTemplate,\n} from '@patternfly/react-core';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { css } from '@patternfly/react-styles';\nimport labelStyles from '@patternfly/react-styles/css/components/Label/label';\nimport styles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\nexport interface LabelGroupProps extends React.HTMLProps<HTMLUListElement> {\n  /** Content rendered inside the label group. Should be <Label> elements. */\n  children?: React.ReactNode;\n  /** Additional classes added to the label item */\n  className?: string;\n  /** Flag for having the label group default to expanded */\n  defaultIsOpen?: boolean;\n  /** Category name text for the label group category.  If this prop is supplied the label group with have a label and category styling applied */\n  categoryName?: string;\n  /** Aria label for label group that does not have a category name */\n  'aria-label'?: string;\n  /** Set number of labels to show before overflow */\n  numLabels?: number;\n  /** Flag if label group can be closed */\n  isClosable?: boolean;\n  /** Flag indicating the labels in the group are compact */\n  isCompact?: boolean;\n  /** Aria label for close button */\n  closeBtnAriaLabel?: string;\n  /** Function that is called when clicking on the label group close button */\n  onClick?: (event: React.MouseEvent) => void;\n  /** Position of the tooltip which is displayed if the category name text is longer */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Flag to implement a vertical layout */\n  isVertical?: boolean;\n  /** Flag indicating contained labels are editable. Allows spacing for a text input after the labels. */\n  isEditable?: boolean;\n  /** Flag indicating the editable label group should be appended with a textarea. */\n  hasEditableTextArea?: boolean;\n  /** Additional props passed to the editable textarea. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  editableTextAreaProps?: any;\n  /** Control for adding new labels */\n  addLabelControl?: React.ReactNode;\n}\n\ninterface LabelGroupState {\n  isOpen: boolean;\n  isTooltipVisible: boolean;\n}\n\n// replaces LabelGroup for localization (chipGroupProps) and to fix button without type when rendering \"show more\" in forms\nexport class LabelGroup extends React.Component<\n  LabelGroupProps,\n  LabelGroupState\n> {\n  static displayName = 'LabelGroup';\n  constructor(props: LabelGroupProps) {\n    super(props);\n    this.state = {\n      isOpen: this.props.defaultIsOpen,\n      isTooltipVisible: false,\n    };\n  }\n  private headingRef = React.createRef<HTMLSpanElement>();\n\n  static defaultProps: LabelGroupProps = {\n    categoryName: '',\n    defaultIsOpen: false,\n    numLabels: 3,\n    isClosable: false,\n    isCompact: false,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClick: (_e: React.MouseEvent) => undefined as any,\n    closeBtnAriaLabel: 'Close label group',\n    tooltipPosition: 'top',\n    'aria-label': 'Label group category',\n    isVertical: false,\n    isEditable: false,\n    hasEditableTextArea: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(\n        this.headingRef.current &&\n          this.headingRef.current.offsetWidth <\n            this.headingRef.current.scrollWidth,\n      ),\n    });\n  }\n\n  toggleCollapse = (e) => {\n    // Label isOverflowLabel renders a button, but not button type=button, breaks forms\n    e.preventDefault();\n\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n      isTooltipVisible: Boolean(\n        this.headingRef.current &&\n          this.headingRef.current.offsetWidth <\n            this.headingRef.current.scrollWidth,\n      ),\n    }));\n  };\n\n  renderLabel(id: string) {\n    const { categoryName, tooltipPosition } = this.props;\n    const { isTooltipVisible } = this.state;\n    return isTooltipVisible ? (\n      <Tooltip position={tooltipPosition} content={categoryName}>\n        <span\n          tabIndex={0}\n          ref={this.headingRef}\n          className={css(styles.labelGroupLabel)}\n        >\n          <span aria-hidden='true' id={id}>\n            {categoryName}\n          </span>\n        </span>\n      </Tooltip>\n    ) : (\n      <span\n        ref={this.headingRef}\n        className={css(styles.labelGroupLabel)}\n        aria-hidden='true'\n        id={id}\n      >\n        {categoryName}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      categoryName,\n      children,\n      className,\n      isClosable,\n      isCompact,\n      closeBtnAriaLabel,\n      'aria-label': ariaLabel,\n      onClick,\n      numLabels,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      defaultIsOpen,\n      tooltipPosition,\n      isVertical,\n      isEditable,\n      hasEditableTextArea,\n      editableTextAreaProps,\n      addLabelControl,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n    const { collapsedText, expandedText } = chipGroupProps();\n\n    const { isOpen } = this.state;\n    const renderedChildren = React.Children.toArray(children);\n    const numChildren = renderedChildren.length;\n    const collapsedTextResult = fillTemplate(collapsedText as string, {\n      remaining: numChildren - numLabels,\n    });\n\n    const renderLabelGroup = (id: string) => {\n      const labelArray = !isOpen\n        ? renderedChildren.slice(0, numLabels)\n        : renderedChildren;\n\n      const content = (\n        <React.Fragment>\n          {categoryName && this.renderLabel(id)}\n          <ul\n            className={css(styles.labelGroupList)}\n            {...(categoryName && { 'aria-labelledby': id })}\n            {...(!categoryName && { 'aria-label': ariaLabel })}\n            role='list'\n            {...rest}\n          >\n            {labelArray.map((child, i) => (\n              <li className={css(styles.labelGroupListItem)} key={i}>\n                {child}\n              </li>\n            ))}\n            {numChildren > numLabels && (\n              <li className={css(styles.labelGroupListItem)}>\n                <Label\n                  isOverflowLabel\n                  onClick={this.toggleCollapse}\n                  className={css(isCompact && labelStyles.modifiers.compact)}\n                >\n                  {isOpen ? expandedText : collapsedTextResult}\n                </Label>\n              </li>\n            )}\n            {addLabelControl && (\n              <li className={css(styles.labelGroupListItem)}>\n                {addLabelControl}\n              </li>\n            )}\n            {isEditable && hasEditableTextArea && (\n              <li\n                className={css(\n                  styles.labelGroupListItem,\n                  styles.modifiers.textarea,\n                )}\n              >\n                <textarea\n                  className={css(styles.labelGroupTextarea)}\n                  rows={1}\n                  tabIndex={0}\n                  {...editableTextAreaProps}\n                />\n              </li>\n            )}\n          </ul>\n        </React.Fragment>\n      );\n\n      const close = (\n        <div className={css(styles.labelGroupClose)}>\n          <Button\n            variant='plain'\n            aria-label={closeBtnAriaLabel}\n            onClick={onClick}\n            id={`remove_group_${id}`}\n            aria-labelledby={`remove_group_${id} ${id}`}\n          >\n            <TimesCircleIcon aria-hidden='true' />\n          </Button>\n        </div>\n      );\n\n      return (\n        <div\n          className={css(\n            styles.labelGroup,\n            className,\n            categoryName && styles.modifiers.category,\n            isVertical && styles.modifiers.vertical,\n            isEditable && styles.modifiers.editable,\n          )}\n        >\n          {<div className={css(styles.labelGroupMain)}>{content}</div>}\n          {isClosable && close}\n        </div>\n      );\n    };\n\n    return numChildren === 0 && addLabelControl === undefined ? null : (\n      <GenerateId>\n        {(randomId) => renderLabelGroup(this.props.id || randomId)}\n      </GenerateId>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\n// wraps Pagination for localization and integration with hub flows\n// FIXME: split into Pagination wrapper with only isTop & ToggleTemplate..\n// ..separate HubPagination with updateParams knowledge\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  isCompact,\n}: IProps) => {\n  const extraProps = isTop\n    ? {}\n    : {\n        widgetId: 'pagination-options-menu-bottom',\n        variant: PaginationVariant.bottom,\n      };\n\n  const onSetPage = (_, p) =>\n    updateParams(ParamHelper.setParam(params, 'page', p));\n\n  const onPerPageSelect = (_, p) => {\n    updateParams({ ...params, page: 1, page_size: p });\n  };\n\n  const perPageOptions = Constants.DEFAULT_PAGINATION_OPTIONS.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n\n  const titles = {\n    ofWord: t`of`,\n    perPageSuffix: t`per page`,\n    items: null,\n  };\n\n  return (\n    <PaginationPF\n      isCompact={isTop || isCompact}\n      itemCount={count}\n      onPerPageSelect={onPerPageSelect}\n      onSetPage={onSetPage}\n      page={params.page || 1}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      perPageOptions={perPageOptions}\n      titles={titles}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n      {...extraProps}\n    />\n  );\n};\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Tooltip as PFTooltip, TooltipPosition } from '@patternfly/react-core';\nimport React, { ReactNode } from 'react';\n\ninterface IProps {\n  children: ReactNode;\n  content: string | ReactNode;\n  noSpan?: boolean;\n  position?: string | TooltipPosition;\n}\n\n// wraps Tooltip to add an optional span wrap so that disabled elements still get tooltips\nexport const Tooltip = ({ content, children, noSpan, position }: IProps) => (\n  <PFTooltip content={content} position={position as TooltipPosition}>\n    {noSpan ? <>{children}</> : <span>{children}</span>}\n  </PFTooltip>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Spinner,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  EmptyStateXs,\n  ExpandableRow,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  RolePermissions,\n  SelectGroup,\n  SelectRoles,\n  SelectUser,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface IProps {\n  // users\n  user?: UserType;\n  users: UserType[];\n  addUser?: (user, roles) => void;\n  removeUser?: (user) => void;\n  addUserRole?: (role, users) => void;\n  removeUserRole?: (role, user) => void;\n  showUserRemoveModal?: UserType;\n  showUserSelectWizard?: { user?: UserType; roles?: RoleType[] };\n\n  // groups\n  group?: GroupType;\n  groups: GroupType[];\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n\n  // roles\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n\n  // parent\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  updateProps: (prop) => void;\n}\n\nconst SectionTitle = ({ title }: { title: string }) => (\n  <h2 className='pf-c-title'>{title}</h2>\n);\nconst SectionSeparator = () => (\n  <div\n    style={{\n      backgroundColor: 'var(--pf-global--BackgroundColor--light-300)',\n      height: '16px',\n      margin: '16px -16px',\n    }}\n  />\n);\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const {\n      canEditOwners,\n      group,\n      groups,\n      showGroupRemoveModal,\n      showGroupSelectWizard,\n      showUserRemoveModal,\n      showUserSelectWizard,\n      user,\n      users,\n      updateProps,\n    } = this.props;\n\n    const loading = !groups && !users;\n    const noData = users?.length === 0 && groups?.length === 0;\n\n    const buttonAdd = (title, props) => (\n      <Button key={title} onClick={() => updateProps(props)}>\n        {title}\n      </Button>\n    );\n\n    const buttonUserAdd = buttonAdd(t`Select a user`, {\n      showUserSelectWizard: {},\n    });\n    const buttonGroupAdd = buttonAdd(t`Select a group`, {\n      showGroupSelectWizard: {},\n    });\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showUserRemoveModal ? this.renderUserRemoveModal() : null}\n        {showUserSelectWizard ? this.renderUserSelectWizard() : null}\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the buttons below.`\n                : ''\n            }\n            button={\n              canEditOwners ? (\n                <>\n                  {buttonUserAdd} {buttonGroupAdd}\n                </>\n              ) : null\n            }\n          />\n        ) : user || group ? (\n          this.renderRoles()\n        ) : (\n          <>\n            {this.renderSection({\n              buttonAdd: buttonUserAdd,\n              canEditOwners,\n              emptyStateTitle: t`There are currently no users assigned.`,\n              emptyStateExtra: t`Except for members of groups below.`,\n              items: users,\n              renderItems: () =>\n                this.renderList({\n                  ariaLabel: t`User list`,\n                  canEditOwners,\n                  itemName: t`User`,\n                  buttonAdd: buttonUserAdd,\n                  items: users,\n                  renderItem: (item, index) => this.renderUserRow(item, index),\n                  sortField: 'username',\n                }),\n              title: t`Users`,\n            })}\n            <SectionSeparator />\n            {this.renderSection({\n              buttonAdd: buttonGroupAdd,\n              canEditOwners,\n              emptyStateTitle: t`There are currently no groups assigned.`,\n              items: groups,\n              renderItems: () =>\n                this.renderList({\n                  ariaLabel: t`Group list`,\n                  canEditOwners,\n                  itemName: t`Group`,\n                  buttonAdd: buttonGroupAdd,\n                  items: groups,\n                  renderItem: (item, index) => this.renderGroupRow(item, index),\n                  sortField: 'name',\n                }),\n              title: t`Groups`,\n            })}\n          </>\n        )}\n      </>\n    );\n  }\n\n  private renderSection({\n    buttonAdd,\n    canEditOwners,\n    emptyStateTitle,\n    emptyStateExtra = '',\n    items,\n    renderItems,\n    title,\n  }) {\n    const loading = !items;\n    const noData = items?.length === 0;\n\n    return (\n      <>\n        <SectionTitle title={title} />\n        {loading ? (\n          <Spinner />\n        ) : noData ? (\n          <EmptyStateXs\n            title={emptyStateTitle}\n            description={\n              <>\n                {emptyStateExtra}\n                {emptyStateExtra && <br />}\n                {canEditOwners\n                  ? t`Please add an owner by using the button below.`\n                  : ''}\n              </>\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : (\n          renderItems()\n        )}\n      </>\n    );\n  }\n\n  private renderList({\n    ariaLabel,\n    buttonAdd,\n    canEditOwners,\n    itemName,\n    items,\n    renderItem,\n    sortField,\n  }) {\n    const sorted = sortBy(items, sortField);\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={ariaLabel}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: itemName,\n                  type: 'none',\n                  id: sortField,\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>{sorted.map(renderItem)}</tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderUserRow(user, index: number) {\n    const { urlPrefix, canEditOwners, updateProps } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() =>\n            updateProps({\n              showUserRemoveModal: user,\n            })\n          }\n        >\n          <Trans>Remove user</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-user-${user.username}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                user: user.username,\n                tab: 'access',\n              })\n            }\n          >\n            {user.username}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners, updateProps } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() =>\n            updateProps({\n              showGroupRemoveModal: group,\n            })\n          }\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-group-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles() {\n    const {\n      canEditOwners,\n      group,\n      showRoleRemoveModal,\n      showRoleSelectWizard,\n      updateProps,\n      user,\n    } = this.props;\n\n    if ((!user && !group) || (user && group)) {\n      return null;\n    }\n\n    const roles = (user || group).object_roles;\n    const sortedRoles = sortBy(roles);\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal() : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard() : null}\n\n        <h3 className='pf-c-title'>\n          {user ? <Trans>User {user.username}</Trans> : null}\n          {group ? <Trans>Group {group.name}</Trans> : null}\n        </h3>\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<RolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() => updateProps({ showRoleRemoveModal: role })}\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderUserRemoveModal() {\n    const { name, showUserRemoveModal: user } = this.props;\n    if (!user) {\n      return;\n    }\n\n    const username = user.username;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showUserRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeUser(user)}\n        title={t`Remove user ${username}?`}\n      >\n        <Trans>\n          You are about to remove <b>{username}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const { name, showGroupRemoveModal: group } = this.props;\n    if (!group) {\n      return;\n    }\n\n    const groupname = group.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal() {\n    const { name, user, group, showRoleRemoveModal: role } = this.props;\n    const userOrGroupName = group?.name || user?.username;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => {\n          group && this.props.removeRole(role, group);\n          user && this.props.removeUserRole(role, user);\n        }}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{userOrGroupName}</b>{' '}\n          for <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderUserSelectWizard() {\n    const {\n      users,\n      pulpObjectType,\n      selectRolesMessage,\n      showUserSelectWizard: { user, roles = [] },\n      updateProps,\n    } = this.props;\n\n    const hasUser = !!user;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find user in users, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a user`,\n        component: (\n          <SelectUser\n            assignedUsers={users}\n            selectedUser={user}\n            updateUser={(user) =>\n              updateProps({\n                showUserSelectWizard: { user, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasUser,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({\n                showUserSelectWizard: { user, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasUser,\n        enableNext: hasUser && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles user={user} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasUser && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a user`}\n        onClose={() =>\n          updateProps({\n            showUserSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addUser(user, roles)}\n      />\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const {\n      groups,\n      pulpObjectType,\n      selectRolesMessage,\n      showGroupSelectWizard: { group, roles = [] },\n      updateProps,\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard() {\n    const {\n      group,\n      pulpObjectType,\n      showRoleSelectWizard: { roles = [] },\n      updateProps,\n      user,\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      (group || user || {}).object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: (\n          <PreviewRoles user={user} group={group} selectedRoles={roles} />\n        ),\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => {\n          group && this.props.addRole(group, roles);\n          user && this.props.addUserRole(user, roles);\n        }}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, mapErrorMessages } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { LabelGroup } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n              ? t`No permission`\n              : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  selectedRoles: RoleType[];\n  user?: {\n    username: string;\n  };\n  group?: {\n    name: string;\n  };\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ user, group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        {user ? (\n          <Trans>\n            The following roles will be applied to user:{' '}\n            <strong>{user.username}</strong>\n          </Trans>\n        ) : null}\n        {group ? (\n          <Trans>\n            The following roles will be applied to group:{' '}\n            <strong>{group.name}</strong>\n          </Trans>\n        ) : null}\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner /> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const RolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned ownership.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { UserAPI } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n}\n\ninterface IProps {\n  assignedUsers: UserType[];\n  selectedUser?: UserType;\n  updateUser?: (user) => void;\n}\n\nexport const SelectUser: React.FC<IProps> = ({\n  assignedUsers,\n  selectedUser,\n  updateUser,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [users, setUsers] = useState<UserType[]>([]);\n  const [usersCount, setUsersCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryUsers();\n  }, [localParams]);\n\n  const queryUsers = () => {\n    setLoading(true);\n    UserAPI.list(localParams).then(({ data }) => {\n      setUsers(data.data);\n      setUsersCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ username }) => selectedUser?.username === username;\n\n  const noData = users.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['username__contains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable users.`}\n          description={t`There are currently no users that can be assigned ownership.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ username }) =>\n    assignedUsers.some((user) => user.username === username);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`User`,\n        type: 'alpha',\n        id: 'username',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedUser ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected user</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedUser.username}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedUser.username}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'username__contains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ username__contains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['username__contains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {users.map((user, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={user.username}\n                        isSelected={isSelected(user)}\n                        onSelect={() => updateUser(user)}\n                        isDisabled={isAssigned(user)}\n                        data-cy={`UserListTable-CheckboxRow-row-${user.username}`}\n                      >\n                        <td>{user.username}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={usersCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertType,\n  DataForm,\n  HelperText,\n  Tooltip,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n          autoComplete='off'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          />\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          pageControls={extraControls}\n          title={title}\n        />\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { dom, parse } from 'antsibull-docs';\nimport React, { ReactNode } from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport { ExternalLink } from 'src/components';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderPluginLink: (\n    pluginName: string,\n    pluginType: string,\n    text: React.ReactNode | undefined,\n  ) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nfunction Choice({ children }: { children: ReactNode }) {\n  return <pre style={{ display: 'inline-block' }}>{children}</pre>;\n}\n\nfunction Legend({ children }: { children: ReactNode }) {\n  return (\n    <div style={{ display: 'inline-block', verticalAlign: 'top' }}>\n      {children}\n    </div>\n  );\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  private formatPartError(part: dom.ErrorPart): React.ReactNode {\n    return <span className='error'>ERROR while parsing: {part.message}</span>;\n  }\n\n  private formatPartBold(part: dom.BoldPart): React.ReactNode {\n    return <b>{part.text}</b>;\n  }\n\n  private formatPartCode(part: dom.CodePart): React.ReactNode {\n    return <span className='inline-code'>{part.text}</span>;\n  }\n\n  private formatPartHorizontalLine(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    part: dom.HorizontalLinePart,\n  ): React.ReactNode {\n    return <hr />;\n  }\n\n  private formatPartItalic(part: dom.ItalicPart): React.ReactNode {\n    return <i>{part.text}</i>;\n  }\n\n  private formatPartLink(part: dom.LinkPart): React.ReactNode {\n    return this.props.renderDocLink(part.text, part.url);\n  }\n\n  private formatPartModule(part: dom.ModulePart): React.ReactNode {\n    return this.props.renderPluginLink(part.fqcn, 'module', undefined);\n  }\n\n  private formatPartRstRef(part: dom.RSTRefPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartURL(part: dom.URLPart): React.ReactNode {\n    return <ExternalLink href={part.url}>{part.url}</ExternalLink>;\n  }\n\n  private formatPartText(part: dom.TextPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartEnvVariable(part: dom.EnvVariablePart): React.ReactNode {\n    return <span className='inline-code'>{part.name}</span>;\n  }\n\n  private formatPartOptionNameReturnValue(\n    part: dom.OptionNamePart | dom.ReturnValuePart,\n  ): React.ReactNode {\n    const content =\n      part.value === undefined ? (\n        <span className='inline-code'>\n          <b>{part.name}</b>\n        </span>\n      ) : (\n        <span className='inline-code'>\n          {part.name}={part.value}\n        </span>\n      );\n    if (!part.plugin) {\n      return content;\n    }\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      content,\n    );\n  }\n\n  private formatPartOptionValue(part: dom.OptionValuePart): React.ReactNode {\n    return <span className='inline-code'>{part.value}</span>;\n  }\n\n  private formatPartPlugin(part: dom.PluginPart): React.ReactNode {\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      undefined,\n    );\n  }\n\n  private formatPart(part: dom.Part): React.ReactNode {\n    switch (part.type) {\n      case dom.PartType.ERROR:\n        return this.formatPartError(part as dom.ErrorPart);\n      case dom.PartType.BOLD:\n        return this.formatPartBold(part as dom.BoldPart);\n      case dom.PartType.CODE:\n        return this.formatPartCode(part as dom.CodePart);\n      case dom.PartType.HORIZONTAL_LINE:\n        return this.formatPartHorizontalLine(part as dom.HorizontalLinePart);\n      case dom.PartType.ITALIC:\n        return this.formatPartItalic(part as dom.ItalicPart);\n      case dom.PartType.LINK:\n        return this.formatPartLink(part as dom.LinkPart);\n      case dom.PartType.MODULE:\n        return this.formatPartModule(part as dom.ModulePart);\n      case dom.PartType.RST_REF:\n        return this.formatPartRstRef(part as dom.RSTRefPart);\n      case dom.PartType.URL:\n        return this.formatPartURL(part as dom.URLPart);\n      case dom.PartType.TEXT:\n        return this.formatPartText(part as dom.TextPart);\n      case dom.PartType.ENV_VARIABLE:\n        return this.formatPartEnvVariable(part as dom.EnvVariablePart);\n      case dom.PartType.OPTION_NAME:\n        return this.formatPartOptionNameReturnValue(part as dom.OptionNamePart);\n      case dom.PartType.OPTION_VALUE:\n        return this.formatPartOptionValue(part as dom.OptionValuePart);\n      case dom.PartType.PLUGIN:\n        return this.formatPartPlugin(part as dom.PluginPart);\n      case dom.PartType.RETURN_VALUE:\n        return this.formatPartOptionNameReturnValue(\n          part as dom.ReturnValuePart,\n        );\n    }\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    // TODO: pass current plugin's type and name, and (if role) the current entrypoint as well\n    const parsed = parse(text);\n\n    // Special case: result is a single paragraph consisting of a single text part\n    if (\n      parsed.length === 1 &&\n      parsed[0].length === 1 &&\n      parsed[0][0].type === dom.PartType.TEXT\n    ) {\n      return <span>{parsed[0][0].text}</span>;\n    }\n\n    const fragments = [];\n    for (const paragraph of parsed) {\n      for (const part of paragraph) {\n        fragments.push(this.formatPart(part));\n      }\n    }\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, _pluginName: string) {\n    const isDeprecated = doc.deprecated;\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderLegend(legend) {\n    if (!legend) {\n      return null;\n    }\n\n    if (!Array.isArray(legend)) {\n      legend = [legend];\n    }\n\n    return (\n      <>\n        {': '}\n        <Legend>\n          {legend.map((d, i) => (\n            <>\n              {i ? <br /> : null}\n              {this.applyDocFormatters(d)}\n            </>\n          ))}\n        </Legend>\n      </>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices,\n      defaultChoice,\n      legends = {};\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n\n      if (option['default'] === true) {\n        defaultChoice = 'true';\n      } else if (option['default'] === false) {\n        defaultChoice = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaultChoice = option['default'];\n    }\n\n    if (typeof choices === 'object' && !Array.isArray(choices)) {\n      legends = choices;\n      choices = Object.keys(choices);\n    }\n\n    return (\n      <>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>\n              <Trans>Choices: </Trans>\n            </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaultChoice ? (\n                    <span className='blue' title={t`default`}>\n                      <Choice>{c}</Choice> &nbsp;&larr;\n                    </span>\n                  ) : (\n                    <Choice>{c}</Choice>\n                  )}\n                  {this.renderLegend(legends[c])}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaultChoice !== undefined && !choices.includes(defaultChoice) ? (\n          <span>\n            <span className='option-name'>\n              <Trans>Default: </Trans>\n            </span>\n            <span className='blue'>{defaultChoice}</span>\n          </span>\n        ) : null}\n      </>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  LabelGroup,\n  Pagination,\n  RadioRow,\n  SortTable,\n} from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  disabledRepos?: string[];\n  params?: { pulp_label_select?: string };\n  selectedRepos: AnsibleRepositoryType[];\n  setSelectedRepos: (selectedRepos: AnsibleRepositoryType[]) => void;\n  singleSelectionOnly?: boolean;\n}\n\nexport const MultipleRepoSelector = (props: IProps) => {\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n  const [itemsCount, setItemsCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const selectedRepos = props.selectedRepos.map(({ name }) => name);\n  const disabledRepos = props.disabledRepos || [];\n\n  const isSelectorChecked = repositoryList\n    .map(({ name }) => name)\n    .every((n) => selectedRepos.includes(n) || disabledRepos.includes(n));\n\n  function loadRepos() {\n    setLoading(true);\n\n    AnsibleRepositoryAPI.list({\n      ...params,\n      ...(props.params || {}),\n    })\n      .then(({ data: { count, results } }) => {\n        setRepositoryList(results);\n        setItemsCount(count);\n      })\n      .catch(({ response: { status, statusText } }) =>\n        props.addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  function changeSelection(repo) {\n    const { name } = repo;\n    if (disabledRepos.includes(name)) {\n      return;\n    }\n\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      props.setSelectedRepos(\n        props.selectedRepos.filter(({ name: element }) => element != name),\n      );\n    } else {\n      // add\n      props.setSelectedRepos([...props.selectedRepos, repo]);\n    }\n  }\n\n  function setSelection(repo) {\n    props.setSelectedRepos(repo ? [repo] : null);\n  }\n\n  function renderLabels() {\n    return (\n      <Flex>\n        <FlexItem>\n          <b>{t`Selected`}</b>\n        </FlexItem>\n        <FlexItem>\n          <LabelGroup>\n            {selectedRepos.map((name) => (\n              <>\n                <Label onClose={() => changeSelection({ name })}>{name}</Label>{' '}\n              </>\n            ))}\n          </LabelGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  useEffect(() => {\n    loadRepos();\n  }, [params, props.params?.pulp_label_select]);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectPage() {\n      const newRepos = [...props.selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (\n          !selectedRepos.includes(repo.name) &&\n          !disabledRepos.includes(repo.name)\n        ) {\n          newRepos.push(repo);\n        }\n      });\n\n      props.setSelectedRepos(newRepos);\n    }\n\n    function deselectAll() {\n      props.setSelectedRepos([]);\n    }\n\n    function deselectPage() {\n      const newRepos = props.selectedRepos.filter(\n        ({ name: repo1 }) =>\n          !repositoryList.find(({ name: repo2 }) => repo1 === repo2),\n      );\n\n      props.setSelectedRepos(newRepos);\n    }\n\n    function onToggleCheckbox() {\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${selectedRepos.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label={t`Select page`}\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    const sortTableOptions = {\n      headers: [\n        {\n          title: '',\n          type: 'none',\n          id: 'expander',\n        },\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'description',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Repositories`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => setParams(p)}\n        />\n        {repositoryList.map((repo, i) =>\n          props.singleSelectionOnly ? (\n            <RadioRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={\n                selectedRepos.includes(repo.name) ||\n                disabledRepos.includes(repo.name)\n              }\n              onSelect={() => setSelection(repo)}\n              isDisabled={disabledRepos.includes(repo.name)}\n              data-cy={`ApproveModal-RadioRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </RadioRow>\n          ) : (\n            <CheckboxRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={\n                selectedRepos.includes(repo.name) ||\n                disabledRepos.includes(repo.name)\n              }\n              onSelect={() => changeSelection(repo)}\n              isDisabled={disabledRepos.includes(repo.name)}\n              data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </CheckboxRow>\n          ),\n        )}\n      </table>\n    );\n  }\n\n  return (\n    <>\n      {renderLabels()}\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            {!props.singleSelectionOnly && (\n              <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n            )}\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => {\n                  setInputText(text);\n                }}\n                updateParams={(p) => setParams(p)}\n                params={params}\n                filterConfig={[\n                  {\n                    id: 'name__icontains',\n                    title: t`Repository`,\n                  },\n                ]}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n          isTop\n        />\n      </div>\n      <div>\n        <AppliedFilters\n          updateParams={(p) => {\n            setParams(p);\n            setInputText('');\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort']}\n          niceNames={{\n            name__icontains: t`Name`,\n          }}\n        />\n      </div>\n\n      {loading ? <Spinner size='lg' /> : renderTable()}\n\n      <div className='footer'>\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n        />\n      </div>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  selectedRepo: string;\n}\n\nexport const RepoSelector = ({ selectedRepo }: IProps) => {\n  const { featureFlags } = useContext();\n\n  if (IS_INSIGHTS) {\n    return null;\n  }\n  if (!featureFlags.display_repositories) {\n    return null;\n  }\n\n  const repoName =\n    {\n      community: t`Community`,\n      published: t`Published`,\n      rejected: t`Rejected`,\n      'rh-certified': t`Red Hat Certified`,\n      staging: t`Staging`,\n      validated: t`Validated`,\n    }[selectedRepo] || selectedRepo;\n\n  return (\n    <div className='breadcrumb-container'>\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText style={{ paddingLeft: 0 }} variant='plain'>\n              {t`Repository`}\n            </InputGroupText>\n            <InputGroupText\n              variant='plain'\n              style={{\n                backgroundColor: 'var(--pf-global--disabled-color--300)',\n                color: 'var(--pf-global--Color--100)',\n                height: '36px',\n              }}\n            >\n              {repoName}\n            </InputGroupText>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  errorMessage,\n  repositoryBasePath,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distroBasePath) => {\n    if (distroBasePath) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  useEffect(() => {\n    // create\n    if (!repository || !repository.name) {\n      onDistributionsLoad(null);\n      return;\n    }\n\n    repositoryBasePath(repository.name, repository.pulp_href)\n      .catch(() => null)\n      .then(onDistributionsLoad);\n  }, [repository?.pulp_href]);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n        ? 'approved'\n        : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <div data-cy='pipeline'>\n          <Select\n            variant='single'\n            isOpen={selectOpen}\n            onToggle={() => setSelectOpen(!selectOpen)}\n            onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n            selections={selectOptions[selectedPipeline]}\n          >\n            {Object.entries(selectOptions).map(([k, v]) => (\n              <SelectOption key={k} value={v} />\n            ))}\n          </Select>\n        </div>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          <div data-cy='remote'>\n            {remotes ? (\n              <APISearchTypeAhead\n                loadResults={loadRemotes}\n                onClear={() =>\n                  updateRepository({ ...repository, remote: null })\n                }\n                onSelect={(_event, value) =>\n                  updateRepository({\n                    ...repository,\n                    remote: remotes.find(({ name }) => name === value)\n                      ?.pulp_href,\n                  })\n                }\n                placeholderText={t`Select a remote`}\n                results={remotes}\n                selections={\n                  selectedRemote\n                    ? [\n                        {\n                          name: selectedRemote.name,\n                          id: selectedRemote.pulp_href,\n                        },\n                      ]\n                    : []\n                }\n              />\n            ) : null}\n            {remotesError ? (\n              <span\n                style={{\n                  color: 'var(--pf-global--danger-color--200)',\n                }}\n              >\n                {t`Failed to load remotes: ${remotesError}`}\n              </span>\n            ) : null}\n            {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n          </div>\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner } from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyDistributions = ({\n  emptyText,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleDistributionAPI.list({\n      repository: repositoryHref,\n      sort: 'pulp_created',\n      page,\n      page_size: 10,\n    })\n      .then(({ data: { count, results } }) => {\n        setDistributions(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setDistributions([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [repositoryHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(distributions);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n        (emptyText ?? '---')}\n      {count > distributions?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner } from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  remoteHref,\n}: {\n  emptyText?: string;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleRepositoryAPI.list({ remote: remoteHref, page, page_size: 10 })\n      .then(({ data: { count, results } }) => {\n        setRepositories(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setRepositories([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [remoteHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(repositories);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n      {count > repositories?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { LabelGroup } from 'src/components';\n\nexport const PulpLabels = ({ labels }: { labels: Record<string, string> }) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React, { ReactNode } from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport {\n  ExternalLink,\n  FileUpload,\n  HelperText,\n  WriteOnlyField,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ninterface FormFilename {\n  name: string;\n  original: boolean;\n}\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    const isCommunityRemote =\n      remoteType === 'ansible-remote' &&\n      remote?.url === 'https://galaxy.ansible.com/api/';\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n          'sync_dependencies',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(requiredFields, disabledFields, {\n            extra: (\n              <ActionGroup key='actions'>\n                {save}\n                {cancel}\n              </ActionGroup>\n            ),\n            isCommunityRemote,\n          })}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields, { isCommunityRemote })}\n      </Modal>\n    );\n  }\n\n  private renderForm(\n    requiredFields,\n    disabledFields,\n    {\n      extra,\n      isCommunityRemote,\n    }: { extra?: ReactNode; isCommunityRemote: boolean },\n  ) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <ExternalLink href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'>\n        requirements.yml\n      </ExternalLink>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            label={t`Download only signed collections`}\n          >\n            {isCommunityRemote && this.props.remote.signed_only ? (\n              <Alert\n                isInline\n                variant='warning'\n                title={t`Community content will never be synced if this setting is enabled`}\n              />\n            ) : null}\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('sync_dependencies') ? (\n          <FormGroup\n            fieldId={'sync_dependencies'}\n            label={t`Include all dependencies when syncing a collection.`}\n          >\n            <Switch\n              id='sync_dependencies'\n              isChecked={!!remote.sync_dependencies}\n              onChange={(value) =>\n                this.updateRemote(value, 'sync_dependencies')\n              }\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                autoComplete='off'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            {isCommunityRemote && !this.props.remote.requirements_file ? (\n              <Alert\n                isInline\n                variant='warning'\n                title={t`YAML requirements are required to sync from Galaxy`}\n              />\n            ) : null}\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              autoComplete='off'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  autoComplete='off'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n          ? null\n          : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport const ShaLabel = ({ digest, grey, long }: IProps) => (\n  <Tooltip content={digest}>\n    <Label color={grey ? 'grey' : 'blue'}>\n      {long ? digest : truncateSha(digest)}\n    </Label>\n  </Tooltip>\n);\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React, { ReactNode } from 'react';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | ReactNode;\n  description?: string | ReactNode;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top: IS_INSIGHTS\n        ? '124px' // 70 + 50 + 4\n        : '80px', // 76 + 4\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport FilterIcon from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n  hidden?: boolean;\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeaheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              const item = typeaheadResults.find(({ name }) => name === value);\n              this.submitFilter(item?.id || value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeaheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n\n    // no tags => falsy\n    // 1 tag => \"foo\"\n    // 2+ tags => [\"foo\", \"bar\"]\n    // convert all to an array\n    if (!newParams) {\n      newParams = [];\n    }\n    if (!Array.isArray(newParams)) {\n      newParams = [newParams];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { ClipboardCopy } from 'src/components';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy variant='inline-compact' isCode>\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport React, { ReactNode } from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n    helper?: ReactNode;\n  }[];\n  formPrefix?: ReactNode;\n  formSuffix?: ReactNode;\n  isReadonly?: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: Record<string, any>;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as TextInputTypes) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n              {...(field.type === 'password' ? { autoComplete: 'off' } : {})}\n            />\n          )}\n          {field.helper}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  LocalizedSortHeaders,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: LocalizedSortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import { Trans, t } from '@lingui/macro';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { language } from 'src/l10n';\n\ninterface IProps {\n  item?: { download_count?: number };\n}\n\nexport const DownloadCount = ({ item }: IProps) => {\n  if (IS_INSIGHTS) {\n    return null;\n  }\n  if (!item?.download_count) {\n    return null;\n  }\n\n  const downloadCount = new Intl.NumberFormat(language).format(\n    item.download_count,\n  );\n\n  return (\n    <Tooltip\n      content={t`Download count is the sum of all versions' download counts`}\n    >\n      <DownloadIcon /> <Trans>{downloadCount} Downloads</Trans>\n    </Tooltip>\n  );\n};\n","import ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport React, { ReactNode } from 'react';\n\ninterface IProps {\n  children: ReactNode;\n  'data-cy'?: string;\n  href: string;\n  variant?: 'default' | 'download' | 'menu' | 'nav';\n}\n\n// variants:\n// download - no external link icon (role download)\n// menu - top nav question mark menu (Customer Support, Training)\n// nav - left side nav (Documentation, Terms of Use)\n// default - everywhere else\n\nexport const ExternalLink = ({\n  children,\n  'data-cy': dataCy,\n  href,\n  variant = 'default',\n}: IProps) => {\n  if (!href || !children) {\n    return null;\n  }\n\n  const iconStyle: Record<string, string> = {\n    nav: { position: 'absolute', right: '32px', top: '22px' },\n    download: { display: 'none' },\n  }[variant];\n  const className = {\n    nav: 'pf-c-nav__link',\n    menu: 'pf-c-dropdown__menu-item',\n  }[variant];\n\n  return (\n    <a\n      className={className}\n      data-cy={dataCy}\n      href={href}\n      rel='nofollow noopener noreferrer'\n      target='_blank'\n    >\n      {children}{' '}\n      <ExternalLinkAltIcon style={{ fontSize: 'smaller', ...iconStyle }} />\n    </a>\n  );\n};\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport {\n  AppliedFilters,\n  CardListSwitcher,\n  CompoundFilter,\n  FilterOption,\n  Pagination,\n  Sort,\n  SortFieldType,\n} from 'src/components';\nimport { ParamType } from 'src/utilities';\n\ninterface IProps {\n  buttons?: ReactNode[];\n  count?: number;\n  filterConfig: FilterOption[];\n  ignoredParams: string[];\n  params: ParamType;\n  sortOptions?: SortFieldType[];\n  switcher?: string;\n  typeaheads?: Record<\n    string,\n    (inputText: string) => Promise<{ id: string; title: string }[]>\n  >;\n  updateParams: (p) => void;\n}\n\nfunction useTypeaheads(typeaheads, { inputText, selectedFilter }) {\n  const [options, setOptions] = useState({});\n  const loader = typeaheads[selectedFilter];\n  const setter = (value) =>\n    setOptions((options) => ({ ...options, [selectedFilter]: value }));\n\n  useEffect(() => {\n    if (selectedFilter && loader) {\n      loader('').then(setter);\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    if (inputText && loader) {\n      loader(inputText).then(setter);\n    }\n  }, [inputText]);\n\n  return options;\n}\n\nexport function HubListToolbar({\n  buttons,\n  count,\n  filterConfig,\n  ignoredParams,\n  params,\n  sortOptions,\n  switcher,\n  typeaheads,\n  updateParams,\n}: IProps) {\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n  const typeaheadOptions = useTypeaheads(typeaheads || {}, {\n    inputText,\n    selectedFilter,\n  });\n\n  const niceNames = Object.fromEntries(\n    filterConfig.map(({ id, title }) => [id, title]),\n  );\n\n  const filterWithOptions = filterConfig\n    .filter(({ hidden }) => !hidden)\n    .map((item) =>\n      item.inputType !== 'typeahead'\n        ? item\n        : { ...item, options: item.options || typeaheadOptions[item.id] || [] },\n    );\n\n  const renderedButtons = buttons?.length\n    ? buttons.map((button, i) =>\n        button ? <ToolbarItem key={`button${i}`}>{button}</ToolbarItem> : null,\n      )\n    : null;\n\n  return (\n    <Toolbar style={{ paddingLeft: '8px' }} data-cy='hub-list-toolbar'>\n      <ToolbarContent>\n        <ToolbarGroup\n          style={{\n            alignItems: 'start',\n            alignSelf: 'start',\n            flexDirection: 'column',\n          }}\n        >\n          <ToolbarItem>\n            <CompoundFilter\n              filterConfig={filterWithOptions}\n              inputText={inputText}\n              onChange={setInputText}\n              params={params}\n              selectFilter={setSelectedFilter}\n              updateParams={updateParams}\n            />\n          </ToolbarItem>\n          <ToolbarItem>\n            <AppliedFilters\n              ignoredParams={ignoredParams}\n              niceNames={niceNames}\n              params={params}\n              style={{ marginTop: '16px' }}\n              updateParams={updateParams}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n        {sortOptions ? (\n          <ToolbarGroup style={{ alignSelf: 'start' }}>\n            <ToolbarItem>\n              <Sort\n                options={sortOptions}\n                params={params}\n                updateParams={updateParams}\n              />\n            </ToolbarItem>\n            {renderedButtons}\n          </ToolbarGroup>\n        ) : (\n          renderedButtons\n        )}\n        <ToolbarGroup\n          alignment={{ default: 'alignRight' }}\n          style={{ alignSelf: 'start' }}\n        >\n          {switcher ? (\n            <ToolbarItem>\n              <CardListSwitcher\n                size='sm'\n                params={params}\n                updateParams={(p) => {\n                  window.localStorage.setItem(switcher, p.view_type);\n                  updateParams(p);\n                }}\n              />\n            </ToolbarItem>\n          ) : null}\n          <ToolbarItem>\n            <Pagination\n              params={params}\n              updateParams={updateParams}\n              count={count}\n              isTop\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>\n      {tabs.filter(Boolean).map((tab) => renderTab(tab))}\n    </ul>\n  </div>\n);\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const MaybeLink = ({\n  children,\n  title,\n  to,\n}: {\n  children: ReactNode;\n  title?: string;\n  to?: string;\n}) =>\n  to ? (\n    <Link title={title} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <>{children}</>\n  );\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlert,\n} from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n  pipeline?: string;\n  submitAction: ({ addAlert, selectedRepos, setLoading }) => void;\n}\n\nexport const MultiRepoModal = ({\n  closeAction,\n  collectionVersion: { collection_version },\n  pipeline,\n  submitAction,\n}: IProps) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [disabledRepos, setDisabledRepos] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedRepos, setSelectedRepos] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function queryDisabled() {\n    // get repository list for selected collection\n    // TODO: handle more pages\n    const { name, namespace, version } = collection_version;\n\n    CollectionVersionAPI.list({\n      namespace,\n      name,\n      version,\n      page: 1,\n      page_size: 100,\n      ...(pipeline ? { repository_label: pipeline } : {}),\n    })\n      .then(\n        ({\n          data: {\n            data,\n            meta: { count },\n          },\n        }) => {\n          setDisabledRepos(data.map(({ repository: { name } }) => name));\n          if (count > 100) {\n            addAlert({\n              variant: 'warning',\n              title: t`The collection exists in too many repositories. Some repositories may not be disabled and preselected correctly.`,\n            });\n          }\n        },\n      )\n      .catch(() =>\n        addAlert({\n          variant: 'danger',\n          title: t`Failed to query repositories.`,\n        }),\n      );\n  }\n\n  useEffect(() => {\n    // check for approval repos that are already in collection and select them in UI\n    queryDisabled();\n  }, []);\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() =>\n            submitAction({\n              addAlert,\n              selectedRepos,\n              setLoading,\n            })\n          }\n          variant='primary'\n          isDisabled={!selectedRepos.length || loading}\n        >\n          {t`Select`}\n        </Button>,\n        <Button\n          key='cancel'\n          onClick={closeAction}\n          variant='link'\n          isDisabled={loading}\n        >\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select repositories`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <MultipleRepoSelector\n          addAlert={addAlert}\n          disabledRepos={disabledRepos}\n          params={pipeline ? { pulp_label_select: pipeline } : null}\n          selectedRepos={selectedRepos}\n          setSelectedRepos={setSelectedRepos}\n        />\n        {loading && <Spinner size='lg' />}\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { HelperText, Tooltip } from 'src/components';\n\ninterface IProps {\n  namespace: string;\n  name: string;\n}\n\nconst cache = { collection: null, role: null };\n\nconst loadScore = (type, namespace, name, callback) => () => {\n  if (!IS_COMMUNITY) {\n    return;\n  }\n\n  const setScores = (data) => {\n    if (namespace && name && callback) {\n      callback(data?.[namespace]?.[name]);\n    }\n  };\n\n  if (!cache[type]) {\n    // not in cache, trigger load\n    cache[type] = fetch(`/static/scores/${type}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        cache[type] = data;\n        setScores(data);\n      });\n  } else if (typeof cache[type].then === 'function') {\n    // waiting for load\n    cache[type].then(() => setScores(cache[type]));\n  } else {\n    // already loaded\n    setScores(cache[type]);\n  }\n};\n\nexport function CollectionRatings({\n  namespace,\n  name,\n  isList,\n}: IProps & { isList?: boolean }) {\n  const [scores, setScores] = useState(null);\n  const loader = loadScore('collection', namespace, name, setScores);\n  useEffect(loader, [namespace, name]);\n\n  return isList ? (\n    <Ratings scores={scores} />\n  ) : (\n    <span style={{ padding: '12px 0 4px 0' }}>\n      <Ratings scores={scores} />\n    </span>\n  );\n}\n\nexport function RoleRatings({ namespace, name }: IProps) {\n  const [scores, setScores] = useState(null);\n  const loader = loadScore('role', namespace, name, setScores);\n  useEffect(loader, [namespace, name]);\n\n  return <Ratings scores={scores} />;\n}\n\nfunction Ratings({ scores }: { scores: Record<string, number> }) {\n  if (!scores) {\n    return null;\n  }\n\n  const help = t`This is the rating from old-galaxy.ansible.com. We are working on redoing the rating for the new version of galaxy.`;\n  const more = (\n    <table className='pf-c-table'>\n      {scores.quality_score !== null ? (\n        <tr>\n          <th>{t`Quality score`}</th>\n          <td>\n            <progress max={100} value={~~(20 * scores.quality_score)} />{' '}\n          </td>\n          <td>\n            <strong>{scores.quality_score}</strong>&nbsp;/&nbsp;5\n          </td>\n        </tr>\n      ) : null}\n      <tr>\n        <th>{t`Community score`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.score)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.score}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <td colSpan={3} style={{ textAlign: 'right' }}>\n          <Trans>Based on {scores.count} surveys.</Trans>\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Quality of docs`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.docs)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.docs}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Ease of use`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.ease_of_use)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.ease_of_use}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Does what it promises`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.does_what_it_says)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.does_what_it_says}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Works without change`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.works_as_is)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.works_as_is}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Ready for production`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.used_in_production)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.used_in_production}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n    </table>\n  );\n\n  return (\n    <Tooltip content={help}>\n      <HelperText hasAutoWidth content={more} />{' '}\n      <span style={{ marginRight: '8px' }}>{scores.score}</span>\n    </Tooltip>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport SortAlphaDownIcon from '@patternfly/react-icons/dist/esm/icons/sort-alpha-down-icon';\nimport SortAlphaUpIcon from '@patternfly/react-icons/dist/esm/icons/sort-alpha-up-icon';\nimport SortAmountDownIcon from '@patternfly/react-icons/dist/esm/icons/sort-amount-down-icon';\nimport SortAmountUpIcon from '@patternfly/react-icons/dist/esm/icons/sort-amount-up-icon';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable'\n            onClick={() => this.setDescending()}\n            size='md'\n            style={{ margin: '6px 0 6px 5px' }}\n          />\n        ) : (\n          <IconAsc\n            className='clickable'\n            onClick={() => this.setDescending()}\n            size='md'\n            style={{ margin: '5px 0 7px 5px' }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        autoComplete='off'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import ArrowsAltVIcon from '@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon';\nimport LongArrowAltDownIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon';\nimport LongArrowAltUpIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-icon';\nimport OutlinedClockIcon from '@patternfly/react-icons/dist/esm/icons/outlined-clock-icon';\nimport SyncAltIcon from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, ExternalLink, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Ansible\n        Lightspeed?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following legacy namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Ansible Lightspeed?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Ansible Lightspeed information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Ansible Lightspeed`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Ansible Lightspeed`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Additional details`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Ansible Lightspeed settings`\n          : isInDenyIndex\n            ? t`Opt in to Ansible Lightspeed`\n            : t`Opt out of Ansible Lightspeed`\n      }\n      variant='small'\n      titleIconVariant={isInDenyIndex ? null : 'warning'}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            <Trans>\n              <p>\n                Red Hat is working on exciting new Ansible content development\n                capabilities within the context of{' '}\n                <ExternalLink href='https://www.redhat.com/en/engage/project-wisdom'>\n                  Ansible Lightspeed\n                </ExternalLink>{' '}\n                to help other automators build Ansible content.\n              </p>\n            </Trans>\n            <br />\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n          <br />\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          {props.reference}\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { msg } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static CERTIFIED_REPO = IS_INSIGHTS ? 'published' : 'rh-certified';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': msg`Curate all synclist repositories`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': msg`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': msg`Import and move to staging`,\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': msg`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': msg`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.collection_sync': msg`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.collections.import_collection': msg`Pulp ansible: Import collection`,\n    'pulp_ansible.app.tasks.collections.sync': msg`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': msg`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.copy.copy_content': msg`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.roles.synchronize': msg`Pulp Ansible: Roles synchronize`,\n    'pulp_container.app.tasks.build_image_from_containerfile': msg`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': msg`Pulp container: General multi delete`,\n    'pulp_container.app.tasks.recursive_add_content': msg`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': msg`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.synchronize': msg`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.tag_image': msg`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': msg`Pulp container: Untage image`,\n    'pulpcore.app.tasks.export.pulp_export': msg`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': msg`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.add_and_remove': msg`Pulpcore: Add and remove`,\n    'pulpcore.app.tasks.repository.delete_version': msg`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': msg`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': msg`Pulpcore: Upload commit`,\n    'pulpcore.plugin.tasking.add_and_remove': msg`Pulpcore: Add or remove`,\n    'pulpcore.tasking.tasks.base.general_create': msg`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_delete': msg`Pulpcore: General delete`,\n    'pulpcore.tasking.tasks.base.general_update': msg`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.import_repository_version': msg`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': msg`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': msg`Pulpcore: Repair all artifacts`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': msg`Manage ansible repositories.`,\n    'galaxy.collection_admin': msg`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': msg`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': msg`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': msg`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': msg`Manage collection remotes.`,\n    'galaxy.content_admin': msg`Manage all content types.`,\n    'galaxy.execution_environment_admin': msg`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': msg`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': msg`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': msg`Push, and change execution environments.`,\n    'galaxy.group_admin': msg`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': msg`View, add, remove and change synclists.`,\n    'galaxy.task_admin': msg`View, and cancel any task.`,\n    'galaxy.user_admin': msg`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': msg`Allow all actions on a task.`,\n    'core.taskschedule_owner': msg`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: '/', component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n        updateTitle: (title) => {\n          updateDocumentTitle(\n            title ? `${APPLICATION_NAME} - ${title}` : APPLICATION_NAME,\n          );\n        },\n      }}\n    >\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ninterface ContextFragment {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import { i18n } from '@lingui/core';\nimport * as moment from 'moment';\n\n// remember to update lingui.config.js as well\nexport const availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\nexport const languageNames = {\n  en: 'English',\n  es: 'Español',\n  fr: 'Français',\n  ko: '한국어',\n  nl: 'Nederlands',\n  ja: '日本語',\n  zh: '中文',\n};\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\n// ?lang and ?pseudolocalization get removed in entry-standalone\n// (removed to prevent the param getting passed to api calls)\n// (in entry-standalone to prevent interaction with pushState)\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nexport const language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  hasPermission: (name: string) => boolean;\n  queueAlert: (alert: AlertType) => void;\n  selectedRepo?: string;\n  setAlerts: (alerts: AlertType[]) => void;\n  setUser: (user: UserType) => void;\n  settings: SettingsType;\n  updateTitle: (title: string) => void;\n  user?: UserType;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(\n  path: Paths,\n  data = {},\n  params?: ParamType,\n  options?,\n) {\n  // insights router has basename=\"/\", \"/beta/\" or \"/preview/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url = IS_INSIGHTS\n    ? UI_BASE_PATH.replace('/preview/', '/')\n        .replace('/beta/', '/')\n        .replace(/\\/$/, '')\n    : '';\n  url += (path as string) + '/';\n  url = url.replaceAll('//', '/');\n\n  url = url\n    .split('/')\n    .map((fragment) => {\n      const match = fragment.match(/^:(\\w+)\\??$/);\n      if (!match) {\n        return fragment;\n      }\n\n      const key = match[1];\n      if (!data[key]) {\n        if (options?.ignoreMissing) {\n          // preserve for activateMenu\n          return fragment;\n        }\n\n        if (!fragment.endsWith('?')) {\n          throw new Error(`missing url param ${key}`);\n        }\n\n        return '';\n      }\n\n      return encodeURIComponent(data[key]);\n    })\n    .join('/')\n    .replaceAll('//', '/');\n\n  return params ? `${url}?${ParamHelper.getQueryString(params)}` : url;\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  dispatch = '/dispatch',\n  search = '/search',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  landingPage = '/',\n  standaloneImports = '/standalone/imports',\n  standaloneNamespace = '/standalone/namespaces/:namespaceid',\n  standaloneNamespaces = '/standalone/namespaces',\n  standaloneRole = '/standalone/roles/:namespace/:name/:tab?',\n  standaloneRoleImport = '/standalone/roles/import',\n  standaloneRoleSync = '/standalone/roles/sync',\n  standaloneRoles = '/standalone/roles',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n}\n\nexport const namespaceBreadcrumb = () =>\n  ({\n    namespaces: { name: t`Namespaces`, url: formatPath(Paths.namespaces) },\n    partners: { name: t`Partners`, url: formatPath(Paths.partners) },\n  })[NAMESPACE_TERM];\n","import { sortBy } from 'lodash';\n\nexport const assignRoles = (roles) => {\n  const userRoles = {};\n  const groupRoles = {};\n\n  roles.forEach(({ users, groups, role }) => {\n    (users || []).forEach((username) => {\n      userRoles[username] ||= [];\n      userRoles[username].push(role);\n    });\n    (groups || []).forEach((name) => {\n      groupRoles[name] ||= [];\n      groupRoles[name].push(role);\n    });\n  });\n\n  return {\n    users: sortBy(\n      Object.entries(userRoles).map(([username, object_roles]) => ({\n        username,\n        object_roles,\n      })),\n      'username',\n    ),\n    groups: sortBy(\n      Object.entries(groupRoles).map(([name, object_roles]) => ({\n        name,\n        object_roles,\n      })),\n      'name',\n    ),\n  };\n};\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from './map-error-messages';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  let description = e.toString();\n\n  if (e.response) {\n    // HTTP error\n    const { status, statusText } = e.response;\n\n    const err = mapErrorMessages(e);\n    const message = Object.values(err).join(' ');\n\n    description = message\n      ? errorMessage(status, statusText, message)\n      : errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description,\n  });\n\n  callback();\n};\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  multiplier?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to starting with a 2s wait, increasing the wait time 1.5x each time, with max 10 attempts\n  // 2000, 1.5, 10 = ~226s ; 500, 1.5, 10 = ~57s\n  const { waitMs = 2000, multiplier = 1.5, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, {\n          ...options,\n          waitMs: Math.round(waitMs * multiplier),\n          bailAfter: bailAfter - 1,\n        }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { waitForTaskUrl } from './wait-for-task';\n\nexport async function repositoryRemoveCollection(\n  repoName,\n  collectionVersion_pulp_href,\n  repoHref = null,\n) {\n  if (!repoHref) {\n    repoHref = (\n      await AnsibleRepositoryAPI.list({ name: repoName, page_size: 1 })\n    )?.data?.results?.[0]?.pulp_href;\n  }\n\n  if (!repoHref) {\n    return Promise.reject({ error: t`Repository ${repoName} not found.` });\n  }\n\n  const task = (\n    await AnsibleRepositoryAPI.removeContent(\n      parsePulpIDFromURL(repoHref),\n      collectionVersion_pulp_href,\n    )\n  )?.data?.task;\n\n  await waitForTaskUrl(task);\n}\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { errorMessage } from './fail-alerts';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { repositoryRemoveCollection } from './repository-remove-collection';\nimport { waitForTask } from './wait-for-task';\n\nexport class DeleteCollectionUtils {\n  public static countUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n    deleteFromRepo,\n  }) {\n    let promise = null;\n    if (deleteFromRepo) {\n      promise = repositoryRemoveCollection(\n        deleteFromRepo,\n        collection.collection_version.pulp_href,\n      );\n    } else {\n      promise = CollectionAPI.deleteCollection(collection);\n    }\n\n    promise\n      .then((res) => {\n        if (!deleteFromRepo) {\n          const taskId = parsePulpIDFromURL(res.data.task);\n          return waitForTask(taskId);\n        }\n      })\n      .then(() => {\n        addAlert({\n          variant: 'success',\n          title: (\n            <Trans>\n              Collection &quot;{collection.collection_version.name}\n              &quot; has been successfully deleted.\n            </Trans>\n          ),\n        });\n\n        if (redirect) {\n          setState({ redirect });\n        }\n\n        if (load) {\n          load();\n        }\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// Returns the API path for a specific repository\nexport function getRepoURL(distribution_base_path, view_published = false) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  // repo/distro \"published\" is special; not related to repo pipeline type\n  if (distribution_base_path === 'published' && view_published === false) {\n    return `${host}${API_BASE_PATH}`;\n  }\n\n  return `${host}${API_BASE_PATH}content/${distribution_base_path}/`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superuser;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","export function namespaceTitle({\n  name,\n  company,\n}: {\n  name: string;\n  company?: string;\n}): string {\n  return IS_INSIGHTS ? company || name : name;\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\n\n// returns the preferred distribution base_path given a repo name\n// if there is a distribution with the same name as the repository, it will be used (as long as it's connected to the right repo too)\n// if not, the oldest will be used\n// reject if no distributions or repository\n// optional pulp_href param skips repo lookup\n\nexport function repositoryBasePath(name, pulp_href?): Promise<string> {\n  return Promise.all([\n    pulp_href\n      ? Promise.resolve({ name, pulp_href })\n      : AnsibleRepositoryAPI.list({ name, page_size: 1 }).then(firstResult),\n    AnsibleDistributionAPI.list({ name, page_size: 1 }).then(firstResult),\n  ]).then(async ([repository, distribution]) => {\n    if (!repository) {\n      return Promise.reject(t`Failed to find repository ${name}`);\n    }\n\n    if (distribution && distribution.repository === repository.pulp_href) {\n      return distribution.base_path;\n    }\n\n    distribution = await AnsibleDistributionAPI.list({\n      repository: repository.pulp_href,\n      sort: 'pulp_created',\n      page_size: 1,\n    }).then(firstResult);\n\n    if (!distribution) {\n      return Promise.reject(\n        t`Failed to find a distribution for repository ${name}`,\n      );\n    }\n\n    return distribution.base_path;\n  });\n}\n\nfunction firstResult({ data: { results } }) {\n  return results[0];\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { MaybeLink } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <MaybeLink\n          to={\n            task\n              ? formatPath(Paths.taskDetail, {\n                  task: parsePulpIDFromURL(task?.task || task),\n                })\n              : null\n          }\n        >\n          detail page{' '}\n        </MaybeLink>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","API_HOST","paramsSerializer","serialize","params","ParamHelper","getQueryString","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","newParams","_objectSpread","mapPageToOffset","pageSize","parseInt","Constants","DEFAULT_PAGE_SIZE","page","sortParam","apiPath","get","getPath","mapParams","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","window","insights","chrome","auth","getUser","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_callSuper","API_BASE_PATH","_defineProperty","_assertThisInitialized","_inherits","ActiveUserAPI","_HubAPI","API","_len","length","args","Array","_key","concat","result","reject","username","password","_this2","loginURL","_get","_getPrototypeOf","prototype","call","PulpAPI","PULP_API_BASE_PATH","AnsibleDistributionAPI","_PulpAPI","AnsibleRemoteAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","role","AnsibleRepositoryAPI","pulp_id","list","body","undefined","version_href","base_version","collection_version_hrefs","add_content_units","collection_version_href","remove_content_units","CertificateUploadAPI","formData","FormData","append","file","repository","signed_collection","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_getSignatures","_deleteCollection","_deleteCollectionVersion","_getDownloadURL","_setDeprecation","repo","path","response","_ref","_ref$collection_versi","namespace","name","is_deprecated","distroBasePath","collection_version","repositoryBasePath","pulp_href","sent","deprecated","progressCallback","cancelToken","config","onUploadProgress","token","distro_base_path","source","_callee2","version","_context2","_ref2","download_url","_x2","_x3","_x4","_x5","_callee3","_ref3","_ref3$collection_vers","_context3","_x6","_callee4","_ref4","_ref4$collection_vers","_context4","_x7","collection","_callee5","_context5","_x8","_x9","_x10","_x11","CollectionVersionAPI","source_base_path","destination_base_path","create","ContainerDistributionAPI","ContainerTagAPI","repositoryID","tag","digest","ExecutionEnvironmentAPI","readme","manifest","ExecutionEnvironmentRegistryAPI","clearSetFieldsFromRequest","write_only_fields","ExecutionEnvironmentRemoteAPI","FeatureFlagsAPI","GenericPulpAPI","url","GroupAPI","groupId","roleId","content_object","ImportAPI","LegacyAPI","_LegacyAPI","role_namespace_id","collection_namespace_id","MyDistributionAPI","MyNamespaceAPI","MySyncListAPI","NamespaceAPI","PulpStatus","RoleAPI","for_object_type","permissionId","SettingsAPI","SignCollectionAPI","_sign","updatedData","repository_name","_objectWithoutProperties","_excluded","status","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","SigningServiceAPI","TagAPI","TaskAPI","TaskManagementAPI","UserAPI","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","count","removePath","addPath","ApprovalRow","approve","collectionVersion","featureFlags","context","isVersionUpdating","openUploadCertificateModal","React","Link","to","formatPath","Paths","collectionByRepo","Button","variant","ButtonVariant","link","onClick","getDownloadURL","downloadURL","location","assign","download","DownloadIcon","DateComponent","date","pulp_created","LabelGroup","_repository$pulp_labe2","is_signed","pipeline","pulp_labels","Spinner","size","display_signatures","Label","color","icon","CheckCircleIcon","i18n","_","ExclamationCircleIcon","can_upload_signatures","require_upload_signatures","ExclamationTriangleIcon","renderStatus","_repository$pulp_labe","collection_auto_sign","ListItemActions","canUploadSignature","mustUploadSignature","autoSign","approveButton","isDisabled","Boolean","approveDropDown","DropdownItem","rejectDropDown","importsLink","component","myImports","kebabItems","buttons","renderButtons","ApproveModal","parentAddAlert","addAlert","closeAction","finishAction","settings","useContext","MultiRepoModal","submitAction","selectedRepos","setLoading","error","_approveAsync","_yield$AnsibleReposit","repo_id","signingServiceName","signingList","task","parsePulpIDFromURL","collection_versions","destination_repositories","GALAXY_AUTO_SIGN_COLLECTIONS","GALAXY_COLLECTION_SIGNING_SERVICE","values","page_size","results","moveCollectionVersion","t2","t1","t0","t3","waitForTaskUrl","title","approveAsync","description","CardListSwitcher","updateParams","_ref$size","className","disp","view_type","iconClasses","ThLargeIcon","cx","selected","setParam","ListIcon","CollectionNextPageCard","Card","style","display","height","justifyContent","ArrowRightIcon","CollectionCard","d","namespace_metadata","displaySignatures","menu","footer","nsTitle","namespaceTitle","contentSummary","convertContentSummaryCounts","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","display_repositories","TextContent","Text","TextVariants","small","Badge","isRead","ansibleRepositoryDetail","CERTIFIED_REPO","SignatureBadge","isCompact","signState","Trans","components","namespaceDetail","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","NamespaceNextPageCard","NamespaceCard","namespaceURL","CardHeaderMain","noSpan","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","CollectionDependenciesList","dependencies_repos","dependencies","List","dependency","i","listDep","EmptyStateNoData","fqn","version_range","ListItem","marginRight","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","itemCount","usedByDependenciesLoading","filterIsSet","ignoredParams","filterConfig","sortOptions","HubListToolbar","LoadingPageSpinner","repository_list","getReduced","Pagination","EmptyStateFilter","CollectionContentList","_step","toShow","summary","all","showing","keywords","_iterator","_createForOfIteratorHelper","s","n","done","_c$content_type","c","keywordMatch","match","typeMatch","push","err","f","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","_e","val","onClear","placeholder","clickable","collectionContentDocsByRepo","EmptyStateCustom","CollectionDropdown","dataCy","deletionBlocked","onCopyVersion","onDelete","onDeleteVersion","onDeprecate","onRemove","onRemoveVersion","onSign","onSignVersion","onUploadVersion","wrapper","_useContext","_useContext$featureFl","can_create_signatures","hasPermission","_useContext$user","user","is_anonymous","is_superuser","hasPerm","permission","_namespace$related_fi","_namespace$related_fi2","related_fields","my_permissions","hasObjectPermission","canCopy","canDelete","canDeprecate","canRemove","canSign","canUpload","Wrapper","any","children","DeleteWrapper","caption","openModal","skipCheck","DeleteCollectionUtils","countUsedbyDependencies","dropdownItems","_extends","StatefulDropdown","items","DownloadSignatureGridItem","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","signatures","setSignatures","_useState5","_useState6","isLoading","setIsLoading","getSignatures","res","message","GridItem","Split","hasGutter","SplitItem","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","Grid","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","Alert","isInline","LoginLink","collectionDistributionsByRepo","ref","current","href","click","_e$response","statusText","errorMessage","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","collectionDocsIndexByRepo","TableOfContents","props","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","split","toUpperCase","collectionDocsPageByRepo","_step2","_iterator2","getContentEntry","sort","a","b","startsWith","parseLinks","searchBarRef","Nav","theme","NavList","links","filterString","isExpanded","filteredLinks","toLowerCase","NavExpandable","capitalize","isActive","getSelectedCategory","index","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","content_name","loadRepos","inputText","name__icontains","pulp_label_select","defaultTags","loadTags","listCollections","collectionFilter","_ref5","_ref5$featureFlags","displayNamespaces","displayRepos","displayTags","inputType","options","typeaheads","CollectionList","collectionControls","collections","DataList","CollectionListItem","showNamespace","clearAllFilters","SignAllCertificatesModal","isOpen","onSubmit","onCancel","Modal","ModalVariant","medium","onClose","actions","primary","span","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","SignSingleCertificateModal","_ref$signState","_ref$isCompact","text","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","onClearClick","onFileInputChange","_ref$collection","dropdownMenu","synclistSwitch","uploadButton","cells","DataListCell","alignRight","width","DeprecatedTag","Flex","direction","default","alignItems","FlexItem","CollectionRatings","isList","alignSelf","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","cancelAction","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CopyCollectionToRepositoryModal","_copyToRepositories","signingService","copyCollectionVersion","forEach","taskAlert","dateTime","moment","format","fromNow","DeleteAnsibleRemoteModal","deleteAction","pending","setPending","DeleteModal","DeleteAnsibleRepositoryModal","DeleteCollectionModal","deleteCollection","isDeletionPending","confirmDelete","setConfirmDelete","deleteFromRepo","lastCollectionVersion","paddingBottom","Checkbox","isChecked","isRemove","_ref$variant","button","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","EmptyStateXs","BaseHeader","logo","pageControls","breadcrumbs","contextSelector","versionControl","subTitle","updateTitle","useEffect","CollectionHeader","_React$Component","modalPagination","setState","modalCollections","_this$props$collectio","requestParams","order_by","_this$props$collectio2","errorAlert","alerts","_toConsumableArray","state","isOpenSignAllModal","sign","signing_service","waitForTask","task_id","x","_this$props$collectio3","isOpenSignModal","deleteAll","promise","deleteCollectionVersion","repositoryRemoveCollection","taskId","topVersion","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","copyCollectionToRepositoryModal","isOpenVersionsModal","isOpenVersionsSelect","DEFAULT_PAGINATION_OPTIONS","showImportModal","updateCollection","uploadCertificateModalOpen","versionToUploadCertificate","_submitCertificate","alert","include_related","prevProps","_this3","_this$props","activeTab","actuallyCollection","collectionsCount","_this$state","_this$context$feature","urlKeys","collectionName","lastUpdated","latestVersion","versionBadge","_ref6","Navigate","canSignNamespace","issueUrl","deleteFn","openDeleteModalWithConfirm","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","isTop","updatePaginationParams","_ref7","toString","load","RepoSelector","selectedRepo","Breadcrumbs","Select","onToggle","SelectVariant","single","onSelect","selections","loadingVariant","v","SelectOption","DownloadCount","ExternalLink","copyToRepository","deprecate","checkUploadPrivilleges","_ref8","AlertList","closeAlert","renderTabs","_this4","active","_this$props2","pathParams","reduced","ignoreParams","tabs","collectionContentListByRepo","collectionImportLogByRepo","collectionDependenciesByRepo","LinkTabs","_this$state$versionTo","_this5","upload","reload","_ref9","_ref10","_this6","setDeprecation","_err$response2","warning","closeAlertMixin","AppContext","PartnerHeader","filters","Tabs","p","Popover","position","PopoverPosition","top","bodyContent","headerContent","header","hasAutoWidth","iconPosition","OutlinedQuestionCircleIcon","Status","errors","errorVariant","uploadProgress","uploadStatus","waiting","loading","onlyStaging","hideSelector","_saveFile","loadAllRepos","stagingByName","byPipeline","_ref3$0$data","staging","handleClose","saveFile","disabled","handleFileUpload","target","files","htmlFor","renderFileIcon","lineHeight","Radio","MultipleRepoSelector","addAlertObj","singleSelectionOnly","setSelectedRepos","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","detectedType","acceptedTypes","_this$state$selectedR","artifact","sha256","getCancelToken","loaded","total","messages","msg","cancel","onSelectProp","_ref$toggleType","toggleType","defaultText","_ref$isPlain","ariaLabel","setSelected","Dropdown","event","currentTarget","toggle","renderToggle","open","DropdownPosition","right","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","_props$buttons","_props$kebabItems","anyButtons","anyKebab","paddingRight","textAlign","Bullseye","LoadingPageWithHeader","Skeleton","Main","failed","objectFit","maxHeight","src","DefaultLogo","onError","MarkdownEditor","updateText","helperText","editing","TextArea","ReactMarkdown","ImportConsole","_collection$repositor","v1status","apiError","empty","followMessages","roleImport","selectedImport","setFollowMessages","lastImport","useRef","SUCCESS","completed","inProgress","running","scrollToBottom","requestAnimationFrame","_lastImport$current","scrollIntoView","behavior","collectionPipeline","StatusIndicator","rejected","approved","traceback","summary_fields","task_messages","level","message_type","message_text","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","CompoundFilter","AppliedFilters","niceNames","renderList","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","APISearchTypeAhead","loadResults","placeholderText","NamespaceForm","errorMessages","isRequired","TextInput","helperTextInvalid","validated","toError","company","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","splice","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","ResourcesForm","resources","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","parameter","newNamespaceNameValid","handleSubmit","preventDefault","labelIcon","InputGroup","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","ListPage","_class","condition","displayName","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderModals","renderTableRow","sortHeaders","typeaheadQuery","actionContext","action","_action$modal","modal","_action$modal2","translateTitle","klass","parseParamString","search","selectedFilter","unauthorised","setAlerts","_renderModals","localizedFilterConfig","knownFilters","noData","fromEntries","niceValues","filterId","obj","optionId","listQuery","navigate","resetCompoundFilter","ToolbarContent","selectFilter","renderTable","localizedSortHeaders","SortTable","updateParamsMixin","withRouter","Page","listUrl","transformParams","render","_item$my_permissions","_item$my_permissions$","_transformParams","routeParams","_item$my_permissions2","_item$my_permissions3","PageWithTabs","headerDetails","renderTab","tabUpdateParams","tab","localizedTabs","find","visible","NotFound","PFClipboardCopy","hoverTip","clickTip","PFFileUpload","browseButtonText","clearButtonText","filenamePlaceholder","prevState","isTooltipVisible","headingRef","offsetWidth","scrollWidth","defaultIsOpen","categoryName","tooltipPosition","tabIndex","css","styles","labelGroupLabel","isClosable","closeBtnAriaLabel","numLabels","isVertical","isEditable","hasEditableTextArea","editableTextAreaProps","addLabelControl","rest","_chipGroupProps","chipGroupProps","collapsedText","expandedText","renderedChildren","toArray","numChildren","collapsedTextResult","fillTemplate","remaining","GenerateId","randomId","labelArray","renderLabel","labelGroupList","child","labelGroupListItem","isOverflowLabel","toggleCollapse","labelStyles","modifiers","compact","textarea","labelGroupTextarea","rows","close","labelGroupClose","TimesCircleIcon","labelGroup","category","vertical","editable","labelGroupMain","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","extraProps","widgetId","PaginationVariant","bottom","perPageOptions","option","String","titles","ofWord","perPageSuffix","PaginationPF","onPerPageSelect","onSetPage","perPage","toggleTemplate","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","PFTooltip","SectionTitle","SectionSeparator","backgroundColor","margin","AccessTab","canEditOwners","group","showGroupRemoveModal","showGroupSelectWizard","showUserRemoveModal","showUserSelectWizard","users","updateProps","buttonAdd","buttonUserAdd","buttonGroupAdd","renderUserRemoveModal","renderUserSelectWizard","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderSection","emptyStateTitle","emptyStateExtra","renderItems","itemName","renderItem","renderUserRow","sortField","renderGroupRow","_ref2$emptyStateExtra","sorted","sortBy","urlPrefix","_this$props3","_this$props4","showRoleRemoveModal","showRoleSelectWizard","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","RolePermissions","_this$props5","removeUser","_this$props6","groupname","removeGroup","_this$props7","userOrGroupName","removeRole","removeUserRole","_this$props8","pulpObjectType","selectRolesMessage","_this$props8$showUser","_this$props8$showUser2","hasUser","hasRoles","steps","SelectUser","assignedUsers","selectedUser","updateUser","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addUser","_this$props9","_this$props9$showGrou","_this$props9$showGrou2","hasGroup","SelectGroup","assignedGroups","selectedGroup","updateGroup","addGroup","_object_roles","_this7","_this$props10","_this$props10$showRol","addRole","addUserRole","DeleteUserModal","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","PermissionCategories","permissions","showCustom","showEmpty","_this$context","model_permissions","showUserManagement","external_authentication","userManagementFilter","USER_GROUP_MGMT_PERMISSIONS","allPermissions","categories","entries","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","marginTop","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","menuAppendTo","typeaheadMulti","typeAheadAriaLabel","_model_permissions$pe3","translateLockedRolesDescription","perm","_perm$split","_perm$split2","catTitle","charAt","splitByDot","Divider","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","colSpan","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","setRole","selectedRole","setInputText","setGroups","groupsCount","setGroupsCount","_useState7","_useState8","_useState9","_useState10","localParams","setLocalParams","queryGroups","meta","isAssigned","some","tabHeader","flex","setRoles","rolesItemCount","setRolesItemCount","queryRoles","name__startswith","isRoleSelected","setUsers","usersCount","setUsersCount","queryUsers","username__contains","UserForm","newUser","selection","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","isReadonly","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","formFields","formGroupLabelIcon","requiredFields","superuserLabel","getSuperUserHelperText","Switch","labelOff","formSuffix","isPassSame","autoComplete","onSelectGroup","multiple","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","DataForm","model","pass","confirm","UserFormPage","extraControls","Choice","Legend","verticalAlign","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","replace","parseReturnRecursive","returnV","ret","contains","part","renderDocLink","renderPluginLink","fqcn","dom","ERROR","formatPartError","BOLD","formatPartBold","CODE","formatPartCode","HORIZONTAL_LINE","formatPartHorizontalLine","ITALIC","formatPartItalic","LINK","formatPartLink","MODULE","formatPartModule","RST_REF","formatPartRstRef","URL","formatPartURL","TEXT","formatPartText","ENV_VARIABLE","formatPartEnvVariable","OPTION_NAME","formatPartOptionNameReturnValue","OPTION_VALUE","formatPartOptionValue","PLUGIN","formatPartPlugin","RETURN_VALUE","parsed","parse","_step3","fragments","_iterator3","_step4","_iterator4","formatPart","_pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","legend","isArray","choices","defaultChoice","legends","renderLegend","_this8","note","renderReturnValueEntries","_this9","returned","sample","_props$params","sortTableOptions","isSelectorOpen","setIsSelectorOpen","repositoryList","setRepositoryList","itemsCount","setItemsCount","_useState11","_useState12","setParams","disabledRepos","isSelectorChecked","every","changeSelection","_ref3$data","_ref4$response","selectPage","newRepos","deselectPage","repo1","repo2","document","getElementById","focus","splitButtonItems","DropdownToggleCheckbox","checked","renderMultipleSelector","setSelection","AnsibleRepositoryForm","_remotes$find","allowEditName","updateRepository","disabledFields","bool","formGroup","fieldName","inputField","stringField","isValid","createDistribution","setCreateDistribution","disabledDistribution","setDisabledDistribution","onDistributionsLoad","hide_from_search","hideFromSearch","setHideFromSearch","setPipeline","disableHideFromSearch","setDisableHideFromSearch","remotes","setRemotes","_useState13","_useState14","remotesError","setRemotesError","loadRemotes","selectedRemote","_useState15","_useState16","selectedPipeline","setSelectedPipeline","_useState17","_useState18","selectOpen","setSelectOpen","selectOptions","none","pipelineHelp","labelsHelp","numericField","LazyDistributions","emptyText","repositoryHref","_repository$pulp_labe3","selectPipeline","stopPropagation","PulpLabels","labels","private","_event","_remotes$find2","_distributions$map","_distributions$map$jo","distributions","setDistributions","setCount","setPage","setError","prepend","_ref2$data","errorElement","LazyRepositories","_repositories$map","remoteHref","repositories","setRepositories","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","isCommunityRemote","save","renderForm","extra","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","signed_only","sync_dependencies","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","yaml","onEditorDidMount","editor","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","hiddenFieldsName","newFields","is_set","isNaN","zIndex","flexDirection","marginBottom","actionClose","AlertActionCloseButton","alertIndex","newList","alertStateVariable","_ref$ignoredParams","_ref$niceNames","chips","ChipGroup","_niceValues$key","Chip","deleteParam","unsetFilter","renderGroup","Breadcrumb","BreadcrumbItem","selectedID","indexOf","submitMultiple","isCreatable","hasOnCreateOption","filterOptions","FilterIcon","renderInput","submitFilter","control","trim","checkbox","onSelectMultiple","isGrouped","selectTitleById","typeaheadResults","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","isCode","formPrefix","fields","helper","DetailList","setItems","setItemCount","handleHttpError","Details","_ref$fields","overflowWrap","iconStyle","nav","rel","ExternalLinkAltIcon","fontSize","switcher","setSelectedFilter","typeaheadOptions","setOptions","loader","setter","useTypeaheads","filterWithOptions","hidden","renderedButtons","paddingLeft","Sort","alignment","localStorage","setItem","_ref$active","UI_EXTERNAL_LOGIN_URI","login","MaybeLink","setDisabledRepos","prevAlerts","repository_label","loadScore","callback","scores","setScores","Ratings","help","more","quality_score","max","score","docs","ease_of_use","does_what_it_says","works_as_is","used_in_production","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","HTMLComment","UIVersion","UI_COMMIT_HASH","large","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","cancelButtonText","closeButtonAriaLabel","titleId","descriptionId","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","typeToVariantMap","secondary","_ref$type","labelProps","OutlinedClockIcon","skipped","canceled","ExclamationIcon","SyncAltIcon","statusToProps","paddingTop","borderRadius","readOnly","evt","textInput","getOptions","isPlaceholder","typeahead","hasInlineFilter","onFilter","toggleIcon","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","_ref$response","removeFromDenyIndex","_ref2$response","addToDenyIndex","_ref3$response","expandableTitle","_props","NotFoundImage","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","ansibleRemoteDetail","ansibleRemoteEdit","ansibleRemotes","ansibleRepositories","ansibleRepositoryEdit","approvalDashboard","notFound","partners","editNamespace","myCollections","myCollectionsByRepo","myNamespaces","signatureKeys","taskList","taskDetail","collectionDocsPage","collectionDocsIndex","collectionContentDocs","collectionContentList","collectionImportLog","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","Provider","I18nProvider","App","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","activate","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","UI_BASE_PATH","replaceAll","fragment","ignoreMissing","endsWith","formatEEPath","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","assignRoles","userRoles","groupRoles","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","statusCode","customMessage","custom","UUIDRegEx","_options$waitMs","waitMs","_options$multiplier","multiplier","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","round","taskUrl","_repositoryRemoveCollection","repoName","collectionVersion_pulp_href","_yield$AnsibleReposit2","repoHref","t4","t5","removeContent","t8","t7","t6","t9","_collection$collectio","getUsedDependenciesByCollection","saveAs","Blob","getRepoURL","distribution_base_path","view_published","host","has_model_permission","lastSynced","entity","last_sync_task","lastSyncStatus","paramString","numericTypes","appendParam","cloneDeep","param","_i2","_deleteKeys","firstResult","distribution","sortParams","isDesc","ascSort","LOCKED_ROLES_WITH_DESCRIPTION","outsideError","protocol","ClassComponent","WithRouter","useLocation","useNavigate","useParams","routePath","el","newObj"],"sourceRoot":""}