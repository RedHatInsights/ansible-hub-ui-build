{"version":3,"file":"js/exposed-./RootApp.824980b0de1d298e5792.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/copy-url.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/components/approve-modal/approve-modal.tsx","webpack:///./src/components/repo-selector/multiple-repo-selector.tsx","webpack:///./src/components/copy-collection-to-repository-modal/copy-collection-to-repository-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/repositories.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t5541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t1870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t7853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t2620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t6379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import axios from 'axios';\nimport {\n  AnsibleDistributionAPI,\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\n// return correct distro\nexport function findDistroBasePathByRepo(distributions, repository) {\n  if (distributions.length === 0) {\n    // if distribution doesn't exist, use repository name\n    return repository.name;\n  }\n\n  // try to look for match by name, if not, just use the first distro\n  const distro = distributions.find(\n    (distro) => distro.name === repository.name,\n  );\n\n  return distro ? distro.base_path : distributions[0].base_path;\n}\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionVersionSearch,\n  ): Promise<{ data: { task: string } }> {\n    const {\n      collection_version: { namespace, name },\n      repository,\n      is_deprecated,\n    } = collection;\n    return new Promise((resolve, reject) => {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      })\n        .then((result) => {\n          const basePath = findDistroBasePathByRepo(\n            result.data.results,\n            repository,\n          );\n\n          const path = `v3/plugin/ansible/content/${basePath}/collections/index/`;\n          this.patch(\n            `${namespace}/${name}`,\n            {\n              deprecated: !is_deprecated,\n            },\n            path,\n          )\n            .then((res) => resolve(res))\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n\n    if (data.distro_base_path) {\n      return this.http.post(\n        `v3/plugin/ansible/content/${data.distro_base_path}/collections/artifacts/`,\n        formData,\n        config,\n      );\n    } else {\n      return this.http.post('v3/artifacts/collections/', formData, config);\n    }\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      })\n        .then((result) => {\n          const basePath = findDistroBasePathByRepo(\n            result.data.results,\n            repository,\n          );\n\n          this.http\n            .get(\n              `v3/plugin/ansible/content/${basePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n            )\n            .then((result) => {\n              resolve(result.data['download_url']);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  async deleteCollectionVersion(collection: CollectionVersionSearch) {\n    const distros = await AnsibleDistributionAPI.list({\n      repository: collection.repository.pulp_href,\n    });\n\n    const distroBasePath = findDistroBasePathByRepo(\n      distros.data.results,\n      collection.repository,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${collection.collection_version.namespace}/${collection.collection_version.name}/versions/${collection.collection_version.version}/`,\n    );\n  }\n\n  async deleteCollection(collection: CollectionVersionSearch) {\n    const distros = await AnsibleDistributionAPI.list({\n      repository: collection.repository.pulp_href,\n    });\n\n    const distroBasePath = findDistroBasePathByRepo(\n      distros.data.results,\n      collection.repository,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${collection.collection_version.namespace}/${collection.collection_version.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getSignatures(distroBasePath, namespace, name, version) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import axios from 'axios';\nimport { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  move(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  copy(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      `${this.apiPath}?dependency=${namespace}.${collection}`,\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // list(params?)\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { RemoteType } from '.';\nimport { HubAPI } from './hub';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { t } from '@lingui/macro';\nimport {\n  AnsibleDistributionAPI,\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository?: CollectionVersionSearch['repository'];\n  repository_name?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  async sign({ repository, repository_name: name, ...args }: SignProps) {\n    if (!repository && name) {\n      repository = (await AnsibleRepositoryAPI.list({ name }))?.data\n        ?.results?.[0];\n\n      if (!repository) {\n        return Promise.reject({\n          response: { status: t`Failed to find repository ${name}` },\n        });\n      }\n    }\n\n    const distribution = (\n      await AnsibleDistributionAPI.list({\n        repository: repository?.pulp_href,\n      })\n    )?.data?.results?.[0];\n\n    if (!distribution) {\n      const name = repository.name;\n      return Promise.reject({\n        response: {\n          status: t`Failed to find a distribution for repository ${name}`,\n        },\n      });\n    }\n\n    const updatedData = {\n      distro_base_path: distribution.base_path,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n\n  list(params?) {\n    return super.list(params, this.apiPath);\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/copy_collection_version/`,\n      params,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    collection_versions: string[],\n    destination_repositories: string[],\n    signing_service?: string,\n  ) {\n    const params = {\n      collection_versions,\n      destination_repositories,\n    };\n    if (signing_service) {\n      params['signing_service'] = signing_service;\n    }\n\n    return this.http.post(\n      this.apiPath + `${pulp_id}/move_collection_version/`,\n      params,\n    );\n  }\n\n  modify(\n    pulp_id: string,\n    add_content_units: string[],\n    remove_content_units: string[],\n    base_version: string,\n  ) {\n    const params = {\n      add_content_units,\n      remove_content_units,\n      base_version,\n    };\n\n    return this.http.post(this.apiPath + `${pulp_id}/modify/`, params);\n  }\n}\n\nexport const Repositories = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from remote.ts\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(uuid, params?) {\n    return this.list(params, this.getPath(null) + uuid + '/versions/');\n  }\n\n  // delete(uuid)\n\n  sync(id, body = {}) {\n    return this.http.post(this.apiPath + id + '/sync/', body);\n  }\n\n  revert(id, version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(id, collection_version_hrefs) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      add_content_units: collection_version_hrefs,\n    });\n  }\n\n  removeContent(id, collection_version_href) {\n    return this.http.post(this.apiPath + id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top:\n        DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n          ? '124px' // 70 + 50 + 4\n          : '80px', // 76 + 4\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distributions) => {\n    if (distributions?.find?.(({ name }) => name === repository.name)) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n      ? 'approved'\n      : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n            onLoad={onDistributionsLoad}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <div data-cy='pipeline'>\n          <Select\n            variant='single'\n            isOpen={selectOpen}\n            onToggle={() => setSelectOpen(!selectOpen)}\n            onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n            selections={selectOptions[selectedPipeline]}\n          >\n            {Object.entries(selectOptions).map(([k, v]) => (\n              <SelectOption key={k} value={v} />\n            ))}\n          </Select>\n        </div>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          <div data-cy='remote'>\n            {remotes ? (\n              <APISearchTypeAhead\n                loadResults={loadRemotes}\n                onClear={() =>\n                  updateRepository({ ...repository, remote: null })\n                }\n                onSelect={(_event, value) =>\n                  updateRepository({\n                    ...repository,\n                    remote: remotes.find(({ name }) => name === value)\n                      ?.pulp_href,\n                  })\n                }\n                placeholderText={t`Select a remote`}\n                results={remotes}\n                selections={\n                  selectedRemote\n                    ? [\n                        {\n                          name: selectedRemote.name,\n                          id: selectedRemote.pulp_href,\n                        },\n                      ]\n                    : []\n                }\n              />\n            ) : null}\n            {remotesError ? (\n              <span\n                style={{\n                  color: 'var(--pf-global--danger-color--200)',\n                }}\n              >\n                {t`Failed to load remotes: ${remotesError}`}\n              </span>\n            ) : null}\n            {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n          </div>\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector || null}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  className,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace?.company || collection_version.namespace;\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          {featureFlags.display_repositories ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Badge isRead>\n                  <Link\n                    to={formatPath(Paths.ansibleRepositoryDetail, {\n                      name: repository.name,\n                    })}\n                  >\n                    {repository.name === Constants.CERTIFIED_REPO\n                      ? t`Certified`\n                      : repository.name}\n                  </Link>\n                </Badge>\n              </Text>\n            </TextContent>\n          ) : null}\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import * as moment from 'moment';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\n\ninterface IProps {\n  date: string;\n}\n\nexport const DateComponent = (props: IProps) => {\n  const { date } = props;\n\n  return (\n    date && (\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem />\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one.`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  CopyCollectionToRepositoryModal,\n  DeleteCollectionModal,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  RepositoriesUtils,\n  canSignNamespace,\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\nimport './header.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  collectionsCount: number;\n  collection: CollectionVersionSearch;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalCollections: CollectionVersionSearch[];\n  modalPagination: {\n    page: number;\n    page_size: number;\n  };\n  deleteCollection: CollectionVersionSearch;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n  namespace: NamespaceType;\n  copyCollectionToRepositoryModal: CollectionVersionSearch;\n  deleteAll: boolean;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalCollections: null,\n      modalPagination: {\n        page: 1,\n        page_size: Constants.DEFAULT_PAGINATION_OPTIONS[0],\n      },\n      deleteCollection: null,\n      deleteAll: false,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n      namespace: null,\n      copyCollectionToRepositoryModal: null,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n\n    this.setState({ modalCollections: this.props.collections });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collections !== prevProps.collections) {\n      this.setState({ modalCollections: this.props.collections });\n    }\n  }\n\n  render() {\n    const {\n      collections,\n      collectionsCount,\n      collection,\n      content,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalCollections,\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n      copyCollectionToRepositoryModal,\n    } = this.state;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.collection_version.pulp_created;\n\n    const { display_signatures, can_upload_signatures, display_repositories } =\n      this.context.featureFlags;\n\n    const signedString = () => {\n      if (!display_signatures) {\n        return '';\n      }\n\n      return collection.is_signed ? t`(signed)` : t`(unsigned)`;\n    };\n\n    const isLatestVersion = (v) => {\n      return `${moment(v.pulp_created).fromNow()} ${signedString()}\n      ${\n        v.version === collections[0].collection_version.version\n          ? t`(latest)`\n          : ''\n      }`;\n    };\n    const { collection_version, namespace_metadata: namespace } = collection;\n    const { name: collectionName, version } = collection_version;\n\n    const company = namespace?.company || collection_version.namespace;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, true),\n        deleteAll: true,\n        display_repositories: display_repositories,\n      }),\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, false),\n        deleteAll: false,\n        display_repositories: display_repositories,\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-collection-version'\n          key='delete-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, true)}\n        >\n          {t`Delete version ${version} from system`}\n        </DropdownItem>\n      ),\n      hasPermission('ansible.delete_collection') && display_repositories && (\n        <DropdownItem\n          data-cy='remove-collection-version'\n          key='remove-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, false)}\n        >\n          {t`Delete version ${version} from repository`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${version}`}\n        </DropdownItem>\n      ),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.deprecate(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n      display_repositories && (\n        <DropdownItem\n          key='copy-collection-version-to-repository-dropdown'\n          onClick={() => this.copyToRepository(collection)}\n          data-cy='copy-collection-version-to-repository-dropdown'\n        >\n          {t`Copy version ${version} to repositories`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : collection.repository.name;\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={modalPagination}\n                updateParams={this.updatePaginationParams}\n                count={collectionsCount}\n              />\n            </div>\n            {modalCollections ? (\n              modalCollections.map(({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {t`updated ${isLatestVersion(collection_version)}`}\n                </ListItem>\n              ))\n            ) : (\n              <Spinner />\n            )}\n          </List>\n          <Pagination\n            params={modalPagination}\n            updateParams={this.updatePaginationParams}\n            count={collectionsCount}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                    deleteFromRepo,\n                  });\n            })\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {copyCollectionToRepositoryModal && (\n          <CopyCollectionToRepositoryModal\n            collection={collection}\n            closeAction={() => {\n              this.setState({ copyCollectionToRepositoryModal: null });\n            }}\n            addAlert={(alert) => {\n              this.addAlert(alert);\n              this.setState({ copyCollectionToRepositoryModal: null });\n            }}\n          />\n        )}\n        <BaseHeader\n          className={className}\n          title={collection_version.name}\n          logo={\n            namespace?.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector selectedRepo={collection.repository.name} />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    collections.length < collectionsCount\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {collections\n                    .map((c) => c.collection_version)\n                    .map((v) => (\n                      <SelectOption\n                        key={v.version}\n                        value={`v${v.version}`}\n                        onClick={() =>\n                          updateParams(\n                            ParamHelper.setParam(\n                              params,\n                              'version',\n                              v.version.toString(),\n                            ),\n                          )\n                        }\n                      >\n                        <Trans>\n                          {v.version} updated {isLatestVersion(v)}\n                        </Trans>\n                      </SelectOption>\n                    ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              {display_signatures ? (\n                <SignatureBadge\n                  isCompact\n                  signState={collection.is_signed ? 'signed' : 'unsigned'}\n                />\n              ) : null}\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'distributions',\n        title: t`Distributions`,\n        link: formatPath(\n          Paths.collectionDistributionsByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    const modalPagination = {\n      page,\n      page_size,\n    };\n\n    this.setState({ modalPagination, modalCollections: null });\n\n    const { namespace, name } = this.props.collection.collection_version;\n    const repository = this.props.collection.repository;\n    const requestParams = {\n      ...(repository ? { repository_name: repository.name } : {}),\n      namespace,\n      name,\n    };\n\n    // loadCollections provides initial data, pagination needs extra requests\n    CollectionVersionAPI.list({\n      ...requestParams,\n      order_by: '-version',\n      ...modalPagination,\n    })\n      .then(({ data }) => data)\n      .catch(() => ({ data: [] }))\n      .then(({ data: modalCollections }) =>\n        this.setState({ modalCollections }),\n      );\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    const { deleteAll } = this.state;\n\n    let promise = null;\n\n    if (deleteAll) {\n      promise = CollectionAPI.deleteCollectionVersion(deleteCollection);\n    } else {\n      promise = promise = RepositoriesUtils.deleteCollection(\n        deleteCollection.repository.name,\n        deleteCollection.collection_version.pulp_href,\n      );\n    }\n\n    const name = deleteCollection.collection_version.name;\n\n    promise\n      .then((res) => {\n        if (!deleteAll) {\n          return;\n        }\n\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId);\n      })\n      .then(() => {\n        const topVersion = (collections || []).filter(\n          ({ collection_version }) =>\n            collection_version.version !== collectionVersion,\n        );\n\n        if (topVersion.length) {\n          this.props.updateParams(\n            ParamHelper.setParam(\n              this.props.params,\n              'version',\n              topVersion[0].collection_version.version,\n            ),\n          );\n\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ],\n          });\n        } else {\n          // last version in collection => collection will be deleted => redirect\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name} v{collectionVersion}&quot; has been\n                successfully deleted.\n              </Trans>\n            ),\n          });\n          this.setState({\n            redirect: formatPath(Paths.namespaceDetail, {\n              namespace: deleteCollection.collection_version.namespace,\n            }),\n          });\n        }\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null, deleteAll = true) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n      deleteAll: deleteAll,\n    });\n  }\n\n  private copyToRepository(collection: CollectionVersionSearch) {\n    this.setState({ copyCollectionToRepositoryModal: collection });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport {\n  AnsibleDistributionAPI,\n  CollectionAPI,\n  CollectionVersionSearch,\n  findDistroBasePathByRepo,\n} from 'src/api';\nimport 'src/api/response-types/collection';\nimport { useContext } from 'src/loaders/app-context';\nimport { LoadingPageSpinner } from '../loading/loading-page-spinner';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      AnsibleDistributionAPI.list({\n        repository: repository.pulp_href,\n      }).then((result) => {\n        const distroBasePath = findDistroBasePathByRepo(\n          result.data.results,\n          repository,\n        );\n\n        const { namespace, name, version } = collectionVersion;\n\n        CollectionAPI.getSignatures(distroBasePath, namespace, name, version)\n          .then((res) => {\n            setSignatures(res.data.signatures);\n            setIsLoading(false);\n          })\n          .catch(({ code, message }) => {\n            addAlert(code, message);\n            setIsLoading(false);\n            setShow(false);\n          });\n      });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {context.user.is_anonymous &&\n            !context.settings\n              .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                <div>\n                  <Trans>\n                    To download this collection, configure your client to\n                    connect to one of this repositories{' '}\n                    <Link\n                      to={formatPath(Paths.collectionDistributionsByRepo, {\n                        repo: repository.name,\n                        namespace: collection_version.namespace,\n                        collection: collection_version.name,\n                      })}\n                    >\n                      distributions\n                    </Link>\n                    .\n                  </Trans>\n                </div>\n                <a ref={downloadLinkRef} style={{ display: 'none' }} />\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out' />\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Repositories } from 'src/api';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const [repositories, setRepositories] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  const loadRepos = () => {\n    Repositories.list({\n      name__icontains: inputText,\n      pulp_label_select: '!hide_from_search',\n    }).then((res) => {\n      const repos = res.data.results.map(({ name }) => ({\n        id: name,\n        title: name,\n      }));\n      setRepositories(repos);\n    });\n  };\n\n  useEffect(() => {\n    if (selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  useEffect(() => {\n    setInputText(props.params['repository_name'] || '');\n  }, [props.params.repository_name]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [inputText]);\n\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures, display_repositories } = context.featureFlags;\n  const displayTags = ignoredParams.includes('tags') === false;\n  const displayRepos =\n    ignoredParams.includes('repository_name') === false && display_repositories;\n  const displayNamespaces = ignoredParams.includes('namespace') === false;\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n      options: repositories,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'multiple' as const,\n      options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n        id: tag,\n        title: tag,\n      })),\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n              selectFilter={(selected) => {\n                setSelectedFilter(selected);\n              }}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  is_signed: t`Sign state`,\n                  tags: t`Tags`,\n                  keywords: t`Keywords`,\n                  repository_name: t`Repository`,\n                  namespace: t`Namespace`,\n                }}\n                niceValues={{\n                  is_signed: {\n                    false: t`unsigned`,\n                    true: t`signed`,\n                  },\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  collectionControls: (collection) => {\n    dropdownMenu?: React.ReactNode | null;\n    synclistSwitch?: React.ReactNode | null;\n    uploadButton?: React.ReactNode | null;\n  };\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    collectionControls,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              key={i}\n              collection={c}\n              displaySignatures={displaySignatures}\n              showNamespace\n              {...collectionControls(c)}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  displaySignatures: boolean;\n  dropdownMenu?: React.ReactNode | null;\n  showNamespace?: boolean;\n  synclistSwitch?: React.ReactNode | null;\n  uploadButton?: React.ReactNode | null;\n}\n\nexport const CollectionListItem = ({\n  collection: {\n    collection_version,\n    namespace_metadata: namespace,\n    repository,\n    is_signed,\n    is_deprecated,\n  },\n  displaySignatures,\n  dropdownMenu,\n  showNamespace,\n  synclistSwitch,\n  uploadButton,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const cells = [];\n\n  const company = namespace?.company || collection_version.namespace;\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup {...chipGroupProps()}>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      <Flex\n        direction={{ default: 'column' }}\n        alignItems={{ default: 'alignItemsFlexEnd' }}\n      >\n        <Flex\n          direction={{ default: 'column' }}\n          alignItems={{ default: 'alignItemsFlexStart' }}\n        >\n          {synclistSwitch && <FlexItem>{synclistSwitch}</FlexItem>}\n          {uploadButton || dropdownMenu ? (\n            <FlexItem>\n              {uploadButton}\n              {dropdownMenu || <span className='hidden-menu-space' />}\n            </FlexItem>\n          ) : null}\n          <FlexItem>\n            <div>\n              <Trans>\n                Updated <DateComponent date={collection_version.pulp_created} />\n              </Trans>\n            </div>\n            <div>v{collection_version.version}</div>\n          </FlexItem>\n        </Flex>\n        <Flex\n          direction={{ default: 'row' }}\n          alignSelf={{ default: 'alignSelfFlexStart' }}\n        >\n          {featureFlags.display_repositories ? (\n            <FlexItem>\n              <Label variant='outline'>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name}\n                </Link>\n              </Label>\n            </FlexItem>\n          ) : null}\n          {displaySignatures ? (\n            <FlexItem>\n              <SignatureBadge\n                variant='outline'\n                signState={is_signed ? 'signed' : 'unsigned'}\n              />\n            </FlexItem>\n          ) : null}\n        </Flex>\n      </Flex>\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm' />}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeaheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              const item = typeaheadResults.find(({ name }) => name === value);\n              this.submitFilter(item?.id || value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeaheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n\n    // no tags => falsy\n    // 1 tag => \"foo\"\n    // 2+ tags => [\"foo\", \"bar\"]\n    // convert all to an array\n    if (!newParams) {\n      newParams = [];\n    }\n    if (!Array.isArray(newParams)) {\n      newParams = [newParams];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy\n      hoverTip={t`Copy`}\n      clickTip={t`Copied`}\n      variant='inline-compact'\n      isCode\n    >\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { AppContext } from 'src/loaders/app-context';\nimport { mapErrorMessages } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  LocalizedSortHeaders,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: LocalizedSortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-list-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      <EmptyStateIcon icon={icon} />\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const repoStatus = collection.repository.pulp_labels?.pipeline;\n      if (repoStatus === Constants.NOTCERTIFIED) {\n        approvalStatus = t`rejected`;\n      } else if (repoStatus === Constants.NEEDSREVIEW) {\n        approvalStatus = t`waiting for approval`;\n      } else if (repoStatus === Constants.APPROVED) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { errorMessage, filterIsSet } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent, EmptyStateFilter, EmptyStateNoData } from '..';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Radio } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n  Repositories,\n} from 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlertMixin,\n} from 'src/components';\nimport { RepositoriesUtils, errorMessage } from 'src/utilities';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n  allRepos: Repository[];\n  loading: boolean;\n  alerts: AlertType[];\n  selectedRepos: string[];\n  onlyStaging: boolean;\n  fixedRepos: string[];\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n      allRepos: [],\n      loading: true,\n      alerts: [],\n      selectedRepos: [],\n      onlyStaging: true,\n      fixedRepos: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadAllRepos('staging');\n  }\n\n  private loadAllRepos(pipeline) {\n    let filter = {};\n    if (this.state.onlyStaging) {\n      filter = { pulp_label_select: `pipeline=${pipeline}` };\n    }\n\n    return Repositories.list(filter)\n      .then((data) => {\n        this.setState({\n          allRepos: data.data.results,\n        });\n        this.setState({ loading: false });\n        if (data.data.results.length == 1) {\n          this.setState({ selectedRepos: [data.data.results[0].name] });\n        }\n\n        // fill repos that user cant select\n        let res = [];\n\n        if (!this.state.onlyStaging) {\n          res = data.data.results\n            .filter(\n              (repo) =>\n                repo.pulp_labels?.pipeline &&\n                repo.pulp_labels?.pipeline != 'staging',\n            )\n            .map((repo) => repo.name);\n        }\n\n        this.setState({ fixedRepos: res });\n      })\n      .catch((error) => {\n        this.addAlert(\n          t`Error loading repositories with label ${pipeline}.`,\n          'danger',\n          error?.message,\n        );\n        this.setState({ loading: false });\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n\n  private loadRepos(params, setRepositoryList, setLoading, setItemsCount) {\n    // modify params\n    const par = { ...params };\n\n    if (this.state.onlyStaging) {\n      par['pulp_label_select'] = 'pipeline=staging';\n    }\n\n    par['ordering'] = par['sort'];\n    delete par['sort'];\n\n    setLoading(true);\n\n    Repositories.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        this.addAlertObj({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  private addAlertObj(alert) {\n    this.addAlert(alert.title, alert.variant, alert.description);\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n\n    return (\n      <Modal\n        variant={'large'}\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={\n              !this.canUpload() || this.state.selectedRepos.length == 0\n            }\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n\n        <>\n          <br />\n          <Radio\n            isChecked={this.state.onlyStaging}\n            name='radio-1'\n            onChange={(val) => {\n              this.setState({ onlyStaging: val }, () =>\n                this.loadAllRepos('staging'),\n              );\n            }}\n            label={t`Staging Repos`}\n            id='radio-staging'\n          ></Radio>\n          <Radio\n            isChecked={!this.state.onlyStaging}\n            name='radio-2'\n            onChange={(val) => {\n              this.setState({ onlyStaging: !val }, () =>\n                this.loadAllRepos('staging'),\n              );\n            }}\n            label={t`All Repos`}\n            id='radio-all'\n          ></Radio>\n          {!this.state.onlyStaging && (\n            <>{t`Please note that those repositories are not filtered by permission, if operation fail, you don't have it.`}</>\n          )}\n\n          <MultipleRepoSelector\n            singleSelectionOnly={true}\n            allRepositories={this.state.allRepos}\n            fixedRepos={this.state.fixedRepos}\n            selectedRepos={this.state.selectedRepos}\n            setSelectedRepos={(repos) =>\n              this.setState({ selectedRepos: repos, errors: '' })\n            }\n            hideFixedRepos={true}\n            loadRepos={(params, setRepositoryList, setLoading, setItemsCount) =>\n              this.loadRepos(\n                params,\n                setRepositoryList,\n                setLoading,\n                setItemsCount,\n              )\n            }\n          />\n        </>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin' />;\n      default:\n        return <FolderOpenIcon />;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  async saveFile() {\n    const selectedRepos = this.state.selectedRepos;\n\n    this.setState({ uploadStatus: Status.uploading });\n\n    let distro = null;\n    distro = await RepositoriesUtils.distributionByRepoName(\n      selectedRepos[0],\n    ).catch((error) => {\n      this.addAlert(error, 'danger');\n    });\n\n    if (!distro) {\n      this.setState({ uploadStatus: Status.waiting });\n      return;\n    }\n\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n      distro_base_path: distro.base_path,\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n  selectedFilter: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ninterface ParamsType {\n  page?: number;\n  page_size?: number;\n}\n\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\n\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState = null },\n  listItemActions?,\n) => React.ReactNode;\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ntype SortHeaders = {\n  title: MessageDescriptor;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\nexport type LocalizedSortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  filterConfig: ({ state }) => FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: MessageDescriptor;\n  noDataTitle: MessageDescriptor;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: MessageDescriptor;\n  typeaheadQuery?: ({ inputText, selectedFilter, setState }) => void;\n}\n\nexport const ListPage = function <T>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n  // for typeahed filters\n  typeaheadQuery,\n}: ListPageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const translateTitle = ({ title, ...rest }: any) => ({\n    ...rest,\n    title: i18n._(title),\n  });\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        selectedFilter: null,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const localizedFilterConfig = filterConfig({ state: this.state }) || [];\n      const knownFilters = localizedFilterConfig.map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        localizedFilterConfig.map(({ id, title }) => [id, title]),\n      );\n\n      const niceValues = {};\n      localizedFilterConfig\n        .filter(({ options }) => options?.length)\n        .forEach(({ id: filterId, options }) => {\n          const obj = (niceValues[filterId] = {});\n          options.forEach(({ id: optionId, title }) => {\n            obj[optionId] = title;\n          });\n        });\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.query(),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const resetCompoundFilter = () =>\n        this.setState({\n          inputText: '',\n          selectedFilter: localizedFilterConfig[0].id,\n        });\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader title={i18n._(title)} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={i18n._(noDataDescription)}\n              title={i18n._(noDataTitle)}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-list-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) => {\n                                this.setState({ inputText });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText,\n                                    selectedFilter: this.state.selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                              updateParams={(p) => {\n                                resetCompoundFilter();\n                                updateParams(p);\n                              }}\n                              params={params}\n                              filterConfig={localizedFilterConfig}\n                              selectFilter={(selectedFilter) => {\n                                this.setState({ selectedFilter });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText: '',\n                                    selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        resetCompoundFilter();\n                        updateParams(p);\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                      niceValues={niceValues}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      const localizedSortHeaders = (sortHeaders || []).map(\n        translateTitle,\n      ) as LocalizedSortHeaders;\n\n      return (\n        <table\n          aria-label={i18n._(title)}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{ headers: localizedSortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageWithTabsParams<T> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: MessageDescriptor }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const localizedTabs = tabs.map(({ name, ...rest }) => ({\n        ...rest,\n        name: i18n._(name),\n      }));\n      const tab = localizedTabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-list-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={localizedTabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageParams<T> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      // condition check after query, for object permissions\n      this.query().then((item) => {\n        const actionContext = {\n          ...this.context,\n          hasObjectPermission: (permission) =>\n            item?.my_permissions?.includes?.(permission),\n        };\n        if (!condition(actionContext)) {\n          this.setState({ loading: false, unauthorised: true });\n        }\n\n        this.setState({ alerts: this.context.alerts || [] });\n        this.context.setAlerts([]);\n      });\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-list-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return Promise.resolve(null);\n      }\n\n      return new Promise((resolve, reject) => {\n        this.setState({ loading: true }, () => {\n          query({ name })\n            .then((item) => {\n              this.setState({\n                item,\n                loading: false,\n              });\n              resolve(item);\n            })\n            .catch((e) => {\n              const { status, statusText } = e.response;\n              this.setState({\n                loading: false,\n                item: null,\n              });\n              this.addAlert({\n                title: i18n._(errorTitle),\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n              reject();\n            });\n        });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelGroup } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const PulpLabels = ({ labels }: { labels: Record<string, string> }) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { errorMessage } from 'src/utilities';\n\nexport const NonLazyDistributions = ({\n  distributions,\n  emptyText,\n}: {\n  distributions: { name: string }[];\n  emptyText?: string;\n}) => (\n  <>\n    {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n      (emptyText ?? '---')}\n  </>\n);\n\nexport const LazyDistributions = ({\n  emptyText,\n  onLoad,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  onLoad?: (distributions) => void;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setError(null);\n      setLoading(false);\n      onLoad?.([]);\n      return;\n    }\n\n    setDistributions([]);\n    setError(null);\n    setLoading(true);\n\n    AnsibleDistributionAPI.list({ repository: repositoryHref })\n      .then(({ data }) => {\n        setDistributions(data.results);\n        setError(null);\n        setLoading(false);\n        onLoad?.(data.results);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions([]);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n        onLoad?.([]);\n      });\n  }, [repositoryHref]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <NonLazyDistributions distributions={distributions} emptyText={emptyText} />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  onLoad,\n  remoteHref,\n}: {\n  emptyText?: string;\n  onLoad?: (repositories) => void;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setError(null);\n      setLoading(false);\n      onLoad?.([]);\n      return;\n    }\n\n    setRepositories([]);\n    setError(null);\n    setLoading(true);\n\n    AnsibleRepositoryAPI.list({ remote: remoteHref })\n      .then(({ data }) => {\n        setRepositories(data.results);\n        setError(null);\n        setLoading(false);\n        onLoad?.(data.results);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories([]);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n        onLoad?.([]);\n      });\n  }, [remoteHref]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n    </>\n  );\n};\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton />\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  }[type] || type);\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport './header.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlert,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  inputText: '',\n};\n\nexport const PublishToControllerModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState(initialState.alerts);\n  const [controllers, setControllers] = useState(initialState.controllers);\n  const [controllerCount, setControllerCount] = useState(\n    initialState.controllerCount,\n  );\n  const [controllerParams, setControllerParams] = useState(\n    initialState.controllerParams,\n  );\n  const [digest, setDigest] = useState(initialState.digest);\n  const [digestByTag, setDigestByTag] = useState(initialState.digestByTag);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [tag, setTag] = useState(initialState.tag);\n  const [tagResults, setTagResults] = useState(initialState.tagResults);\n  const [tagSelection, setTagSelection] = useState(initialState.tagSelection);\n\n  const [inputText, setInputText] = useState(initialState.inputText);\n\n  useEffect(() => {\n    const { image, isOpen } = props;\n    if (isOpen) {\n      // load on open\n      fetchData(image);\n    } else {\n      // reset on close\n      setAlerts(initialState.alerts);\n      setControllers(initialState.controllers);\n      setControllerCount(initialState.controllerCount);\n      setControllerParams(initialState.controllerParams);\n      setDigest(initialState.digest);\n      setDigestByTag(initialState.digestByTag);\n      setLoading(initialState.loading);\n      setTag(initialState.tag);\n      setTagResults(initialState.tagResults);\n      setTagSelection(initialState.tagSelection);\n\n      setInputText(initialState.inputText);\n    }\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    fetchControllers();\n  }, [controllerParams]);\n\n  function fetchControllers() {\n    return ControllerAPI.list(controllerParams)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        setControllers(controllers);\n        setControllerCount(controllerCount);\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Controllers list could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        setDigestByTag(digestByTag);\n        setTagResults(tagResults);\n\n        return { digestByTag, tags };\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Tags could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchData(image) {\n    const controllers = fetchControllers();\n    const tagsPromises = fetchTags(image).then(({ tags, digestByTag }) => {\n      // tags and digestByTag must be passed this way from fetchTags, otherwise, closure\n      // will see old value of both variables set in fetchTags\n      // and additionaly, tags state is not needed at all because of that\n\n      // preselect tag if present\n      let { digest, tag } = props;\n      tag ||= tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= digestByTag[tag]; // set digest by tag unless in props\n\n      setDigest(digest);\n      setTag(tag);\n      setTagSelection(tag ? [{ id: tag, name: tag }] : []);\n    });\n\n    Promise.all([controllers, tagsPromises]).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function renderControllers() {\n    const { image, isOpen } = props;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  const { image, isOpen, onClose } = props;\n\n  // redirects to ./2.x (latest)\n  const docsLink =\n    'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/';\n\n  const noData =\n    controllers?.length === 0 &&\n    !filterIsSet(controllerParams, ['host__icontains']);\n\n  const notListedMessage = (\n    <>\n      {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n      {docsLink && (\n        <>\n          <a href={docsLink} target='_blank' rel='noreferrer'>\n            {t`Learn more`}\n          </a>{' '}\n          <ExternalLinkAltIcon />\n        </>\n      )}\n    </>\n  );\n\n  const Spacer = () => <div style={{ paddingTop: '24px' }} />;\n  const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n  return (\n    <Modal\n      variant='large'\n      title={t`Use in Controller`}\n      isOpen={isOpen}\n      onClose={onClose}\n      actions={[\n        <Button key='close' variant='primary' onClick={onClose}>\n          {t`Close`}\n        </Button>,\n      ]}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading && (\n        <div style={{ padding: '16px' }}>\n          <LoadingPageSpinner />\n        </div>\n      )}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          title={t`No Controllers available`}\n          description={notListedMessage}\n        />\n      ) : null}\n\n      {isOpen && !loading && !noData && controllers && (\n        <>\n          <DescriptionList isHorizontal>\n            <DescriptionListGroup>\n              <DescriptionListTerm>\n                {t`Execution Environment`}\n              </DescriptionListTerm>\n              <DescriptionListDescription>{image}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <Flex>\n                  <FlexItem>\n                    <APISearchTypeAhead\n                      loadResults={(name) => fetchTags(image, name)}\n                      onClear={() => {\n                        setTag(null);\n                        setTagSelection([]);\n                      }}\n                      onSelect={(event, value) => {\n                        const digest = digestByTag[value.toString()];\n                        setTag(digest && value.toString());\n                        setTagSelection([{ id: value, name: value }]);\n                        setDigest(digest);\n                      }}\n                      placeholderText={t`Select a tag`}\n                      results={tagResults}\n                      selections={tagSelection}\n                      toggleIcon={<TagIcon />}\n                    />\n                  </FlexItem>\n                  <FlexItem />\n                </Flex>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {digest && (\n              <>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    <ShaLabel grey long digest={digest} />\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              </>\n            )}\n          </DescriptionList>\n          <Spacer />\n          <Trans>\n            Click on the Controller URL that you want to use the above execution\n            environment in, and it will launch that Controller&apos;s console.\n            Log in (if necessary) and follow the steps to complete the\n            configuration.\n          </Trans>\n          <br />\n          {!unsafeLinksSupported && (\n            <Trans>\n              <b>Note:</b> The following links may be blocked by your browser.\n              Copy and paste the external link manually.\n            </Trans>\n          )}\n          <Spacer />\n\n          <Flex>\n            <FlexItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => setInputText(text)}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                params={controllerParams}\n                filterConfig={[\n                  {\n                    id: 'host__icontains',\n                    title: t`Controller name`,\n                  },\n                ]}\n              />\n            </FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n            <FlexItem>\n              <Pagination\n                params={controllerParams}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                count={controllerCount}\n                isTop\n              />\n            </FlexItem>\n          </Flex>\n\n          <AppliedFilters\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            params={controllerParams}\n            ignoredParams={['page_size', 'page']}\n            niceNames={{\n              host__icontains: t`Controller name`,\n            }}\n          />\n\n          <Spacer />\n          {renderControllers()}\n          <Spacer />\n\n          <Pagination\n            params={controllerParams}\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            count={controllerCount}\n            isTop\n          />\n          <Spacer />\n          <div>{notListedMessage}</div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import { dom, parse } from 'antsibull-docs';\nimport React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderPluginLink: (\n    pluginName: string,\n    pluginType: string,\n    text: React.ReactNode | undefined,\n  ) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  private formatPartError(part: dom.ErrorPart): React.ReactNode {\n    return <span className='error'>ERROR while parsing: {part.message}</span>;\n  }\n\n  private formatPartBold(part: dom.BoldPart): React.ReactNode {\n    return <b>{part.text}</b>;\n  }\n\n  private formatPartCode(part: dom.CodePart): React.ReactNode {\n    return <span className='inline-code'>{part.text}</span>;\n  }\n\n  private formatPartHorizontalLine(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    part: dom.HorizontalLinePart,\n  ): React.ReactNode {\n    return <hr />;\n  }\n\n  private formatPartItalic(part: dom.ItalicPart): React.ReactNode {\n    return <i>{part.text}</i>;\n  }\n\n  private formatPartLink(part: dom.LinkPart): React.ReactNode {\n    return this.props.renderDocLink(part.text, part.url);\n  }\n\n  private formatPartModule(part: dom.ModulePart): React.ReactNode {\n    return this.props.renderPluginLink(part.fqcn, 'module', undefined);\n  }\n\n  private formatPartRstRef(part: dom.RSTRefPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartURL(part: dom.URLPart): React.ReactNode {\n    return (\n      <a href={part.url} target='_blank' rel='noreferrer'>\n        {part.url}\n      </a>\n    );\n  }\n\n  private formatPartText(part: dom.TextPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartEnvVariable(part: dom.EnvVariablePart): React.ReactNode {\n    return <span className='inline-code'>{part.name}</span>;\n  }\n\n  private formatPartOptionNameReturnValue(\n    part: dom.OptionNamePart | dom.ReturnValuePart,\n  ): React.ReactNode {\n    const content =\n      part.value === undefined ? (\n        <span className='inline-code'>\n          <b>{part.name}</b>\n        </span>\n      ) : (\n        <span className='inline-code'>\n          {part.name}={part.value}\n        </span>\n      );\n    if (!part.plugin) {\n      return content;\n    }\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      content,\n    );\n  }\n\n  private formatPartOptionValue(part: dom.OptionValuePart): React.ReactNode {\n    return <span className='inline-code'>{part.value}</span>;\n  }\n\n  private formatPartPlugin(part: dom.PluginPart): React.ReactNode {\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      undefined,\n    );\n  }\n\n  private formatPart(part: dom.Part): React.ReactNode {\n    switch (part.type) {\n      case dom.PartType.ERROR:\n        return this.formatPartError(part as dom.ErrorPart);\n      case dom.PartType.BOLD:\n        return this.formatPartBold(part as dom.BoldPart);\n      case dom.PartType.CODE:\n        return this.formatPartCode(part as dom.CodePart);\n      case dom.PartType.HORIZONTAL_LINE:\n        return this.formatPartHorizontalLine(part as dom.HorizontalLinePart);\n      case dom.PartType.ITALIC:\n        return this.formatPartItalic(part as dom.ItalicPart);\n      case dom.PartType.LINK:\n        return this.formatPartLink(part as dom.LinkPart);\n      case dom.PartType.MODULE:\n        return this.formatPartModule(part as dom.ModulePart);\n      case dom.PartType.RST_REF:\n        return this.formatPartRstRef(part as dom.RSTRefPart);\n      case dom.PartType.URL:\n        return this.formatPartURL(part as dom.URLPart);\n      case dom.PartType.TEXT:\n        return this.formatPartText(part as dom.TextPart);\n      case dom.PartType.ENV_VARIABLE:\n        return this.formatPartEnvVariable(part as dom.EnvVariablePart);\n      case dom.PartType.OPTION_NAME:\n        return this.formatPartOptionNameReturnValue(part as dom.OptionNamePart);\n      case dom.PartType.OPTION_VALUE:\n        return this.formatPartOptionValue(part as dom.OptionValuePart);\n      case dom.PartType.PLUGIN:\n        return this.formatPartPlugin(part as dom.PluginPart);\n      case dom.PartType.RETURN_VALUE:\n        return this.formatPartOptionNameReturnValue(\n          part as dom.ReturnValuePart,\n        );\n    }\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    // TODO: pass current plugin's type and name, and (if role) the current entrypoint as well\n    const parsed = parse(text);\n\n    // Special case: result is a single paragraph consisting of a single text part\n    if (\n      parsed.length === 1 &&\n      parsed[0].length === 1 &&\n      parsed[0][0].type === dom.PartType.TEXT\n    ) {\n      return <span>{parsed[0][0].text}</span>;\n    }\n\n    const fragments = [];\n    for (const paragraph of parsed) {\n      for (const part of paragraph) {\n        fragments.push(this.formatPart(part));\n      }\n    }\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, _pluginName: string) {\n    const isDeprecated = doc.deprecated;\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ninterface FormFilename {\n  name: string;\n  original: boolean;\n}\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(\n            requiredFields,\n            disabledFields,\n            <ActionGroup key='actions'>\n              {save}\n              {cancel}\n            </ActionGroup>,\n          )}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields, extra?) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  selectedRepo: string;\n}\n\nexport const RepoSelector = ({ selectedRepo }: IProps) => {\n  const { featureFlags } = useContext();\n\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!featureFlags.display_repositories) {\n    return null;\n  }\n\n  const repoName =\n    {\n      community: t`Community`,\n      published: t`Published`,\n      rejected: t`Rejected`,\n      'rh-certified': t`Red Hat Certified`,\n      staging: t`Staging`,\n      validated: t`Validated`,\n    }[selectedRepo] || selectedRepo;\n\n  return (\n    <div className='breadcrumb-container'>\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText style={{ paddingLeft: 0 }} variant='plain'>\n              {t`Repository`}\n            </InputGroupText>\n            <InputGroupText\n              variant='plain'\n              style={{\n                backgroundColor: 'var(--pf-global--disabled-color--300)',\n                color: 'var(--pf-global--Color--100)',\n                height: '36px',\n              }}\n            >\n              {repoName}\n            </InputGroupText>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner /> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm' />}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm' />}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: Record<string, any>;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  TextInputTypes,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport { APISearchTypeAhead, AlertType, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          />\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          pageControls={extraControls}\n          title={title}\n        />\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n  deleteFromRepo: string;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n    deleteFromRepo,\n  } = props;\n\n  const lastCollectionVersion = collectionVersion && collections.length === 1;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <Trans>\n              Deleting{' '}\n              <b>\n                {deleteCollection.collection_version.name} v{collectionVersion}\n              </b>\n              , its data will be lost.\n            </Trans>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b>, its\n              data will be lost.\n            </Trans>\n          )}\n          {lastCollectionVersion ? (\n            <> {t`This will cause the entire collection to be deleted.`}</>\n          ) : null}\n          {deleteFromRepo ? (\n            <>\n              {' '}\n              {t`The collection will be deleted only from repository ${deleteFromRepo}.`}\n            </>\n          ) : null}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\nimport { DateComponent, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${role.github_user} logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  DropdownItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo, StatefulDropdown } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n  openModal: (namespace) => void;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content' size={10}>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    const { ai_deny_index } = this.context.featureFlags;\n    const summary_fields = namespace.summary_fields;\n    const userOwnsLegacyNamespace = summary_fields?.owners?.filter(\n      (n) => n.username == this.context.user.username,\n    ).length;\n\n    const showWisdom =\n      ai_deny_index &&\n      (this.context.user.is_superuser || userOwnsLegacyNamespace);\n\n    const dropdownItems = [];\n\n    dropdownItems.push(\n      <DropdownItem onClick={() => this.props.openModal(namespace)}>\n        {t`Ansible Lightspeed settings`}\n      </DropdownItem>,\n    );\n\n    if (showWisdom) {\n      cells.push(\n        <DataListCell key='menu' alignRight={true}>\n          <div style={{ float: 'right' }}>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        </DataListCell>,\n      );\n    }\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n\nLegacyNamespaceListItem.contextType = AppContext;\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Ansible\n        Lightspeed?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following legacy namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Ansible Lightspeed?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Ansible Lightspeed information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Ansible Lightspeed`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Ansible Lightspeed`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Additional details`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Ansible Lightspeed settings`\n          : isInDenyIndex\n          ? t`Opt in to Ansible Lightspeed`\n          : t`Opt out of Ansible Lightspeed`\n      }\n      variant='small'\n      titleIconVariant={isInDenyIndex ? null : 'warning'}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            <Trans>\n              <p>\n                Red Hat is working on exciting new Ansible content development\n                capabilities within the context of{' '}\n                <a\n                  href='https://www.redhat.com/en/engage/project-wisdom'\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  Ansible Lightspeed\n                </a>{' '}\n                <ExternalLinkAltIcon /> to help other automators build Ansible\n                content.\n              </p>\n            </Trans>\n            <br />\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n          <br />\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          {props.reference}\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  CollectionVersion,\n  CollectionVersionAPI,\n  Repositories,\n  SigningServiceAPI,\n} from 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlert,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTaskUrl,\n} from 'src/utilities';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersion;\n  addAlert: (alert) => void;\n  allRepositories: Repository[];\n  finishAction: () => void;\n  stagingRepoNames: string[];\n  rejectedRepoName: string;\n}\n\nexport const ApproveModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [fixedRepos, setFixedRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const context = useContext();\n\n  function approve() {\n    let error = '';\n\n    async function approveAsync() {\n      setLoading(true);\n\n      let reapprove = false;\n\n      let originRepoName = props.collectionVersion.repository_list.find(\n        (repo) =>\n          props.stagingRepoNames.includes(repo) ||\n          repo == props.rejectedRepoName,\n      );\n\n      // origin repo is not staging or rejected, so this is reapprove process, user can add collection to approved repos\n      if (!originRepoName) {\n        reapprove = true;\n        originRepoName = fixedRepos[0];\n      }\n\n      const reposToApprove = [];\n\n      // fill repos that are actualy needed to approve, some of them may already contain the collection, those dont need to be approved again\n      // this handles the possible inconsistent state\n      selectedRepos.forEach((repo) => {\n        if (!fixedRepos.includes(repo)) {\n          reposToApprove.push(repo);\n        }\n      });\n\n      const repositoriesRef = props.allRepositories\n        .filter((repo) => reposToApprove.includes(repo.name))\n        .map((repo) => repo.pulp_href);\n\n      error = t`Repository name ${originRepoName} not found.`;\n      const repoData = await Repositories.getRepository({\n        name: originRepoName,\n      });\n      if (repoData.data.results.length == 0) {\n        throw new Error();\n      }\n      error = '';\n\n      const pulp_id = parsePulpIDFromURL(repoData.data.results[0].pulp_href);\n\n      error = t`Collection with id ${props.collectionVersion.id} not found.`;\n      const collectionData = await CollectionVersionAPI.get(\n        props.collectionVersion.id,\n      );\n      error = '';\n\n      const autosign = context.settings.GALAXY_AUTO_SIGN_COLLECTIONS;\n      let signingService_href = null;\n\n      if (autosign) {\n        const signingServiceName =\n          context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n        });\n        if (signingList.data.results.length > 0) {\n          signingService_href = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      let promiseCopyOrMove = null;\n      if (reapprove) {\n        // reapprove takes first\n        promiseCopyOrMove = Repositories.copyCollectionVersion(\n          pulp_id,\n          [collectionData.data.pulp_href],\n          repositoriesRef,\n          signingService_href,\n        );\n      } else {\n        promiseCopyOrMove = Repositories.moveCollectionVersion(\n          pulp_id,\n          [collectionData.data.pulp_href],\n          repositoriesRef,\n          signingService_href,\n        );\n      }\n\n      const task = await promiseCopyOrMove;\n      await waitForTaskUrl(task['data'].task);\n\n      setLoading(false);\n      props.finishAction();\n      props.addAlert({\n        title: t`Certification status for collection \"${props.collectionVersion.namespace} ${props.collectionVersion.name} v${props.collectionVersion.version}\" has been successfully updated.`,\n        variant: 'success',\n        description: '',\n      });\n    }\n\n    approveAsync().catch(() => {\n      setLoading(false);\n\n      addAlert({\n        title: t`Failed to approve collection.`,\n        variant: 'danger',\n        description: error,\n      });\n    });\n  }\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function loadRepos(params, setRepositoryList, setLoading, setItemsCount) {\n    // modify params\n    const par = { ...params };\n    par['pulp_label_select'] = 'pipeline=approved';\n    par['ordering'] = par['sort'];\n    delete par['sort'];\n    setLoading(true);\n\n    Repositories.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  useEffect(() => {\n    const fixedReposLocal = [];\n    const selectedReposLocal = [];\n\n    // check for approval repos that are already in collection and select them in UI\n    // this is handling of situation when collection is in inconsistent state\n    props.collectionVersion.repository_list.forEach((repo) => {\n      const count = props.allRepositories.filter((r) => r.name == repo).length;\n      if (count > 0) {\n        fixedReposLocal.push(repo);\n        selectedReposLocal.push(repo);\n      }\n    });\n\n    setSelectedRepos(selectedReposLocal);\n    setFixedRepos(fixedReposLocal);\n  }, []);\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={approve}\n            variant='primary'\n            isDisabled={\n              selectedRepos.length - fixedRepos.length <= 0 || loading\n            }\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          <MultipleRepoSelector\n            allRepositories={props.allRepositories}\n            fixedRepos={fixedRepos}\n            selectedRepos={selectedRepos}\n            setSelectedRepos={setSelectedRepos}\n            loadRepos={loadRepos}\n          />\n          {loading && <Spinner />}\n        </section>\n\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  RadioRow,\n  SortTable,\n} from 'src/components';\n\ninterface IProps {\n  allRepositories: Repository[];\n  fixedRepos: string[];\n  loadRepos: (params, setRepositoryList, setLoading, setItemsCount) => void;\n  selectedRepos: string[];\n  setSelectedRepos: (selectedRepos: string[]) => void;\n  singleSelectionOnly?: boolean;\n  hideFixedRepos?: boolean;\n}\n\nexport const MultipleRepoSelector = (props: IProps) => {\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<Repository[]>([]);\n  const [itemsCount, setItemsCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  function changeSelection(name) {\n    if (props.fixedRepos.includes(name)) {\n      return;\n    }\n\n    const checked = props.selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      props.setSelectedRepos(\n        props.selectedRepos.filter((element) => element != name),\n      );\n    } else {\n      // add\n      props.setSelectedRepos([...props.selectedRepos, name]);\n    }\n  }\n\n  function renderLabels() {\n    const labels = (\n      <>\n        <LabelGroup>\n          {props.selectedRepos.map((name) => {\n            let label = null;\n            if (props.fixedRepos.includes(name)) {\n              if (!props.hideFixedRepos) {\n                label = <Label>{name}</Label>;\n              }\n            } else {\n              label = (\n                <Label onClose={() => changeSelection(name)}>{name}</Label>\n              );\n            }\n            return <>{label} </>;\n          })}\n        </LabelGroup>\n      </>\n    );\n\n    return (\n      <>\n        <Flex>\n          <FlexItem>\n            <b>{t`Selected`}</b>\n          </FlexItem>\n          <FlexItem>{labels}</FlexItem>\n        </Flex>\n      </>\n    );\n  }\n\n  useEffect(() => {\n    props.loadRepos(params, setRepositoryList, setLoading, setItemsCount);\n  }, [params, props.allRepositories]);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectAll() {\n      props.setSelectedRepos(props.allRepositories.map((a) => a.name));\n      setIsSelectorChecked(true);\n    }\n\n    function selectPage() {\n      const newRepos = [...props.selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (!props.selectedRepos.includes(repo.name)) {\n          newRepos.push(repo.name);\n        }\n      });\n\n      props.setSelectedRepos(newRepos);\n      setIsSelectorChecked(true);\n    }\n\n    function deselectAll() {\n      props.setSelectedRepos(props.fixedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function deselectPage() {\n      const newSelectedRepos = props.selectedRepos.filter(\n        (repo) =>\n          props.fixedRepos.includes(repo) ||\n          !repositoryList.find((repo2) => repo2.name == repo),\n      );\n      props.setSelectedRepos(newSelectedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function onToggleCheckbox() {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={selectAll}\n        key='select-all'\n      >{t`Select all (${props.allRepositories.length} items)`}</DropdownItem>,\n      <DropdownSeparator key='separator' />,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${props.allRepositories.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <>\n                {!props.singleSelectionOnly && (\n                  <CheckboxRow\n                    rowIndex={i}\n                    key={repo.name}\n                    isSelected={props.selectedRepos.includes(repo.name)}\n                    onSelect={() => {\n                      changeSelection(repo.name);\n                    }}\n                    isDisabled={props.fixedRepos.includes(repo.name)}\n                    data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n                  >\n                    <td>\n                      <div>{repo.name}</div>\n                      <div>{repo.description}</div>\n                    </td>\n                  </CheckboxRow>\n                )}\n\n                {props.singleSelectionOnly && (\n                  <>\n                    <RadioRow\n                      rowIndex={i}\n                      key={repo.name}\n                      isSelected={props.selectedRepos.includes(repo.name)}\n                      onSelect={() => {\n                        props.setSelectedRepos([repo.name]);\n                      }}\n                      isDisabled={props.fixedRepos.includes(repo.name)}\n                      data-cy={`ApproveModal-RadioRow-row-${repo.name}`}\n                    >\n                      <td>\n                        <div>{repo.name}</div>\n                        <div>{repo.description}</div>\n                      </td>\n                    </RadioRow>\n                  </>\n                )}\n              </>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {renderLabels()}\n      <div className='toolbar hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            {!props.singleSelectionOnly && (\n              <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n            )}\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => {\n                  setInputText(text);\n                }}\n                updateParams={(p) => setParams(p)}\n                params={params}\n                filterConfig={[\n                  {\n                    id: 'name__icontains',\n                    title: t`Repository`,\n                  },\n                ]}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n          isTop\n        />\n      </div>\n      <div>\n        <AppliedFilters\n          updateParams={(p) => {\n            setParams(p);\n            setInputText('');\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort']}\n          niceNames={{\n            name__icontains: t`Name`,\n          }}\n        />\n      </div>\n\n      {loading ? <Spinner /> : renderTable()}\n\n      <div className='footer'>\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n        />\n      </div>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  CollectionVersionSearch,\n  Repositories,\n  SigningServiceAPI,\n} from 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport {\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  SortTable,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  RepositoriesUtils,\n  errorMessage,\n  parsePulpIDFromURL,\n  taskAlert,\n} from 'src/utilities';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  closeAction: () => void;\n  addAlert: (alert: AlertType) => void;\n}\n\nexport const CopyCollectionToRepositoryModal = (props: IProps) => {\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [repositoryList, setRepositoryList] = useState<Repository[]>([]);\n  const [fixedRepos, setFixedRepos] = useState<string[]>([]);\n  const [selectedRepos, setSelectedRepos] = useState<string[]>([]);\n  const [inputText, setInputText] = useState('');\n  const [itemsCount, setItemsCount] = useState(0);\n  // const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const context = useContext();\n\n  useEffect(() => {\n    loadRepos();\n    loadAssociatedRepoList();\n  }, []);\n\n  useEffect(() => {\n    loadRepos();\n  }, [params]);\n\n  const loadRepos = async () => {\n    const par = { ...params };\n    par['ordering'] = par['sort'];\n    par['name__contains'] = inputText;\n    delete par['sort'];\n\n    setLoading(true);\n\n    const repos = await Repositories.list(par);\n\n    setItemsCount(repos.data.count);\n    setRepositoryList(repos.data.results);\n    setLoading(false);\n  };\n\n  const loadAllRepos = () => {\n    setLoading(true);\n    RepositoriesUtils.listAll().then((repos) => {\n      setSelectedRepos(repos.map((repo) => repo.name));\n      setRepositoryList(repos);\n      setLoading(false);\n    });\n  };\n\n  const loadAssociatedRepoList = async () => {\n    const repoList = await RepositoriesUtils.getCollectionRepoList(\n      props.collection,\n    );\n    setFixedRepos(repoList);\n  };\n\n  const changeSelection = (name: string) => {\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      setSelectedRepos(selectedRepos.filter((element) => element != name));\n    } else {\n      // add\n      setSelectedRepos([...selectedRepos, name]);\n    }\n  };\n\n  const copyToRepositories = async () => {\n    setLoading(true);\n    const { collection_version, repository } = props.collection;\n\n    const pulpId = parsePulpIDFromURL(repository.pulp_href);\n\n    const signingServiceName =\n      context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n    let signingService = null;\n    try {\n      const signingList = await SigningServiceAPI.list({\n        name: signingServiceName,\n      });\n      signingService = signingList.data.results[0].pulp_href;\n    } catch {\n      setLoading(false);\n      props.addAlert({\n        title: t`Failed to copy collection version.`,\n        variant: 'danger',\n        description: t`Signing service ${signingServiceName} not found`,\n      });\n      return;\n    }\n\n    const repoHrefs = repositoryList\n      .filter((repo) => selectedRepos.includes(repo.name))\n      .map((repo) => repo.pulp_href);\n\n    Repositories.copyCollectionVersion(\n      pulpId,\n      [collection_version.pulp_href],\n      repoHrefs,\n      signingService,\n    )\n      .then(({ data }) => {\n        selectedRepos.map((repo) => {\n          props.addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${collection_version.namespace}.${collection_version.name} v${collection_version.version} from \"${repository.name}\" to repository \"${repo}\".`,\n            ),\n          );\n        });\n      })\n      .catch((e) => {\n        setLoading(false);\n        props.addAlert({\n          variant: 'danger',\n          title: t`Collection ${collection_version.namespace}.${collection_version.name} v${collection_version.version} could not be copied.`,\n          description: errorMessage(e.status, e.statusText),\n        });\n      });\n  };\n\n  const renderLabels = (repos: string[]) => {\n    const labels = (\n      <LabelGroup>\n        {repos.map((name, i) => (\n          <Label key={i} onClose={() => changeSelection(name)}>\n            {name}\n          </Label>\n        ))}\n      </LabelGroup>\n    );\n    return (\n      <Flex>\n        <FlexItem>\n          <b>{t`Selected`}</b>\n        </FlexItem>\n        <FlexItem>{labels}</FlexItem>\n      </Flex>\n    );\n  };\n\n  const renderMultipleSelector = () => {\n    const onToggle = (isOpen: boolean) => {\n      setIsSelectorOpen(isOpen);\n    };\n\n    const onFocus = () => {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    };\n\n    const onSelect = () => {\n      setIsSelectorOpen(false);\n      onFocus();\n    };\n\n    const selectAll = () => {\n      loadAllRepos();\n      setIsSelectorChecked(true);\n    };\n\n    const selectPage = () => {\n      setSelectedRepos(repositoryList.map((repo) => repo.name));\n      setIsSelectorChecked(true);\n    };\n\n    const deselectAll = () => {\n      setSelectedRepos([]);\n      setIsSelectorChecked(false);\n    };\n\n    const deselectPage = () => {\n      setSelectedRepos([]);\n      setIsSelectorChecked(false);\n    };\n\n    const onToggleCheckbox = () => {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    };\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={selectAll}\n        key='select-all'\n      >{t`Select all (${itemsCount} items)`}</DropdownItem>,\n      <DropdownSeparator key='separator' />,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${itemsCount} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  };\n\n  const renderTable = () => {\n    if (!props.collection) {\n      return;\n    }\n\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <CheckboxRow\n                rowIndex={i}\n                key={repo.name}\n                isSelected={\n                  fixedRepos.includes(repo.name) ||\n                  selectedRepos.includes(repo.name)\n                }\n                onSelect={() => {\n                  changeSelection(repo.name);\n                }}\n                isDisabled={fixedRepos.includes(repo.name)}\n                data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n              >\n                <td>\n                  <div>{repo.name}</div>\n                  <div>{repo.description}</div>\n                </td>\n              </CheckboxRow>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={() => copyToRepositories()}\n            variant='primary'\n            isDisabled={selectedRepos.length <= 0 || loading}\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          {renderLabels(selectedRepos)}\n          <div className='toolbar hub-toolbar'>\n            <Toolbar>\n              <ToolbarGroup>\n                <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n                <ToolbarItem>\n                  <CompoundFilter\n                    inputText={inputText}\n                    onChange={(text) => {\n                      setInputText(text);\n                    }}\n                    updateParams={(p) => setParams(p)}\n                    params={params}\n                    filterConfig={[\n                      {\n                        id: 'name__icontains',\n                        title: t`Repository`,\n                      },\n                    ]}\n                  />\n                </ToolbarItem>\n              </ToolbarGroup>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort']}\n              niceNames={{\n                name__icontains: t`Name`,\n              }}\n            />\n          </div>\n\n          {loading ? <Spinner /> : renderTable()}\n\n          <div className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n            />\n          </div>\n        </section>\n      </Modal>\n    </>\n  );\n};\n","import { msg } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n  static APPROVED = 'approved';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': msg`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': msg`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': msg`Import and move to staging`,\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': msg`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': msg`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.collection_sync': msg`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.collections.import_collection': msg`Pulp ansible: Import collection`,\n    'pulp_ansible.app.tasks.collections.sync': msg`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': msg`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.copy.copy_content': msg`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.roles.synchronize': msg`Pulp Ansible: Roles synchronize`,\n    'pulp_container.app.tasks.build_image_from_containerfile': msg`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': msg`Pulp container: General multi delete`,\n    'pulp_container.app.tasks.recursive_add_content': msg`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': msg`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.synchronize': msg`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.tag_image': msg`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': msg`Pulp container: Untage image`,\n    'pulpcore.app.tasks.export.pulp_export': msg`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': msg`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.add_and_remove': msg`Pulpcore: Add and remove`,\n    'pulpcore.app.tasks.repository.delete_version': msg`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': msg`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': msg`Pulpcore: Upload commit`,\n    'pulpcore.plugin.tasking.add_and_remove': msg`Pulpcore: Add or remove`,\n    'pulpcore.tasking.tasks.base.general_create': msg`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_delete': msg`Pulpcore: General delete`,\n    'pulpcore.tasking.tasks.base.general_update': msg`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.import_repository_version': msg`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': msg`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': msg`Pulpcore: Repair all artifacts`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': msg`Manage ansible repositories.`,\n    'galaxy.collection_admin': msg`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': msg`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': msg`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': msg`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': msg`Manage collection remotes.`,\n    'galaxy.content_admin': msg`Manage all content types.`,\n    'galaxy.execution_environment_admin': msg`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': msg`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': msg`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': msg`Push, and change execution environments.`,\n    'galaxy.group_admin': msg`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': msg`View, add, remove and change synclists.`,\n    'galaxy.task_admin': msg`View, and cancel any task.`,\n    'galaxy.user_admin': msg`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': msg`Allow all actions on a task.`,\n    'core.taskschedule_owner': msg`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import { i18n } from '@lingui/core';\nimport * as moment from 'moment';\n\n// remember to update lingui.config.js as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nconst language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: '/', component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ninterface ContextFragment {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\", \"/beta/\" or \"/preview/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/preview/', '/')\n          .replace('/beta/', '/')\n          .replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n  url = url.replaceAll('//', '/');\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  landingPage = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n}\n\nexport const namespaceBreadcrumb = () =>\n  ({\n    namespaces: { name: t`Namespaces`, url: formatPath(Paths.namespaces) },\n    partners: { name: t`Partners`, url: formatPath(Paths.partners) },\n  }[NAMESPACE_TERM]);\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoURL(distribution_base_path, view_published = false) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  // repo/distro \"published\" is special; not related to repo pipeline type\n  if (distribution_base_path === 'published' && view_published === false) {\n    return `${host}${API_BASE_PATH}`;\n  }\n\n  return `${host}${API_BASE_PATH}content/${distribution_base_path}/`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superadmin;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  multiplier?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to starting with a 2s wait, increasing the wait time 1.5x each time, with max 10 attempts\n  // 2000, 1.5, 10 = ~226s ; 500, 1.5, 10 = ~57s\n  const { waitMs = 2000, multiplier = 1.5, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, {\n          ...options,\n          waitMs: Math.round(waitMs * multiplier),\n          bailAfter: bailAfter - 1,\n        }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from 'src/utilities';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <Link\n          to={formatPath(Paths.taskDetail, {\n            task: parsePulpIDFromURL(task?.task || task),\n          })}\n        >\n          detail page{' '}\n        </Link>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from 'src/utilities';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  let description = e.toString();\n\n  if (e.response) {\n    // HTTP error\n    const { status, statusText } = e.response;\n\n    const err = mapErrorMessages(e);\n    const message = Object.values(err).join(' ');\n\n    description = message\n      ? errorMessage(status, statusText, message)\n      : errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description,\n  });\n\n  callback();\n};\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  RepositoriesUtils,\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n    deleteAll,\n    display_repositories,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (!display_repositories && !deleteAll) {\n      // cant display delete from repository when repositories are turned off\n      return null;\n    }\n\n    const caption = deleteAll\n      ? t`Delete entire collection from system`\n      : t`Delete collection from repository`;\n\n    const key = deleteAll ? 'delete-collection' : 'remove-collection';\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key={key}\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{caption}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem data-cy={key} key={key} onClick={onClick}>\n        {caption}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n    deleteAll,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n          deleteAll,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n    deleteAll,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n        deleteAll: deleteAll,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n    deleteFromRepo,\n  }) {\n    let promise = null;\n    if (deleteFromRepo) {\n      promise = RepositoriesUtils.deleteCollection(\n        deleteFromRepo,\n        collection.collection_version.pulp_href,\n      );\n    } else {\n      promise = CollectionAPI.deleteCollection(collection);\n    }\n\n    promise\n      .then((res) => {\n        if (!deleteFromRepo) {\n          const taskId = parsePulpIDFromURL(res.data.task);\n          return waitForTask(taskId);\n        }\n      })\n      .then(() => {\n        addAlert({\n          variant: 'success',\n          title: (\n            <Trans>\n              Collection &quot;{collection.collection_version.name}\n              &quot; has been successfully deleted.\n            </Trans>\n          ),\n        });\n\n        if (redirect) {\n          setState({ redirect });\n        }\n\n        if (load) {\n          load();\n        }\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { t } from '@lingui/macro';\nimport {\n  AnsibleDistributionAPI,\n  AnsibleRepositoryAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  Repositories,\n} from 'src/api';\nimport { Repository } from 'src/api/response-types/repositories';\nimport { waitForTaskUrl } from 'src/utilities';\nimport { parsePulpIDFromURL } from 'src/utilities/parse-pulp-id';\n\nexport class RepositoriesUtils {\n  private static async getAll(additionalParams = {}) {\n    let list = [];\n\n    const params = Object.keys(additionalParams).reduce((acc, key) => {\n      return acc + `&${key}=${encodeURIComponent(additionalParams[key])}`;\n    }, '');\n\n    let page = 0;\n    const pageSize = 100;\n    // watchdog, in case something terrible happened, loop maximum of 10 times. I hope 1000 repos limit is enough\n    // otherwise, doing more than 10 API calls is not acceptable either\n    for (let i = 0; i < 10; i++) {\n      const result = await Repositories.http.get(\n        `${Repositories.apiPath}?offset=${page}&limit=${pageSize}${params}`,\n      );\n\n      list = list.concat(result.data.results);\n      if (list.length >= result.data.count) {\n        return list;\n      }\n\n      page += pageSize;\n    }\n  }\n\n  public static listApproved(): Promise<Repository[]> {\n    return this.getAll({ pulp_label_select: 'pipeline=approved' });\n  }\n\n  public static listAll(): Promise<Repository[]> {\n    return this.getAll();\n  }\n\n  public static async deleteOrAddCollection(\n    repoName,\n    collectionVersion_pulp_href,\n    add,\n  ) {\n    let data = await Repositories.getRepository({ name: repoName });\n\n    if (data.data.results.length == 0) {\n      return Promise.reject({ error: t`Repository ${repoName} not found.` });\n    }\n\n    const repo = data.data.results[0];\n    const pulp_id = parsePulpIDFromURL(repo.pulp_href);\n\n    const addList = [];\n    const removeList = [];\n\n    if (add) {\n      addList.push(collectionVersion_pulp_href);\n    } else {\n      removeList.push(collectionVersion_pulp_href);\n    }\n\n    data = await Repositories.modify(\n      pulp_id,\n      addList,\n      removeList,\n      repo.latest_version_href,\n    );\n\n    data = await waitForTaskUrl(data.data['task']);\n  }\n\n  public static async deleteCollection(repoName, collectionVersion_pulp_href) {\n    return RepositoriesUtils.deleteOrAddCollection(\n      repoName,\n      collectionVersion_pulp_href,\n      false,\n    );\n  }\n\n  public static async addCollection(repoName, collectionVersion_pulp_href) {\n    return RepositoriesUtils.deleteOrAddCollection(\n      repoName,\n      collectionVersion_pulp_href,\n      true,\n    );\n  }\n\n  public static pushToOrFilterOutCollections(\n    selectedCollection: CollectionVersionSearch,\n    collections: CollectionVersionSearch[],\n  ): CollectionVersionSearch[] {\n    // check if collection is already selected\n    const selectedItem = collections.find(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href === selectedCollection.collection_version.pulp_href &&\n        repository.pulp_href === selectedCollection.repository.pulp_href,\n    );\n\n    // if collection is not selected, add it to selected items\n    if (!selectedItem) {\n      return [...collections, selectedCollection];\n    }\n\n    // unselect collection\n    return collections.filter(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href !== selectedCollection.collection_version.pulp_href ||\n        repository.pulp_href !== selectedCollection.repository.pulp_href,\n    );\n  }\n\n  public static async distributionByRepoName(name) {\n    const repository = (await AnsibleRepositoryAPI.list({ name }))?.data\n      ?.results?.[0];\n    if (!repository) {\n      return Promise.reject(t`Failed to find repository ${name}`);\n    }\n\n    const distribution = (\n      await AnsibleDistributionAPI.list({ repository: repository.pulp_href })\n    )?.data?.results?.[0];\n    if (!distribution) {\n      return Promise.reject(\n        t`Failed to find a distribution for repository ${name}`,\n      );\n    }\n\n    return distribution;\n  }\n\n  public static async getCollectionRepoList(\n    collection: CollectionVersionSearch,\n  ) {\n    const { name, namespace, version } = collection.collection_version;\n\n    // get repository list for selected collection\n    const collectionInRepos = await CollectionVersionAPI.list({\n      namespace,\n      name,\n      version,\n      page_size: 100000,\n      offset: 0,\n    });\n\n    const collectionRepos = collectionInRepos.data.data.map(\n      ({ repository }) => repository.name,\n    );\n\n    return collectionRepos;\n  }\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","getQueryString","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","DEFAULT_PAGE_SIZE","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","INSIGHTS_DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","STANDALONE_DEPLOYMENT_MODE","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","findDistroBasePathByRepo","distributions","repository","length","name","distro","find","base_path","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_HubAPI","API","_deleteCollection","_deleteCollectionVersion","_len","args","Array","_key","getUIPath","repo","path","_get","_getPrototypeOf","prototype","response","distributionPath","result","meta","count","collection","_this2","_collection$collectio","collection_version","namespace","is_deprecated","reject","AnsibleDistributionAPI","list","pulp_href","basePath","results","deprecated","res","err","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","distro_base_path","source","version","_this3","distros","distroBasePath","sent","_callee2","_context2","_x2","undefined","NamespaceAPI","PulpStatus","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","source_base_path","destination_base_path","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","_PulpAPI","for_object_type","newParams","permissionId","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","clearSetFieldsFromRequest","write_only_fields","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","_sign","_ref","_yield$AnsibleDistrib","_repository","_yield$AnsibleReposit","distribution","_name","updatedData","repository_name","_objectWithoutProperties","_excluded","AnsibleRepositoryAPI","t3","t2","t1","t0","t4","status","i18n","_","values","t8","t7","t6","t5","t9","SigningServiceAPI","CertificateUploadAPI","signed_collection","Repositories","pulp_id","collection_versions","destination_repositories","signing_service","add_content_units","remove_content_units","base_version","AnsibleRemoteAPI","uuid","body","version_href","collection_version_hrefs","collection_version_href","serviceName","containerId","pulp_type","signServicePath","postObj","manifest_signing_service","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","removePath","addPath","APISearchTypeAhead","_React$Component","props","loadResults","onClear","evt","textInput","target","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","typeaheadMulti","typeahead","React","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","chipGroupProps","_step","options","_iterator","_createForOfIteratorHelper","s","n","done","option","push","SelectOption","f","AlertList","alerts","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","alertIndex","_ref2","setAlerts","newList","_toConsumableArray","splice","closeAlertMixin","alertStateVariable","AppliedFilters","className","_ref$ignoredParams","ignoredParams","_ref$niceNames","niceNames","niceValues","updateParams","filters","getReduced","chips","isArray","marginRight","ChipGroup","_extends","categoryName","v","_niceValues$key","Chip","onClick","deleteParam","unsetFilter","renderGroup","Button","clearAllFilters","AnsibleRepositoryForm","_repository$pulp_labe","_repository$pulp_labe2","_remotes$find","allowEditName","errorMessages","onCancel","onSave","updateRepository","requiredFields","disabledFields","toError","bool","formGroup","fieldName","label","helperText","children","FormGroup","fieldId","HelperText","content","isRequired","validated","helperTextInvalid","inputField","TextInput","onChange","stringField","type","isValid","_useState","useState","_useState2","_slicedToArray","createDistribution","setCreateDistribution","_useState3","_useState4","disabledDistribution","setDisabledDistribution","_useState5","pulp_labels","hide_from_search","_useState6","hideFromSearch","setHideFromSearch","_useState7","pipeline","_useState8","setPipeline","_useState9","_useState10","disableHideFromSearch","setDisableHideFromSearch","_useState11","_useState12","remotes","setRemotes","_useState13","_useState14","remotesError","setRemotesError","loadRemotes","name__icontains","_ref3","_e$response","statusText","errorMessage","useEffect","selectedRemote","_ref4","_useState15","_useState16","selectedPipeline","setSelectedPipeline","_useState17","_useState18","selectOpen","setSelectOpen","selectOptions","staging","toString","approved","none","pipelineHelp","Trans","components","labelsHelp","Form","numericField","LazyDistributions","emptyText","repositoryHref","onLoad","_distributions$find","Checkbox","isChecked","_e","_repository$pulp_labe3","selectPipeline","entries","_ref5","_ref6","k","preventDefault","stopPropagation","PulpLabels","labels","marginTop","private","_event","_remotes$find2","_ref7","color","Spinner","size","ActionGroup","BaseHeader","_this$props","logo","pageControls","breadcrumbs","contextSelector","versionControl","cx","Title","headingLevel","Breadcrumbs","links","Breadcrumb","link","index","BreadcrumbItem","isActive","Link","to","CardListSwitcher","_ref$size","disp","view_type","iconClasses","ThLargeIcon","setParam","ListIcon","CollectionCard","d","namespace_metadata","is_signed","displaySignatures","menu","footer","featureFlags","useContext","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","display_repositories","TextContent","Text","component","TextVariants","small","Badge","isRead","formatPath","Paths","ansibleRepositoryDetail","CERTIFIED_REPO","SignatureBadge","isCompact","signState","collectionByRepo","namespaceDetail","CardBody","Tooltip","slice","CollectionNumericLabel","newline","CardFooter","CollectionContentList","toShow","summary","all","showing","keywords","_c$content_type","c","keywordMatch","match","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","val","placeholder","clickable","collectionContentDocsByRepo","EmptyStateCustom","icon","ExclamationTriangleIcon","DateComponent","date","moment","format","fromNow","SignSingleCertificateModal","onSubmit","Modal","ModalVariant","medium","actions","ButtonVariant","primary","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","FormSelect","FormSelectOption","_ref$signState","_ref$isCompact","Label","CheckCircleIcon","text","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","_submitCertificate","modalPagination","page_size","modalCollections","_this$props$collectio","requestParams","order_by","_this$props$collectio2","errorAlert","isOpenSignAllModal","sign","context","settings","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","_this$props$collectio3","isOpenSignModal","collectionVersion","deleteCollection","collections","deleteAll","promise","deleteCollectionVersion","RepositoriesUtils","taskId","parsePulpIDFromURL","task","topVersion","isDeletionPending","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","DEFAULT_PAGINATION_OPTIONS","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","copyCollectionToRepositoryModal","DeleteCollectionUtils","getUsedbyDependencies","addAlert","include_related","prevProps","collectionsCount","activeTab","_this$state","urlKeys","latestVersion","pulp_created","_this$context$feature","display_signatures","can_upload_signatures","isLatestVersion","collectionName","Navigate","canSign","canSignNamespace","hasPermission","dropdownItems","deleteMenuOption","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","copyToRepository","Boolean","issueUrl","deleteFromRepo","ImportModal","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","isInline","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","load","CopyCollectionToRepositoryModal","closeAction","RepoSelector","selectedRepo","single","loadingVariant","Flex","FlexItem","href","rel","ExternalLinkAltIcon","StatefulDropdown","items","renderTabs","_this4","related_fields","my_permissions","active","_this$props2","pathParams","reduced","ignoreParams","tabs","collectionDocsIndexByRepo","collectionContentListByRepo","collectionImportLogByRepo","collectionDependenciesByRepo","collectionDistributionsByRepo","LinkTabs","_this$state$versionTo","_this5","upload","reload","_ref8","_this6","setDeprecation","_err$response2","warning","AppContext","LoadingPageSpinner","Bullseye","width","height","DownloadSignatureGridItem","show","setShow","signatures","setSignatures","isLoading","setIsLoading","getSignatures","message","padding","DownloadIcon","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","getDownloadURL","downloadURL","current","click","download","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","CollectionFilter","repositories","setRepositories","inputText","setInputText","selectedFilter","setSelectedFilter","loadRepos","pulp_label_select","repos","_context$featureFlags","displayTags","displayRepos","displayNamespaces","filterConfig","inputType","COLLECTION_FILTER_TAGS","ToolbarContent","marginLeft","CompoundFilter","selectFilter","false","true","CollectionList","collectionControls","itemCount","DataList","CollectionListItem","showNamespace","EmptyStateFilter","_ref$collection","dropdownMenu","synclistSwitch","uploadButton","cells","DataListCell","alignRight","DeprecatedTag","LabelGroup","direction","default","alignItems","alignSelf","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","inline","dependency","listDep","EmptyStateNoData","fqn","version_range","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","Sort","sort","repository_list","selectedID","currentTarget","replace","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","FilterIcon","renderInput","submitFilter","control","trim","SearchIcon","checkbox","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","typeaheadResults","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","hoverTip","clickTip","isCode","DeleteModal","isRemove","_ref$variant","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","Details","_ref$fields","fields","overflowWrap","whiteSpace","JSON","stringify","DetailList","actionContext","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderTableRow","sortHeaders","setItems","setParams","setItemCount","loading","setLoading","_ref2$data","handleHttpError","renderModals","action","_action$modal","modal","_action$modal2","knownFilters","noData","fromEntries","button","SortTable","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","EmptyStatePrimary","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","OutlinedQuestionCircleIcon","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","running","waiting","followMessages","handleScrollClick","messages","renderMessage","completed","failed","level","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","repoStatus","NOTCERTIFIED","NEEDSREVIEW","APPROVED","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","Status","_saveFile","errors","uploadProgress","uploadStatus","allRepos","selectedRepos","onlyStaging","fixedRepos","loadAllRepos","_repo$pulp_labels","_repo$pulp_labels2","setRepositoryList","setItemsCount","par","_ref$response","addAlertObj","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","Radio","MultipleRepoSelector","singleSelectionOnly","allRepositories","setSelectedRepos","hideFixedRepos","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","split","artifact","distributionByRepoName","sha256","getCancelToken","loaded","total","msg","cancel","ListPage","_class","condition","displayName","typeaheadQuery","translateTitle","klass","parseParamString","location","search","unauthorised","_renderModals","localizedFilterConfig","forEach","filterId","obj","optionId","hasObjectPermission","listQuery","navigate","resetCompoundFilter","Main","renderTable","localizedSortHeaders","updateParamsMixin","withRouter","PageWithTabs","headerDetails","listUrl","renderTab","tabUpdateParams","tab","routeParams","permission","_item$my_permissions","_item$my_permissions$","localizedTabs","visible","Tabs","NotFound","Page","transformParams","render","_transformParams","_item$my_permissions2","_item$my_permissions3","NonLazyDistributions","_distributions$map","_distributions$map$jo","setDistributions","setError","errorElement","ExclamationCircleIcon","LazyRepositories","_repositories$map","remoteHref","_ref$active","LoadingPageWithHeader","Skeleton","external_authentication","UI_EXTERNAL_LOGIN_URI","login","justifyContent","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","editing","TextArea","ReactMarkdown","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","NamespaceForm","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","parameter","newNamespaceNameValid","startsWith","handleSubmit","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","AccessTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","sortBy","renderGroupRow","_this$props3","urlPrefix","ListItemActions","kebabItems","_this$props4","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","_this7","_this$props5","pulpObjectType","selectRolesMessage","_this$props$showGroup","_this$props$showGroup2","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","addGroup","_group$object_roles","_this8","_this$props$showRoleS","addRole","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","bottom","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","PartnerHeader","setSelected","_this$context","model_permissions","showUserManagement","userManagementFilter","USER_GROUP_MGMT_PERMISSIONS","allPermissions","categories","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","typeAheadAriaLabel","_model_permissions$pe3","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","_step2","_iterator2","ret","contains","part","renderDocLink","renderPluginLink","fqcn","dom","ERROR","formatPartError","BOLD","formatPartBold","CODE","formatPartCode","HORIZONTAL_LINE","formatPartHorizontalLine","ITALIC","formatPartItalic","LINK","formatPartLink","MODULE","formatPartModule","RST_REF","formatPartRstRef","URL","formatPartURL","TEXT","formatPartText","ENV_VARIABLE","formatPartEnvVariable","OPTION_NAME","formatPartOptionNameReturnValue","OPTION_VALUE","formatPartOptionValue","PLUGIN","formatPartPlugin","RETURN_VALUE","parsed","parse","_step3","fragments","_iterator3","_step4","_iterator4","formatPart","_pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","save","renderForm","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","Switch","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","yaml","onEditorDidMount","editor","focus","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","repoName","community","published","rejected","InputGroupText","ResourcesForm","resources","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","onSelectProp","_ref$toggleType","_ref$isPlain","ariaLabel","Dropdown","toggle","renderToggle","open","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","typeToVariantMap","secondary","_ref$type","labelProps","OutlinedClockIcon","skipped","canceled","ExclamationIcon","SyncAltIcon","statusToProps","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","toUpperCase","collectionDocsPageByRepo","getContentEntry","a","b","parseLinks","searchBarRef","Nav","theme","NavList","filterString","filteredLinks","NavExpandable","capitalize","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","renderLinks","entry","selectedName","selectedType","base","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","PFTooltip","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","PFClipboardCopy","PFFileUpload","clearButtonText","_this$props$buttons","_this$props$kebabItem","buttons","anyButtons","anyKebab","textAlign","lastCollectionVersion","DeleteAnsibleRemoteModal","pending","setPending","DeleteAnsibleRepositoryModal","large","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","cancelButtonText","closeButtonAriaLabel","titleId","descriptionId","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","setRoles","rolesItemCount","setRolesItemCount","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","LegacyNamespaceListItem","_summary_fields$owner","namespace_url","legacyNamespace","namespaceid","ai_deny_index","summary_fields","userOwnsLegacyNamespace","owners","showWisdom","openModal","float","contextType","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","finishAction","removeFromDenyIndex","_ref2$response","addToDenyIndex","_ref3$response","expandableTitle","ApproveModal","setFixedRepos","prevAlerts","fixedReposLocal","selectedReposLocal","_approveAsync","reapprove","originRepoName","reposToApprove","repositoriesRef","repoData","collectionData","autosign","signingService_href","signingServiceName","signingList","promiseCopyOrMove","stagingRepoNames","rejectedRepoName","getRepository","GALAXY_AUTO_SIGN_COLLECTIONS","copyCollectionVersion","moveCollectionVersion","waitForTaskUrl","approveAsync","sortTableOptions","isSelectorChecked","setIsSelectorChecked","isSelectorOpen","setIsSelectorOpen","repositoryList","itemsCount","changeSelection","selectPage","newRepos","deselectPage","newSelectedRepos","repo2","DropdownSeparator","document","getElementById","splitButtonItems","DropdownToggleCheckbox","checked","renderMultipleSelector","loadAssociatedRepoList","repoList","getCollectionRepoList","copyToRepositories","_callee3","_props$collection","pulpId","signingService","repoHrefs","_context3","taskAlert","listAll","_props","NotFoundImage","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","activate","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","ansibleRemoteDetail","ansibleRemoteEdit","ansibleRemotes","ansibleRepositories","ansibleRepositoryEdit","approvalDashboard","notFound","partners","editNamespace","myCollections","myCollectionsByRepo","myNamespaces","signatureKeys","taskList","taskDetail","collectionDocsPage","collectionDocsIndex","collectionContentDocs","collectionContentList","collectionImportLog","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","Provider","I18nProvider","App","UI_BASE_PATH","replaceAll","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","collapsedText","expandedText","total_count","saveAs","Blob","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","getRepoURL","distribution_base_path","view_published","host","el","newObj","has_model_permission","is_superadmin","lastSynced","entity","last_sync_task","lastSyncStatus","_options$waitMs","waitMs","_options$multiplier","multiplier","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","round","taskUrl","statusCode","customMessage","custom","callback","outsideError","protocol","_namespace$related_fi","can_create_signatures","getUsedDependenciesByCollection","caption","LOCKED_ROLES_WITH_DESCRIPTION","ClassComponent","WithRouter","useLocation","useNavigate","useParams","routePath","_getCollectionRepoList","_distributionByRepoName","_addCollection","_deleteOrAddCollection","_getAll","additionalParams","reduce","acc","getAll","collectionVersion_pulp_href","addList","removeList","modify","latest_version_href","_x3","deleteOrAddCollection","_x4","_x5","_callee4","_context4","_x6","_x7","selectedCollection","cv","_callee5","_context5","_x8","_callee6","collectionInRepos","collectionRepos","_context6","offset","_x9","paramString","numericTypes","appendParam","cloneDeep","param","_i2","_deleteKeys","sortParams","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}