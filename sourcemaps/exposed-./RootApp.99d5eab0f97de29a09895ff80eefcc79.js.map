{"version":3,"file":"js/exposed-./RootApp.572e6f30bd633e6eed01.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/group.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/import.ts","webpack:///./src/api/legacy.ts","webpack:///./src/api/legacy-namespace.ts","webpack:///./src/api/legacy-role.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/task.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/user.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/components/approval/approval-row.tsx","webpack:///./src/components/approval/approve-modal.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/copy-collection-to-repository-modal/copy-collection-to-repository-modal.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/empty-state/empty-state-xs.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/copy-url.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/rbac/role-permissions.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-user.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repo-selector/multiple-repo-selector.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/download-count.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/shared/multi-repo-modal.tsx","webpack:///./src/components/shared/ratings.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/assign-roles.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/parse-pulp-id.ts","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/repository-remove-collection.ts","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/namespace-title.ts","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/repository-base-path.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/write-only-fields.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t5541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t1870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t7853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t2620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t6379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from execution-environment-registry\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(pulp_id: string, params?) {\n    return this.list(params, this.apiPath + pulp_id + '/versions/');\n  }\n\n  // delete(pulp_id: string)\n\n  sync(pulp_id: string, body = {}) {\n    return this.http.post(this.apiPath + pulp_id + '/sync/', body);\n  }\n\n  revert(pulp_id: string, version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(pulp_id: string, collection_version_hrefs) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      add_content_units: collection_version_hrefs,\n    });\n  }\n\n  removeContent(pulp_id: string, collection_version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/list_roles/');\n  }\n\n  addRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/add_role/');\n  }\n\n  myPermissions(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/my_permissions/');\n  }\n\n  removeRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/remove_role/');\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/copy_collection_version/',\n      body,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/move_collection_version/',\n      body,\n    );\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import axios from 'axios';\nimport { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from './response-types/collection';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  async setDeprecation({\n    collection_version: { namespace, name },\n    repository,\n    is_deprecated,\n  }: CollectionVersionSearch): Promise<{ data: { task: string } }> {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.patch(\n      `${namespace}/${name}`,\n      {\n        deprecated: !is_deprecated,\n      },\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/`,\n    );\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n\n    if (data.distro_base_path) {\n      return this.http.post(\n        `v3/plugin/ansible/content/${data.distro_base_path}/collections/artifacts/`,\n        formData,\n        config,\n      );\n    } else {\n      return this.http.post('v3/artifacts/collections/', formData, config);\n    }\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  async getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http\n      .get(\n        `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n      )\n      .then(({ data: { download_url } }) => download_url);\n  }\n\n  async deleteCollectionVersion({\n    collection_version: { namespace, name, version },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  async deleteCollection({\n    collection_version: { namespace, name },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  async getSignatures(repository, namespace, name, version) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n\n  getDetail(distroBasePath, namespace, name) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  move(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  copy(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      `${this.apiPath}?dependency=${namespace}.${collection}`,\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  // list(params?)\n}\n\nexport const CollectionVersionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nfunction smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class LegacyAPI extends BaseAPI {\n  sortParam = 'order_by';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  public mapPageToOffset(p) {\n    // override BaseAPI's function to persist page & page_size\n    return p;\n  }\n\n  list(params?, apiPath?) {\n    const newParams = { ...params };\n    if (newParams['sort'] && this.sortParam !== 'sort') {\n      newParams[this.sortParam] = newParams['sort'];\n      delete newParams['sort'];\n    }\n\n    return super.list(newParams, apiPath);\n  }\n}\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/namespaces/';\n  sortParam = 'sort';\n\n  // get(id)\n  // list(params?)\n}\n\nexport const LegacyNamespaceAPI = new API();\n","import { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = 'v1/roles/';\n  sortParam = 'order_by';\n\n  getContent(id) {\n    return super.get(id + '/content/');\n  }\n\n  getVersions(id) {\n    return super.get(id + '/versions/');\n  }\n\n  // list(params?)\n}\n\nexport const LegacyRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport { CollectionVersionSearch } from './response-types/collection';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository?: CollectionVersionSearch['repository'];\n  repository_name?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignCollectionVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignCollectionVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  async sign({ repository, repository_name: name, ...args }: SignProps) {\n    const distroBasePath = await repositoryBasePath(\n      name,\n      repository?.pulp_href,\n    ).catch((status) =>\n      Promise.reject({\n        response: { status },\n      }),\n    );\n\n    const updatedData = {\n      distro_base_path: distroBasePath,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n  useOrdering = true;\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Label,\n  LabelGroup,\n  Spinner,\n} from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { DateComponent, ListItemActions } from 'src/components';\nimport { IAppContextType } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  approve: (collectionVersion: CollectionVersionSearch) => void;\n  collectionVersion: CollectionVersionSearch;\n  context: IAppContextType;\n  isVersionUpdating: (collectionVersion: CollectionVersionSearch) => boolean;\n  openUploadCertificateModal: (\n    collectionVersion: CollectionVersionSearch,\n  ) => void;\n  reject: (collectionVersion: CollectionVersionSearch) => void;\n}\n\nexport const ApprovalRow = ({\n  approve,\n  collectionVersion,\n  context: { featureFlags },\n  isVersionUpdating,\n  openUploadCertificateModal,\n  reject,\n}: IProps) => {\n  const { collection_version: version, repository } = collectionVersion;\n\n  return (\n    <tr\n      data-cy={`ApprovalRow-${repository.name}-${version.namespace}-${version.name}`}\n    >\n      <td>{version.namespace}</td>\n      <td>{version.name}</td>\n      <td>\n        <Link\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: version.namespace,\n              collection: version.name,\n              repo: repository.name,\n            },\n            {\n              version: version.version,\n            },\n          )}\n        >\n          {version.version}\n        </Link>\n        <Button\n          variant={ButtonVariant.link}\n          onClick={() => {\n            download(\n              repository,\n              version.namespace,\n              version.name,\n              version.version,\n            );\n          }}\n        >\n          <DownloadIcon />\n        </Button>\n      </td>\n      <td>\n        <DateComponent date={version.pulp_created} />\n      </td>\n      <td>\n        <LabelGroup>{repository.name}</LabelGroup>\n      </td>\n      <td>{renderStatus(collectionVersion)}</td>\n      {renderButtons(collectionVersion)}\n    </tr>\n  );\n\n  function renderButtons(collectionVersion: CollectionVersionSearch) {\n    // not checking namespace permissions here, auto_sign happens API side, so is the permission check\n    const {\n      collection_version: version,\n      repository,\n      is_signed,\n    } = collectionVersion;\n    const {\n      can_upload_signatures,\n      collection_auto_sign,\n      require_upload_signatures,\n    } = featureFlags;\n    const pipeline = repository?.pulp_labels?.pipeline;\n\n    if (isVersionUpdating(collectionVersion) || !pipeline) {\n      return <ListItemActions />; // empty td;\n    }\n\n    const canUploadSignature = can_upload_signatures && !is_signed;\n    const mustUploadSignature = canUploadSignature && require_upload_signatures;\n    const autoSign = collection_auto_sign && !require_upload_signatures;\n\n    const approveButton = [\n      canUploadSignature && (\n        <React.Fragment key='upload'>\n          <Button onClick={() => openUploadCertificateModal(collectionVersion)}>\n            {t`Upload signature`}\n          </Button>{' '}\n        </React.Fragment>\n      ),\n      <Button\n        key='approve-button'\n        isDisabled={mustUploadSignature}\n        data-cy='approve-button'\n        onClick={() => approve(collectionVersion)}\n      >\n        {autoSign ? t`Sign and approve` : t`Approve`}\n      </Button>,\n    ].filter(Boolean);\n\n    const approveDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() => approve(collectionVersion)}\n        isDisabled={isDisabled}\n        key='approve'\n      >\n        {autoSign ? t`Sign and approve` : t`Approve`}\n      </DropdownItem>\n    );\n\n    const rejectDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() => reject(collectionVersion)}\n        isDisabled={isDisabled}\n        key='reject'\n      >\n        {t`Reject`}\n      </DropdownItem>\n    );\n\n    const importsLink = (\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: version.namespace,\n                name: version.name,\n                version: version.version,\n              },\n            )}\n          >\n            {t`View Import Logs`}\n          </Link>\n        }\n      />\n    );\n\n    if (pipeline === 'approved') {\n      return (\n        <ListItemActions\n          kebabItems={[\n            approveDropDown(true),\n            rejectDropDown(false),\n            importsLink,\n          ]}\n        />\n      );\n    }\n\n    if (pipeline === 'rejected') {\n      return (\n        <ListItemActions\n          kebabItems={[\n            approveDropDown(false),\n            rejectDropDown(true),\n            importsLink,\n          ]}\n        />\n      );\n    }\n\n    if (pipeline === 'staging') {\n      return (\n        <ListItemActions\n          kebabItems={[rejectDropDown(false), importsLink]}\n          buttons={approveButton}\n        />\n      );\n    }\n  }\n\n  function renderStatus(collectionVersion: CollectionVersionSearch) {\n    const { repository, is_signed } = collectionVersion;\n    const pipeline = repository?.pulp_labels?.pipeline;\n\n    if (isVersionUpdating(collectionVersion)) {\n      return <Spinner size='lg' />;\n    }\n\n    if (pipeline === 'approved') {\n      const { display_signatures } = featureFlags;\n      return (\n        <Label variant='outline' color='green' icon={<CheckCircleIcon />}>\n          {display_signatures && is_signed\n            ? t`Signed and approved`\n            : t`Approved`}\n        </Label>\n      );\n    }\n\n    if (pipeline === 'rejected') {\n      return (\n        <Label variant='outline' color='red' icon={<ExclamationCircleIcon />}>\n          {t`Rejected`}\n        </Label>\n      );\n    }\n\n    if (pipeline === 'staging') {\n      const { can_upload_signatures, require_upload_signatures } = featureFlags;\n      return (\n        <Label\n          variant='outline'\n          color='orange'\n          icon={<ExclamationTriangleIcon />}\n        >\n          {!is_signed && can_upload_signatures && require_upload_signatures\n            ? t`Needs signature and review`\n            : t`Needs review`}\n        </Label>\n      );\n    }\n  }\n\n  function download(\n    repository: CollectionVersionSearch['repository'],\n    namespace: string,\n    name: string,\n    version: string,\n  ) {\n    CollectionAPI.getDownloadURL(repository, namespace, name, version).then(\n      (downloadURL: string) => {\n        window.location.assign(downloadURL);\n      },\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport { AlertType, MultiRepoModal } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { parsePulpIDFromURL, waitForTaskUrl } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n  finishAction: () => void;\n}\n\nexport const ApproveModal = ({\n  addAlert: parentAddAlert,\n  closeAction,\n  collectionVersion,\n  finishAction,\n}: IProps) => {\n  const { settings } = useContext();\n  const { collection_version, repository } = collectionVersion;\n  const { namespace, name, version, pulp_href } = collection_version;\n\n  function approve({ addAlert, selectedRepos, setLoading }) {\n    let error = '';\n\n    async function approveAsync() {\n      const repo_id = parsePulpIDFromURL(repository.pulp_href);\n      const params = {\n        collection_versions: [pulp_href],\n        destination_repositories: selectedRepos.map((repo) => repo.pulp_href),\n      };\n\n      if (settings.GALAXY_AUTO_SIGN_COLLECTIONS) {\n        const signingServiceName = settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n          page_size: 1,\n        });\n        if (signingList.data.results.length) {\n          params['signing_service'] = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      const task = (\n        await AnsibleRepositoryAPI.moveCollectionVersion(repo_id, params)\n      )?.data?.task;\n      await waitForTaskUrl(task);\n\n      finishAction();\n      parentAddAlert({\n        title: t`Certification status for collection \"${namespace} ${name} v${version}\" has been successfully updated.`,\n        variant: 'success',\n      });\n    }\n\n    setLoading(true);\n    return approveAsync()\n      .catch(() =>\n        addAlert({\n          title: t`Failed to approve collection.`,\n          variant: 'danger',\n          description: error,\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <MultiRepoModal\n      closeAction={closeAction}\n      collectionVersion={collectionVersion}\n      pipeline='pipeline=approved'\n      submitAction={approve}\n    />\n  );\n};\n","import ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\nimport ThLargeIcon from '@patternfly/react-icons/dist/esm/icons/th-large-icon';\nimport cx from 'classnames';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts, namespaceTitle } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  className,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const nsTitle = namespaceTitle(\n    namespace || { name: collection_version.namespace },\n  );\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${nsTitle} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          {featureFlags.display_repositories ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Badge isRead>\n                  <Link\n                    to={formatPath(Paths.ansibleRepositoryDetail, {\n                      name: repository.name,\n                    })}\n                  >\n                    {repository.name === Constants.CERTIFIED_REPO\n                      ? t`Certified`\n                      : repository.name}\n                  </Link>\n                </Badge>\n              </Text>\n            </TextContent>\n          ) : null}\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {nsTitle}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport { namespaceTitle } from 'src/utilities';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  namespace: {\n    avatar_url: string;\n    name: string;\n    company: string;\n  };\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({ namespace, namespaceURL }: IProps) => {\n  const { avatar_url, name } = namespace;\n  const title = namespaceTitle(namespace);\n\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${title} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={title}>\n        <CardTitle>{getDescription(title, MAX_DESCRIPTION_LENGTH)}</CardTitle>\n      </Tooltip>\n      {title !== name ? (\n        <Tooltip content={name}>\n          <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n        </Tooltip>\n      ) : null}\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { List, ListItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}{' '}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React, { useState } from 'react';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { LoadingPageSpinner } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      const { namespace, name, version } = collectionVersion;\n\n      CollectionAPI.getSignatures(repository, namespace, name, version)\n        .then((res) => {\n          setSignatures(res.data.signatures);\n          setIsLoading(false);\n        })\n        .catch(({ code, message }) => {\n          addAlert(code, message);\n          setIsLoading(false);\n          setShow(false);\n        });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible-core&gt;=2.13.9\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {context.user.is_anonymous &&\n            !context.settings\n              .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                <div>\n                  <Trans>\n                    To download this collection, configure your client to\n                    connect to one of this repositories{' '}\n                    <Link\n                      to={formatPath(Paths.collectionDistributionsByRepo, {\n                        repo: repository.name,\n                        namespace: collection_version.namespace,\n                        collection: collection_version.name,\n                      })}\n                    >\n                      distributions\n                    </Link>\n                    .\n                  </Trans>\n                </div>\n                <a ref={downloadLinkRef} style={{ display: 'none' }} />\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`Requires Ansible`}</SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out' />\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const [repositories, setRepositories] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  const loadRepos = () => {\n    AnsibleRepositoryAPI.list({\n      name__icontains: inputText,\n      pulp_label_select: '!hide_from_search',\n    }).then((res) => {\n      const repos = res.data.results.map(({ name }) => ({\n        id: name,\n        title: name,\n      }));\n      setRepositories(repos);\n    });\n  };\n\n  useEffect(() => {\n    if (selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  useEffect(() => {\n    setInputText(props.params['repository_name'] || '');\n  }, [props.params.repository_name]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [inputText]);\n\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures, display_repositories } = context.featureFlags;\n  const displayTags = ignoredParams.includes('tags') === false;\n  const displayRepos =\n    ignoredParams.includes('repository_name') === false && display_repositories;\n  const displayNamespaces = ignoredParams.includes('namespace') === false;\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n      options: repositories,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'multiple' as const,\n      options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n        id: tag,\n        title: tag,\n      })),\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n              selectFilter={(selected) => {\n                setSelectedFilter(selected);\n              }}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  is_signed: t`Sign state`,\n                  tags: t`Tags`,\n                  keywords: t`Keywords`,\n                  repository_name: t`Repository`,\n                  namespace: t`Namespace`,\n                }}\n                niceValues={{\n                  is_signed: {\n                    false: t`unsigned`,\n                    true: t`signed`,\n                  },\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  collectionControls: (collection) => {\n    dropdownMenu?: React.ReactNode | null;\n    synclistSwitch?: React.ReactNode | null;\n    uploadButton?: React.ReactNode | null;\n  };\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    collectionControls,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              key={i}\n              collection={c}\n              displaySignatures={displaySignatures}\n              showNamespace\n              {...collectionControls(c)}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem />\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one.`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  CollectionRatings,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  chipGroupProps,\n  convertContentSummaryCounts,\n  namespaceTitle,\n} from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  displaySignatures: boolean;\n  dropdownMenu?: React.ReactNode | null;\n  showNamespace?: boolean;\n  synclistSwitch?: React.ReactNode | null;\n  uploadButton?: React.ReactNode | null;\n}\n\nexport const CollectionListItem = ({\n  collection: {\n    collection_version,\n    namespace_metadata: namespace,\n    repository,\n    is_signed,\n    is_deprecated,\n  },\n  displaySignatures,\n  dropdownMenu,\n  showNamespace,\n  synclistSwitch,\n  uploadButton,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const cells = [];\n\n  const nsTitle = namespaceTitle(\n    namespace || { name: collection_version.namespace },\n  );\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${nsTitle} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {nsTitle}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup {...chipGroupProps()}>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      <Flex\n        direction={{ default: 'column' }}\n        alignItems={{ default: 'alignItemsFlexEnd' }}\n      >\n        <Flex\n          direction={{ default: 'column' }}\n          alignItems={{ default: 'alignItemsFlexStart' }}\n        >\n          {synclistSwitch && <FlexItem>{synclistSwitch}</FlexItem>}\n          {uploadButton || dropdownMenu ? (\n            <FlexItem>\n              {uploadButton}\n              {dropdownMenu || <span className='hidden-menu-space' />}\n            </FlexItem>\n          ) : null}\n          <FlexItem>\n            <div>\n              <Trans>\n                Updated <DateComponent date={collection_version.pulp_created} />\n              </Trans>\n            </div>\n            <div>v{collection_version.version}</div>\n            <CollectionRatings\n              isList\n              namespace={collection_version.namespace}\n              name={collection_version.name}\n            />\n          </FlexItem>\n        </Flex>\n        <Flex\n          direction={{ default: 'row' }}\n          alignSelf={{ default: 'alignSelfFlexStart' }}\n        >\n          {featureFlags.display_repositories ? (\n            <FlexItem>\n              <Label variant='outline'>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name}\n                </Link>\n              </Label>\n            </FlexItem>\n          ) : null}\n          {displaySignatures ? (\n            <FlexItem>\n              <SignatureBadge\n                variant='outline'\n                signState={is_signed ? 'signed' : 'unsigned'}\n              />\n            </FlexItem>\n          ) : null}\n        </Flex>\n      </Flex>\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm' />}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport { AlertType, MultiRepoModal } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { errorMessage, parsePulpIDFromURL, taskAlert } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n}\n\nexport const CopyCollectionToRepositoryModal = ({\n  addAlert: parentAddAlert,\n  closeAction,\n  collectionVersion,\n}: IProps) => {\n  const { settings } = useContext();\n  const { collection_version, repository } = collectionVersion;\n  const { namespace, name, version, pulp_href } = collection_version;\n\n  async function copyToRepositories({ addAlert, selectedRepos, setLoading }) {\n    setLoading(true);\n\n    const repo_id = parsePulpIDFromURL(repository.pulp_href);\n    const params = {\n      collection_versions: [pulp_href],\n      destination_repositories: selectedRepos.map((repo) => repo.pulp_href),\n    };\n\n    const signingServiceName = settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n    if (signingServiceName) {\n      let signingService = null;\n      try {\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n          page_size: 1,\n        });\n        signingService = signingList.data.results[0].pulp_href;\n      } catch {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to copy collection version.`,\n          variant: 'danger',\n          description: t`Signing service ${signingServiceName} not found`,\n        });\n        return;\n      }\n\n      params['signing_service'] = signingService;\n    }\n\n    return AnsibleRepositoryAPI.copyCollectionVersion(repo_id, params)\n      .then(({ data }) => {\n        selectedRepos.forEach(({ name: repo }) =>\n          parentAddAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${namespace}.${name} v${version} from \"${repository.name}\" to repository \"${repo}\".`,\n            ),\n          ),\n        );\n        closeAction();\n      })\n      .catch((e) =>\n        addAlert({\n          variant: 'danger',\n          title: t`Collection ${namespace}.${name} v${version} could not be copied.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <MultiRepoModal\n      closeAction={closeAction}\n      collectionVersion={collectionVersion}\n      submitAction={copyToRepositories}\n    />\n  );\n};\n","import * as moment from 'moment';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\n\nexport const DateComponent = ({ date }: { date: string }) =>\n  date && (\n    <time dateTime={date}>\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    </time>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n  deleteFromRepo: string;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n    deleteFromRepo,\n  } = props;\n\n  const lastCollectionVersion = collectionVersion && collections.length === 1;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <Trans>\n              Deleting{' '}\n              <b>\n                {deleteCollection.collection_version.name} v{collectionVersion}\n              </b>\n              , its data will be lost.\n            </Trans>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b>, its\n              data will be lost.\n            </Trans>\n          )}\n          {lastCollectionVersion ? (\n            <> {t`This will cause the entire collection to be deleted.`}</>\n          ) : null}\n          {deleteFromRepo ? (\n            <>\n              {' '}\n              {t`The collection will be deleted only from repository ${deleteFromRepo}.`}\n            </>\n          ) : null}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      {icon ? <EmptyStateIcon icon={icon} /> : null}\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import React, { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateXs = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      variant='xs'\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React, { useEffect, useState } from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlert,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  inputText: '',\n};\n\nexport const PublishToControllerModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState(initialState.alerts);\n  const [controllers, setControllers] = useState(initialState.controllers);\n  const [controllerCount, setControllerCount] = useState(\n    initialState.controllerCount,\n  );\n  const [controllerParams, setControllerParams] = useState(\n    initialState.controllerParams,\n  );\n  const [digest, setDigest] = useState(initialState.digest);\n  const [digestByTag, setDigestByTag] = useState(initialState.digestByTag);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [tag, setTag] = useState(initialState.tag);\n  const [tagResults, setTagResults] = useState(initialState.tagResults);\n  const [tagSelection, setTagSelection] = useState(initialState.tagSelection);\n\n  const [inputText, setInputText] = useState(initialState.inputText);\n\n  useEffect(() => {\n    const { image, isOpen } = props;\n    if (isOpen) {\n      // load on open\n      fetchData(image);\n    } else {\n      // reset on close\n      setAlerts(initialState.alerts);\n      setControllers(initialState.controllers);\n      setControllerCount(initialState.controllerCount);\n      setControllerParams(initialState.controllerParams);\n      setDigest(initialState.digest);\n      setDigestByTag(initialState.digestByTag);\n      setLoading(initialState.loading);\n      setTag(initialState.tag);\n      setTagResults(initialState.tagResults);\n      setTagSelection(initialState.tagSelection);\n\n      setInputText(initialState.inputText);\n    }\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    fetchControllers();\n  }, [controllerParams]);\n\n  function fetchControllers() {\n    return ControllerAPI.list(controllerParams)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        setControllers(controllers);\n        setControllerCount(controllerCount);\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Controllers list could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        setDigestByTag(digestByTag);\n        setTagResults(tagResults);\n\n        return { digestByTag, tags };\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setAlerts([\n          ...alerts,\n          {\n            variant: 'danger',\n            title: t`Tags could not be displayed.`,\n            description: errorMessage(status, statusText),\n          },\n        ]);\n      });\n  }\n\n  function fetchData(image) {\n    const controllers = fetchControllers();\n    const tagsPromises = fetchTags(image).then(({ tags, digestByTag }) => {\n      // tags and digestByTag must be passed this way from fetchTags, otherwise, closure\n      // will see old value of both variables set in fetchTags\n      // and additionaly, tags state is not needed at all because of that\n\n      // preselect tag if present\n      let { digest, tag } = props;\n      tag ||= tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= digestByTag[tag]; // set digest by tag unless in props\n\n      setDigest(digest);\n      setTag(tag);\n      setTagSelection(tag ? [{ id: tag, name: tag }] : []);\n    });\n\n    Promise.all([controllers, tagsPromises]).then(() => {\n      setLoading(false);\n    });\n  }\n\n  function renderControllers() {\n    const { image, isOpen } = props;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  const { image, isOpen, onClose } = props;\n\n  // redirects to ./2.x (latest)\n  const docsLink = UI_DOCS_URL;\n  const noData =\n    controllers?.length === 0 &&\n    !filterIsSet(controllerParams, ['host__icontains']);\n\n  const notListedMessage = (\n    <>\n      {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n      {docsLink && (\n        <>\n          <a href={docsLink} target='_blank' rel='noreferrer'>\n            {t`Learn more`}\n          </a>{' '}\n          <ExternalLinkAltIcon />\n        </>\n      )}\n    </>\n  );\n\n  const Spacer = () => <div style={{ paddingTop: '24px' }} />;\n  const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n  return (\n    <Modal\n      variant='large'\n      title={t`Use in Controller`}\n      isOpen={isOpen}\n      onClose={onClose}\n      actions={[\n        <Button key='close' variant='primary' onClick={onClose}>\n          {t`Close`}\n        </Button>,\n      ]}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading && (\n        <div style={{ padding: '16px' }}>\n          <LoadingPageSpinner />\n        </div>\n      )}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          title={t`No Controllers available`}\n          description={notListedMessage}\n        />\n      ) : null}\n\n      {isOpen && !loading && !noData && controllers && (\n        <>\n          <DescriptionList isHorizontal>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Execution Environment`}</DescriptionListTerm>\n              <DescriptionListDescription>{image}</DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <Flex>\n                  <FlexItem>\n                    <APISearchTypeAhead\n                      loadResults={(name) => fetchTags(image, name)}\n                      onClear={() => {\n                        setTag(null);\n                        setTagSelection([]);\n                      }}\n                      onSelect={(event, value) => {\n                        const digest = digestByTag[value.toString()];\n                        setTag(digest && value.toString());\n                        setTagSelection([{ id: value, name: value }]);\n                        setDigest(digest);\n                      }}\n                      placeholderText={t`Select a tag`}\n                      results={tagResults}\n                      selections={tagSelection}\n                      toggleIcon={<TagIcon />}\n                    />\n                  </FlexItem>\n                  <FlexItem />\n                </Flex>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {digest && (\n              <>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    <ShaLabel grey long digest={digest} />\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              </>\n            )}\n          </DescriptionList>\n          <Spacer />\n          <Trans>\n            Click on the Controller URL that you want to use the above execution\n            environment in, and it will launch that Controller&apos;s console.\n            Log in (if necessary) and follow the steps to complete the\n            configuration.\n          </Trans>\n          <br />\n          {!unsafeLinksSupported && (\n            <Trans>\n              <b>Note:</b> The following links may be blocked by your browser.\n              Copy and paste the external link manually.\n            </Trans>\n          )}\n          <Spacer />\n\n          <Flex>\n            <FlexItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => setInputText(text)}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                params={controllerParams}\n                filterConfig={[\n                  {\n                    id: 'host__icontains',\n                    title: t`Controller name`,\n                  },\n                ]}\n              />\n            </FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n            <FlexItem>\n              <Pagination\n                params={controllerParams}\n                updateParams={(controllerParams) => {\n                  setControllerParams(controllerParams);\n                }}\n                count={controllerCount}\n                isTop\n              />\n            </FlexItem>\n          </Flex>\n\n          <AppliedFilters\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            params={controllerParams}\n            ignoredParams={['page_size', 'page']}\n            niceNames={{\n              host__icontains: t`Controller name`,\n            }}\n          />\n\n          <Spacer />\n          {renderControllers()}\n          <Spacer />\n\n          <Pagination\n            params={controllerParams}\n            updateParams={(controllerParams) => {\n              setControllerParams(controllerParams);\n            }}\n            count={controllerCount}\n            isTop\n          />\n          <Spacer />\n          <div>{notListedMessage}</div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport TagIcon from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm' />}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm' />}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >{t`Yes`}</AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >{t`No`}</AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector || null}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls || null}\n        </div>\n        {versionControl || null}\n\n        {children ? (\n          <div className='hub-header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  CollectionRatings,\n  CopyCollectionToRepositoryModal,\n  DeleteCollectionModal,\n  DownloadCount,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  canSignNamespace,\n  errorMessage,\n  namespaceTitle,\n  parsePulpIDFromURL,\n  repositoryRemoveCollection,\n  waitForTask,\n} from 'src/utilities';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  collectionsCount: number;\n  collection: CollectionVersionSearch;\n  actuallyCollection: CollectionDetailType;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalCollections: CollectionVersionSearch[];\n  modalPagination: {\n    page: number;\n    page_size: number;\n  };\n  deleteCollection: CollectionVersionSearch;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n  namespace: NamespaceType;\n  copyCollectionToRepositoryModal: CollectionVersionSearch;\n  deleteAll: boolean;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalCollections: null,\n      modalPagination: {\n        page: 1,\n        page_size: Constants.DEFAULT_PAGINATION_OPTIONS[0],\n      },\n      deleteCollection: null,\n      deleteAll: false,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n      namespace: null,\n      copyCollectionToRepositoryModal: null,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n\n    this.setState({ modalCollections: this.props.collections });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collections !== prevProps.collections) {\n      this.setState({ modalCollections: this.props.collections });\n    }\n  }\n\n  render() {\n    const {\n      activeTab,\n      actuallyCollection,\n      breadcrumbs,\n      className,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n      updateParams,\n    } = this.props;\n\n    const {\n      modalCollections,\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n      copyCollectionToRepositoryModal,\n    } = this.state;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.collection_version.pulp_created;\n\n    const {\n      display_signatures,\n      can_upload_signatures,\n      display_repositories,\n      ai_deny_index,\n    } = this.context.featureFlags;\n\n    const signedString = () => {\n      if (!display_signatures) {\n        return '';\n      }\n\n      return collection.is_signed ? t`(signed)` : t`(unsigned)`;\n    };\n\n    const isLatestVersion = (v) => {\n      return `${moment(v.pulp_created).fromNow()} ${signedString()}\n      ${\n        v.version === collections[0].collection_version.version\n          ? t`(latest)`\n          : ''\n      }`;\n    };\n    const { collection_version, namespace_metadata: namespace } = collection;\n    const { name: collectionName, version } = collection_version;\n\n    const nsTitle = namespaceTitle(\n      namespace || { name: collection_version.namespace },\n    );\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n    const { hasPermission } = this.context;\n    const hasObjectPermission = (permission, namespace) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n\n    const canDeleteCommunityCollection =\n      ai_deny_index &&\n      hasObjectPermission('galaxy.change_namespace', this.state.namespace);\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, true),\n        deleteAll: true,\n        display_repositories: display_repositories,\n      }),\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection:\n          hasPermission('ansible.delete_collection') ||\n          canDeleteCommunityCollection,\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, false),\n        deleteAll: false,\n        display_repositories: display_repositories,\n      }),\n      (hasPermission('ansible.delete_collection') ||\n        canDeleteCommunityCollection) && (\n        <DropdownItem\n          data-cy='delete-collection-version'\n          key='delete-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, true)}\n        >\n          {t`Delete version ${version} from system`}\n        </DropdownItem>\n      ),\n      (hasPermission('ansible.delete_collection') ||\n        canDeleteCommunityCollection) &&\n        display_repositories && (\n          <DropdownItem\n            data-cy='remove-collection-version'\n            key='remove-collection-version'\n            onClick={() => this.openDeleteModalWithConfirm(version, false)}\n          >\n            {t`Delete version ${version} from repository`}\n          </DropdownItem>\n        ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${version}`}\n        </DropdownItem>\n      ),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.deprecate(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n      display_repositories && (\n        <DropdownItem\n          key='copy-collection-version-to-repository-dropdown'\n          onClick={() => this.copyToRepository(collection)}\n          data-cy='copy-collection-version-to-repository-dropdown'\n        >\n          {t`Copy version ${version} to repositories`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : collection.repository.name;\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={modalPagination}\n                updateParams={this.updatePaginationParams}\n                count={collectionsCount}\n              />\n            </div>\n            {modalCollections ? (\n              modalCollections.map(({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {t`updated ${isLatestVersion(collection_version)}`}\n                </ListItem>\n              ))\n            ) : (\n              <Spinner />\n            )}\n          </List>\n          <Pagination\n            params={modalPagination}\n            updateParams={this.updatePaginationParams}\n            count={collectionsCount}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                    deleteFromRepo,\n                  });\n            })\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {copyCollectionToRepositoryModal && (\n          <CopyCollectionToRepositoryModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() =>\n              this.setState({ copyCollectionToRepositoryModal: null })\n            }\n            collectionVersion={collection}\n          />\n        )}\n        <BaseHeader\n          className={className}\n          title={collection_version.name}\n          logo={\n            namespace?.avatar_url && (\n              <Logo\n                alt={t`${nsTitle} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector selectedRepo={collection.repository.name} />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='column-section'>\n              <div className='install-version-column'>\n                <span>{t`Version`}</span>\n                <div className='install-version-dropdown'>\n                  <Select\n                    isOpen={isOpenVersionsSelect}\n                    onToggle={(isOpenVersionsSelect) =>\n                      this.setState({ isOpenVersionsSelect })\n                    }\n                    variant={SelectVariant.single}\n                    onSelect={() =>\n                      this.setState({ isOpenVersionsSelect: false })\n                    }\n                    selections={`v${version}`}\n                    aria-label={t`Select collection version`}\n                    loadingVariant={\n                      collections.length < collectionsCount\n                        ? {\n                            text: t`View more`,\n                            onClick: () =>\n                              this.setState({\n                                isOpenVersionsModal: true,\n                                isOpenVersionsSelect: false,\n                              }),\n                          }\n                        : null\n                    }\n                  >\n                    {collections\n                      .map((c) => c.collection_version)\n                      .map((v) => (\n                        <SelectOption\n                          key={v.version}\n                          value={`v${v.version}`}\n                          onClick={() =>\n                            updateParams(\n                              ParamHelper.setParam(\n                                params,\n                                'version',\n                                v.version.toString(),\n                              ),\n                            )\n                          }\n                        >\n                          <Trans>\n                            {v.version} updated {isLatestVersion(v)}\n                          </Trans>\n                        </SelectOption>\n                      ))}\n                  </Select>\n                </div>\n                {latestVersion ? (\n                  <span className='last-updated'>\n                    <Trans>\n                      Last updated <DateComponent date={latestVersion} />\n                    </Trans>\n                  </span>\n                ) : null}\n                {display_signatures ? (\n                  <SignatureBadge\n                    isCompact\n                    signState={collection.is_signed ? 'signed' : 'unsigned'}\n                  />\n                ) : null}\n              </div>\n              <div style={{ alignSelf: 'center' }}>\n                <CollectionRatings\n                  namespace={collection_version.namespace}\n                  name={collection_version.name}\n                />\n                <DownloadCount item={actuallyCollection} />\n              </div>\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'distributions',\n        title: t`Distributions`,\n        link: formatPath(\n          Paths.collectionDistributionsByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    const modalPagination = {\n      page,\n      page_size,\n    };\n\n    this.setState({ modalPagination, modalCollections: null });\n\n    const { namespace, name } = this.props.collection.collection_version;\n    const repository = this.props.collection.repository;\n    const requestParams = {\n      ...(repository ? { repository_name: repository.name } : {}),\n      namespace,\n      name,\n    };\n\n    // loadCollections provides initial data, pagination needs extra requests\n    CollectionVersionAPI.list({\n      ...requestParams,\n      order_by: '-version',\n      ...modalPagination,\n    })\n      .then(({ data }) => data)\n      .catch(() => ({ data: [] }))\n      .then(({ data: modalCollections }) =>\n        this.setState({ modalCollections }),\n      );\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    const { deleteAll } = this.state;\n\n    let promise = null;\n\n    if (deleteAll) {\n      promise = CollectionAPI.deleteCollectionVersion(deleteCollection);\n    } else {\n      promise = repositoryRemoveCollection(\n        deleteCollection.repository.name,\n        deleteCollection.collection_version.pulp_href,\n      );\n    }\n\n    const name = deleteCollection.collection_version.name;\n\n    promise\n      .then((res) => {\n        if (!deleteAll) {\n          return;\n        }\n\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId);\n      })\n      .then(() => {\n        const topVersion = (collections || []).filter(\n          ({ collection_version }) =>\n            collection_version.version !== collectionVersion,\n        );\n\n        if (topVersion.length) {\n          this.props.updateParams(\n            ParamHelper.setParam(\n              this.props.params,\n              'version',\n              topVersion[0].collection_version.version,\n            ),\n          );\n\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ],\n          });\n        } else {\n          // last version in collection => collection will be deleted => redirect\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name} v{collectionVersion}&quot; has been\n                successfully deleted.\n              </Trans>\n            ),\n          });\n          this.setState({\n            redirect: formatPath(Paths.namespaceDetail, {\n              namespace: deleteCollection.collection_version.namespace,\n            }),\n          });\n        }\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null, deleteAll = true) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n      deleteAll: deleteAll,\n    });\n  }\n\n  private copyToRepository(collection: CollectionVersionSearch) {\n    this.setState({ copyCollectionToRepositoryModal: collection });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport { namespaceTitle } from 'src/utilities';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const title = namespaceTitle(namespace);\n\n    return (\n      <BaseHeader\n        title={title}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${title} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        className='hub-header-bordered'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n  hasAutoWidth?: boolean;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n        hasAutoWidth={this.props.hasAutoWidth}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Radio } from '@patternfly/react-core';\nimport FolderOpenIcon from '@patternfly/react-icons/dist/esm/icons/folder-open-icon';\nimport SpinnerIcon from '@patternfly/react-icons/dist/esm/icons/spinner-icon';\nimport axios from 'axios';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlertMixin,\n} from 'src/components';\nimport { repositoryBasePath } from 'src/utilities';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  errorVariant: 'default' | 'skippable' | 'skipped';\n  uploadProgress: number;\n  uploadStatus: Status;\n  loading: boolean;\n  alerts: AlertType[];\n  selectedRepos: AnsibleRepositoryType[]; // 0 or 1 repos\n  onlyStaging: boolean;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      errorVariant: 'default' as const,\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n      loading: true,\n      alerts: [],\n      selectedRepos: [],\n      onlyStaging: true,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAllRepos();\n  }\n\n  private async loadAllRepos() {\n    const { onlyStaging } = this.state;\n\n    const staging = onlyStaging\n      ? await AnsibleRepositoryAPI.list({\n          name: 'staging',\n          page_size: 1,\n          pulp_label_select: 'pipeline=staging',\n        })\n          .then(({ data: { results } }) => results[0])\n          .catch(() => null)\n      : null;\n\n    return AnsibleRepositoryAPI.list({\n      pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n      page_size: 1,\n    })\n      .then(({ data: { count, results } }) =>\n        this.setState({\n          selectedRepos: onlyStaging\n            ? [staging || results[0]].filter(Boolean)\n            : count === 1\n            ? [results[0]]\n            : [],\n        }),\n      )\n      .catch((error) =>\n        this.addAlert(t`Error loading repositories.`, 'danger', error?.message),\n      )\n      .finally(() => this.setState({ loading: false }));\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n\n  private addAlertObj(alert) {\n    this.addAlert(alert.title, alert.variant, alert.description);\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    const { isOpen, collection } = this.props;\n    const {\n      errors,\n      errorVariant,\n      file,\n      onlyStaging,\n      uploadProgress,\n      uploadStatus,\n    } = this.state;\n\n    const skipError = () => {\n      if (errorVariant === 'skippable') {\n        this.setState({ errorVariant: 'skipped' as const });\n      }\n    };\n\n    return (\n      <Modal\n        variant={'large'}\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload() || !this.state.selectedRepos.length}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className={cx('file-error-messages', errorVariant)}>\n              {errors}\n              {errorVariant === 'skippable' && (\n                <>\n                  {' '}\n                  <a onClick={skipError}>{t`Upload anyway?`}</a>\n                </>\n              )}\n            </span>\n          ) : null}\n        </div>\n\n        <>\n          <br />\n          <Radio\n            isChecked={this.state.onlyStaging}\n            name='radio-1'\n            onChange={(val) => {\n              this.setState({ onlyStaging: val }, () => this.loadAllRepos());\n            }}\n            label={t`Staging Repos`}\n            id='radio-staging'\n          ></Radio>\n          <Radio\n            isChecked={!this.state.onlyStaging}\n            name='radio-2'\n            onChange={(val) => {\n              this.setState({ onlyStaging: !val }, () => this.loadAllRepos());\n            }}\n            label={t`All Repos`}\n            id='radio-all'\n          ></Radio>\n          {!this.state.onlyStaging && (\n            <>{t`Please note that these repositories are not filtered by permissions. Upload may fail without the right permissions.`}</>\n          )}\n\n          <MultipleRepoSelector\n            addAlert={(a) => this.addAlertObj(a)}\n            params={{\n              pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n            }}\n            singleSelectionOnly={true}\n            selectedRepos={this.state.selectedRepos}\n            setSelectedRepos={(selectedRepos) =>\n              this.setState({\n                selectedRepos,\n                errors: '',\n                errorVariant: 'default' as const,\n              })\n            }\n          />\n        </>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors && this.state.errorVariant !== 'skipped') {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin' />;\n      default:\n        return <FolderOpenIcon />;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n        errorVariant: 'default' as const,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      const detectedType = newCollection.type || t`unknown`;\n      const acceptedTypes: string = this.acceptedFileTypes.join(', ');\n      this.setState({\n        errors: t`Invalid file format: ${detectedType} (expected: ${acceptedTypes}).`,\n        errorVariant: 'skippable' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  async saveFile() {\n    const [repo] = this.state.selectedRepos;\n\n    this.setState({ uploadStatus: Status.uploading });\n\n    const distro_base_path = await repositoryBasePath(\n      repo.name,\n      repo.pulp_href,\n    ).catch((error) => {\n      this.addAlert(error, 'danger');\n    });\n\n    if (!distro_base_path) {\n      this.setState({ uploadStatus: Status.waiting });\n      return;\n    }\n\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n      distro_base_path,\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n          errorVariant: 'default' as const,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        errorVariant: 'default' as const,\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n  'data-cy'?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n  'data-cy': dataCy,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n      data-cy={dataCy}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton />\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const pipeline = collection.repository?.pulp_labels?.pipeline;\n      if (pipeline === 'rejected') {\n        approvalStatus = t`rejected`;\n      } else if (pipeline === 'staging') {\n        approvalStatus = t`waiting for approval`;\n      } else if (pipeline === 'approved') {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  DateComponent,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport TrashIcon from '@patternfly/react-icons/dist/esm/icons/trash-icon';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard namespace={namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  })[type] || type;\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n  selectedFilter: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ninterface ParamsType {\n  page?: number;\n  page_size?: number;\n}\n\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\n\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState = null },\n  listItemActions?,\n) => React.ReactNode;\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ntype SortHeaders = {\n  title: MessageDescriptor;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\nexport type LocalizedSortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  filterConfig: ({ state }) => FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: MessageDescriptor;\n  noDataTitle: MessageDescriptor;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: MessageDescriptor;\n  typeaheadQuery?: ({ inputText, selectedFilter, setState }) => void;\n}\n\nexport const ListPage = function <T>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n  // for typeahed filters\n  typeaheadQuery,\n}: ListPageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const translateTitle = ({ title, ...rest }: any) => ({\n    ...rest,\n    title: i18n._(title),\n  });\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        selectedFilter: null,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const localizedFilterConfig = filterConfig({ state: this.state }) || [];\n      const knownFilters = localizedFilterConfig.map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        localizedFilterConfig.map(({ id, title }) => [id, title]),\n      );\n\n      const niceValues = {};\n      localizedFilterConfig\n        .filter(({ options }) => options?.length)\n        .forEach(({ id: filterId, options }) => {\n          const obj = (niceValues[filterId] = {});\n          options.forEach(({ id: optionId, title }) => {\n            obj[optionId] = title;\n          });\n        });\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.query(),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const resetCompoundFilter = () =>\n        this.setState({\n          inputText: '',\n          selectedFilter: localizedFilterConfig[0].id,\n        });\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader title={i18n._(title)} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={i18n._(noDataDescription)}\n              title={i18n._(noDataTitle)}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) => {\n                                this.setState({ inputText });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText,\n                                    selectedFilter: this.state.selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                              updateParams={(p) => {\n                                resetCompoundFilter();\n                                updateParams(p);\n                              }}\n                              params={params}\n                              filterConfig={localizedFilterConfig}\n                              selectFilter={(selectedFilter) => {\n                                this.setState({ selectedFilter });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText: '',\n                                    selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        resetCompoundFilter();\n                        updateParams(p);\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                      niceValues={niceValues}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      const localizedSortHeaders = (sortHeaders || []).map(\n        translateTitle,\n      ) as LocalizedSortHeaders;\n\n      return (\n        <table\n          aria-label={i18n._(title)}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{ headers: localizedSortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageParams<T> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      // condition check after query, for object permissions\n      this.query().then((item) => {\n        const actionContext = {\n          ...this.context,\n          hasObjectPermission: (permission) =>\n            item?.my_permissions?.includes?.(permission),\n        };\n        if (!condition(actionContext)) {\n          this.setState({ loading: false, unauthorised: true });\n        }\n\n        this.setState({ alerts: this.context.alerts || [] });\n        this.context.setAlerts([]);\n      });\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return Promise.resolve(null);\n      }\n\n      return new Promise((resolve, reject) => {\n        this.setState({ loading: true }, () => {\n          query({ name })\n            .then((item) => {\n              this.setState({\n                item,\n                loading: false,\n              });\n              resolve(item);\n            })\n            .catch((e) => {\n              const { status, statusText } = e.response;\n              this.setState({\n                loading: false,\n                item: null,\n              });\n              this.addAlert({\n                title: i18n._(errorTitle),\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n              reject();\n            });\n        });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageWithTabsParams<T> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: MessageDescriptor }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const localizedTabs = tabs.map(({ name, ...rest }) => ({\n        ...rest,\n        name: i18n._(name),\n      }));\n      const tab = localizedTabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={localizedTabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top:\n        DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n          ? '124px' // 70 + 50 + 4\n          : '80px', // 76 + 4\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport FilterIcon from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeaheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              const item = typeaheadResults.find(({ name }) => name === value);\n              this.submitFilter(item?.id || value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeaheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n\n    // no tags => falsy\n    // 1 tag => \"foo\"\n    // 2+ tags => [\"foo\", \"bar\"]\n    // convert all to an array\n    if (!newParams) {\n      newParams = [];\n    }\n    if (!Array.isArray(newParams)) {\n      newParams = [newParams];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy\n      hoverTip={t`Copy`}\n      clickTip={t`Copied`}\n      variant='inline-compact'\n      isCode\n    >\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport SortAlphaDownIcon from '@patternfly/react-icons/dist/esm/icons/sort-alpha-down-icon';\nimport SortAlphaUpIcon from '@patternfly/react-icons/dist/esm/icons/sort-alpha-up-icon';\nimport SortAmountDownIcon from '@patternfly/react-icons/dist/esm/icons/sort-amount-down-icon';\nimport SortAmountUpIcon from '@patternfly/react-icons/dist/esm/icons/sort-amount-up-icon';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable'\n            onClick={() => this.setDescending()}\n            size='md'\n            style={{ marginLeft: '5px' }}\n          />\n        ) : (\n          <IconAsc\n            className='clickable'\n            onClick={() => this.setDescending()}\n            size='md'\n            style={{ marginLeft: '5px' }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React, { ReactNode } from 'react';\n\ninterface IProps {\n  children: ReactNode;\n  content: string | ReactNode;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        autoComplete='off'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Spinner,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  EmptyStateXs,\n  ExpandableRow,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  RolePermissions,\n  SelectGroup,\n  SelectRoles,\n  SelectUser,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface IProps {\n  // users\n  user?: UserType;\n  users: UserType[];\n  addUser?: (user, roles) => void;\n  removeUser?: (user) => void;\n  addUserRole?: (role, users) => void;\n  removeUserRole?: (role, user) => void;\n  showUserRemoveModal?: UserType;\n  showUserSelectWizard?: { user?: UserType; roles?: RoleType[] };\n\n  // groups\n  group?: GroupType;\n  groups: GroupType[];\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n\n  // roles\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n\n  // parent\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  updateProps: (prop) => void;\n}\n\nconst SectionTitle = ({ title }: { title: string }) => (\n  <h2 className='pf-c-title'>{title}</h2>\n);\nconst SectionSeparator = () => (\n  <div\n    style={{\n      backgroundColor: 'var(--pf-global--BackgroundColor--light-300)',\n      height: '16px',\n      margin: '16px -16px',\n    }}\n  />\n);\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const {\n      canEditOwners,\n      group,\n      groups,\n      showGroupRemoveModal,\n      showGroupSelectWizard,\n      showUserRemoveModal,\n      showUserSelectWizard,\n      user,\n      users,\n      updateProps,\n    } = this.props;\n\n    const loading = !groups && !users;\n    const noData = users?.length === 0 && groups?.length === 0;\n\n    const buttonAdd = (title, props) => (\n      <Button key={title} onClick={() => updateProps(props)}>\n        {title}\n      </Button>\n    );\n\n    const buttonUserAdd = buttonAdd(t`Select a user`, {\n      showUserSelectWizard: {},\n    });\n    const buttonGroupAdd = buttonAdd(t`Select a group`, {\n      showGroupSelectWizard: {},\n    });\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showUserRemoveModal ? this.renderUserRemoveModal() : null}\n        {showUserSelectWizard ? this.renderUserSelectWizard() : null}\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the buttons below.`\n                : ''\n            }\n            button={\n              canEditOwners ? (\n                <>\n                  {buttonUserAdd} {buttonGroupAdd}\n                </>\n              ) : null\n            }\n          />\n        ) : user || group ? (\n          this.renderRoles()\n        ) : (\n          <>\n            {this.renderSection({\n              buttonAdd: buttonUserAdd,\n              canEditOwners,\n              emptyStateTitle: t`There are currently no users assigned.`,\n              emptyStateExtra: t`Except for members of groups below.`,\n              items: users,\n              renderItems: () =>\n                this.renderList({\n                  ariaLabel: t`User list`,\n                  canEditOwners,\n                  itemName: t`User`,\n                  buttonAdd: buttonUserAdd,\n                  items: users,\n                  renderItem: (item, index) => this.renderUserRow(item, index),\n                  sortField: 'username',\n                }),\n              title: t`Users`,\n            })}\n            <SectionSeparator />\n            {this.renderSection({\n              buttonAdd: buttonGroupAdd,\n              canEditOwners,\n              emptyStateTitle: t`There are currently no groups assigned.`,\n              items: groups,\n              renderItems: () =>\n                this.renderList({\n                  ariaLabel: t`Group list`,\n                  canEditOwners,\n                  itemName: t`Group`,\n                  buttonAdd: buttonGroupAdd,\n                  items: groups,\n                  renderItem: (item, index) => this.renderGroupRow(item, index),\n                  sortField: 'name',\n                }),\n              title: t`Groups`,\n            })}\n          </>\n        )}\n      </>\n    );\n  }\n\n  private renderSection({\n    buttonAdd,\n    canEditOwners,\n    emptyStateTitle,\n    emptyStateExtra = '',\n    items,\n    renderItems,\n    title,\n  }) {\n    const loading = !items;\n    const noData = items?.length === 0;\n\n    return (\n      <>\n        <SectionTitle title={title} />\n        {loading ? (\n          <Spinner />\n        ) : noData ? (\n          <EmptyStateXs\n            title={emptyStateTitle}\n            description={\n              <>\n                {emptyStateExtra}\n                {emptyStateExtra && <br />}\n                {canEditOwners\n                  ? t`Please add an owner by using the button below.`\n                  : ''}\n              </>\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : (\n          renderItems()\n        )}\n      </>\n    );\n  }\n\n  private renderList({\n    ariaLabel,\n    buttonAdd,\n    canEditOwners,\n    itemName,\n    items,\n    renderItem,\n    sortField,\n  }) {\n    const sorted = sortBy(items, sortField);\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={ariaLabel}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: itemName,\n                  type: 'none',\n                  id: sortField,\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>{sorted.map(renderItem)}</tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderUserRow(user, index: number) {\n    const { urlPrefix, canEditOwners, updateProps } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() =>\n            updateProps({\n              showUserRemoveModal: user,\n            })\n          }\n        >\n          <Trans>Remove user</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-user-${user.username}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                user: user.username,\n                tab: 'access',\n              })\n            }\n          >\n            {user.username}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners, updateProps } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() =>\n            updateProps({\n              showGroupRemoveModal: group,\n            })\n          }\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-group-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles() {\n    const {\n      canEditOwners,\n      group,\n      showRoleRemoveModal,\n      showRoleSelectWizard,\n      updateProps,\n      user,\n    } = this.props;\n\n    if ((!user && !group) || (user && group)) {\n      return null;\n    }\n\n    const roles = (user || group).object_roles;\n    const sortedRoles = sortBy(roles);\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal() : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard() : null}\n\n        <h3 className='pf-c-title'>\n          {user ? <Trans>User {user.username}</Trans> : null}\n          {group ? <Trans>Group {group.name}</Trans> : null}\n        </h3>\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<RolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() => updateProps({ showRoleRemoveModal: role })}\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderUserRemoveModal() {\n    const { name, showUserRemoveModal: user } = this.props;\n    if (!user) {\n      return;\n    }\n\n    const username = user.username;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showUserRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeUser(user)}\n        title={t`Remove user ${username}?`}\n      >\n        <Trans>\n          You are about to remove <b>{username}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const { name, showGroupRemoveModal: group } = this.props;\n    if (!group) {\n      return;\n    }\n\n    const groupname = group.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal() {\n    const { name, user, group, showRoleRemoveModal: role } = this.props;\n    const userOrGroupName = group?.name || user?.username;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => {\n          group && this.props.removeRole(role, group);\n          user && this.props.removeUserRole(role, user);\n        }}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{userOrGroupName}</b>{' '}\n          for <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderUserSelectWizard() {\n    const {\n      users,\n      pulpObjectType,\n      selectRolesMessage,\n      showUserSelectWizard: { user, roles = [] },\n      updateProps,\n    } = this.props;\n\n    const hasUser = !!user;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find user in users, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a user`,\n        component: (\n          <SelectUser\n            assignedUsers={users}\n            selectedUser={user}\n            updateUser={(user) =>\n              updateProps({\n                showUserSelectWizard: { user, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasUser,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({\n                showUserSelectWizard: { user, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasUser,\n        enableNext: hasUser && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles user={user} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasUser && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a user`}\n        onClose={() =>\n          updateProps({\n            showUserSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addUser(user, roles)}\n      />\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const {\n      groups,\n      pulpObjectType,\n      selectRolesMessage,\n      showGroupSelectWizard: { group, roles = [] },\n      updateProps,\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard() {\n    const {\n      group,\n      pulpObjectType,\n      showRoleSelectWizard: { roles = [] },\n      updateProps,\n      user,\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      (group || user || {}).object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: (\n          <PreviewRoles user={user} group={group} selectedRoles={roles} />\n        ),\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => {\n          group && this.props.addRole(group, roles);\n          user && this.props.addUserRole(user, roles);\n        }}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, mapErrorMessages } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  selectedRoles: RoleType[];\n  user?: {\n    username: string;\n  };\n  group?: {\n    name: string;\n  };\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ user, group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        {user ? (\n          <Trans>\n            The following roles will be applied to user:{' '}\n            <strong>{user.username}</strong>\n          </Trans>\n        ) : null}\n        {group ? (\n          <Trans>\n            The following roles will be applied to group:{' '}\n            <strong>{group.name}</strong>\n          </Trans>\n        ) : null}\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner /> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const RolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned ownership.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { UserAPI } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface UserType {\n  username: string;\n}\n\ninterface IProps {\n  assignedUsers: UserType[];\n  selectedUser?: UserType;\n  updateUser?: (user) => void;\n}\n\nexport const SelectUser: React.FC<IProps> = ({\n  assignedUsers,\n  selectedUser,\n  updateUser,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [users, setUsers] = useState<UserType[]>([]);\n  const [usersCount, setUsersCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryUsers();\n  }, [localParams]);\n\n  const queryUsers = () => {\n    setLoading(true);\n    UserAPI.list(localParams).then(({ data }) => {\n      setUsers(data.data);\n      setUsersCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ username }) => selectedUser?.username === username;\n\n  const noData = users.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['username__contains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable users.`}\n          description={t`There are currently no users that can be assigned ownership.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ username }) =>\n    assignedUsers.some((user) => user.username === username);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`User`,\n        type: 'alpha',\n        id: 'username',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedUser ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected user</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedUser.username}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedUser.username}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'username__contains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ username__contains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['username__contains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {users.map((user, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={user.username}\n                        isSelected={isSelected(user)}\n                        onSelect={() => updateUser(user)}\n                        isDisabled={isAssigned(user)}\n                        data-cy={`UserListTable-CheckboxRow-row-${user.username}`}\n                      >\n                        <td>{user.username}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={usersCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertType,\n  DataForm,\n  HelperText,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n          autoComplete='off'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          />\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          pageControls={extraControls}\n          title={title}\n        />\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { dom, parse } from 'antsibull-docs';\nimport React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderPluginLink: (\n    pluginName: string,\n    pluginType: string,\n    text: React.ReactNode | undefined,\n  ) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  private formatPartError(part: dom.ErrorPart): React.ReactNode {\n    return <span className='error'>ERROR while parsing: {part.message}</span>;\n  }\n\n  private formatPartBold(part: dom.BoldPart): React.ReactNode {\n    return <b>{part.text}</b>;\n  }\n\n  private formatPartCode(part: dom.CodePart): React.ReactNode {\n    return <span className='inline-code'>{part.text}</span>;\n  }\n\n  private formatPartHorizontalLine(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    part: dom.HorizontalLinePart,\n  ): React.ReactNode {\n    return <hr />;\n  }\n\n  private formatPartItalic(part: dom.ItalicPart): React.ReactNode {\n    return <i>{part.text}</i>;\n  }\n\n  private formatPartLink(part: dom.LinkPart): React.ReactNode {\n    return this.props.renderDocLink(part.text, part.url);\n  }\n\n  private formatPartModule(part: dom.ModulePart): React.ReactNode {\n    return this.props.renderPluginLink(part.fqcn, 'module', undefined);\n  }\n\n  private formatPartRstRef(part: dom.RSTRefPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartURL(part: dom.URLPart): React.ReactNode {\n    return (\n      <a href={part.url} target='_blank' rel='noreferrer'>\n        {part.url}\n      </a>\n    );\n  }\n\n  private formatPartText(part: dom.TextPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartEnvVariable(part: dom.EnvVariablePart): React.ReactNode {\n    return <span className='inline-code'>{part.name}</span>;\n  }\n\n  private formatPartOptionNameReturnValue(\n    part: dom.OptionNamePart | dom.ReturnValuePart,\n  ): React.ReactNode {\n    const content =\n      part.value === undefined ? (\n        <span className='inline-code'>\n          <b>{part.name}</b>\n        </span>\n      ) : (\n        <span className='inline-code'>\n          {part.name}={part.value}\n        </span>\n      );\n    if (!part.plugin) {\n      return content;\n    }\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      content,\n    );\n  }\n\n  private formatPartOptionValue(part: dom.OptionValuePart): React.ReactNode {\n    return <span className='inline-code'>{part.value}</span>;\n  }\n\n  private formatPartPlugin(part: dom.PluginPart): React.ReactNode {\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      undefined,\n    );\n  }\n\n  private formatPart(part: dom.Part): React.ReactNode {\n    switch (part.type) {\n      case dom.PartType.ERROR:\n        return this.formatPartError(part as dom.ErrorPart);\n      case dom.PartType.BOLD:\n        return this.formatPartBold(part as dom.BoldPart);\n      case dom.PartType.CODE:\n        return this.formatPartCode(part as dom.CodePart);\n      case dom.PartType.HORIZONTAL_LINE:\n        return this.formatPartHorizontalLine(part as dom.HorizontalLinePart);\n      case dom.PartType.ITALIC:\n        return this.formatPartItalic(part as dom.ItalicPart);\n      case dom.PartType.LINK:\n        return this.formatPartLink(part as dom.LinkPart);\n      case dom.PartType.MODULE:\n        return this.formatPartModule(part as dom.ModulePart);\n      case dom.PartType.RST_REF:\n        return this.formatPartRstRef(part as dom.RSTRefPart);\n      case dom.PartType.URL:\n        return this.formatPartURL(part as dom.URLPart);\n      case dom.PartType.TEXT:\n        return this.formatPartText(part as dom.TextPart);\n      case dom.PartType.ENV_VARIABLE:\n        return this.formatPartEnvVariable(part as dom.EnvVariablePart);\n      case dom.PartType.OPTION_NAME:\n        return this.formatPartOptionNameReturnValue(part as dom.OptionNamePart);\n      case dom.PartType.OPTION_VALUE:\n        return this.formatPartOptionValue(part as dom.OptionValuePart);\n      case dom.PartType.PLUGIN:\n        return this.formatPartPlugin(part as dom.PluginPart);\n      case dom.PartType.RETURN_VALUE:\n        return this.formatPartOptionNameReturnValue(\n          part as dom.ReturnValuePart,\n        );\n    }\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    // TODO: pass current plugin's type and name, and (if role) the current entrypoint as well\n    const parsed = parse(text);\n\n    // Special case: result is a single paragraph consisting of a single text part\n    if (\n      parsed.length === 1 &&\n      parsed[0].length === 1 &&\n      parsed[0][0].type === dom.PartType.TEXT\n    ) {\n      return <span>{parsed[0][0].text}</span>;\n    }\n\n    const fragments = [];\n    for (const paragraph of parsed) {\n      for (const part of paragraph) {\n        fragments.push(this.formatPart(part));\n      }\n    }\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, _pluginName: string) {\n    const isDeprecated = doc.deprecated;\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  RadioRow,\n  SortTable,\n} from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  addAlert: (alert: AlertType) => void;\n  disabledRepos?: string[];\n  params?: { pulp_label_select?: string };\n  selectedRepos: AnsibleRepositoryType[];\n  setSelectedRepos: (selectedRepos: AnsibleRepositoryType[]) => void;\n  singleSelectionOnly?: boolean;\n}\n\nexport const MultipleRepoSelector = (props: IProps) => {\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n  const [itemsCount, setItemsCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const selectedRepos = props.selectedRepos.map(({ name }) => name);\n  const disabledRepos = props.disabledRepos || [];\n\n  const isSelectorChecked = repositoryList\n    .map(({ name }) => name)\n    .every((n) => selectedRepos.includes(n) || disabledRepos.includes(n));\n\n  function loadRepos() {\n    setLoading(true);\n\n    AnsibleRepositoryAPI.list({\n      ...params,\n      ...(props.params || {}),\n    })\n      .then(({ data: { count, results } }) => {\n        setRepositoryList(results);\n        setItemsCount(count);\n      })\n      .catch(({ response: { status, statusText } }) =>\n        props.addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        }),\n      )\n      .finally(() => setLoading(false));\n  }\n\n  function changeSelection(repo) {\n    const { name } = repo;\n    if (disabledRepos.includes(name)) {\n      return;\n    }\n\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      props.setSelectedRepos(\n        props.selectedRepos.filter(({ name: element }) => element != name),\n      );\n    } else {\n      // add\n      props.setSelectedRepos([...props.selectedRepos, repo]);\n    }\n  }\n\n  function setSelection(repo) {\n    props.setSelectedRepos(repo ? [repo] : null);\n  }\n\n  function renderLabels() {\n    return (\n      <Flex>\n        <FlexItem>\n          <b>{t`Selected`}</b>\n        </FlexItem>\n        <FlexItem>\n          <LabelGroup>\n            {selectedRepos.map((name) => (\n              <>\n                <Label onClose={() => changeSelection({ name })}>{name}</Label>{' '}\n              </>\n            ))}\n          </LabelGroup>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  useEffect(() => {\n    loadRepos();\n  }, [params, props.params?.pulp_label_select]);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectPage() {\n      const newRepos = [...props.selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (\n          !selectedRepos.includes(repo.name) &&\n          !disabledRepos.includes(repo.name)\n        ) {\n          newRepos.push(repo);\n        }\n      });\n\n      props.setSelectedRepos(newRepos);\n    }\n\n    function deselectAll() {\n      props.setSelectedRepos([]);\n    }\n\n    function deselectPage() {\n      const newRepos = props.selectedRepos.filter(\n        ({ name: repo1 }) =>\n          !repositoryList.find(({ name: repo2 }) => repo1 === repo2),\n      );\n\n      props.setSelectedRepos(newRepos);\n    }\n\n    function onToggleCheckbox() {\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${selectedRepos.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label={t`Select page`}\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    const sortTableOptions = {\n      headers: [\n        {\n          title: '',\n          type: 'none',\n          id: 'expander',\n        },\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'description',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Repositories`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => setParams(p)}\n        />\n        {repositoryList.map((repo, i) =>\n          props.singleSelectionOnly ? (\n            <RadioRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={\n                selectedRepos.includes(repo.name) ||\n                disabledRepos.includes(repo.name)\n              }\n              onSelect={() => setSelection(repo)}\n              isDisabled={disabledRepos.includes(repo.name)}\n              data-cy={`ApproveModal-RadioRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </RadioRow>\n          ) : (\n            <CheckboxRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={\n                selectedRepos.includes(repo.name) ||\n                disabledRepos.includes(repo.name)\n              }\n              onSelect={() => changeSelection(repo)}\n              isDisabled={disabledRepos.includes(repo.name)}\n              data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </CheckboxRow>\n          ),\n        )}\n      </table>\n    );\n  }\n\n  return (\n    <>\n      {renderLabels()}\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            {!props.singleSelectionOnly && (\n              <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n            )}\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => {\n                  setInputText(text);\n                }}\n                updateParams={(p) => setParams(p)}\n                params={params}\n                filterConfig={[\n                  {\n                    id: 'name__icontains',\n                    title: t`Repository`,\n                  },\n                ]}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n          isTop\n        />\n      </div>\n      <div>\n        <AppliedFilters\n          updateParams={(p) => {\n            setParams(p);\n            setInputText('');\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort']}\n          niceNames={{\n            name__icontains: t`Name`,\n          }}\n        />\n      </div>\n\n      {loading ? <Spinner size='lg' /> : renderTable()}\n\n      <div className='footer'>\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n        />\n      </div>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  selectedRepo: string;\n}\n\nexport const RepoSelector = ({ selectedRepo }: IProps) => {\n  const { featureFlags } = useContext();\n\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!featureFlags.display_repositories) {\n    return null;\n  }\n\n  const repoName =\n    {\n      community: t`Community`,\n      published: t`Published`,\n      rejected: t`Rejected`,\n      'rh-certified': t`Red Hat Certified`,\n      staging: t`Staging`,\n      validated: t`Validated`,\n    }[selectedRepo] || selectedRepo;\n\n  return (\n    <div className='breadcrumb-container'>\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText style={{ paddingLeft: 0 }} variant='plain'>\n              {t`Repository`}\n            </InputGroupText>\n            <InputGroupText\n              variant='plain'\n              style={{\n                backgroundColor: 'var(--pf-global--disabled-color--300)',\n                color: 'var(--pf-global--Color--100)',\n                height: '36px',\n              }}\n            >\n              {repoName}\n            </InputGroupText>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  errorMessage,\n  repositoryBasePath,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distroBasePath) => {\n    if (distroBasePath) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  useEffect(() => {\n    if (!repository) {\n      onDistributionsLoad(null);\n      return;\n    }\n\n    repositoryBasePath(repository.name, repository.pulp_href)\n      .catch(() => null)\n      .then(onDistributionsLoad);\n  }, [repository?.pulp_href]);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n      ? 'approved'\n      : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <div data-cy='pipeline'>\n          <Select\n            variant='single'\n            isOpen={selectOpen}\n            onToggle={() => setSelectOpen(!selectOpen)}\n            onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n            selections={selectOptions[selectedPipeline]}\n          >\n            {Object.entries(selectOptions).map(([k, v]) => (\n              <SelectOption key={k} value={v} />\n            ))}\n          </Select>\n        </div>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          <div data-cy='remote'>\n            {remotes ? (\n              <APISearchTypeAhead\n                loadResults={loadRemotes}\n                onClear={() =>\n                  updateRepository({ ...repository, remote: null })\n                }\n                onSelect={(_event, value) =>\n                  updateRepository({\n                    ...repository,\n                    remote: remotes.find(({ name }) => name === value)\n                      ?.pulp_href,\n                  })\n                }\n                placeholderText={t`Select a remote`}\n                results={remotes}\n                selections={\n                  selectedRemote\n                    ? [\n                        {\n                          name: selectedRemote.name,\n                          id: selectedRemote.pulp_href,\n                        },\n                      ]\n                    : []\n                }\n              />\n            ) : null}\n            {remotesError ? (\n              <span\n                style={{\n                  color: 'var(--pf-global--danger-color--200)',\n                }}\n              >\n                {t`Failed to load remotes: ${remotesError}`}\n              </span>\n            ) : null}\n            {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n          </div>\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyDistributions = ({\n  emptyText,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleDistributionAPI.list({\n      repository: repositoryHref,\n      sort: 'pulp_created',\n      page,\n      page_size: 10,\n    })\n      .then(({ data: { count, results } }) => {\n        setDistributions(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setDistributions([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [repositoryHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(distributions);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n        (emptyText ?? '---')}\n      {count > distributions?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  remoteHref,\n}: {\n  emptyText?: string;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleRepositoryAPI.list({ remote: remoteHref, page, page_size: 10 })\n      .then(({ data: { count, results } }) => {\n        setRepositories(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setRepositories([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [remoteHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(repositories);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n      {count > repositories?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelGroup } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const PulpLabels = ({ labels }: { labels: Record<string, string> }) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport React, { ReactNode } from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ninterface FormFilename {\n  name: string;\n  original: boolean;\n}\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    const isCommunityRemote =\n      remoteType === 'ansible-remote' &&\n      remote?.url === 'https://galaxy.ansible.com/api/';\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n          'sync_dependencies',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(requiredFields, disabledFields, {\n            extra: (\n              <ActionGroup key='actions'>\n                {save}\n                {cancel}\n              </ActionGroup>\n            ),\n            isCommunityRemote,\n          })}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields, { isCommunityRemote })}\n      </Modal>\n    );\n  }\n\n  private renderForm(\n    requiredFields,\n    disabledFields,\n    {\n      extra,\n      isCommunityRemote,\n    }: { extra?: ReactNode; isCommunityRemote: boolean },\n  ) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            label={t`Download only signed collections`}\n          >\n            {isCommunityRemote && this.props.remote.signed_only ? (\n              <Alert\n                isInline\n                variant='warning'\n                title={t`Community content will never be synced if this setting is enabled`}\n              />\n            ) : null}\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('sync_dependencies') ? (\n          <FormGroup\n            fieldId={'sync_dependencies'}\n            label={t`Include all dependencies when syncing a collection.`}\n          >\n            <Switch\n              id='sync_dependencies'\n              isChecked={!!remote.sync_dependencies}\n              onChange={(value) =>\n                this.updateRemote(value, 'sync_dependencies')\n              }\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                autoComplete='off'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            {isCommunityRemote && !this.props.remote.requirements_file ? (\n              <Alert\n                isInline\n                variant='warning'\n                title={t`YAML requirements are required to sync from Galaxy`}\n              />\n            ) : null}\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              autoComplete='off'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  autoComplete='off'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: Record<string, any>;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as TextInputTypes) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n              {...(field.type === 'password' ? { autoComplete: 'off' } : {})}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  LocalizedSortHeaders,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: LocalizedSortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import { Trans, t } from '@lingui/macro';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { language } from 'src/l10n';\n\ninterface IProps {\n  item?: { download_count?: number };\n}\n\nexport const DownloadCount = ({ item }: IProps) => {\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!item?.download_count) {\n    return null;\n  }\n\n  const downloadCount = new Intl.NumberFormat(language).format(\n    item.download_count,\n  );\n\n  return (\n    <Tooltip\n      content={t`Download count is the sum of all versions' download counts`}\n    >\n      <DownloadIcon /> <Trans>{downloadCount} Downloads</Trans>\n    </Tooltip>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlert,\n} from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersionSearch;\n  pipeline?: string;\n  submitAction: ({ addAlert, selectedRepos, setLoading }) => void;\n}\n\nexport const MultiRepoModal = ({\n  closeAction,\n  collectionVersion: { collection_version },\n  pipeline,\n  submitAction,\n}: IProps) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [disabledRepos, setDisabledRepos] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedRepos, setSelectedRepos] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function queryDisabled() {\n    // get repository list for selected collection\n    // TODO: handle more pages\n    const { name, namespace, version } = collection_version;\n\n    CollectionVersionAPI.list({\n      namespace,\n      name,\n      version,\n      page: 1,\n      page_size: 100,\n      ...(pipeline ? { repository_label: pipeline } : {}),\n    })\n      .then(\n        ({\n          data: {\n            data,\n            meta: { count },\n          },\n        }) => {\n          setDisabledRepos(data.map(({ repository: { name } }) => name));\n          if (count > 100) {\n            addAlert({\n              variant: 'warning',\n              title: t`The collection exists in too many repositories. Some repositories may not be disabled and preselected correctly.`,\n            });\n          }\n        },\n      )\n      .catch(() =>\n        addAlert({\n          variant: 'danger',\n          title: t`Failed to query repositories.`,\n        }),\n      );\n  }\n\n  useEffect(() => {\n    // check for approval repos that are already in collection and select them in UI\n    queryDisabled();\n  }, []);\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={() =>\n            submitAction({\n              addAlert,\n              selectedRepos,\n              setLoading,\n            })\n          }\n          variant='primary'\n          isDisabled={!selectedRepos.length || loading}\n        >\n          {t`Select`}\n        </Button>,\n        <Button\n          key='cancel'\n          onClick={closeAction}\n          variant='link'\n          isDisabled={loading}\n        >\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={closeAction}\n      title={t`Select repositories`}\n      variant='large'\n    >\n      <section className='modal-body' data-cy='modal-body'>\n        <MultipleRepoSelector\n          addAlert={addAlert}\n          disabledRepos={disabledRepos}\n          params={pipeline ? { pulp_label_select: pipeline } : null}\n          selectedRepos={selectedRepos}\n          setSelectedRepos={setSelectedRepos}\n        />\n        {loading && <Spinner size='lg' />}\n      </section>\n\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport React, { useEffect, useState } from 'react';\nimport { HelperText, Tooltip } from 'src/components';\n\ninterface IProps {\n  namespace: string;\n  name: string;\n}\n\nconst cache = { collection: null, role: null };\n\nconst loadScore = (type, namespace, name, callback) => () => {\n  const setScores = (data) => {\n    if (namespace && name && callback) {\n      callback(data?.[namespace]?.[name]);\n    }\n  };\n\n  if (!cache[type]) {\n    // not in cache, trigger load\n    cache[type] = fetch(`/static/scores/${type}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        cache[type] = data;\n        setScores(data);\n      });\n  } else if (typeof cache[type].then === 'function') {\n    // waiting for load\n    cache[type].then(() => setScores(cache[type]));\n  } else {\n    // already loaded\n    setScores(cache[type]);\n  }\n};\n\nexport function CollectionRatings({\n  namespace,\n  name,\n  isList,\n}: IProps & { isList?: boolean }) {\n  const [scores, setScores] = useState(null);\n  const loader = loadScore('collection', namespace, name, setScores);\n  useEffect(loader, [namespace, name]);\n\n  return isList ? (\n    <Ratings scores={scores} />\n  ) : (\n    <span style={{ padding: '12px 0 4px 0' }}>\n      <Ratings scores={scores} />\n    </span>\n  );\n}\n\nexport function RoleRatings({ namespace, name }: IProps) {\n  const [scores, setScores] = useState(null);\n  const loader = loadScore('role', namespace, name, setScores);\n  useEffect(loader, [namespace, name]);\n\n  return <Ratings scores={scores} />;\n}\n\nfunction Ratings({ scores }: { scores: Record<string, number> }) {\n  if (!scores) {\n    return null;\n  }\n\n  const help = t`This is the rating from old-galaxy.ansible.com. We are working on redoing the rating for the new version of galaxy.`;\n  const more = (\n    <table className='pf-c-table'>\n      {scores.quality_score !== null ? (\n        <tr>\n          <th>{t`Quality score`}</th>\n          <td>\n            <progress max={100} value={~~(20 * scores.quality_score)} />{' '}\n          </td>\n          <td>\n            <strong>{scores.quality_score}</strong>&nbsp;/&nbsp;5\n          </td>\n        </tr>\n      ) : null}\n      <tr>\n        <th>{t`Community score`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.score)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.score}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <td colSpan={3} style={{ textAlign: 'right' }}>\n          <Trans>Based on {scores.count} surveys.</Trans>\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Quality of docs`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.docs)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.docs}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Ease of use`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.ease_of_use)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.ease_of_use}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Does what it promises`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.does_what_it_says)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.does_what_it_says}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Works without change`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.works_as_is)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.works_as_is}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n      <tr>\n        <th>{t`Ready for production`}</th>\n        <td>\n          <progress max={100} value={~~(20 * scores.used_in_production)} />{' '}\n        </td>\n        <td>\n          <strong>{scores.used_in_production}</strong>&nbsp;/&nbsp;5\n        </td>\n      </tr>\n    </table>\n  );\n\n  return (\n    <Tooltip content={help}>\n      <HelperText hasAutoWidth content={more} />{' '}\n      <span style={{ marginRight: '8px' }}>{scores.score}</span>\n    </Tooltip>\n  );\n}\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import ArrowsAltVIcon from '@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon';\nimport LongArrowAltDownIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon';\nimport LongArrowAltUpIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-icon';\nimport OutlinedClockIcon from '@patternfly/react-icons/dist/esm/icons/outlined-clock-icon';\nimport SyncAltIcon from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Ansible\n        Lightspeed?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following legacy namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Ansible Lightspeed?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Ansible Lightspeed information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Ansible Lightspeed`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Ansible Lightspeed`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Additional details`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Ansible Lightspeed settings`\n          : isInDenyIndex\n          ? t`Opt in to Ansible Lightspeed`\n          : t`Opt out of Ansible Lightspeed`\n      }\n      variant='small'\n      titleIconVariant={isInDenyIndex ? null : 'warning'}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            <Trans>\n              <p>\n                Red Hat is working on exciting new Ansible content development\n                capabilities within the context of{' '}\n                <a\n                  href='https://www.redhat.com/en/engage/project-wisdom'\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  Ansible Lightspeed\n                </a>{' '}\n                <ExternalLinkAltIcon /> to help other automators build Ansible\n                content.\n              </p>\n            </Trans>\n            <br />\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n          <br />\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          {props.reference}\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { msg } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  // FIXME: replace with API call or free form input\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'eda',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': msg`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': msg`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': msg`Import and move to staging`,\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': msg`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': msg`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.collection_sync': msg`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.collections.import_collection': msg`Pulp ansible: Import collection`,\n    'pulp_ansible.app.tasks.collections.sync': msg`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': msg`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.copy.copy_content': msg`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.roles.synchronize': msg`Pulp Ansible: Roles synchronize`,\n    'pulp_container.app.tasks.build_image_from_containerfile': msg`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': msg`Pulp container: General multi delete`,\n    'pulp_container.app.tasks.recursive_add_content': msg`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': msg`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.synchronize': msg`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.tag_image': msg`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': msg`Pulp container: Untage image`,\n    'pulpcore.app.tasks.export.pulp_export': msg`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': msg`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.add_and_remove': msg`Pulpcore: Add and remove`,\n    'pulpcore.app.tasks.repository.delete_version': msg`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': msg`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': msg`Pulpcore: Upload commit`,\n    'pulpcore.plugin.tasking.add_and_remove': msg`Pulpcore: Add or remove`,\n    'pulpcore.tasking.tasks.base.general_create': msg`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_delete': msg`Pulpcore: General delete`,\n    'pulpcore.tasking.tasks.base.general_update': msg`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.import_repository_version': msg`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': msg`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': msg`Pulpcore: Repair all artifacts`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': msg`Manage ansible repositories.`,\n    'galaxy.collection_admin': msg`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': msg`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': msg`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': msg`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': msg`Manage collection remotes.`,\n    'galaxy.content_admin': msg`Manage all content types.`,\n    'galaxy.execution_environment_admin': msg`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': msg`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': msg`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': msg`Push, and change execution environments.`,\n    'galaxy.group_admin': msg`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': msg`View, add, remove and change synclists.`,\n    'galaxy.task_admin': msg`View, and cancel any task.`,\n    'galaxy.user_admin': msg`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': msg`Allow all actions on a task.`,\n    'core.taskschedule_owner': msg`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: '/', component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ninterface ContextFragment {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import { i18n } from '@lingui/core';\nimport * as moment from 'moment';\n\n// remember to update lingui.config.js as well\nexport const availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\nexport const languageNames = {\n  en: 'English',\n  es: 'Español',\n  fr: 'Français',\n  ko: '한국어',\n  nl: 'Nederlands',\n  ja: '日本語',\n  zh: '中文',\n};\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\n// ?lang and ?pseudolocalization get removed in entry-standalone\n// (removed to prevent the param getting passed to api calls)\n// (in entry-standalone to prevent interaction with pushState)\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nexport const language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\", \"/beta/\" or \"/preview/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/preview/', '/')\n          .replace('/beta/', '/')\n          .replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n  url = url.replaceAll('//', '/');\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  dispatch = '/dispatch',\n  search = '/search',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  landingPage = '/',\n  legacyRole = '/standalone/roles/:username/:name',\n  legacyRoles = '/standalone/roles/',\n  legacyNamespace = '/standalone/namespaces/:namespaceid',\n  legacyNamespaces = '/standalone/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n\n  // for compatibility with old beta routes, remove later\n  compatLegacyRole = '/legacy/roles/:username/:name',\n  compatLegacyRoles = '/legacy/roles/',\n  compatLegacyNamespace = '/legacy/namespaces/:namespaceid',\n  compatLegacyNamespaces = '/legacy/namespaces/',\n}\n\nexport const namespaceBreadcrumb = () =>\n  ({\n    namespaces: { name: t`Namespaces`, url: formatPath(Paths.namespaces) },\n    partners: { name: t`Partners`, url: formatPath(Paths.partners) },\n  })[NAMESPACE_TERM];\n","import { sortBy } from 'lodash';\n\nexport const assignRoles = (roles) => {\n  const userRoles = {};\n  const groupRoles = {};\n\n  roles.forEach(({ users, groups, role }) => {\n    (users || []).forEach((username) => {\n      userRoles[username] ||= [];\n      userRoles[username].push(role);\n    });\n    (groups || []).forEach((name) => {\n      groupRoles[name] ||= [];\n      groupRoles[name].push(role);\n    });\n  });\n\n  return {\n    users: sortBy(\n      Object.entries(userRoles).map(([username, object_roles]) => ({\n        username,\n        object_roles,\n      })),\n      'username',\n    ),\n    groups: sortBy(\n      Object.entries(groupRoles).map(([name, object_roles]) => ({\n        name,\n        object_roles,\n      })),\n      'name',\n    ),\n  };\n};\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from './map-error-messages';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  let description = e.toString();\n\n  if (e.response) {\n    // HTTP error\n    const { status, statusText } = e.response;\n\n    const err = mapErrorMessages(e);\n    const message = Object.values(err).join(' ');\n\n    description = message\n      ? errorMessage(status, statusText, message)\n      : errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description,\n  });\n\n  callback();\n};\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  multiplier?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to starting with a 2s wait, increasing the wait time 1.5x each time, with max 10 attempts\n  // 2000, 1.5, 10 = ~226s ; 500, 1.5, 10 = ~57s\n  const { waitMs = 2000, multiplier = 1.5, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, {\n          ...options,\n          waitMs: Math.round(waitMs * multiplier),\n          bailAfter: bailAfter - 1,\n        }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { waitForTaskUrl } from './wait-for-task';\n\nexport async function repositoryRemoveCollection(\n  repoName,\n  collectionVersion_pulp_href,\n  repoHref = null,\n) {\n  if (!repoHref) {\n    repoHref = (\n      await AnsibleRepositoryAPI.list({ name: repoName, page_size: 1 })\n    )?.data?.results?.[0]?.pulp_href;\n  }\n\n  if (!repoHref) {\n    return Promise.reject({ error: t`Repository ${repoName} not found.` });\n  }\n\n  const task = (\n    await AnsibleRepositoryAPI.removeContent(\n      parsePulpIDFromURL(repoHref),\n      collectionVersion_pulp_href,\n    )\n  )?.data?.task;\n\n  await waitForTaskUrl(task);\n}\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { errorMessage } from './fail-alerts';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { repositoryRemoveCollection } from './repository-remove-collection';\nimport { waitForTask } from './wait-for-task';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n    deleteAll,\n    display_repositories,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (!display_repositories && !deleteAll) {\n      // cant display delete from repository when repositories are turned off\n      return null;\n    }\n\n    const caption = deleteAll\n      ? t`Delete entire collection from system`\n      : t`Delete collection from repository`;\n\n    const key = deleteAll ? 'delete-collection' : 'remove-collection';\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key={key}\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{caption}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem data-cy={key} key={key} onClick={onClick}>\n        {caption}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n    deleteAll,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n          deleteAll,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n    deleteAll,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n        deleteAll: deleteAll,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n    deleteFromRepo,\n  }) {\n    let promise = null;\n    if (deleteFromRepo) {\n      promise = repositoryRemoveCollection(\n        deleteFromRepo,\n        collection.collection_version.pulp_href,\n      );\n    } else {\n      promise = CollectionAPI.deleteCollection(collection);\n    }\n\n    promise\n      .then((res) => {\n        if (!deleteFromRepo) {\n          const taskId = parsePulpIDFromURL(res.data.task);\n          return waitForTask(taskId);\n        }\n      })\n      .then(() => {\n        addAlert({\n          variant: 'success',\n          title: (\n            <Trans>\n              Collection &quot;{collection.collection_version.name}\n              &quot; has been successfully deleted.\n            </Trans>\n          ),\n        });\n\n        if (redirect) {\n          setState({ redirect });\n        }\n\n        if (load) {\n          load();\n        }\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// Returns the API path for a specific repository\nexport function getRepoURL(distribution_base_path, view_published = false) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  // repo/distro \"published\" is special; not related to repo pipeline type\n  if (distribution_base_path === 'published' && view_published === false) {\n    return `${host}${API_BASE_PATH}`;\n  }\n\n  return `${host}${API_BASE_PATH}content/${distribution_base_path}/`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superadmin;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { Constants } from 'src/constants';\n\nexport function namespaceTitle({\n  name,\n  company,\n}: {\n  name: string;\n  company?: string;\n}): string {\n  return DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n    ? company || name\n    : name;\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\n\n// returns the preferred distribution base_path given a repo name\n// if there is a distribution with the same name as the repository, it will be used (as long as it's connected to the right repo too)\n// if not, the oldest will be used\n// reject if no distributions or repository\n// optional pulp_href param skips repo lookup\n\nexport function repositoryBasePath(name, pulp_href?): Promise<string> {\n  return Promise.all([\n    pulp_href\n      ? Promise.resolve({ name, pulp_href })\n      : AnsibleRepositoryAPI.list({ name, page_size: 1 }).then(firstResult),\n    AnsibleDistributionAPI.list({ name, page_size: 1 }).then(firstResult),\n  ]).then(async ([repository, distribution]) => {\n    if (!repository) {\n      return Promise.reject(t`Failed to find repository ${name}`);\n    }\n\n    if (distribution && distribution.repository === repository.pulp_href) {\n      return distribution.base_path;\n    }\n\n    distribution = await AnsibleDistributionAPI.list({\n      repository: repository.pulp_href,\n      sort: 'pulp_created',\n      page_size: 1,\n    }).then(firstResult);\n\n    if (!distribution) {\n      return Promise.reject(\n        t`Failed to find a distribution for repository ${name}`,\n      );\n    }\n\n    return distribution.base_path;\n  });\n}\n\nfunction firstResult({ data: { results } }) {\n  return results[0];\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <Link\n          to={formatPath(Paths.taskDetail, {\n            task: parsePulpIDFromURL(task?.task || task),\n          })}\n        >\n          detail page{' '}\n        </Link>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","getQueryString","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","DEFAULT_PAGE_SIZE","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","INSIGHTS_DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","STANDALONE_DEPLOYMENT_MODE","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","ActiveUserAPI","_HubAPI","API","_len","length","args","Array","_key","getUIPath","result","reject","username","password","_this2","loginURL","_get","_getPrototypeOf","prototype","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","AnsibleDistributionAPI","_PulpAPI","AnsibleRemoteAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","role","AnsibleRepositoryAPI","pulp_id","list","body","undefined","version_href","base_version","collection_version_hrefs","add_content_units","collection_version_href","remove_content_units","CertificateUploadAPI","formData","FormData","append","file","repository","signed_collection","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_getSignatures","_deleteCollection","_deleteCollectionVersion","_getDownloadURL","_setDeprecation","repo","path","response","_ref","_ref$collection_versi","namespace","name","is_deprecated","distroBasePath","collection_version","repositoryBasePath","pulp_href","sent","deprecated","progressCallback","cancelToken","config","onUploadProgress","token","distro_base_path","source","_callee2","version","_context2","_ref2","download_url","_x2","_x3","_x4","_x5","_callee3","_ref3","_ref3$collection_vers","_context3","_x6","_callee4","_ref4","_ref4$collection_vers","_context4","_x7","collection","_callee5","_context5","_x8","_x9","_x10","_x11","CollectionVersionAPI","source_base_path","destination_base_path","create","ContainerDistributionAPI","ContainerTagAPI","repositoryID","tag","digest","ExecutionEnvironmentAPI","readme","manifest","ExecutionEnvironmentRegistryAPI","clearSetFieldsFromRequest","write_only_fields","ExecutionEnvironmentRemoteAPI","FeatureFlagsAPI","GenericPulpAPI","GroupAPI","groupId","roleId","content_object","ImportAPI","LegacyAPI","newParams","sortParam","_LegacyAPI","MyNamespaceAPI","MySyncListAPI","NamespaceAPI","PulpStatus","RoleAPI","for_object_type","permissionId","SettingsAPI","SignCollectionAPI","_sign","updatedData","repository_name","_objectWithoutProperties","_excluded","status","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","SigningServiceAPI","TaskAPI","TaskManagementAPI","UserAPI","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","count","removePath","addPath","ApprovalRow","approve","collectionVersion","featureFlags","context","isVersionUpdating","openUploadCertificateModal","React","Link","to","formatPath","Paths","collectionByRepo","Button","variant","ButtonVariant","link","onClick","getDownloadURL","downloadURL","location","assign","download","DownloadIcon","DateComponent","date","pulp_created","LabelGroup","_repository$pulp_labe2","is_signed","pipeline","pulp_labels","Spinner","size","display_signatures","Label","color","icon","CheckCircleIcon","i18n","_","ExclamationCircleIcon","can_upload_signatures","require_upload_signatures","ExclamationTriangleIcon","renderStatus","_repository$pulp_labe","collection_auto_sign","ListItemActions","canUploadSignature","mustUploadSignature","autoSign","approveButton","isDisabled","Boolean","approveDropDown","DropdownItem","rejectDropDown","importsLink","component","myImports","kebabItems","buttons","renderButtons","ApproveModal","parentAddAlert","addAlert","closeAction","finishAction","settings","useContext","MultiRepoModal","submitAction","selectedRepos","setLoading","error","_approveAsync","_yield$AnsibleReposit","repo_id","signingServiceName","signingList","task","parsePulpIDFromURL","collection_versions","destination_repositories","GALAXY_AUTO_SIGN_COLLECTIONS","GALAXY_COLLECTION_SIGNING_SERVICE","values","page_size","results","moveCollectionVersion","t2","t1","t0","t3","waitForTaskUrl","title","approveAsync","description","CardListSwitcher","updateParams","_ref$size","className","disp","view_type","iconClasses","ThLargeIcon","cx","selected","setParam","ListIcon","CollectionCard","d","namespace_metadata","displaySignatures","menu","footer","nsTitle","namespaceTitle","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","display_repositories","TextContent","Text","TextVariants","small","Badge","isRead","ansibleRepositoryDetail","CERTIFIED_REPO","SignatureBadge","isCompact","signState","Trans","components","namespaceDetail","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","CollectionDependenciesList","dependencies_repos","dependencies","List","dependency","i","listDep","EmptyStateNoData","fqn","version_range","ListItem","style","marginRight","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","itemCount","usedByDependenciesLoading","ignoredParams","filterIsSet","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","name__icontains","onChange","_e","val","onClear","placeholder","Sort","options","sort","Pagination","isTop","LoadingPageSpinner","repository_list","getReduced","EmptyStateFilter","CollectionContentList","_step","toShow","summary","all","showing","keywords","_iterator","_createForOfIteratorHelper","s","n","done","_c$content_type","c","keywordMatch","match","typeMatch","push","err","f","clickable","collectionContentDocsByRepo","EmptyStateCustom","DownloadSignatureGridItem","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","signatures","setSignatures","_useState5","_useState6","isLoading","setIsLoading","getSignatures","res","message","GridItem","Split","hasGutter","SplitItem","padding","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","Grid","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","Alert","isInline","LoginLink","collectionDistributionsByRepo","ref","display","current","href","click","_e$response","statusText","errorMessage","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","collectionDocsIndexByRepo","TableOfContents","props","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","split","toUpperCase","collectionDocsPageByRepo","_step2","_iterator2","getContentEntry","a","b","startsWith","parseLinks","searchBarRef","Nav","theme","NavList","links","filterString","isExpanded","filteredLinks","toLowerCase","NavExpandable","capitalize","isActive","getSelectedCategory","index","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","content_name","CollectionFilter","repositories","setRepositories","inputText","setInputText","selectedFilter","setSelectedFilter","loadRepos","pulp_label_select","repos","useEffect","_context$featureFlags","displayTags","displayRepos","displayNamespaces","filterConfig","inputType","COLLECTION_FILTER_TAGS","ToolbarContent","marginLeft","CompoundFilter","text","selectFilter","AppliedFilters","niceNames","niceValues","false","true","marginTop","CollectionList","collections","collectionControls","DataList","CollectionListItem","_extends","showNamespace","clearAllFilters","SignAllCertificatesModal","isOpen","onSubmit","onCancel","Modal","ModalVariant","medium","onClose","actions","primary","span","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","SignSingleCertificateModal","_ref$signState","_ref$isCompact","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","_ref$collection","dropdownMenu","synclistSwitch","uploadButton","cells","DataListCell","alignRight","width","DeprecatedTag","chipGroupProps","Flex","direction","default","alignItems","FlexItem","CollectionRatings","isList","alignSelf","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","cancelAction","children","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CopyCollectionToRepositoryModal","_copyToRepositories","signingService","copyCollectionVersion","forEach","taskAlert","dateTime","moment","format","fromNow","DeleteAnsibleRemoteModal","deleteAction","pending","setPending","DeleteModal","DeleteAnsibleRepositoryModal","DeleteCollectionModal","deleteCollection","isDeletionPending","confirmDelete","setConfirmDelete","deleteFromRepo","lastCollectionVersion","paddingBottom","Checkbox","isChecked","isRemove","_ref$variant","button","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","EmptyStateXs","BaseHeader","_React$Component","_this$props","logo","pageControls","breadcrumbs","contextSelector","versionControl","CollectionHeader","_submitCertificate","modalPagination","setState","modalCollections","_this$props$collectio","requestParams","order_by","_this$props$collectio2","errorAlert","alerts","_toConsumableArray","state","isOpenSignAllModal","sign","signing_service","waitForTask","task_id","x","_this$props$collectio3","isOpenSignModal","deleteAll","promise","deleteCollectionVersion","repositoryRemoveCollection","taskId","topVersion","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","isOpenVersionsSelect","isOpenVersionsModal","DEFAULT_PAGINATION_OPTIONS","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","copyCollectionToRepositoryModal","DeleteCollectionUtils","getUsedbyDependencies","alert","include_related","_ref5","prevProps","_this3","activeTab","actuallyCollection","collectionsCount","_this$state","urlKeys","latestVersion","_this$context$feature","ai_deny_index","isLatestVersion","v","collectionName","Navigate","canSign","canSignNamespace","hasPermission","canDeleteCommunityCollection","permission","_namespace$related_fi","_namespace$related_fi2","related_fields","my_permissions","hasObjectPermission","dropdownItems","deleteMenuOption","canDeleteCollection","openDeleteModalWithConfirm","deprecate","checkUploadPrivilleges","copyToRepository","issueUrl","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","updatePaginationParams","_ref6","toString","load","RepoSelector","selectedRepo","Breadcrumbs","Select","onToggle","SelectVariant","single","onSelect","selections","loadingVariant","SelectOption","DownloadCount","target","rel","ExternalLinkAltIcon","StatefulDropdown","items","AlertList","closeAlert","renderTabs","_this4","active","_this$props2","pathParams","reduced","ignoreParams","tabs","collectionContentListByRepo","collectionImportLogByRepo","collectionDependenciesByRepo","LinkTabs","_this$state$versionTo","_this5","upload","reload","_ref7","_ref8","_this6","setDeprecation","_err$response2","warning","closeAlertMixin","AppContext","PartnerHeader","filters","Tabs","Popover","position","PopoverPosition","top","bodyContent","headerContent","header","hasAutoWidth","iconPosition","OutlinedQuestionCircleIcon","Status","_saveFile","_loadAllRepos","errors","errorVariant","uploadProgress","uploadStatus","waiting","loading","onlyStaging","loadAllRepos","staging","_ref2$data","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","Radio","MultipleRepoSelector","addAlertObj","singleSelectionOnly","setSelectedRepos","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","detectedType","acceptedTypes","_this$state$selectedR","artifact","sha256","getCancelToken","loaded","total","messages","msg","cancel","onSelectProp","_ref$toggleType","toggleType","defaultText","_ref$isPlain","ariaLabel","dataCy","setSelected","Dropdown","event","currentTarget","toggle","renderToggle","open","DropdownPosition","right","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","_this$props$buttons","_this$props$kebabItem","anyButtons","anyKebab","paddingRight","textAlign","justifyContent","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","failed","objectFit","maxHeight","src","DefaultLogo","onError","MarkdownEditor","updateText","helperText","editing","TextArea","ReactMarkdown","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","running","followMessages","handleScrollClick","renderMessage","completed","level","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","APISearchTypeAhead","loadResults","placeholderText","NamespaceForm","errorMessages","isRequired","TextInput","helperTextInvalid","validated","toError","company","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","splice","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","ResourcesForm","resources","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","parameter","newNamespaceNameValid","handleSubmit","preventDefault","labelIcon","InputGroup","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","ListPage","_class","condition","displayName","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderModals","renderTableRow","sortHeaders","typeaheadQuery","actionContext","action","_action$modal","modal","_action$modal2","translateTitle","klass","parseParamString","search","unauthorised","setAlerts","_renderModals","localizedFilterConfig","knownFilters","noData","fromEntries","filterId","obj","optionId","listQuery","navigate","resetCompoundFilter","renderTable","localizedSortHeaders","SortTable","updateParamsMixin","withRouter","Page","listUrl","transformParams","render","_item$my_permissions","_item$my_permissions$","_transformParams","routeParams","_item$my_permissions2","_item$my_permissions3","PageWithTabs","headerDetails","renderTab","tabUpdateParams","tab","localizedTabs","find","visible","NotFound","zIndex","flexDirection","marginBottom","actionClose","AlertActionCloseButton","alertIndex","newList","alertStateVariable","_ref$ignoredParams","_ref$niceNames","chips","isArray","ChipGroup","categoryName","_niceValues$key","Chip","deleteParam","unsetFilter","renderGroup","Breadcrumb","BreadcrumbItem","PFClipboardCopy","hoverTip","clickTip","selectedID","replace","indexOf","submitMultiple","isCreatable","hasOnCreateOption","filterOptions","FilterIcon","renderInput","submitFilter","control","trim","checkbox","onSelectMultiple","isGrouped","SelectGroup","option","selectTitleById","typeaheadResults","multiple","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","isCode","PFFileUpload","clearButtonText","_ref$active","extra","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","bottom","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","PFTooltip","WizardModal","steps","onSave","large","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","backButtonText","cancelButtonText","closeButtonAriaLabel","nextButtonText","titleId","descriptionId","WriteOnlyField","isValueSet","autoComplete","SectionTitle","SectionSeparator","backgroundColor","margin","AccessTab","canEditOwners","group","showGroupRemoveModal","showGroupSelectWizard","showUserRemoveModal","showUserSelectWizard","users","updateProps","buttonAdd","buttonUserAdd","buttonGroupAdd","renderUserRemoveModal","renderUserSelectWizard","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderSection","emptyStateTitle","emptyStateExtra","renderItems","itemName","renderItem","renderUserRow","sortField","renderGroupRow","_ref2$emptyStateExtra","sorted","sortBy","urlPrefix","_this$props3","_this$props4","showRoleRemoveModal","showRoleSelectWizard","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","RolePermissions","_this$props5","removeUser","_this$props6","groupname","removeGroup","_this$props7","userOrGroupName","removeRole","removeUserRole","_this$props8","pulpObjectType","selectRolesMessage","_this$props8$showUser","_this$props8$showUser2","hasUser","hasRoles","SelectUser","assignedUsers","selectedUser","updateUser","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","isFinished","addUser","_this$props9","_this$props9$showGrou","_this$props9$showGrou2","hasGroup","assignedGroups","selectedGroup","updateGroup","addGroup","_object_roles","_this7","_this$props10","_this$props10$showRol","addRole","addUserRole","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","PermissionCategories","permissions","showCustom","showEmpty","_this$context","model_permissions","showUserManagement","external_authentication","userManagementFilter","USER_GROUP_MGMT_PERMISSIONS","allPermissions","categories","entries","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","menuAppendTo","typeaheadMulti","typeAheadAriaLabel","_model_permissions$pe3","translateLockedRolesDescription","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","colSpan","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","setRole","selectedRole","setGroups","groupsCount","setGroupsCount","_useState7","_useState8","_useState9","_useState10","localParams","setLocalParams","queryGroups","meta","isAssigned","some","tabHeader","flex","setRoles","rolesItemCount","setRolesItemCount","queryRoles","name__startswith","isRoleSelected","setUsers","usersCount","setUsersCount","queryUsers","username__contains","UserForm","newUser","selection","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","isReadonly","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","formFields","formGroupLabelIcon","requiredFields","superuserLabel","getSuperUserHelperText","Switch","labelOff","formSuffix","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","DataForm","model","pass","confirm","UserFormPage","extraControls","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","ret","contains","part","renderDocLink","renderPluginLink","fqcn","dom","ERROR","formatPartError","BOLD","formatPartBold","CODE","formatPartCode","HORIZONTAL_LINE","formatPartHorizontalLine","ITALIC","formatPartItalic","LINK","formatPartLink","MODULE","formatPartModule","RST_REF","formatPartRstRef","URL","formatPartURL","TEXT","formatPartText","ENV_VARIABLE","formatPartEnvVariable","OPTION_NAME","formatPartOptionNameReturnValue","OPTION_VALUE","formatPartOptionValue","PLUGIN","formatPartPlugin","RETURN_VALUE","parsed","parse","_step3","fragments","_iterator3","_step4","_iterator4","formatPart","_pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","_props$params","sortTableOptions","isSelectorOpen","setIsSelectorOpen","repositoryList","setRepositoryList","itemsCount","setItemsCount","_useState11","_useState12","setParams","disabledRepos","isSelectorChecked","every","changeSelection","_ref3$data","_ref4$response","selectPage","newRepos","deselectPage","repo1","repo2","document","getElementById","focus","splitButtonItems","DropdownToggleCheckbox","checked","renderMultipleSelector","setSelection","repoName","community","published","rejected","InputGroupText","paddingLeft","AnsibleRepositoryForm","_remotes$find","allowEditName","updateRepository","disabledFields","bool","formGroup","fieldName","inputField","stringField","isValid","createDistribution","setCreateDistribution","disabledDistribution","setDisabledDistribution","onDistributionsLoad","hide_from_search","hideFromSearch","setHideFromSearch","setPipeline","disableHideFromSearch","setDisableHideFromSearch","remotes","setRemotes","_useState13","_useState14","remotesError","setRemotesError","loadRemotes","selectedRemote","_useState15","_useState16","selectedPipeline","setSelectedPipeline","_useState17","_useState18","selectOpen","setSelectOpen","selectOptions","approved","none","pipelineHelp","labelsHelp","numericField","LazyDistributions","emptyText","repositoryHref","_repository$pulp_labe3","selectPipeline","stopPropagation","PulpLabels","labels","private","_event","_remotes$find2","_distributions$map","_distributions$map$jo","distributions","setDistributions","setCount","setPage","setError","prepend","errorElement","LazyRepositories","_repositories$map","remoteHref","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","isCommunityRemote","save","renderForm","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","signed_only","sync_dependencies","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","yaml","onEditorDidMount","editor","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","formPrefix","fields","DetailList","setItems","setItemCount","handleHttpError","Details","_ref$fields","overflowWrap","download_count","downloadCount","Intl","NumberFormat","UI_EXTERNAL_LOGIN_URI","login","setDisabledRepos","prevAlerts","repository_label","cache","loadScore","callback","setScores","_data$namespace","fetch","json","scores","loader","Ratings","help","more","quality_score","max","score","docs","ease_of_use","does_what_it_says","works_as_is","used_in_production","HTMLComment","UIVersion","UI_COMMIT_HASH","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","typeToVariantMap","secondary","_ref$type","labelProps","OutlinedClockIcon","skipped","canceled","ExclamationIcon","SyncAltIcon","statusToProps","fontSize","paddingTop","borderRadius","readOnly","evt","textInput","getOptions","isPlaceholder","typeahead","hasInlineFilter","onFilter","toggleIcon","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","_ref$response","removeFromDenyIndex","_ref2$response","addToDenyIndex","_ref3$response","expandableTitle","_props","NotFoundImage","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","ansibleRemoteDetail","ansibleRemoteEdit","ansibleRemotes","ansibleRepositories","ansibleRepositoryEdit","approvalDashboard","notFound","partners","editNamespace","myCollections","myCollectionsByRepo","myNamespaces","signatureKeys","taskList","taskDetail","collectionDocsPage","collectionDocsIndex","collectionContentDocs","collectionContentList","collectionImportLog","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","Provider","I18nProvider","App","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","activate","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","UI_BASE_PATH","replaceAll","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","assignRoles","userRoles","groupRoles","can_create_signatures","collapsedText","expandedText","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","statusCode","customMessage","custom","UUIDRegEx","_options$waitMs","waitMs","_options$multiplier","multiplier","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","round","taskUrl","_repositoryRemoveCollection","collectionVersion_pulp_href","_yield$AnsibleReposit2","repoHref","t4","t5","removeContent","t8","t7","t6","t9","_collection$collectio","getUsedDependenciesByCollection","caption","saveAs","Blob","getRepoURL","distribution_base_path","view_published","host","has_model_permission","is_superadmin","lastSynced","entity","last_sync_task","lastSyncStatus","paramString","numericTypes","appendParam","cloneDeep","param","_i2","_deleteKeys","firstResult","distribution","sortParams","isDesc","ascSort","LOCKED_ROLES_WITH_DESCRIPTION","outsideError","protocol","ClassComponent","WithRouter","useLocation","useNavigate","useParams","routePath","el","newObj"],"sourceRoot":""}