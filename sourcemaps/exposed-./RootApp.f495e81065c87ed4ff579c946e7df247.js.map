{"version":3,"file":"js/exposed-./RootApp.89a03d5f3b2fc7ddb3b9.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/group.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/import.ts","webpack:///./src/api/legacy.ts","webpack:///./src/api/legacy-namespace.ts","webpack:///./src/api/legacy-role.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/task.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/user.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/components/approve-modal/approve-modal.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/copy-collection-to-repository-modal/copy-collection-to-repository-modal.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/copy-url.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repo-selector/multiple-repo-selector.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/download-count.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/parse-pulp-id.ts","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/repositories.ts","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/repo-signing.ts","webpack:///./src/utilities/repository-base-path.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/write-only-fields.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t5541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t1870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t7853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t2620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t6379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from execution-environment-registry\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(pulp_id: string, params?) {\n    return this.list(params, this.apiPath + pulp_id + '/versions/');\n  }\n\n  // delete(pulp_id: string)\n\n  sync(pulp_id: string, body = {}) {\n    return this.http.post(this.apiPath + pulp_id + '/sync/', body);\n  }\n\n  revert(pulp_id: string, version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(pulp_id: string, collection_version_hrefs) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      add_content_units: collection_version_hrefs,\n    });\n  }\n\n  removeContent(pulp_id: string, collection_version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/list_roles/');\n  }\n\n  addRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/add_role/');\n  }\n\n  myPermissions(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/my_permissions/');\n  }\n\n  removeRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/remove_role/');\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/copy_collection_version/',\n      body,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/move_collection_version/',\n      body,\n    );\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import axios from 'axios';\nimport { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from './response-types/collection';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  async setDeprecation({\n    collection_version: { namespace, name },\n    repository,\n    is_deprecated,\n  }: CollectionVersionSearch): Promise<{ data: { task: string } }> {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.patch(\n      `${namespace}/${name}`,\n      {\n        deprecated: !is_deprecated,\n      },\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/`,\n    );\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n\n    if (data.distro_base_path) {\n      return this.http.post(\n        `v3/plugin/ansible/content/${data.distro_base_path}/collections/artifacts/`,\n        formData,\n        config,\n      );\n    } else {\n      return this.http.post('v3/artifacts/collections/', formData, config);\n    }\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  async getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http\n      .get(\n        `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n      )\n      .then(({ data: { download_url } }) => download_url);\n  }\n\n  async deleteCollectionVersion({\n    collection_version: { namespace, name, version },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  async deleteCollection({\n    collection_version: { namespace, name },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  async getSignatures(repository, namespace, name, version) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n\n  getDetail(distroBasePath, namespace, name) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import axios from 'axios';\nimport { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  move(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  copy(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      `${this.apiPath}?dependency=${namespace}.${collection}`,\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // list(params?)\n}\n\nexport const CollectionVersionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nfunction smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { BaseAPI } from './base';\nimport { LegacyRoleDetailType } from './response-types/legacy-role';\n\nexport class LegacyAPI extends BaseAPI {\n  API_VERSION = 'v1';\n\n  cachedLegacyRole: LegacyRoleDetailType;\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  public mapPageToOffset(p) {\n    // override BaseAPI's function to persist page, page_size, etc ...\n    return p;\n  }\n\n  get(apiPath: string) {\n    const fullPath = 'v1/' + apiPath;\n    if (fullPath.includes('?')) {\n      return this.http.get(this.getPath(fullPath));\n    } else {\n      return this.http.get(this.getPath(fullPath) + '/');\n    }\n  }\n\n  getApiPath(url: string) {\n    const newUrl = `/${this.API_VERSION}/${url}`;\n    return newUrl;\n  }\n}\n","import axios from 'axios';\nimport { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = this.getApiPath('');\n\n  list(params?) {\n    const path = this.apiPath + 'namespaces/';\n\n    // clean null'ish params\n    if (params !== undefined && params !== null) {\n      for (const [key, value] of Object.entries(params)) {\n        if (value === null || value === undefined || value === '') {\n          delete params[key];\n        }\n      }\n    }\n\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n      },\n    }));\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n}\n\nexport const LegacyNamespaceAPI = new API();\n","import axios from 'axios';\nimport { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = this.getApiPath('');\n\n  list(params?) {\n    const path = this.apiPath + 'roles/';\n\n    // clean null'ish params\n    if (params !== undefined && params !== null) {\n      for (const [key, value] of Object.entries(params)) {\n        if (value === null || value === undefined || value === '') {\n          delete params[key];\n        }\n      }\n    }\n\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n      },\n    }));\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n}\n\nexport const LegacyRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport { CollectionVersionSearch } from './response-types/collection';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository?: CollectionVersionSearch['repository'];\n  repository_name?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignCollectionVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignCollectionVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  async sign({ repository, repository_name: name, ...args }: SignProps) {\n    const distroBasePath = await repositoryBasePath(\n      name,\n      repository?.pulp_href,\n    ).catch((status) =>\n      Promise.reject({\n        response: { status },\n      }),\n    );\n\n    const updatedData = {\n      distro_base_path: distroBasePath,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersion,\n  CollectionVersionAPI,\n  SigningServiceAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlert,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTaskUrl,\n} from 'src/utilities';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersion;\n  addAlert: (alert) => void;\n  allRepositories: AnsibleRepositoryType[];\n  finishAction: () => void;\n  stagingRepoNames: string[];\n  rejectedRepoName: string;\n}\n\nexport const ApproveModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [fixedRepos, setFixedRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const context = useContext();\n\n  function approve() {\n    let error = '';\n\n    async function approveAsync() {\n      setLoading(true);\n\n      let reapprove = false;\n\n      let originRepoName = props.collectionVersion.repository_list.find(\n        (repo) =>\n          props.stagingRepoNames.includes(repo) ||\n          repo == props.rejectedRepoName,\n      );\n\n      // origin repo is not staging or rejected, so this is reapprove process, user can add collection to approved repos\n      if (!originRepoName) {\n        reapprove = true;\n        originRepoName = fixedRepos[0];\n      }\n\n      const reposToApprove = [];\n\n      // fill repos that are actualy needed to approve, some of them may already contain the collection, those dont need to be approved again\n      // this handles the possible inconsistent state\n      selectedRepos.forEach((repo) => {\n        if (!fixedRepos.includes(repo)) {\n          reposToApprove.push(repo);\n        }\n      });\n\n      const repositoriesRef = props.allRepositories\n        .filter((repo) => reposToApprove.includes(repo.name))\n        .map((repo) => repo.pulp_href);\n\n      error = t`Repository name ${originRepoName} not found.`;\n      const repo = (\n        await AnsibleRepositoryAPI.list({ name: originRepoName, page_size: 1 })\n      )?.data?.results?.[0];\n      if (!repo) {\n        throw new Error();\n      }\n      error = '';\n\n      const pulp_id = parsePulpIDFromURL(repo.pulp_href);\n\n      error = t`Collection with id ${props.collectionVersion.id} not found.`;\n      const collectionData = await CollectionVersionAPI.get(\n        props.collectionVersion.id,\n      );\n      error = '';\n\n      const autosign = context.settings.GALAXY_AUTO_SIGN_COLLECTIONS;\n      let signingService_href = null;\n\n      if (autosign) {\n        const signingServiceName =\n          context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n        });\n        if (signingList.data.results.length > 0) {\n          signingService_href = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      const params = {\n        collection_versions: [collectionData.data.pulp_href],\n        destination_repositories: repositoriesRef,\n      };\n      if (signingService_href) {\n        params['signing_service'] = signingService_href;\n      }\n\n      const task = (\n        await (reapprove\n          ? AnsibleRepositoryAPI.copyCollectionVersion(pulp_id, params)\n          : AnsibleRepositoryAPI.moveCollectionVersion(pulp_id, params))\n      )?.data?.task;\n      await waitForTaskUrl(task);\n\n      setLoading(false);\n      props.finishAction();\n      props.addAlert({\n        title: t`Certification status for collection \"${props.collectionVersion.namespace} ${props.collectionVersion.name} v${props.collectionVersion.version}\" has been successfully updated.`,\n        variant: 'success',\n        description: '',\n      });\n    }\n\n    approveAsync().catch(() => {\n      setLoading(false);\n\n      addAlert({\n        title: t`Failed to approve collection.`,\n        variant: 'danger',\n        description: error,\n      });\n    });\n  }\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function loadRepos(params, setRepositoryList, setLoading, setItemsCount) {\n    // modify params\n    const par = { ...params };\n    par['pulp_label_select'] = 'pipeline=approved';\n\n    setLoading(true);\n    AnsibleRepositoryAPI.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  useEffect(() => {\n    const fixedReposLocal = [];\n    const selectedReposLocal = [];\n\n    // check for approval repos that are already in collection and select them in UI\n    // this is handling of situation when collection is in inconsistent state\n    props.collectionVersion.repository_list.forEach((repo) => {\n      const count = props.allRepositories.filter((r) => r.name == repo).length;\n      if (count > 0) {\n        fixedReposLocal.push(repo);\n        selectedReposLocal.push(repo);\n      }\n    });\n\n    setSelectedRepos(selectedReposLocal);\n    setFixedRepos(fixedReposLocal);\n  }, []);\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={approve}\n            variant='primary'\n            isDisabled={\n              selectedRepos.length - fixedRepos.length <= 0 || loading\n            }\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          <MultipleRepoSelector\n            allRepositories={props.allRepositories}\n            fixedRepos={fixedRepos}\n            selectedRepos={selectedRepos}\n            setSelectedRepos={setSelectedRepos}\n            loadRepos={loadRepos}\n          />\n          {loading && <Spinner />}\n        </section>\n\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  className,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace?.company || collection_version.namespace;\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          {featureFlags.display_repositories ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Badge isRead>\n                  <Link\n                    to={formatPath(Paths.ansibleRepositoryDetail, {\n                      name: repository.name,\n                    })}\n                  >\n                    {repository.name === Constants.CERTIFIED_REPO\n                      ? t`Certified`\n                      : repository.name}\n                  </Link>\n                </Badge>\n              </Text>\n            </TextContent>\n          ) : null}\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { List, ListItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}{' '}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { LoadingPageSpinner } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      const { namespace, name, version } = collectionVersion;\n\n      CollectionAPI.getSignatures(repository, namespace, name, version)\n        .then((res) => {\n          setSignatures(res.data.signatures);\n          setIsLoading(false);\n        })\n        .catch(({ code, message }) => {\n          addAlert(code, message);\n          setIsLoading(false);\n          setShow(false);\n        });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {context.user.is_anonymous &&\n            !context.settings\n              .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                <div>\n                  <Trans>\n                    To download this collection, configure your client to\n                    connect to one of this repositories{' '}\n                    <Link\n                      to={formatPath(Paths.collectionDistributionsByRepo, {\n                        repo: repository.name,\n                        namespace: collection_version.namespace,\n                        collection: collection_version.name,\n                      })}\n                    >\n                      distributions\n                    </Link>\n                    .\n                  </Trans>\n                </div>\n                <a ref={downloadLinkRef} style={{ display: 'none' }} />\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out' />\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const [repositories, setRepositories] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  const loadRepos = () => {\n    AnsibleRepositoryAPI.list({\n      name__icontains: inputText,\n      pulp_label_select: '!hide_from_search',\n    }).then((res) => {\n      const repos = res.data.results.map(({ name }) => ({\n        id: name,\n        title: name,\n      }));\n      setRepositories(repos);\n    });\n  };\n\n  useEffect(() => {\n    if (selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  useEffect(() => {\n    setInputText(props.params['repository_name'] || '');\n  }, [props.params.repository_name]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [inputText]);\n\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures, display_repositories } = context.featureFlags;\n  const displayTags = ignoredParams.includes('tags') === false;\n  const displayRepos =\n    ignoredParams.includes('repository_name') === false && display_repositories;\n  const displayNamespaces = ignoredParams.includes('namespace') === false;\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n      options: repositories,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'multiple' as const,\n      options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n        id: tag,\n        title: tag,\n      })),\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n              selectFilter={(selected) => {\n                setSelectedFilter(selected);\n              }}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  is_signed: t`Sign state`,\n                  tags: t`Tags`,\n                  keywords: t`Keywords`,\n                  repository_name: t`Repository`,\n                  namespace: t`Namespace`,\n                }}\n                niceValues={{\n                  is_signed: {\n                    false: t`unsigned`,\n                    true: t`signed`,\n                  },\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  collectionControls: (collection) => {\n    dropdownMenu?: React.ReactNode | null;\n    synclistSwitch?: React.ReactNode | null;\n    uploadButton?: React.ReactNode | null;\n  };\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    collectionControls,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              key={i}\n              collection={c}\n              displaySignatures={displaySignatures}\n              showNamespace\n              {...collectionControls(c)}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem />\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one.`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  displaySignatures: boolean;\n  dropdownMenu?: React.ReactNode | null;\n  showNamespace?: boolean;\n  synclistSwitch?: React.ReactNode | null;\n  uploadButton?: React.ReactNode | null;\n}\n\nexport const CollectionListItem = ({\n  collection: {\n    collection_version,\n    namespace_metadata: namespace,\n    repository,\n    is_signed,\n    is_deprecated,\n  },\n  displaySignatures,\n  dropdownMenu,\n  showNamespace,\n  synclistSwitch,\n  uploadButton,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const cells = [];\n\n  const company = namespace?.company || collection_version.namespace;\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup {...chipGroupProps()}>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      <Flex\n        direction={{ default: 'column' }}\n        alignItems={{ default: 'alignItemsFlexEnd' }}\n      >\n        <Flex\n          direction={{ default: 'column' }}\n          alignItems={{ default: 'alignItemsFlexStart' }}\n        >\n          {synclistSwitch && <FlexItem>{synclistSwitch}</FlexItem>}\n          {uploadButton || dropdownMenu ? (\n            <FlexItem>\n              {uploadButton}\n              {dropdownMenu || <span className='hidden-menu-space' />}\n            </FlexItem>\n          ) : null}\n          <FlexItem>\n            <div>\n              <Trans>\n                Updated <DateComponent date={collection_version.pulp_created} />\n              </Trans>\n            </div>\n            <div>v{collection_version.version}</div>\n          </FlexItem>\n        </Flex>\n        <Flex\n          direction={{ default: 'row' }}\n          alignSelf={{ default: 'alignSelfFlexStart' }}\n        >\n          {featureFlags.display_repositories ? (\n            <FlexItem>\n              <Label variant='outline'>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name}\n                </Link>\n              </Label>\n            </FlexItem>\n          ) : null}\n          {displaySignatures ? (\n            <FlexItem>\n              <SignatureBadge\n                variant='outline'\n                signState={is_signed ? 'signed' : 'unsigned'}\n              />\n            </FlexItem>\n          ) : null}\n        </Flex>\n      </Flex>\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm' />}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport {\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  SortTable,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  RepositoriesUtils,\n  errorMessage,\n  parsePulpIDFromURL,\n  taskAlert,\n} from 'src/utilities';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  closeAction: () => void;\n  addAlert: (alert: AlertType) => void;\n}\n\nexport const CopyCollectionToRepositoryModal = (props: IProps) => {\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [repositoryList, setRepositoryList] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n  const [fixedRepos, setFixedRepos] = useState<string[]>([]);\n  const [selectedRepos, setSelectedRepos] = useState<string[]>([]);\n  const [inputText, setInputText] = useState('');\n  const [itemsCount, setItemsCount] = useState(0);\n  // const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const context = useContext();\n\n  useEffect(() => {\n    loadRepos();\n    loadAssociatedRepoList();\n  }, []);\n\n  useEffect(() => {\n    loadRepos();\n  }, [params]);\n\n  const loadRepos = async () => {\n    const par = { ...params };\n    par['name__contains'] = inputText;\n\n    setLoading(true);\n    const repos = await AnsibleRepositoryAPI.list(par);\n\n    setItemsCount(repos.data.count);\n    setRepositoryList(repos.data.results);\n    setLoading(false);\n  };\n\n  const loadAllRepos = () => {\n    setLoading(true);\n    // TODO: replace getAll pagination\n    RepositoriesUtils.listAll().then((repos) => {\n      setSelectedRepos(repos.map((repo) => repo.name));\n      setRepositoryList(repos);\n      setLoading(false);\n    });\n  };\n\n  const loadAssociatedRepoList = async () => {\n    const repoList = await RepositoriesUtils.getCollectionRepoList(\n      props.collection,\n    );\n    setFixedRepos(repoList);\n  };\n\n  const changeSelection = (name: string) => {\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      setSelectedRepos(selectedRepos.filter((element) => element != name));\n    } else {\n      // add\n      setSelectedRepos([...selectedRepos, name]);\n    }\n  };\n\n  const copyToRepositories = async () => {\n    setLoading(true);\n    const { collection_version, repository } = props.collection;\n\n    const pulpId = parsePulpIDFromURL(repository.pulp_href);\n\n    const signingServiceName =\n      context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n    let signingService = null;\n    try {\n      const signingList = await SigningServiceAPI.list({\n        name: signingServiceName,\n      });\n      signingService = signingList.data.results[0].pulp_href;\n    } catch {\n      setLoading(false);\n      props.addAlert({\n        title: t`Failed to copy collection version.`,\n        variant: 'danger',\n        description: t`Signing service ${signingServiceName} not found`,\n      });\n      return;\n    }\n\n    const repoHrefs = repositoryList\n      .filter((repo) => selectedRepos.includes(repo.name))\n      .map((repo) => repo.pulp_href);\n\n    const copyParams = {\n      collection_versions: [collection_version.pulp_href],\n      destination_repositories: repoHrefs,\n    };\n    if (signingService) {\n      copyParams['signing_service'] = signingService;\n    }\n\n    AnsibleRepositoryAPI.copyCollectionVersion(pulpId, copyParams)\n      .then(({ data }) => {\n        selectedRepos.map((repo) => {\n          props.addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${collection_version.namespace}.${collection_version.name} v${collection_version.version} from \"${repository.name}\" to repository \"${repo}\".`,\n            ),\n          );\n        });\n      })\n      .catch((e) => {\n        setLoading(false);\n        props.addAlert({\n          variant: 'danger',\n          title: t`Collection ${collection_version.namespace}.${collection_version.name} v${collection_version.version} could not be copied.`,\n          description: errorMessage(e.status, e.statusText),\n        });\n      });\n  };\n\n  const renderLabels = (repos: string[]) => {\n    const labels = (\n      <LabelGroup>\n        {repos.map((name, i) => (\n          <Label key={i} onClose={() => changeSelection(name)}>\n            {name}\n          </Label>\n        ))}\n      </LabelGroup>\n    );\n    return (\n      <Flex>\n        <FlexItem>\n          <b>{t`Selected`}</b>\n        </FlexItem>\n        <FlexItem>{labels}</FlexItem>\n      </Flex>\n    );\n  };\n\n  const renderMultipleSelector = () => {\n    const onToggle = (isOpen: boolean) => {\n      setIsSelectorOpen(isOpen);\n    };\n\n    const onFocus = () => {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    };\n\n    const onSelect = () => {\n      setIsSelectorOpen(false);\n      onFocus();\n    };\n\n    const selectAll = () => {\n      loadAllRepos();\n      setIsSelectorChecked(true);\n    };\n\n    const selectPage = () => {\n      setSelectedRepos(repositoryList.map((repo) => repo.name));\n      setIsSelectorChecked(true);\n    };\n\n    const deselectAll = () => {\n      setSelectedRepos([]);\n      setIsSelectorChecked(false);\n    };\n\n    const deselectPage = () => {\n      setSelectedRepos([]);\n      setIsSelectorChecked(false);\n    };\n\n    const onToggleCheckbox = () => {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    };\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={selectAll}\n        key='select-all'\n      >{t`Select all (${itemsCount} items)`}</DropdownItem>,\n      <DropdownSeparator key='separator' />,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${itemsCount} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  };\n\n  const renderTable = () => {\n    if (!props.collection) {\n      return;\n    }\n\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <CheckboxRow\n                rowIndex={i}\n                key={repo.name}\n                isSelected={\n                  fixedRepos.includes(repo.name) ||\n                  selectedRepos.includes(repo.name)\n                }\n                onSelect={() => {\n                  changeSelection(repo.name);\n                }}\n                isDisabled={fixedRepos.includes(repo.name)}\n                data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n              >\n                <td>\n                  <div>{repo.name}</div>\n                  <div>{repo.description}</div>\n                </td>\n              </CheckboxRow>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={() => copyToRepositories()}\n            variant='primary'\n            isDisabled={selectedRepos.length <= 0 || loading}\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          {renderLabels(selectedRepos)}\n          <div className='hub-toolbar'>\n            <Toolbar>\n              <ToolbarGroup>\n                <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n                <ToolbarItem>\n                  <CompoundFilter\n                    inputText={inputText}\n                    onChange={(text) => {\n                      setInputText(text);\n                    }}\n                    updateParams={(p) => setParams(p)}\n                    params={params}\n                    filterConfig={[\n                      {\n                        id: 'name__icontains',\n                        title: t`Repository`,\n                      },\n                    ]}\n                  />\n                </ToolbarItem>\n              </ToolbarGroup>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort']}\n              niceNames={{\n                name__icontains: t`Name`,\n              }}\n            />\n          </div>\n\n          {loading ? <Spinner /> : renderTable()}\n\n          <div className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n            />\n          </div>\n        </section>\n      </Modal>\n    </>\n  );\n};\n","import * as moment from 'moment';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\n\nexport const DateComponent = ({ date }: { date: string }) =>\n  date && (\n    <time dateTime={date}>\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    </time>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n  deleteFromRepo: string;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n    deleteFromRepo,\n  } = props;\n\n  const lastCollectionVersion = collectionVersion && collections.length === 1;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <Trans>\n              Deleting{' '}\n              <b>\n                {deleteCollection.collection_version.name} v{collectionVersion}\n              </b>\n              , its data will be lost.\n            </Trans>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b>, its\n              data will be lost.\n            </Trans>\n          )}\n          {lastCollectionVersion ? (\n            <> {t`This will cause the entire collection to be deleted.`}</>\n          ) : null}\n          {deleteFromRepo ? (\n            <>\n              {' '}\n              {t`The collection will be deleted only from repository ${deleteFromRepo}.`}\n            </>\n          ) : null}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      <EmptyStateIcon icon={icon} />\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm' />}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm' />}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector || null}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls || null}\n        </div>\n        {versionControl || null}\n\n        {children ? (\n          <div className='hub-header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  CopyCollectionToRepositoryModal,\n  DeleteCollectionModal,\n  DownloadCount,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RepositoriesUtils,\n  canSignNamespace,\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  collectionsCount: number;\n  collection: CollectionVersionSearch;\n  actuallyCollection: CollectionDetailType;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalCollections: CollectionVersionSearch[];\n  modalPagination: {\n    page: number;\n    page_size: number;\n  };\n  deleteCollection: CollectionVersionSearch;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n  namespace: NamespaceType;\n  copyCollectionToRepositoryModal: CollectionVersionSearch;\n  deleteAll: boolean;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalCollections: null,\n      modalPagination: {\n        page: 1,\n        page_size: Constants.DEFAULT_PAGINATION_OPTIONS[0],\n      },\n      deleteCollection: null,\n      deleteAll: false,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n      namespace: null,\n      copyCollectionToRepositoryModal: null,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n\n    this.setState({ modalCollections: this.props.collections });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collections !== prevProps.collections) {\n      this.setState({ modalCollections: this.props.collections });\n    }\n  }\n\n  render() {\n    const {\n      activeTab,\n      actuallyCollection,\n      breadcrumbs,\n      className,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n      updateParams,\n    } = this.props;\n\n    const {\n      modalCollections,\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n      copyCollectionToRepositoryModal,\n    } = this.state;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.collection_version.pulp_created;\n\n    const { display_signatures, can_upload_signatures, display_repositories } =\n      this.context.featureFlags;\n\n    const signedString = () => {\n      if (!display_signatures) {\n        return '';\n      }\n\n      return collection.is_signed ? t`(signed)` : t`(unsigned)`;\n    };\n\n    const isLatestVersion = (v) => {\n      return `${moment(v.pulp_created).fromNow()} ${signedString()}\n      ${\n        v.version === collections[0].collection_version.version\n          ? t`(latest)`\n          : ''\n      }`;\n    };\n    const { collection_version, namespace_metadata: namespace } = collection;\n    const { name: collectionName, version } = collection_version;\n\n    const company = namespace?.company || collection_version.namespace;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, true),\n        deleteAll: true,\n        display_repositories: display_repositories,\n      }),\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, false),\n        deleteAll: false,\n        display_repositories: display_repositories,\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-collection-version'\n          key='delete-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, true)}\n        >\n          {t`Delete version ${version} from system`}\n        </DropdownItem>\n      ),\n      hasPermission('ansible.delete_collection') && display_repositories && (\n        <DropdownItem\n          data-cy='remove-collection-version'\n          key='remove-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, false)}\n        >\n          {t`Delete version ${version} from repository`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${version}`}\n        </DropdownItem>\n      ),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.deprecate(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n      display_repositories && (\n        <DropdownItem\n          key='copy-collection-version-to-repository-dropdown'\n          onClick={() => this.copyToRepository(collection)}\n          data-cy='copy-collection-version-to-repository-dropdown'\n        >\n          {t`Copy version ${version} to repositories`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : collection.repository.name;\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={modalPagination}\n                updateParams={this.updatePaginationParams}\n                count={collectionsCount}\n              />\n            </div>\n            {modalCollections ? (\n              modalCollections.map(({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {t`updated ${isLatestVersion(collection_version)}`}\n                </ListItem>\n              ))\n            ) : (\n              <Spinner />\n            )}\n          </List>\n          <Pagination\n            params={modalPagination}\n            updateParams={this.updatePaginationParams}\n            count={collectionsCount}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                    deleteFromRepo,\n                  });\n            })\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {copyCollectionToRepositoryModal && (\n          <CopyCollectionToRepositoryModal\n            collection={collection}\n            closeAction={() => {\n              this.setState({ copyCollectionToRepositoryModal: null });\n            }}\n            addAlert={(alert) => {\n              this.addAlert(alert);\n              this.setState({ copyCollectionToRepositoryModal: null });\n            }}\n          />\n        )}\n        <BaseHeader\n          className={className}\n          title={collection_version.name}\n          logo={\n            namespace?.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector selectedRepo={collection.repository.name} />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='column-section'>\n              <div className='install-version-column'>\n                <span>{t`Version`}</span>\n                <div className='install-version-dropdown'>\n                  <Select\n                    isOpen={isOpenVersionsSelect}\n                    onToggle={(isOpenVersionsSelect) =>\n                      this.setState({ isOpenVersionsSelect })\n                    }\n                    variant={SelectVariant.single}\n                    onSelect={() =>\n                      this.setState({ isOpenVersionsSelect: false })\n                    }\n                    selections={`v${version}`}\n                    aria-label={t`Select collection version`}\n                    loadingVariant={\n                      collections.length < collectionsCount\n                        ? {\n                            text: t`View more`,\n                            onClick: () =>\n                              this.setState({\n                                isOpenVersionsModal: true,\n                                isOpenVersionsSelect: false,\n                              }),\n                          }\n                        : null\n                    }\n                  >\n                    {collections\n                      .map((c) => c.collection_version)\n                      .map((v) => (\n                        <SelectOption\n                          key={v.version}\n                          value={`v${v.version}`}\n                          onClick={() =>\n                            updateParams(\n                              ParamHelper.setParam(\n                                params,\n                                'version',\n                                v.version.toString(),\n                              ),\n                            )\n                          }\n                        >\n                          <Trans>\n                            {v.version} updated {isLatestVersion(v)}\n                          </Trans>\n                        </SelectOption>\n                      ))}\n                  </Select>\n                </div>\n                {latestVersion ? (\n                  <span className='last-updated'>\n                    <Trans>\n                      Last updated <DateComponent date={latestVersion} />\n                    </Trans>\n                  </span>\n                ) : null}\n                {display_signatures ? (\n                  <SignatureBadge\n                    isCompact\n                    signState={collection.is_signed ? 'signed' : 'unsigned'}\n                  />\n                ) : null}\n              </div>\n              <div style={{ alignSelf: 'center' }}>\n                <DownloadCount item={actuallyCollection} />\n              </div>\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'distributions',\n        title: t`Distributions`,\n        link: formatPath(\n          Paths.collectionDistributionsByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    const modalPagination = {\n      page,\n      page_size,\n    };\n\n    this.setState({ modalPagination, modalCollections: null });\n\n    const { namespace, name } = this.props.collection.collection_version;\n    const repository = this.props.collection.repository;\n    const requestParams = {\n      ...(repository ? { repository_name: repository.name } : {}),\n      namespace,\n      name,\n    };\n\n    // loadCollections provides initial data, pagination needs extra requests\n    CollectionVersionAPI.list({\n      ...requestParams,\n      order_by: '-version',\n      ...modalPagination,\n    })\n      .then(({ data }) => data)\n      .catch(() => ({ data: [] }))\n      .then(({ data: modalCollections }) =>\n        this.setState({ modalCollections }),\n      );\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    const { deleteAll } = this.state;\n\n    let promise = null;\n\n    if (deleteAll) {\n      promise = CollectionAPI.deleteCollectionVersion(deleteCollection);\n    } else {\n      promise = RepositoriesUtils.deleteCollection(\n        deleteCollection.repository.name,\n        deleteCollection.collection_version.pulp_href,\n      );\n    }\n\n    const name = deleteCollection.collection_version.name;\n\n    promise\n      .then((res) => {\n        if (!deleteAll) {\n          return;\n        }\n\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId);\n      })\n      .then(() => {\n        const topVersion = (collections || []).filter(\n          ({ collection_version }) =>\n            collection_version.version !== collectionVersion,\n        );\n\n        if (topVersion.length) {\n          this.props.updateParams(\n            ParamHelper.setParam(\n              this.props.params,\n              'version',\n              topVersion[0].collection_version.version,\n            ),\n          );\n\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ],\n          });\n        } else {\n          // last version in collection => collection will be deleted => redirect\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name} v{collectionVersion}&quot; has been\n                successfully deleted.\n              </Trans>\n            ),\n          });\n          this.setState({\n            redirect: formatPath(Paths.namespaceDetail, {\n              namespace: deleteCollection.collection_version.namespace,\n            }),\n          });\n        }\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null, deleteAll = true) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n      deleteAll: deleteAll,\n    });\n  }\n\n  private copyToRepository(collection: CollectionVersionSearch) {\n    this.setState({ copyCollectionToRepositoryModal: collection });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        className='hub-header-bordered'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Radio } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, repositoryBasePath } from 'src/utilities';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  errorVariant: 'default' | 'skippable' | 'skipped';\n  uploadProgress: number;\n  uploadStatus: Status;\n  allRepos: AnsibleRepositoryType[];\n  loading: boolean;\n  alerts: AlertType[];\n  selectedRepos: string[];\n  onlyStaging: boolean;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      errorVariant: 'default' as const,\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n      allRepos: [],\n      loading: true,\n      alerts: [],\n      selectedRepos: [],\n      onlyStaging: true,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAllRepos();\n  }\n\n  private loadAllRepos() {\n    const { onlyStaging } = this.state;\n\n    return AnsibleRepositoryAPI.list({\n      pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n      page_size: 1,\n    })\n      .then(({ data: { count, results } }) => {\n        this.setState({\n          selectedRepos: onlyStaging\n            ? ['staging']\n            : count === 1\n            ? [results[0].name]\n            : [],\n          loading: false,\n          // new value triggers MultipleRepoSelector reload (loadRepos)\n          allRepos: [],\n        });\n      })\n      .catch((error) => {\n        this.addAlert(t`Error loading repositories.`, 'danger', error?.message);\n        this.setState({ loading: false });\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n\n  private loadRepos(params, setRepositoryList, setLoading, setItemsCount) {\n    const { onlyStaging } = this.state;\n\n    setLoading(true);\n\n    AnsibleRepositoryAPI.list({\n      ...params,\n      pulp_label_select: onlyStaging ? 'pipeline=staging' : '!pipeline',\n    })\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        this.addAlertObj({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  private addAlertObj(alert) {\n    this.addAlert(alert.title, alert.variant, alert.description);\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, errorVariant, uploadProgress, uploadStatus } =\n      this.state;\n    const skipError = () => {\n      if (errorVariant === 'skippable') {\n        this.setState({ errorVariant: 'skipped' as const });\n      }\n    };\n\n    return (\n      <Modal\n        variant={'large'}\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={\n              !this.canUpload() || this.state.selectedRepos.length == 0\n            }\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className={cx('file-error-messages', errorVariant)}>\n              {errors}\n              {errorVariant === 'skippable' && (\n                <>\n                  {' '}\n                  <a onClick={skipError}>{t`Upload anyway?`}</a>\n                </>\n              )}\n            </span>\n          ) : null}\n        </div>\n\n        <>\n          <br />\n          <Radio\n            isChecked={this.state.onlyStaging}\n            name='radio-1'\n            onChange={(val) => {\n              this.setState({ onlyStaging: val }, () => this.loadAllRepos());\n            }}\n            label={t`Staging Repos`}\n            id='radio-staging'\n          ></Radio>\n          <Radio\n            isChecked={!this.state.onlyStaging}\n            name='radio-2'\n            onChange={(val) => {\n              this.setState({ onlyStaging: !val }, () => this.loadAllRepos());\n            }}\n            label={t`All Repos`}\n            id='radio-all'\n          ></Radio>\n          {!this.state.onlyStaging && (\n            <>{t`Please note that these repositories are not filtered by permissions. Upload may fail without the right permissions.`}</>\n          )}\n\n          <MultipleRepoSelector\n            singleSelectionOnly={true}\n            allRepositories={this.state.allRepos}\n            fixedRepos={[]}\n            selectedRepos={this.state.selectedRepos}\n            setSelectedRepos={(repos) =>\n              this.setState({\n                selectedRepos: repos,\n                errors: '',\n                errorVariant: 'default' as const,\n              })\n            }\n            hideFixedRepos={true}\n            loadRepos={(params, setRepositoryList, setLoading, setItemsCount) =>\n              this.loadRepos(\n                params,\n                setRepositoryList,\n                setLoading,\n                setItemsCount,\n              )\n            }\n          />\n        </>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors && this.state.errorVariant !== 'skipped') {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin' />;\n      default:\n        return <FolderOpenIcon />;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n        errorVariant: 'default' as const,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      const detectedType = newCollection.type || t`unknown`;\n      const acceptedTypes: string = this.acceptedFileTypes.join(', ');\n      this.setState({\n        errors: t`Invalid file format: ${detectedType} (expected: ${acceptedTypes}).`,\n        errorVariant: 'skippable' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        errorVariant: 'default' as const,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  async saveFile() {\n    const selectedRepos = this.state.selectedRepos;\n\n    this.setState({ uploadStatus: Status.uploading });\n\n    const distro_base_path = await repositoryBasePath(selectedRepos[0]).catch(\n      (error) => {\n        this.addAlert(error, 'danger');\n      },\n    );\n\n    if (!distro_base_path) {\n      this.setState({ uploadStatus: Status.waiting });\n      return;\n    }\n\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n      distro_base_path,\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n          errorVariant: 'default' as const,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        errorVariant: 'default' as const,\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  DropdownItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo, StatefulDropdown } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n  openModal: (namespace) => void;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content' size={10}>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    const { ai_deny_index } = this.context.featureFlags;\n    const summary_fields = namespace.summary_fields;\n    const userOwnsLegacyNamespace = summary_fields?.owners?.filter(\n      (n) => n.username == this.context.user.username,\n    ).length;\n\n    const showWisdom =\n      ai_deny_index &&\n      (this.context.user.is_superuser || userOwnsLegacyNamespace);\n\n    const dropdownItems = [];\n\n    dropdownItems.push(\n      <DropdownItem onClick={() => this.props.openModal(namespace)}>\n        {t`Ansible Lightspeed settings`}\n      </DropdownItem>,\n    );\n\n    if (showWisdom) {\n      cells.push(\n        <DataListCell key='menu' alignRight={true}>\n          <div style={{ float: 'right' }}>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        </DataListCell>,\n      );\n    }\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n\nLegacyNamespaceListItem.contextType = AppContext;\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api';\nimport { DateComponent, DownloadCount, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${role.github_user} logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n        <div className='hub-entry'>\n          <DownloadCount item={role} />\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton />\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const repoStatus = collection.repository.pulp_labels?.pipeline;\n      if (repoStatus === Constants.NOTCERTIFIED) {\n        approvalStatus = t`rejected`;\n      } else if (repoStatus === Constants.NEEDSREVIEW) {\n        approvalStatus = t`waiting for approval`;\n      } else if (repoStatus === Constants.APPROVED) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  DateComponent,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  })[type] || type;\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n  selectedFilter: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ninterface ParamsType {\n  page?: number;\n  page_size?: number;\n}\n\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\n\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState = null },\n  listItemActions?,\n) => React.ReactNode;\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ntype SortHeaders = {\n  title: MessageDescriptor;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\nexport type LocalizedSortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  filterConfig: ({ state }) => FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: MessageDescriptor;\n  noDataTitle: MessageDescriptor;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: MessageDescriptor;\n  typeaheadQuery?: ({ inputText, selectedFilter, setState }) => void;\n}\n\nexport const ListPage = function <T>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n  // for typeahed filters\n  typeaheadQuery,\n}: ListPageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const translateTitle = ({ title, ...rest }: any) => ({\n    ...rest,\n    title: i18n._(title),\n  });\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        selectedFilter: null,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const localizedFilterConfig = filterConfig({ state: this.state }) || [];\n      const knownFilters = localizedFilterConfig.map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        localizedFilterConfig.map(({ id, title }) => [id, title]),\n      );\n\n      const niceValues = {};\n      localizedFilterConfig\n        .filter(({ options }) => options?.length)\n        .forEach(({ id: filterId, options }) => {\n          const obj = (niceValues[filterId] = {});\n          options.forEach(({ id: optionId, title }) => {\n            obj[optionId] = title;\n          });\n        });\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.query(),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const resetCompoundFilter = () =>\n        this.setState({\n          inputText: '',\n          selectedFilter: localizedFilterConfig[0].id,\n        });\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader title={i18n._(title)} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={i18n._(noDataDescription)}\n              title={i18n._(noDataTitle)}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) => {\n                                this.setState({ inputText });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText,\n                                    selectedFilter: this.state.selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                              updateParams={(p) => {\n                                resetCompoundFilter();\n                                updateParams(p);\n                              }}\n                              params={params}\n                              filterConfig={localizedFilterConfig}\n                              selectFilter={(selectedFilter) => {\n                                this.setState({ selectedFilter });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText: '',\n                                    selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        resetCompoundFilter();\n                        updateParams(p);\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                      niceValues={niceValues}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      const localizedSortHeaders = (sortHeaders || []).map(\n        translateTitle,\n      ) as LocalizedSortHeaders;\n\n      return (\n        <table\n          aria-label={i18n._(title)}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{ headers: localizedSortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageParams<T> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      // condition check after query, for object permissions\n      this.query().then((item) => {\n        const actionContext = {\n          ...this.context,\n          hasObjectPermission: (permission) =>\n            item?.my_permissions?.includes?.(permission),\n        };\n        if (!condition(actionContext)) {\n          this.setState({ loading: false, unauthorised: true });\n        }\n\n        this.setState({ alerts: this.context.alerts || [] });\n        this.context.setAlerts([]);\n      });\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return Promise.resolve(null);\n      }\n\n      return new Promise((resolve, reject) => {\n        this.setState({ loading: true }, () => {\n          query({ name })\n            .then((item) => {\n              this.setState({\n                item,\n                loading: false,\n              });\n              resolve(item);\n            })\n            .catch((e) => {\n              const { status, statusText } = e.response;\n              this.setState({\n                loading: false,\n                item: null,\n              });\n              this.addAlert({\n                title: i18n._(errorTitle),\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n              reject();\n            });\n        });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageWithTabsParams<T> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: MessageDescriptor }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const localizedTabs = tabs.map(({ name, ...rest }) => ({\n        ...rest,\n        name: i18n._(name),\n      }));\n      const tab = localizedTabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={localizedTabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top:\n        DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n          ? '124px' // 70 + 50 + 4\n          : '80px', // 76 + 4\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeaheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              const item = typeaheadResults.find(({ name }) => name === value);\n              this.submitFilter(item?.id || value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeaheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n\n    // no tags => falsy\n    // 1 tag => \"foo\"\n    // 2+ tags => [\"foo\", \"bar\"]\n    // convert all to an array\n    if (!newParams) {\n      newParams = [];\n    }\n    if (!Array.isArray(newParams)) {\n      newParams = [newParams];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy\n      hoverTip={t`Copy`}\n      clickTip={t`Copied`}\n      variant='inline-compact'\n      isCode\n    >\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        autoComplete='off'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, mapErrorMessages } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner /> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertType,\n  DataForm,\n  HelperText,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n          autoComplete='off'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          />\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          pageControls={extraControls}\n          title={title}\n        />\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { dom, parse } from 'antsibull-docs';\nimport React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderPluginLink: (\n    pluginName: string,\n    pluginType: string,\n    text: React.ReactNode | undefined,\n  ) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  private formatPartError(part: dom.ErrorPart): React.ReactNode {\n    return <span className='error'>ERROR while parsing: {part.message}</span>;\n  }\n\n  private formatPartBold(part: dom.BoldPart): React.ReactNode {\n    return <b>{part.text}</b>;\n  }\n\n  private formatPartCode(part: dom.CodePart): React.ReactNode {\n    return <span className='inline-code'>{part.text}</span>;\n  }\n\n  private formatPartHorizontalLine(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    part: dom.HorizontalLinePart,\n  ): React.ReactNode {\n    return <hr />;\n  }\n\n  private formatPartItalic(part: dom.ItalicPart): React.ReactNode {\n    return <i>{part.text}</i>;\n  }\n\n  private formatPartLink(part: dom.LinkPart): React.ReactNode {\n    return this.props.renderDocLink(part.text, part.url);\n  }\n\n  private formatPartModule(part: dom.ModulePart): React.ReactNode {\n    return this.props.renderPluginLink(part.fqcn, 'module', undefined);\n  }\n\n  private formatPartRstRef(part: dom.RSTRefPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartURL(part: dom.URLPart): React.ReactNode {\n    return (\n      <a href={part.url} target='_blank' rel='noreferrer'>\n        {part.url}\n      </a>\n    );\n  }\n\n  private formatPartText(part: dom.TextPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartEnvVariable(part: dom.EnvVariablePart): React.ReactNode {\n    return <span className='inline-code'>{part.name}</span>;\n  }\n\n  private formatPartOptionNameReturnValue(\n    part: dom.OptionNamePart | dom.ReturnValuePart,\n  ): React.ReactNode {\n    const content =\n      part.value === undefined ? (\n        <span className='inline-code'>\n          <b>{part.name}</b>\n        </span>\n      ) : (\n        <span className='inline-code'>\n          {part.name}={part.value}\n        </span>\n      );\n    if (!part.plugin) {\n      return content;\n    }\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      content,\n    );\n  }\n\n  private formatPartOptionValue(part: dom.OptionValuePart): React.ReactNode {\n    return <span className='inline-code'>{part.value}</span>;\n  }\n\n  private formatPartPlugin(part: dom.PluginPart): React.ReactNode {\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      undefined,\n    );\n  }\n\n  private formatPart(part: dom.Part): React.ReactNode {\n    switch (part.type) {\n      case dom.PartType.ERROR:\n        return this.formatPartError(part as dom.ErrorPart);\n      case dom.PartType.BOLD:\n        return this.formatPartBold(part as dom.BoldPart);\n      case dom.PartType.CODE:\n        return this.formatPartCode(part as dom.CodePart);\n      case dom.PartType.HORIZONTAL_LINE:\n        return this.formatPartHorizontalLine(part as dom.HorizontalLinePart);\n      case dom.PartType.ITALIC:\n        return this.formatPartItalic(part as dom.ItalicPart);\n      case dom.PartType.LINK:\n        return this.formatPartLink(part as dom.LinkPart);\n      case dom.PartType.MODULE:\n        return this.formatPartModule(part as dom.ModulePart);\n      case dom.PartType.RST_REF:\n        return this.formatPartRstRef(part as dom.RSTRefPart);\n      case dom.PartType.URL:\n        return this.formatPartURL(part as dom.URLPart);\n      case dom.PartType.TEXT:\n        return this.formatPartText(part as dom.TextPart);\n      case dom.PartType.ENV_VARIABLE:\n        return this.formatPartEnvVariable(part as dom.EnvVariablePart);\n      case dom.PartType.OPTION_NAME:\n        return this.formatPartOptionNameReturnValue(part as dom.OptionNamePart);\n      case dom.PartType.OPTION_VALUE:\n        return this.formatPartOptionValue(part as dom.OptionValuePart);\n      case dom.PartType.PLUGIN:\n        return this.formatPartPlugin(part as dom.PluginPart);\n      case dom.PartType.RETURN_VALUE:\n        return this.formatPartOptionNameReturnValue(\n          part as dom.ReturnValuePart,\n        );\n    }\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    // TODO: pass current plugin's type and name, and (if role) the current entrypoint as well\n    const parsed = parse(text);\n\n    // Special case: result is a single paragraph consisting of a single text part\n    if (\n      parsed.length === 1 &&\n      parsed[0].length === 1 &&\n      parsed[0][0].type === dom.PartType.TEXT\n    ) {\n      return <span>{parsed[0][0].text}</span>;\n    }\n\n    const fragments = [];\n    for (const paragraph of parsed) {\n      for (const part of paragraph) {\n        fragments.push(this.formatPart(part));\n      }\n    }\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, _pluginName: string) {\n    const isDeprecated = doc.deprecated;\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  RadioRow,\n  SortTable,\n} from 'src/components';\n\ninterface IProps {\n  allRepositories: AnsibleRepositoryType[];\n  fixedRepos: string[];\n  loadRepos: (params, setRepositoryList, setLoading, setItemsCount) => void;\n  selectedRepos: string[];\n  setSelectedRepos: (selectedRepos: string[]) => void;\n  singleSelectionOnly?: boolean;\n  hideFixedRepos?: boolean;\n}\n\nexport const MultipleRepoSelector = (props: IProps) => {\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n  const [itemsCount, setItemsCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  function changeSelection(name) {\n    if (props.fixedRepos.includes(name)) {\n      return;\n    }\n\n    const checked = props.selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      props.setSelectedRepos(\n        props.selectedRepos.filter((element) => element != name),\n      );\n    } else {\n      // add\n      props.setSelectedRepos([...props.selectedRepos, name]);\n    }\n  }\n\n  function renderLabels() {\n    const labels = (\n      <>\n        <LabelGroup>\n          {props.selectedRepos.map((name) => {\n            let label = null;\n            if (props.fixedRepos.includes(name)) {\n              if (!props.hideFixedRepos) {\n                label = <Label>{name}</Label>;\n              }\n            } else {\n              label = (\n                <Label onClose={() => changeSelection(name)}>{name}</Label>\n              );\n            }\n            return <>{label} </>;\n          })}\n        </LabelGroup>\n      </>\n    );\n\n    return (\n      <>\n        <Flex>\n          <FlexItem>\n            <b>{t`Selected`}</b>\n          </FlexItem>\n          <FlexItem>{labels}</FlexItem>\n        </Flex>\n      </>\n    );\n  }\n\n  useEffect(() => {\n    props.loadRepos(params, setRepositoryList, setLoading, setItemsCount);\n  }, [params, props.allRepositories]);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectPage() {\n      const newRepos = [...props.selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (!props.selectedRepos.includes(repo.name)) {\n          newRepos.push(repo.name);\n        }\n      });\n\n      props.setSelectedRepos(newRepos);\n      setIsSelectorChecked(true);\n    }\n\n    function deselectAll() {\n      props.setSelectedRepos(props.fixedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function deselectPage() {\n      const newSelectedRepos = props.selectedRepos.filter(\n        (repo) =>\n          props.fixedRepos.includes(repo) ||\n          !repositoryList.find((repo2) => repo2.name == repo),\n      );\n      props.setSelectedRepos(newSelectedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function onToggleCheckbox() {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${props.selectedRepos.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    const sortTableOptions = {\n      headers: [\n        {\n          title: '',\n          type: 'none',\n          id: 'expander',\n        },\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n        {\n          title: t`Description`,\n          type: 'none',\n          id: 'description',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Repositories`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => setParams(p)}\n        />\n        {repositoryList.map((repo, i) =>\n          props.singleSelectionOnly ? (\n            <RadioRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={props.selectedRepos.includes(repo.name)}\n              onSelect={() => {\n                props.setSelectedRepos([repo.name]);\n              }}\n              isDisabled={props.fixedRepos.includes(repo.name)}\n              data-cy={`ApproveModal-RadioRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </RadioRow>\n          ) : (\n            <CheckboxRow\n              rowIndex={i}\n              key={repo.name}\n              isSelected={props.selectedRepos.includes(repo.name)}\n              onSelect={() => {\n                changeSelection(repo.name);\n              }}\n              isDisabled={props.fixedRepos.includes(repo.name)}\n              data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n            >\n              <td>{repo.name}</td>\n              <td>{repo.description}</td>\n            </CheckboxRow>\n          ),\n        )}\n      </table>\n    );\n  }\n\n  return (\n    <>\n      {renderLabels()}\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            {!props.singleSelectionOnly && (\n              <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n            )}\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => {\n                  setInputText(text);\n                }}\n                updateParams={(p) => setParams(p)}\n                params={params}\n                filterConfig={[\n                  {\n                    id: 'name__icontains',\n                    title: t`Repository`,\n                  },\n                ]}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n          isTop\n        />\n      </div>\n      <div>\n        <AppliedFilters\n          updateParams={(p) => {\n            setParams(p);\n            setInputText('');\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort']}\n          niceNames={{\n            name__icontains: t`Name`,\n          }}\n        />\n      </div>\n\n      {loading ? <Spinner /> : renderTable()}\n\n      <div className='footer'>\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n        />\n      </div>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  selectedRepo: string;\n}\n\nexport const RepoSelector = ({ selectedRepo }: IProps) => {\n  const { featureFlags } = useContext();\n\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!featureFlags.display_repositories) {\n    return null;\n  }\n\n  const repoName =\n    {\n      community: t`Community`,\n      published: t`Published`,\n      rejected: t`Rejected`,\n      'rh-certified': t`Red Hat Certified`,\n      staging: t`Staging`,\n      validated: t`Validated`,\n    }[selectedRepo] || selectedRepo;\n\n  return (\n    <div className='breadcrumb-container'>\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText style={{ paddingLeft: 0 }} variant='plain'>\n              {t`Repository`}\n            </InputGroupText>\n            <InputGroupText\n              variant='plain'\n              style={{\n                backgroundColor: 'var(--pf-global--disabled-color--300)',\n                color: 'var(--pf-global--Color--100)',\n                height: '36px',\n              }}\n            >\n              {repoName}\n            </InputGroupText>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  errorMessage,\n  repositoryBasePath,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distroBasePath) => {\n    if (distroBasePath) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  useEffect(() => {\n    if (!repository) {\n      onDistributionsLoad(null);\n      return;\n    }\n\n    repositoryBasePath(repository.name, repository.pulp_href)\n      .catch(() => null)\n      .then(onDistributionsLoad);\n  }, [repository?.pulp_href]);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n      ? 'approved'\n      : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <div data-cy='pipeline'>\n          <Select\n            variant='single'\n            isOpen={selectOpen}\n            onToggle={() => setSelectOpen(!selectOpen)}\n            onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n            selections={selectOptions[selectedPipeline]}\n          >\n            {Object.entries(selectOptions).map(([k, v]) => (\n              <SelectOption key={k} value={v} />\n            ))}\n          </Select>\n        </div>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          <div data-cy='remote'>\n            {remotes ? (\n              <APISearchTypeAhead\n                loadResults={loadRemotes}\n                onClear={() =>\n                  updateRepository({ ...repository, remote: null })\n                }\n                onSelect={(_event, value) =>\n                  updateRepository({\n                    ...repository,\n                    remote: remotes.find(({ name }) => name === value)\n                      ?.pulp_href,\n                  })\n                }\n                placeholderText={t`Select a remote`}\n                results={remotes}\n                selections={\n                  selectedRemote\n                    ? [\n                        {\n                          name: selectedRemote.name,\n                          id: selectedRemote.pulp_href,\n                        },\n                      ]\n                    : []\n                }\n              />\n            ) : null}\n            {remotesError ? (\n              <span\n                style={{\n                  color: 'var(--pf-global--danger-color--200)',\n                }}\n              >\n                {t`Failed to load remotes: ${remotesError}`}\n              </span>\n            ) : null}\n            {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n          </div>\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyDistributions = ({\n  emptyText,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleDistributionAPI.list({\n      repository: repositoryHref,\n      sort: 'pulp_created',\n      page,\n      page_size: 10,\n    })\n      .then(({ data: { count, results } }) => {\n        setDistributions(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setDistributions([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [repositoryHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(distributions);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n        (emptyText ?? '---')}\n      {count > distributions?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  remoteHref,\n}: {\n  emptyText?: string;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleRepositoryAPI.list({ remote: remoteHref, page, page_size: 10 })\n      .then(({ data: { count, results } }) => {\n        setRepositories(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setRepositories([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [remoteHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(repositories);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n      {count > repositories?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelGroup } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const PulpLabels = ({ labels }: { labels: Record<string, string> }) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ninterface FormFilename {\n  name: string;\n  original: boolean;\n}\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(\n            requiredFields,\n            disabledFields,\n            <ActionGroup key='actions'>\n              {save}\n              {cancel}\n            </ActionGroup>,\n          )}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields, extra?) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                autoComplete='off'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              autoComplete='off'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  autoComplete='off'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: Record<string, any>;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as TextInputTypes) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n              {...(field.type === 'password' ? { autoComplete: 'off' } : {})}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  LocalizedSortHeaders,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: LocalizedSortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import { Trans, t } from '@lingui/macro';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { language } from 'src/l10n';\n\ninterface IProps {\n  item?: { download_count?: number };\n}\n\nexport const DownloadCount = ({ item }: IProps) => {\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!item?.download_count) {\n    return null;\n  }\n\n  const downloadCount = new Intl.NumberFormat(language).format(\n    item.download_count,\n  );\n\n  return (\n    <Tooltip\n      content={t`Download count is the sum of all versions' download counts`}\n    >\n      <DownloadIcon /> <Trans>{downloadCount} Downloads</Trans>\n    </Tooltip>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Ansible\n        Lightspeed?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following legacy namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Ansible Lightspeed?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Ansible Lightspeed information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Ansible Lightspeed`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Ansible Lightspeed`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Additional details`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Ansible Lightspeed settings`\n          : isInDenyIndex\n          ? t`Opt in to Ansible Lightspeed`\n          : t`Opt out of Ansible Lightspeed`\n      }\n      variant='small'\n      titleIconVariant={isInDenyIndex ? null : 'warning'}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            <Trans>\n              <p>\n                Red Hat is working on exciting new Ansible content development\n                capabilities within the context of{' '}\n                <a\n                  href='https://www.redhat.com/en/engage/project-wisdom'\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  Ansible Lightspeed\n                </a>{' '}\n                <ExternalLinkAltIcon /> to help other automators build Ansible\n                content.\n              </p>\n            </Trans>\n            <br />\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n          <br />\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          {props.reference}\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { msg } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n  static APPROVED = 'approved';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'eda',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': msg`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': msg`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': msg`Import and move to staging`,\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': msg`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': msg`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.collection_sync': msg`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.collections.import_collection': msg`Pulp ansible: Import collection`,\n    'pulp_ansible.app.tasks.collections.sync': msg`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': msg`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.copy.copy_content': msg`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.roles.synchronize': msg`Pulp Ansible: Roles synchronize`,\n    'pulp_container.app.tasks.build_image_from_containerfile': msg`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': msg`Pulp container: General multi delete`,\n    'pulp_container.app.tasks.recursive_add_content': msg`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': msg`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.synchronize': msg`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.tag_image': msg`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': msg`Pulp container: Untage image`,\n    'pulpcore.app.tasks.export.pulp_export': msg`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': msg`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.add_and_remove': msg`Pulpcore: Add and remove`,\n    'pulpcore.app.tasks.repository.delete_version': msg`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': msg`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': msg`Pulpcore: Upload commit`,\n    'pulpcore.plugin.tasking.add_and_remove': msg`Pulpcore: Add or remove`,\n    'pulpcore.tasking.tasks.base.general_create': msg`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_delete': msg`Pulpcore: General delete`,\n    'pulpcore.tasking.tasks.base.general_update': msg`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.import_repository_version': msg`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': msg`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': msg`Pulpcore: Repair all artifacts`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': msg`Manage ansible repositories.`,\n    'galaxy.collection_admin': msg`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': msg`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': msg`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': msg`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': msg`Manage collection remotes.`,\n    'galaxy.content_admin': msg`Manage all content types.`,\n    'galaxy.execution_environment_admin': msg`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': msg`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': msg`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': msg`Push, and change execution environments.`,\n    'galaxy.group_admin': msg`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': msg`View, add, remove and change synclists.`,\n    'galaxy.task_admin': msg`View, and cancel any task.`,\n    'galaxy.user_admin': msg`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': msg`Allow all actions on a task.`,\n    'core.taskschedule_owner': msg`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: '/', component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ninterface ContextFragment {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import { i18n } from '@lingui/core';\nimport * as moment from 'moment';\n\n// remember to update lingui.config.js as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nexport const language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\", \"/beta/\" or \"/preview/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/preview/', '/')\n          .replace('/beta/', '/')\n          .replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n  url = url.replaceAll('//', '/');\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  dispatch = '/dispatch',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  landingPage = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n}\n\nexport const namespaceBreadcrumb = () =>\n  ({\n    namespaces: { name: t`Namespaces`, url: formatPath(Paths.namespaces) },\n    partners: { name: t`Partners`, url: formatPath(Paths.partners) },\n  })[NAMESPACE_TERM];\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from './map-error-messages';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  let description = e.toString();\n\n  if (e.response) {\n    // HTTP error\n    const { status, statusText } = e.response;\n\n    const err = mapErrorMessages(e);\n    const message = Object.values(err).join(' ');\n\n    description = message\n      ? errorMessage(status, statusText, message)\n      : errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description,\n  });\n\n  callback();\n};\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  multiplier?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to starting with a 2s wait, increasing the wait time 1.5x each time, with max 10 attempts\n  // 2000, 1.5, 10 = ~226s ; 500, 1.5, 10 = ~57s\n  const { waitMs = 2000, multiplier = 1.5, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, {\n          ...options,\n          waitMs: Math.round(waitMs * multiplier),\n          bailAfter: bailAfter - 1,\n        }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { waitForTaskUrl } from './wait-for-task';\n\nasync function getAll(additionalParams = {}) {\n  let list = [];\n\n  // loop max 10 times (= 1000 items)\n  for (let page = 1; page <= 10; page++) {\n    const result = await AnsibleRepositoryAPI.list({\n      ...additionalParams,\n      page,\n      page_size: 100,\n    });\n\n    list = list.concat(result.data.results);\n    if (list.length >= result.data.count) {\n      return list;\n    }\n  }\n}\n\nexport class RepositoriesUtils {\n  public static listApproved(): Promise<AnsibleRepositoryType[]> {\n    return getAll({ pulp_label_select: 'pipeline=approved' });\n  }\n\n  public static listAll(): Promise<AnsibleRepositoryType[]> {\n    return getAll();\n  }\n\n  public static async deleteCollection(repoName, collectionVersion_pulp_href) {\n    const repo = (\n      await AnsibleRepositoryAPI.list({ name: repoName, page_size: 1 })\n    )?.data?.results?.[0];\n    if (!repo) {\n      return Promise.reject({ error: t`Repository ${repoName} not found.` });\n    }\n\n    const task = (\n      await AnsibleRepositoryAPI.removeContent(\n        parsePulpIDFromURL(repo.pulp_href),\n        collectionVersion_pulp_href,\n      )\n    )?.data?.task;\n\n    await waitForTaskUrl(task);\n  }\n\n  public static pushToOrFilterOutCollections(\n    selectedCollection: CollectionVersionSearch,\n    collections: CollectionVersionSearch[],\n  ): CollectionVersionSearch[] {\n    // check if collection is already selected\n    const selectedItem = collections.find(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href === selectedCollection.collection_version.pulp_href &&\n        repository.pulp_href === selectedCollection.repository.pulp_href,\n    );\n\n    // if collection is not selected, add it to selected items\n    if (!selectedItem) {\n      return [...collections, selectedCollection];\n    }\n\n    // unselect collection\n    return collections.filter(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href !== selectedCollection.collection_version.pulp_href ||\n        repository.pulp_href !== selectedCollection.repository.pulp_href,\n    );\n  }\n\n  public static async getCollectionRepoList(\n    collection: CollectionVersionSearch,\n  ) {\n    const { name, namespace, version } = collection.collection_version;\n\n    // get repository list for selected collection\n    // TODO: support more pages\n    const collectionInRepos = await CollectionVersionAPI.list({\n      namespace,\n      name,\n      version,\n      page_size: 100,\n      offset: 0,\n    });\n\n    const collectionRepos = collectionInRepos.data.data.map(\n      ({ repository }) => repository.name,\n    );\n\n    return collectionRepos;\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { errorMessage } from './fail-alerts';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { RepositoriesUtils } from './repositories';\nimport { waitForTask } from './wait-for-task';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n    deleteAll,\n    display_repositories,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (!display_repositories && !deleteAll) {\n      // cant display delete from repository when repositories are turned off\n      return null;\n    }\n\n    const caption = deleteAll\n      ? t`Delete entire collection from system`\n      : t`Delete collection from repository`;\n\n    const key = deleteAll ? 'delete-collection' : 'remove-collection';\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key={key}\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{caption}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem data-cy={key} key={key} onClick={onClick}>\n        {caption}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n    deleteAll,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n          deleteAll,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n    deleteAll,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n        deleteAll: deleteAll,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n    deleteFromRepo,\n  }) {\n    let promise = null;\n    if (deleteFromRepo) {\n      promise = RepositoriesUtils.deleteCollection(\n        deleteFromRepo,\n        collection.collection_version.pulp_href,\n      );\n    } else {\n      promise = CollectionAPI.deleteCollection(collection);\n    }\n\n    promise\n      .then((res) => {\n        if (!deleteFromRepo) {\n          const taskId = parsePulpIDFromURL(res.data.task);\n          return waitForTask(taskId);\n        }\n      })\n      .then(() => {\n        addAlert({\n          variant: 'success',\n          title: (\n            <Trans>\n              Collection &quot;{collection.collection_version.name}\n              &quot; has been successfully deleted.\n            </Trans>\n          ),\n        });\n\n        if (redirect) {\n          setState({ redirect });\n        }\n\n        if (load) {\n          load();\n        }\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// Returns the API path for a specific repository\nexport function getRepoURL(distribution_base_path, view_published = false) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  // repo/distro \"published\" is special; not related to repo pipeline type\n  if (distribution_base_path === 'published' && view_published === false) {\n    return `${host}${API_BASE_PATH}`;\n  }\n\n  return `${host}${API_BASE_PATH}content/${distribution_base_path}/`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superadmin;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","import { t } from '@lingui/macro';\nimport { SignContainersAPI } from 'src/api';\nimport { waitForTaskUrl } from './wait-for-task';\n\nexport class RepoSigningUtils {\n  public static getContainerPulpType(item) {\n    const pulp_types = item.pulp.repository.pulp_type.split('.');\n    if (pulp_types.length > 1) {\n      return pulp_types[1];\n    } else {\n      return '';\n    }\n  }\n\n  public static sign(item, context, addAlert, reload) {\n    if (\n      item.pulp.repository.remote &&\n      Object.keys(item.pulp.repository.remote.last_sync_task || {}).length == 0\n    ) {\n      addAlert({\n        variant: 'danger',\n        description: t`Container must be synchronized with remote repository first.`,\n        title: t`Failed to sign the container version.`,\n      });\n      return;\n    }\n\n    const service = context.settings.GALAXY_CONTAINER_SIGNING_SERVICE;\n    SignContainersAPI.getSigningService(service)\n      .then((result) => {\n        const pulp_href = result.data.results[0]['pulp_href'];\n        return SignContainersAPI.sign(\n          item.pulp.repository.id,\n          RepoSigningUtils.getContainerPulpType(item),\n          pulp_href,\n          item.pulp.distribution.base_path,\n        ).then((result) => {\n          addAlert({\n            variant: 'success',\n            title: t`Signing started for container \"${item.name}\".`,\n          });\n          return waitForTaskUrl(result.data.task).then(() => {\n            if (reload) {\n              reload();\n            }\n          });\n        });\n      })\n      .catch((ex) => {\n        addAlert({\n          variant: 'danger',\n          description: t`API Error: ${ex}`,\n          title: t`Failed to sign the container version.`,\n        });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\n\n// returns the preferred distribution base_path given a repo name\n// if there is a distribution with the same name as the repository, it will be used (as long as it's connected to the right repo too)\n// if not, the oldest will be used\n// reject if no distributions or repository\n// optional pulp_href param skips repo lookup\n\nexport function repositoryBasePath(name, pulp_href?): Promise<string> {\n  return Promise.all([\n    pulp_href\n      ? Promise.resolve({ name, pulp_href })\n      : AnsibleRepositoryAPI.list({ name, page_size: 1 }).then(firstResult),\n    AnsibleDistributionAPI.list({ name, page_size: 1 }).then(firstResult),\n  ]).then(async ([repository, distribution]) => {\n    if (!repository) {\n      return Promise.reject(t`Failed to find repository ${name}`);\n    }\n\n    if (distribution && distribution.repository === repository.pulp_href) {\n      return distribution.base_path;\n    }\n\n    distribution = await AnsibleDistributionAPI.list({\n      repository: repository.pulp_href,\n      sort: 'pulp_created',\n      page_size: 1,\n    }).then(firstResult);\n\n    if (!distribution) {\n      return Promise.reject(\n        t`Failed to find a distribution for repository ${name}`,\n      );\n    }\n\n    return distribution.base_path;\n  });\n}\n\nfunction firstResult({ data: { results } }) {\n  return results[0];\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <Link\n          to={formatPath(Paths.taskDetail, {\n            task: parsePulpIDFromURL(task?.task || task),\n          })}\n        >\n          detail page{' '}\n        </Link>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","getQueryString","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","DEFAULT_PAGE_SIZE","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","INSIGHTS_DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","STANDALONE_DEPLOYMENT_MODE","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","ActiveUserAPI","_HubAPI","API","_len","length","args","Array","_key","getUIPath","result","reject","username","password","_this2","loginURL","_get","_getPrototypeOf","prototype","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","AnsibleDistributionAPI","_PulpAPI","AnsibleRemoteAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","role","AnsibleRepositoryAPI","pulp_id","list","body","undefined","version_href","base_version","collection_version_hrefs","add_content_units","collection_version_href","remove_content_units","CertificateUploadAPI","formData","FormData","append","file","repository","signed_collection","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_getSignatures","_deleteCollection","_deleteCollectionVersion","_getDownloadURL","_setDeprecation","repo","path","response","_ref","_ref$collection_versi","namespace","name","is_deprecated","distroBasePath","collection_version","repositoryBasePath","pulp_href","sent","deprecated","progressCallback","cancelToken","config","onUploadProgress","token","distro_base_path","source","_callee2","version","_context2","_ref2","download_url","_x2","_x3","_x4","_x5","_callee3","_ref3","_ref3$collection_vers","_context3","_x6","_callee4","_ref4","_ref4$collection_vers","_context4","_x7","collection","_callee5","_context5","_x8","_x9","_x10","_x11","CollectionVersionAPI","source_base_path","destination_base_path","create","ContainerDistributionAPI","ContainerTagAPI","repositoryID","tag","digest","ExecutionEnvironmentAPI","readme","manifest","ExecutionEnvironmentRegistryAPI","clearSetFieldsFromRequest","write_only_fields","ExecutionEnvironmentRemoteAPI","FeatureFlagsAPI","GenericPulpAPI","GroupAPI","groupId","roleId","content_object","ImportAPI","LegacyAPI","fullPath","API_VERSION","_LegacyAPI","getApiPath","_Object$entries","entries","_Object$entries$_i","_slicedToArray","MyNamespaceAPI","MySyncListAPI","NamespaceAPI","PulpStatus","RoleAPI","for_object_type","newParams","permissionId","SettingsAPI","SignCollectionAPI","_sign","updatedData","repository_name","_objectWithoutProperties","_excluded","status","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","SigningServiceAPI","TaskAPI","TaskManagementAPI","UserAPI","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","count","removePath","addPath","ApproveModal","props","_useState","useState","_useState2","alerts","setAlerts","_useState3","_useState4","selectedRepos","setSelectedRepos","_useState5","_useState6","fixedRepos","setFixedRepos","_useState7","_useState8","loading","setLoading","context","useContext","addAlert","alert","prevAlerts","_toConsumableArray","useEffect","fixedReposLocal","selectedReposLocal","collectionVersion","repository_list","forEach","allRepositories","r","push","React","Modal","actions","Button","onClick","error","_approveAsync","_yield$AnsibleReposit","_yield","reapprove","originRepoName","reposToApprove","repositoriesRef","collectionData","autosign","signingService_href","signingServiceName","signingList","task","find","stagingRepoNames","rejectedRepoName","i18n","_","values","page_size","t3","t2","t1","t0","results","t4","parsePulpIDFromURL","settings","GALAXY_AUTO_SIGN_COLLECTIONS","GALAXY_COLLECTION_SIGNING_SERVICE","collection_versions","destination_repositories","copyCollectionVersion","moveCollectionVersion","t7","t6","t5","t8","waitForTaskUrl","finishAction","title","variant","description","approveAsync","isDisabled","closeAction","isOpen","onClose","className","MultipleRepoSelector","loadRepos","setRepositoryList","setItemsCount","par","_ref$response","statusText","errorMessage","Spinner","AlertList","closeAlert","i","CardListSwitcher","updateParams","_ref$size","size","disp","view_type","iconClasses","ThLargeIcon","cx","selected","setParam","ListIcon","CollectionCard","d","namespace_metadata","is_signed","displaySignatures","menu","footer","featureFlags","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","display_repositories","TextContent","Text","component","TextVariants","small","Badge","isRead","Link","to","formatPath","Paths","ansibleRepositoryDetail","CERTIFIED_REPO","SignatureBadge","isCompact","signState","collectionByRepo","Trans","components","namespaceDetail","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","CollectionDependenciesList","dependencies_repos","dependencies","List","dependency","listDep","EmptyStateNoData","fqn","version_range","ListItem","style","marginRight","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","itemCount","usedByDependenciesLoading","ignoredParams","filterIsSet","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","name__icontains","onChange","_e","val","onClear","placeholder","Sort","options","sort","Pagination","isTop","LoadingPageSpinner","getReduced","EmptyStateFilter","CollectionContentList","_step","toShow","summary","all","showing","keywords","_iterator","_createForOfIteratorHelper","s","n","done","_c$content_type","c","keywordMatch","match","typeMatch","err","f","clickable","collectionContentDocsByRepo","EmptyStateCustom","icon","ExclamationTriangleIcon","DownloadSignatureGridItem","display_signatures","show","setShow","signatures","setSignatures","isLoading","setIsLoading","getSignatures","res","message","GridItem","Split","hasGutter","SplitItem","padding","ButtonVariant","link","DownloadIcon","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","Grid","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","Alert","isInline","LoginLink","collectionDistributionsByRepo","ref","display","getDownloadURL","downloadURL","current","href","click","_e$response","download","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","collectionDocsIndexByRepo","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","split","toUpperCase","collectionDocsPageByRepo","_step2","_iterator2","getContentEntry","a","b","startsWith","parseLinks","searchBarRef","Nav","theme","NavList","links","filterString","isExpanded","filteredLinks","toLowerCase","NavExpandable","capitalize","isActive","getSelectedCategory","index","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","content_name","CollectionFilter","repositories","setRepositories","inputText","setInputText","selectedFilter","setSelectedFilter","pulp_label_select","repos","_context$featureFlags","displayTags","displayRepos","displayNamespaces","filterConfig","inputType","COLLECTION_FILTER_TAGS","Boolean","ToolbarContent","marginLeft","CompoundFilter","text","selectFilter","AppliedFilters","niceNames","niceValues","false","true","marginTop","CollectionList","collections","collectionControls","DataList","CollectionListItem","_extends","showNamespace","clearAllFilters","SignAllCertificatesModal","onSubmit","onCancel","ModalVariant","medium","primary","span","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","SignSingleCertificateModal","_ref$signState","_ref$isCompact","Label","color","CheckCircleIcon","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","_ref$collection","dropdownMenu","synclistSwitch","uploadButton","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","chipGroupProps","Flex","direction","default","alignItems","FlexItem","DateComponent","date","pulp_created","alignSelf","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","cancelAction","children","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CopyCollectionToRepositoryModal","isSelectorOpen","setIsSelectorOpen","isSelectorChecked","setIsSelectorChecked","repositoryList","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","itemsCount","_useState15","_useState16","_useState17","_useState18","setParams","loadAssociatedRepoList","selectPage","deselectPage","dropdownItems","labels","repoList","RepositoriesUtils","getCollectionRepoList","changeSelection","checked","element","copyToRepositories","_props$collection","pulpId","signingService","repoHrefs","copyParams","taskAlert","DropdownItem","listAll","DropdownSeparator","Dropdown","onSelect","document","getElementById","focus","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","onToggle","sortTableOptions","SortTable","CheckboxRow","rowIndex","renderTable","dateTime","moment","format","fromNow","DeleteAnsibleRemoteModal","deleteAction","pending","setPending","DeleteModal","DeleteAnsibleRepositoryModal","DeleteCollectionModal","deleteCollection","isDeletionPending","confirmDelete","setConfirmDelete","deleteFromRepo","lastCollectionVersion","paddingBottom","Checkbox","isChecked","isRemove","_ref$variant","button","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","BaseHeader","_React$Component","_this$props","logo","pageControls","breadcrumbs","contextSelector","versionControl","CollectionHeader","_submitCertificate","modalPagination","setState","modalCollections","_this$props$collectio","requestParams","order_by","_this$props$collectio2","errorAlert","state","isOpenSignAllModal","sign","signing_service","waitForTask","task_id","x","_this$props$collectio3","isOpenSignModal","deleteAll","promise","deleteCollectionVersion","taskId","topVersion","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","isOpenVersionsSelect","isOpenVersionsModal","DEFAULT_PAGINATION_OPTIONS","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","copyCollectionToRepositoryModal","DeleteCollectionUtils","getUsedbyDependencies","include_related","_ref5","prevProps","_this3","activeTab","actuallyCollection","collectionsCount","_this$state","urlKeys","latestVersion","_this$context$feature","can_upload_signatures","isLatestVersion","v","collectionName","Navigate","canSign","canSignNamespace","hasPermission","deleteMenuOption","canDeleteCollection","openDeleteModalWithConfirm","deprecate","checkUploadPrivilleges","copyToRepository","issueUrl","ImportModal","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","updatePaginationParams","_ref6","toString","load","RepoSelector","selectedRepo","Breadcrumbs","Select","SelectVariant","single","selections","loadingVariant","SelectOption","DownloadCount","target","rel","ExternalLinkAltIcon","StatefulDropdown","items","renderTabs","_this4","related_fields","my_permissions","active","_this$props2","pathParams","reduced","ignoreParams","tabs","collectionContentListByRepo","collectionImportLogByRepo","collectionDependenciesByRepo","LinkTabs","_this$state$versionTo","_this5","upload","reload","_ref7","_ref8","_this6","setDeprecation","_err$response2","warning","closeAlertMixin","AppContext","PartnerHeader","filters","Tabs","Popover","position","PopoverPosition","top","bodyContent","headerContent","header","iconPosition","OutlinedQuestionCircleIcon","Status","_saveFile","errors","errorVariant","uploadProgress","uploadStatus","waiting","allRepos","onlyStaging","loadAllRepos","_ref$data","_ref2$response","addAlertObj","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","Radio","singleSelectionOnly","hideFixedRepos","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","detectedType","acceptedTypes","artifact","sha256","getCancelToken","loaded","total","messages","msg","cancel","LegacyNamespaceListItem","_summary_fields$owner","namespace_url","legacyNamespace","namespaceid","ai_deny_index","summary_fields","userOwnsLegacyNamespace","owners","showWisdom","is_superuser","openModal","float","contextType","onSelectProp","_ref$toggleType","toggleType","defaultText","_ref$isPlain","ariaLabel","setSelected","event","currentTarget","renderToggle","open","DropdownPosition","right","autoFocus","toggleIndicator","KebabToggle","ListItemActions","_this$props$buttons","_this$props$kebabItem","buttons","kebabItems","anyButtons","anyKebab","paddingRight","textAlign","justifyContent","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","failed","objectFit","maxHeight","src","DefaultLogo","onError","MarkdownEditor","updateText","helperText","editing","TextArea","ReactMarkdown","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","running","followMessages","handleScrollClick","renderMessage","completed","level","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","repoStatus","pulp_labels","pipeline","NOTCERTIFIED","NEEDSREVIEW","APPROVED","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","APISearchTypeAhead","loadResults","placeholderText","NamespaceForm","errorMessages","isRequired","TextInput","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","splice","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","ResourcesForm","resources","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","parameter","newNamespaceNameValid","handleSubmit","preventDefault","labelIcon","InputGroup","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","ListPage","_class","condition","displayName","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderModals","renderTableRow","sortHeaders","typeaheadQuery","actionContext","action","_action$modal","modal","_action$modal2","translateTitle","klass","parseParamString","location","search","unauthorised","_renderModals","localizedFilterConfig","knownFilters","noData","fromEntries","filterId","obj","optionId","hasObjectPermission","listQuery","navigate","resetCompoundFilter","localizedSortHeaders","updateParamsMixin","withRouter","Page","listUrl","transformParams","render","permission","_item$my_permissions","_item$my_permissions$","_transformParams","routeParams","_item$my_permissions2","_item$my_permissions3","PageWithTabs","headerDetails","renderTab","tabUpdateParams","tab","localizedTabs","visible","NotFound","zIndex","flexDirection","marginBottom","actionClose","AlertActionCloseButton","alertIndex","newList","alertStateVariable","_ref$ignoredParams","_ref$niceNames","chips","isArray","ChipGroup","categoryName","_niceValues$key","Chip","deleteParam","unsetFilter","renderGroup","Breadcrumb","BreadcrumbItem","PFClipboardCopy","hoverTip","clickTip","selectedID","replace","indexOf","submitMultiple","isCreatable","hasOnCreateOption","filterOptions","FilterIcon","renderInput","submitFilter","control","trim","checkbox","onSelectMultiple","isGrouped","SelectGroup","option","selectTitleById","typeaheadResults","multiple","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","isCode","PFFileUpload","clearButtonText","_ref$active","extra","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","bottom","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","PFTooltip","WizardModal","steps","onSave","large","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","backButtonText","cancelButtonText","closeButtonAriaLabel","nextButtonText","titleId","descriptionId","WriteOnlyField","isValueSet","autoComplete","AccessTab","group","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","sortBy","renderGroupRow","_this$props3","urlPrefix","_this$props4","showRoleRemoveModal","showRoleSelectWizard","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","expandableRowContent","GroupRolePermissions","groupname","removeGroup","removeRole","_this7","_this$props5","pulpObjectType","selectRolesMessage","_this$props$showGroup","_this$props$showGroup2","hasGroup","hasRoles","assignedGroups","selectedGroup","updateGroup","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","isFinished","addGroup","_group$object_roles","_this8","_this$props$showRoleS","addRole","DeleteUserModal","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","setTimeout","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","_this$context","model_permissions","showUserManagement","external_authentication","userManagementFilter","USER_GROUP_MGMT_PERMISSIONS","allPermissions","categories","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","menuAppendTo","typeaheadMulti","typeAheadAriaLabel","_model_permissions$pe3","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","colSpan","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","_excluded2","select","disable","RadioRow","_excluded3","setGroups","groupsCount","setGroupsCount","localParams","setLocalParams","queryGroups","meta","isAssigned","some","tabHeader","flex","setRoles","rolesItemCount","setRolesItemCount","queryRoles","name__startswith","isRoleSelected","UserForm","newUser","updateUser","selection","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","isReadonly","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","formFields","formGroupLabelIcon","requiredFields","superuserLabel","getSuperUserHelperText","Switch","labelOff","formSuffix","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","DataForm","model","pass","confirm","UserFormPage","extraControls","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","ret","contains","part","renderDocLink","renderPluginLink","fqcn","dom","ERROR","formatPartError","BOLD","formatPartBold","CODE","formatPartCode","HORIZONTAL_LINE","formatPartHorizontalLine","ITALIC","formatPartItalic","LINK","formatPartLink","MODULE","formatPartModule","RST_REF","formatPartRstRef","URL","formatPartURL","TEXT","formatPartText","ENV_VARIABLE","formatPartEnvVariable","OPTION_NAME","formatPartOptionNameReturnValue","OPTION_VALUE","formatPartOptionValue","PLUGIN","formatPartPlugin","RETURN_VALUE","parsed","parse","_step3","fragments","_iterator3","_step4","_iterator4","formatPart","_pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","newRepos","newSelectedRepos","repo2","renderMultipleSelector","repoName","community","published","rejected","staging","InputGroupText","paddingLeft","backgroundColor","AnsibleRepositoryForm","_repository$pulp_labe","_repository$pulp_labe2","_remotes$find","allowEditName","updateRepository","disabledFields","bool","formGroup","fieldName","inputField","stringField","isValid","createDistribution","setCreateDistribution","disabledDistribution","setDisabledDistribution","onDistributionsLoad","hide_from_search","hideFromSearch","setHideFromSearch","setPipeline","disableHideFromSearch","setDisableHideFromSearch","remotes","setRemotes","remotesError","setRemotesError","loadRemotes","selectedRemote","selectedPipeline","setSelectedPipeline","selectOpen","setSelectOpen","selectOptions","approved","none","pipelineHelp","labelsHelp","numericField","LazyDistributions","emptyText","repositoryHref","_repository$pulp_labe3","selectPipeline","stopPropagation","PulpLabels","private","_event","_remotes$find2","_distributions$map","_distributions$map$jo","distributions","setDistributions","setCount","setPage","setError","prepend","_ref2$data","errorElement","ExclamationCircleIcon","LazyRepositories","_repositories$map","remoteHref","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","save","renderForm","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","signed_only","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","yaml","onEditorDidMount","editor","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","formPrefix","fields","DetailList","setItems","setItemCount","handleHttpError","Details","_ref$fields","overflowWrap","download_count","downloadCount","Intl","NumberFormat","UI_EXTERNAL_LOGIN_URI","login","HTMLComment","UIVersion","UI_COMMIT_HASH","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","typeToVariantMap","secondary","_ref$type","labelProps","OutlinedClockIcon","skipped","canceled","ExclamationIcon","SyncAltIcon","statusToProps","margin","fontSize","paddingTop","borderRadius","readOnly","evt","textInput","getOptions","isPlaceholder","typeahead","hasInlineFilter","onFilter","toggleIcon","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","removeFromDenyIndex","addToDenyIndex","_ref3$response","expandableTitle","_props","NotFoundImage","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","ansibleRemoteDetail","ansibleRemoteEdit","ansibleRemotes","ansibleRepositories","ansibleRepositoryEdit","approvalDashboard","notFound","partners","editNamespace","myCollections","myCollectionsByRepo","myNamespaces","signatureKeys","taskList","taskDetail","collectionDocsPage","collectionDocsIndex","collectionContentDocs","collectionContentList","collectionImportLog","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","Provider","I18nProvider","App","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","activate","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","UI_BASE_PATH","replaceAll","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","_namespace$related_fi","can_create_signatures","collapsedText","expandedText","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","statusCode","customMessage","custom","callback","UUIDRegEx","_options$waitMs","waitMs","_options$multiplier","multiplier","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","round","taskUrl","getAll","_getAll","additionalParams","_args3","_getCollectionRepoList","collectionVersion_pulp_href","_yield$AnsibleReposit2","removeContent","selectedCollection","cv","_collection$collectio","collectionInRepos","collectionRepos","offset","getUsedDependenciesByCollection","caption","saveAs","Blob","getRepoURL","distribution_base_path","view_published","host","has_model_permission","is_superadmin","lastSynced","entity","last_sync_task","lastSyncStatus","paramString","numericTypes","appendParam","cloneDeep","param","_i2","_deleteKeys","sortParams","isDesc","ascSort","firstResult","distribution","LOCKED_ROLES_WITH_DESCRIPTION","outsideError","protocol","ClassComponent","WithRouter","useLocation","useNavigate","useParams","routePath","el","newObj"],"sourceRoot":""}